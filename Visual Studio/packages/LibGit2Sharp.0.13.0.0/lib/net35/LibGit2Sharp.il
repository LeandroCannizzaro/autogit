
//  Microsoft (R) .NET Framework IL Disassembler.  Version 4.0.30319.17929
//  Copyright (c) Microsoft Corporation.  All rights reserved.



// Metadata version: v2.0.50727
.module extern 'git2-7940036'
.assembly extern mscorlib
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 2:0:0:0
}
.assembly extern System.Core
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 3:5:0:0
}
.assembly extern System
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 2:0:0:0
}
.assembly LibGit2Sharp
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyFileVersionAttribute::.ctor(string) = ( 01 00 06 30 2E 31 33 2E 30 00 00 )                // ...0.13.0..

  // --- The following custom attribute is added automatically, do not uncomment -------
  //  .custom instance void [mscorlib]System.Diagnostics.DebuggableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggableAttribute/DebuggingModes) = ( 01 00 02 00 00 00 00 00 ) 

  .custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = ( 01 00 01 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 36 66 37 31 39 36 37 2D 35 62 65 31   // ..$c6f71967-5be1
                                                                                                  2D 34 39 66 35 2D 62 34 38 65 2D 38 36 31 62 66   // -49f5-b48e-861bf
                                                                                                  66 34 39 38 65 61 33 00 00 )                      // f498ea3..
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor() = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx
                                                                                                             63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyTitleAttribute::.ctor(string) = ( 01 00 0C 4C 69 62 47 69 74 32 53 68 61 72 70 00   // ...LibGit2Sharp.
                                                                                              00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyDescriptionAttribute::.ctor(string) = ( 01 00 7B 4C 69 62 47 69 74 32 53 68 61 72 70 20   // ..{LibGit2Sharp 
                                                                                                    62 72 69 6E 67 73 20 61 6C 6C 20 74 68 65 20 6D   // brings all the m
                                                                                                    69 67 68 74 20 61 6E 64 20 73 70 65 65 64 20 6F   // ight and speed o
                                                                                                    66 20 6C 69 62 67 69 74 32 2C 20 61 20 6E 61 74   // f libgit2, a nat
                                                                                                    69 76 65 20 47 69 74 20 69 6D 70 6C 65 6D 65 6E   // ive Git implemen
                                                                                                    74 61 74 69 6F 6E 2C 20 74 6F 20 74 68 65 20 6D   // tation, to the m
                                                                                                    61 6E 61 67 65 64 20 77 6F 72 6C 64 20 6F 66 20   // anaged world of 
                                                                                                    2E 4E 65 74 20 61 6E 64 20 4D 6F 6E 6F 2E 00 00 ) // .Net and Mono...
  .custom instance void [mscorlib]System.Reflection.AssemblyCompanyAttribute::.ctor(string) = ( 01 00 19 4C 69 62 47 69 74 32 53 68 61 72 70 20   // ...LibGit2Sharp 
                                                                                                63 6F 6E 74 72 69 62 75 74 6F 72 73 00 00 )       // contributors..
  .custom instance void [mscorlib]System.Reflection.AssemblyConfigurationAttribute::.ctor(string) = ( 01 00 07 52 65 6C 65 61 73 65 00 00 )             // ...Release..
  .custom instance void [mscorlib]System.Reflection.AssemblyProductAttribute::.ctor(string) = ( 01 00 0C 4C 69 62 47 69 74 32 53 68 61 72 70 00   // ...LibGit2Sharp.
                                                                                                00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyCopyrightAttribute::.ctor(string) = ( 01 00 30 43 6F 70 79 72 69 67 68 74 20 C2 A9 20   // ..0Copyright .. 
                                                                                                  32 30 31 31 2D 32 30 31 33 20 4C 69 62 47 69 74   // 2011-2013 LibGit
                                                                                                  32 53 68 61 72 70 20 63 6F 6E 74 72 69 62 75 74   // 2Sharp contribut
                                                                                                  6F 72 73 00 00 )                                  // ors..
  .permissionset reqmin
             = {[mscorlib]System.Security.Permissions.SecurityPermissionAttribute = {property bool 'SkipVerification' = bool(true)}}
  .hash algorithm 0x00008004
  .ver 0:13:0:0
}
.mresource public LibGit2Sharp.libgit2_hash.txt
{
  // Offset: 0x00000000 Length: 0x0000002A
  // WARNING: managed resource file LibGit2Sharp.libgit2_hash.txt created
}
.mresource public LibGit2Sharp.libgit2sharp_hash.txt
{
  // Offset: 0x00000030 Length: 0x0000002A
  // WARNING: managed resource file LibGit2Sharp.libgit2sharp_hash.txt created
}
.module LibGit2Sharp.dll
// MVID: {77A3435B-3E3E-499D-A0B1-47D88950E16B}
.custom instance void [mscorlib]System.Security.UnverifiableCodeAttribute::.ctor() = ( 01 00 00 00 ) 
.imagebase 0x00400000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000001    //  ILONLY
// Image base: 0x018A0000


// =============== CLASS MEMBERS DECLARATION ===================

.class public auto ansi serializable beforefieldinit LibGit2Sharp.LibGit2SharpException
       extends [mscorlib]System.Exception
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Exception::.ctor()
    IL_0006:  ret
  } // end of method LibGit2SharpException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void [mscorlib]System.Exception::.ctor(string)
    IL_0007:  ret
  } // end of method LibGit2SharpException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               class [mscorlib]System.Exception innerException) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void [mscorlib]System.Exception::.ctor(string,
                                                                         class [mscorlib]System.Exception)
    IL_0008:  ret
  } // end of method LibGit2SharpException::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                               valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void [mscorlib]System.Exception::.ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo,
                                                                         valuetype [mscorlib]System.Runtime.Serialization.StreamingContext)
    IL_0008:  ret
  } // end of method LibGit2SharpException::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               valuetype LibGit2Sharp.Core.GitErrorCode code,
                               valuetype LibGit2Sharp.Core.GitErrorCategory category) cil managed
  {
    // Code size       59 (0x3b)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  call       string LibGit2Sharp.LibGit2SharpException::FormatMessage(string,
                                                                                  valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                  valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_0009:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_000e:  ldarg.0
    IL_000f:  callvirt   instance class [mscorlib]System.Collections.IDictionary [mscorlib]System.Exception::get_Data()
    IL_0014:  ldstr      "libgit2.code"
    IL_0019:  ldarg.2
    IL_001a:  box        [mscorlib]System.Int32
    IL_001f:  callvirt   instance void [mscorlib]System.Collections.IDictionary::Add(object,
                                                                                     object)
    IL_0024:  ldarg.0
    IL_0025:  callvirt   instance class [mscorlib]System.Collections.IDictionary [mscorlib]System.Exception::get_Data()
    IL_002a:  ldstr      "libgit2.category"
    IL_002f:  ldarg.3
    IL_0030:  box        [mscorlib]System.Int32
    IL_0035:  callvirt   instance void [mscorlib]System.Collections.IDictionary::Add(object,
                                                                                     object)
    IL_003a:  ret
  } // end of method LibGit2SharpException::.ctor

  .method private hidebysig static string 
          FormatMessage(string message,
                        valuetype LibGit2Sharp.Core.GitErrorCode code,
                        valuetype LibGit2Sharp.Core.GitErrorCategory category) cil managed
  {
    // Code size       54 (0x36)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "An error was raised by libgit2. Category = {0} ({1"
    + "}).{2}{3}"
    IL_000a:  ldc.i4.4
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.2
    IL_0014:  box        LibGit2Sharp.Core.GitErrorCategory
    IL_0019:  stelem.ref
    IL_001a:  ldloc.0
    IL_001b:  ldc.i4.1
    IL_001c:  ldarg.1
    IL_001d:  box        LibGit2Sharp.Core.GitErrorCode
    IL_0022:  stelem.ref
    IL_0023:  ldloc.0
    IL_0024:  ldc.i4.2
    IL_0025:  call       string [mscorlib]System.Environment::get_NewLine()
    IL_002a:  stelem.ref
    IL_002b:  ldloc.0
    IL_002c:  ldc.i4.3
    IL_002d:  ldarg.0
    IL_002e:  stelem.ref
    IL_002f:  ldloc.0
    IL_0030:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0035:  ret
  } // end of method LibGit2SharpException::FormatMessage

} // end of class LibGit2Sharp.LibGit2SharpException

.class public auto ansi serializable beforefieldinit LibGit2Sharp.AmbiguousSpecificationException
       extends LibGit2Sharp.LibGit2SharpException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor()
    IL_0006:  ret
  } // end of method AmbiguousSpecificationException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0007:  ret
  } // end of method AmbiguousSpecificationException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               class [mscorlib]System.Exception innerException) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 class [mscorlib]System.Exception)
    IL_0008:  ret
  } // end of method AmbiguousSpecificationException::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                               valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo,
                                                                                 valuetype [mscorlib]System.Runtime.Serialization.StreamingContext)
    IL_0008:  ret
  } // end of method AmbiguousSpecificationException::.ctor

} // end of class LibGit2Sharp.AmbiguousSpecificationException

.class public auto ansi serializable beforefieldinit LibGit2Sharp.BareRepositoryException
       extends LibGit2Sharp.LibGit2SharpException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor()
    IL_0006:  ret
  } // end of method BareRepositoryException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0007:  ret
  } // end of method BareRepositoryException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               class [mscorlib]System.Exception innerException) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 class [mscorlib]System.Exception)
    IL_0008:  ret
  } // end of method BareRepositoryException::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                               valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo,
                                                                                 valuetype [mscorlib]System.Runtime.Serialization.StreamingContext)
    IL_0008:  ret
  } // end of method BareRepositoryException::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               valuetype LibGit2Sharp.Core.GitErrorCode code,
                               valuetype LibGit2Sharp.Core.GitErrorCategory category) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_0009:  ret
  } // end of method BareRepositoryException::.ctor

} // end of class LibGit2Sharp.BareRepositoryException

.class public abstract auto ansi beforefieldinit LibGit2Sharp.GitObject
       extends [mscorlib]System.Object
       implements class [mscorlib]System.IEquatable`1<class LibGit2Sharp.GitObject>
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field static assembly class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,valuetype LibGit2Sharp.ObjectType> TypeToKindMap
  .field private static initonly class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.GitObject> equalityHelper
  .field family initonly class LibGit2Sharp.Repository repo
  .field private class LibGit2Sharp.ObjectId '<Id>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.GitObject,object> 'CS$<>9__CachedAnonymousMethodDelegate2'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method GitObject::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.ObjectId id) cil managed
  {
    // Code size       21 (0x15)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.GitObject::repo
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  call       instance void LibGit2Sharp.GitObject::set_Id(class LibGit2Sharp.ObjectId)
    IL_0014:  ret
  } // end of method GitObject::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.ObjectId 
          get_Id() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::'<Id>k__BackingField'
    IL_0006:  ret
  } // end of method GitObject::get_Id

  .method private hidebysig specialname instance void 
          set_Id(class LibGit2Sharp.ObjectId 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::'<Id>k__BackingField'
    IL_0007:  ret
  } // end of method GitObject::set_Id

  .method public hidebysig newslot specialname virtual 
          instance string  get_Sha() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0006:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
    IL_000b:  ret
  } // end of method GitObject::get_Sha

  .method assembly hidebysig static class LibGit2Sharp.GitObject 
          BuildFrom(class LibGit2Sharp.Repository repo,
                    class LibGit2Sharp.ObjectId id,
                    valuetype LibGit2Sharp.Core.GitObjectType 'type',
                    class LibGit2Sharp.Core.FilePath path) cil managed
  {
    // Code size       103 (0x67)
    .maxstack  5
    .locals init (valuetype LibGit2Sharp.Core.GitObjectType V_0,
             object[] V_1)
    IL_0000:  ldarg.2
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.1
    IL_0004:  sub
    IL_0005:  switch     ( 
                          IL_001c,
                          IL_0024,
                          IL_0035,
                          IL_002d)
    IL_001a:  br.s       IL_003d

    IL_001c:  ldarg.0
    IL_001d:  ldarg.1
    IL_001e:  newobj     instance void LibGit2Sharp.Commit::.ctor(class LibGit2Sharp.Repository,
                                                                  class LibGit2Sharp.ObjectId)
    IL_0023:  ret

    IL_0024:  ldarg.0
    IL_0025:  ldarg.1
    IL_0026:  ldarg.3
    IL_0027:  newobj     instance void LibGit2Sharp.Tree::.ctor(class LibGit2Sharp.Repository,
                                                                class LibGit2Sharp.ObjectId,
                                                                class LibGit2Sharp.Core.FilePath)
    IL_002c:  ret

    IL_002d:  ldarg.0
    IL_002e:  ldarg.1
    IL_002f:  newobj     instance void LibGit2Sharp.TagAnnotation::.ctor(class LibGit2Sharp.Repository,
                                                                         class LibGit2Sharp.ObjectId)
    IL_0034:  ret

    IL_0035:  ldarg.0
    IL_0036:  ldarg.1
    IL_0037:  newobj     instance void LibGit2Sharp.Blob::.ctor(class LibGit2Sharp.Repository,
                                                                class LibGit2Sharp.ObjectId)
    IL_003c:  ret

    IL_003d:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0042:  ldstr      "Unexpected type '{0}' for object '{1}'."
    IL_0047:  ldc.i4.2
    IL_0048:  newarr     [mscorlib]System.Object
    IL_004d:  stloc.1
    IL_004e:  ldloc.1
    IL_004f:  ldc.i4.0
    IL_0050:  ldarg.2
    IL_0051:  box        LibGit2Sharp.Core.GitObjectType
    IL_0056:  stelem.ref
    IL_0057:  ldloc.1
    IL_0058:  ldc.i4.1
    IL_0059:  ldarg.1
    IL_005a:  stelem.ref
    IL_005b:  ldloc.1
    IL_005c:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0061:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0066:  throw
  } // end of method GitObject::BuildFrom

  .method assembly hidebysig instance class LibGit2Sharp.Commit 
          DereferenceToCommit(bool throwsIfCanNotBeDereferencedToACommit) cil managed
  {
    // Code size       71 (0x47)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Handles.GitObjectSafeHandle V_0,
             class LibGit2Sharp.Commit V_1)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.GitObject::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  ldarg.0
    IL_000c:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0011:  ldc.i4.1
    IL_0012:  ldarg.1
    IL_0013:  call       class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.Proxy::git_object_peel(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                      class LibGit2Sharp.ObjectId,
                                                                                                                      valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                                                      bool)
    IL_0018:  stloc.0
    .try
    {
      IL_0019:  ldloc.0
      IL_001a:  brtrue.s   IL_0020

      IL_001c:  ldnull
      IL_001d:  stloc.1
      IL_001e:  leave.s    IL_0045

      IL_0020:  ldarg.0
      IL_0021:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.GitObject::repo
      IL_0026:  ldloc.0
      IL_0027:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_object_id(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
      IL_002c:  ldc.i4.1
      IL_002d:  ldnull
      IL_002e:  call       class LibGit2Sharp.GitObject LibGit2Sharp.GitObject::BuildFrom(class LibGit2Sharp.Repository,
                                                                                          class LibGit2Sharp.ObjectId,
                                                                                          valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                          class LibGit2Sharp.Core.FilePath)
      IL_0033:  castclass  LibGit2Sharp.Commit
      IL_0038:  stloc.1
      IL_0039:  leave.s    IL_0045

    }  // end .try
    finally
    {
      IL_003b:  ldloc.0
      IL_003c:  brfalse.s  IL_0044

      IL_003e:  ldloc.0
      IL_003f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0044:  endfinally
    }  // end handler
    IL_0045:  ldloc.1
    IL_0046:  ret
  } // end of method GitObject::DereferenceToCommit

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  isinst     LibGit2Sharp.GitObject
    IL_0007:  call       instance bool LibGit2Sharp.GitObject::Equals(class LibGit2Sharp.GitObject)
    IL_000c:  ret
  } // end of method GitObject::Equals

  .method public hidebysig newslot virtual final 
          instance bool  Equals(class LibGit2Sharp.GitObject other) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.GitObject> LibGit2Sharp.GitObject::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance bool class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.GitObject>::Equals(!0,
                                                                                                                            !0)
    IL_000c:  ret
  } // end of method GitObject::Equals

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.GitObject> LibGit2Sharp.GitObject::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  callvirt   instance int32 class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.GitObject>::GetHashCode(!0)
    IL_000b:  ret
  } // end of method GitObject::GetHashCode

  .method public hidebysig specialname static 
          bool  op_Equality(class LibGit2Sharp.GitObject left,
                            class LibGit2Sharp.GitObject right) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ret
  } // end of method GitObject::op_Equality

  .method public hidebysig specialname static 
          bool  op_Inequality(class LibGit2Sharp.GitObject left,
                              class LibGit2Sharp.GitObject right) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  ret
  } // end of method GitObject::op_Inequality

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0006:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_000b:  ret
  } // end of method GitObject::ToString

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0006:  ldc.i4.7
    IL_0007:  callvirt   instance string LibGit2Sharp.ObjectId::ToString(int32)
    IL_000c:  ret
  } // end of method GitObject::get_DebuggerDisplay

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       131 (0x83)
    .maxstack  5
    .locals init (class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,valuetype LibGit2Sharp.ObjectType> V_0,
             class [System.Core]System.Func`2<class LibGit2Sharp.GitObject,object>[] V_1)
    IL_0000:  newobj     instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,valuetype LibGit2Sharp.ObjectType>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldtoken    LibGit2Sharp.Commit
    IL_000c:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0011:  ldc.i4.1
    IL_0012:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,valuetype LibGit2Sharp.ObjectType>::Add(!0,
                                                                                                                                                                   !1)
    IL_0017:  ldloc.0
    IL_0018:  ldtoken    LibGit2Sharp.Tree
    IL_001d:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0022:  ldc.i4.2
    IL_0023:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,valuetype LibGit2Sharp.ObjectType>::Add(!0,
                                                                                                                                                                   !1)
    IL_0028:  ldloc.0
    IL_0029:  ldtoken    LibGit2Sharp.Blob
    IL_002e:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0033:  ldc.i4.3
    IL_0034:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,valuetype LibGit2Sharp.ObjectType>::Add(!0,
                                                                                                                                                                   !1)
    IL_0039:  ldloc.0
    IL_003a:  ldtoken    LibGit2Sharp.TagAnnotation
    IL_003f:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0044:  ldc.i4.4
    IL_0045:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,valuetype LibGit2Sharp.ObjectType>::Add(!0,
                                                                                                                                                                   !1)
    IL_004a:  ldloc.0
    IL_004b:  stsfld     class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,valuetype LibGit2Sharp.ObjectType> LibGit2Sharp.GitObject::TypeToKindMap
    IL_0050:  ldc.i4.1
    IL_0051:  newarr     class [System.Core]System.Func`2<class LibGit2Sharp.GitObject,object>
    IL_0056:  stloc.1
    IL_0057:  ldloc.1
    IL_0058:  ldc.i4.0
    IL_0059:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.GitObject,object> LibGit2Sharp.GitObject::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_005e:  brtrue.s   IL_0071

    IL_0060:  ldnull
    IL_0061:  ldftn      object LibGit2Sharp.GitObject::'<.cctor>b__1'(class LibGit2Sharp.GitObject)
    IL_0067:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.GitObject,object>::.ctor(object,
                                                                                                                    native int)
    IL_006c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.GitObject,object> LibGit2Sharp.GitObject::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0071:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.GitObject,object> LibGit2Sharp.GitObject::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0076:  stelem.ref
    IL_0077:  ldloc.1
    IL_0078:  newobj     instance void class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.GitObject>::.ctor(class [System.Core]System.Func`2<!0,object>[])
    IL_007d:  stsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.GitObject> LibGit2Sharp.GitObject::equalityHelper
    IL_0082:  ret
  } // end of method GitObject::.cctor

  .method private hidebysig static object 
          '<.cctor>b__1'(class LibGit2Sharp.GitObject x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0006:  ret
  } // end of method GitObject::'<.cctor>b__1'

  .property instance class LibGit2Sharp.ObjectId
          Id()
  {
    .get instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    .set instance void LibGit2Sharp.GitObject::set_Id(class LibGit2Sharp.ObjectId)
  } // end of property GitObject::Id
  .property instance string Sha()
  {
    .get instance string LibGit2Sharp.GitObject::get_Sha()
  } // end of property GitObject::Sha
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.GitObject::get_DebuggerDisplay()
  } // end of property GitObject::DebuggerDisplay
} // end of class LibGit2Sharp.GitObject

.class public auto ansi beforefieldinit LibGit2Sharp.Blob
       extends LibGit2Sharp.GitObject
{
  .field private initonly class LibGit2Sharp.Core.ILazy`1<int64> lazySize
  .field private initonly class LibGit2Sharp.Core.ILazy`1<bool> lazyIsBinary
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.GitObject::.ctor()
    IL_0006:  ret
  } // end of method Blob::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.ObjectId id) cil managed
  {
    // Code size       59 (0x3b)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.GitObject::.ctor(class LibGit2Sharp.Repository,
                                                                     class LibGit2Sharp.ObjectId)
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  ldarg.2
    IL_000b:  ldnull
    IL_000c:  ldftn      int64 LibGit2Sharp.Core.Proxy::git_blob_rawsize(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0012:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,int64>::.ctor(object,
                                                                                                                                          native int)
    IL_0017:  call       class LibGit2Sharp.Core.ILazy`1<!!0> LibGit2Sharp.Core.GitObjectLazyGroup::Singleton<int64>(class LibGit2Sharp.Repository,
                                                                                                                     class LibGit2Sharp.ObjectId,
                                                                                                                     class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,!!0>)
    IL_001c:  stfld      class LibGit2Sharp.Core.ILazy`1<int64> LibGit2Sharp.Blob::lazySize
    IL_0021:  ldarg.0
    IL_0022:  ldarg.1
    IL_0023:  ldarg.2
    IL_0024:  ldnull
    IL_0025:  ldftn      bool LibGit2Sharp.Core.Proxy::git_blob_is_binary(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_002b:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,bool>::.ctor(object,
                                                                                                                                         native int)
    IL_0030:  call       class LibGit2Sharp.Core.ILazy`1<!!0> LibGit2Sharp.Core.GitObjectLazyGroup::Singleton<bool>(class LibGit2Sharp.Repository,
                                                                                                                    class LibGit2Sharp.ObjectId,
                                                                                                                    class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,!!0>)
    IL_0035:  stfld      class LibGit2Sharp.Core.ILazy`1<bool> LibGit2Sharp.Blob::lazyIsBinary
    IL_003a:  ret
  } // end of method Blob::.ctor

  .method public hidebysig newslot specialname virtual 
          instance int32  get_Size() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<int64> LibGit2Sharp.Blob::lazySize
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<int64>::get_Value()
    IL_000b:  conv.i4
    IL_000c:  ret
  } // end of method Blob::get_Size

  .method public hidebysig newslot specialname virtual 
          instance bool  get_IsBinary() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<bool> LibGit2Sharp.Blob::lazyIsBinary
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<bool>::get_Value()
    IL_000b:  ret
  } // end of method Blob::get_IsBinary

  .method public hidebysig newslot specialname virtual 
          instance uint8[]  get_Content() cil managed
  {
    // Code size       29 (0x1d)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.GitObject::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  ldarg.0
    IL_000c:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0011:  ldarg.0
    IL_0012:  callvirt   instance int32 LibGit2Sharp.Blob::get_Size()
    IL_0017:  call       uint8[] LibGit2Sharp.Core.Proxy::git_blob_rawcontent(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                              class LibGit2Sharp.ObjectId,
                                                                              int32)
    IL_001c:  ret
  } // end of method Blob::get_Content

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.IO.Stream 
          get_ContentStream() cil managed
  {
    // Code size       30 (0x1e)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.GitObject::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  ldarg.0
    IL_000c:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0011:  ldarg.0
    IL_0012:  callvirt   instance int32 LibGit2Sharp.Blob::get_Size()
    IL_0017:  conv.i8
    IL_0018:  call       class [mscorlib]System.IO.UnmanagedMemoryStream LibGit2Sharp.Core.Proxy::git_blob_rawcontent_stream(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                             class LibGit2Sharp.ObjectId,
                                                                                                                             int64)
    IL_001d:  ret
  } // end of method Blob::get_ContentStream

  .property instance int32 Size()
  {
    .get instance int32 LibGit2Sharp.Blob::get_Size()
  } // end of property Blob::Size
  .property instance bool IsBinary()
  {
    .get instance bool LibGit2Sharp.Blob::get_IsBinary()
  } // end of property Blob::IsBinary
  .property instance uint8[] Content()
  {
    .get instance uint8[] LibGit2Sharp.Blob::get_Content()
  } // end of property Blob::Content
  .property instance class [mscorlib]System.IO.Stream
          ContentStream()
  {
    .get instance class [mscorlib]System.IO.Stream LibGit2Sharp.Blob::get_ContentStream()
  } // end of property Blob::ContentStream
} // end of class LibGit2Sharp.Blob

.class public abstract auto ansi sealed beforefieldinit LibGit2Sharp.BlobExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static string 
          ContentAsUtf8(class LibGit2Sharp.Blob 'blob') cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       28 (0x1c)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "blob"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  call       class [mscorlib]System.Text.Encoding [mscorlib]System.Text.Encoding::get_UTF8()
    IL_0010:  ldarg.0
    IL_0011:  callvirt   instance uint8[] LibGit2Sharp.Blob::get_Content()
    IL_0016:  callvirt   instance string [mscorlib]System.Text.Encoding::GetString(uint8[])
    IL_001b:  ret
  } // end of method BlobExtensions::ContentAsUtf8

  .method public hidebysig static string 
          ContentAsUnicode(class LibGit2Sharp.Blob 'blob') cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       28 (0x1c)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "blob"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  call       class [mscorlib]System.Text.Encoding [mscorlib]System.Text.Encoding::get_Unicode()
    IL_0010:  ldarg.0
    IL_0011:  callvirt   instance uint8[] LibGit2Sharp.Blob::get_Content()
    IL_0016:  callvirt   instance string [mscorlib]System.Text.Encoding::GetString(uint8[])
    IL_001b:  ret
  } // end of method BlobExtensions::ContentAsUnicode

} // end of class LibGit2Sharp.BlobExtensions

.class public abstract auto ansi beforefieldinit LibGit2Sharp.ReferenceWrapper`1<(LibGit2Sharp.GitObject) TObject>
       extends [mscorlib]System.Object
       implements class [mscorlib]System.IEquatable`1<class LibGit2Sharp.ReferenceWrapper`1<!TObject>>
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass2'<(LibGit2Sharp.GitObject) TObject>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.ReferenceWrapper`1<!TObject> '<>4__this'
    .field public class LibGit2Sharp.Reference reference
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass2'::.ctor

    .method public hidebysig instance !TObject 
            '<.ctor>b__0'() cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.ReferenceWrapper`1<!0> class LibGit2Sharp.ReferenceWrapper`1/'<>c__DisplayClass2'<!TObject>::'<>4__this'
      IL_0006:  ldarg.0
      IL_0007:  ldfld      class LibGit2Sharp.Reference class LibGit2Sharp.ReferenceWrapper`1/'<>c__DisplayClass2'<!TObject>::reference
      IL_000c:  call       instance !0 class LibGit2Sharp.ReferenceWrapper`1<!TObject>::RetrieveTargetObject(class LibGit2Sharp.Reference)
      IL_0011:  ret
    } // end of method '<>c__DisplayClass2'::'<.ctor>b__0'

  } // end of class '<>c__DisplayClass2'

  .field family initonly class LibGit2Sharp.Repository repo
  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<!TObject> objectBuilder
  .field private static initonly class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.ReferenceWrapper`1<!TObject>> equalityHelper
  .field private initonly string canonicalName
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.ReferenceWrapper`1<!TObject>,object> 'CS$<>9__CachedAnonymousMethodDelegate6'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.ReferenceWrapper`1<!TObject>,object> 'CS$<>9__CachedAnonymousMethodDelegate7'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ReferenceWrapper`1::.ctor

  .method famorassem hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.Reference reference,
                               class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> canonicalNameSelector) cil managed
  {
    // Code size       120 (0x78)
    .maxstack  4
    .locals init (class [System.Core]System.Func`1<!TObject> V_0,
             class LibGit2Sharp.ReferenceWrapper`1/'<>c__DisplayClass2'<!TObject> V_1)
    IL_0000:  ldnull
    IL_0001:  stloc.0
    IL_0002:  newobj     instance void class LibGit2Sharp.ReferenceWrapper`1/'<>c__DisplayClass2'<!TObject>::.ctor()
    IL_0007:  stloc.1
    IL_0008:  ldloc.1
    IL_0009:  ldarg.2
    IL_000a:  stfld      class LibGit2Sharp.Reference class LibGit2Sharp.ReferenceWrapper`1/'<>c__DisplayClass2'<!TObject>::reference
    IL_000f:  ldarg.0
    IL_0010:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0015:  ldloc.1
    IL_0016:  ldarg.0
    IL_0017:  stfld      class LibGit2Sharp.ReferenceWrapper`1<!0> class LibGit2Sharp.ReferenceWrapper`1/'<>c__DisplayClass2'<!TObject>::'<>4__this'
    IL_001c:  ldarg.1
    IL_001d:  ldstr      "repo"
    IL_0022:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0027:  ldloc.1
    IL_0028:  ldfld      class LibGit2Sharp.Reference class LibGit2Sharp.ReferenceWrapper`1/'<>c__DisplayClass2'<!TObject>::reference
    IL_002d:  ldstr      "reference"
    IL_0032:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0037:  ldarg.3
    IL_0038:  ldstr      "canonicalNameSelector"
    IL_003d:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0042:  ldarg.0
    IL_0043:  ldarg.1
    IL_0044:  stfld      class LibGit2Sharp.Repository class LibGit2Sharp.ReferenceWrapper`1<!TObject>::repo
    IL_0049:  ldarg.0
    IL_004a:  ldarg.3
    IL_004b:  ldloc.1
    IL_004c:  ldfld      class LibGit2Sharp.Reference class LibGit2Sharp.ReferenceWrapper`1/'<>c__DisplayClass2'<!TObject>::reference
    IL_0051:  callvirt   instance !1 class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string>::Invoke(!0)
    IL_0056:  stfld      string class LibGit2Sharp.ReferenceWrapper`1<!TObject>::canonicalName
    IL_005b:  ldarg.0
    IL_005c:  ldloc.0
    IL_005d:  brtrue.s   IL_006c

    IL_005f:  ldloc.1
    IL_0060:  ldftn      instance !0 class LibGit2Sharp.ReferenceWrapper`1/'<>c__DisplayClass2'<!TObject>::'<.ctor>b__0'()
    IL_0066:  newobj     instance void class [System.Core]System.Func`1<!TObject>::.ctor(object,
                                                                                         native int)
    IL_006b:  stloc.0
    IL_006c:  ldloc.0
    IL_006d:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<!TObject>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_0072:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<!0> class LibGit2Sharp.ReferenceWrapper`1<!TObject>::objectBuilder
    IL_0077:  ret
  } // end of method ReferenceWrapper`1::.ctor

  .method public hidebysig newslot specialname virtual 
          instance string  get_CanonicalName() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string class LibGit2Sharp.ReferenceWrapper`1<!TObject>::canonicalName
    IL_0006:  ret
  } // end of method ReferenceWrapper`1::get_CanonicalName

  .method public hidebysig newslot specialname virtual 
          instance string  get_Name() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<!TObject>::Shorten()
    IL_0006:  ret
  } // end of method ReferenceWrapper`1::get_Name

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<!TObject>::get_CanonicalName()
    IL_0006:  ret
  } // end of method ReferenceWrapper`1::ToString

  .method family hidebysig specialname instance !TObject 
          get_TargetObject() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<!0> class LibGit2Sharp.ReferenceWrapper`1<!TObject>::objectBuilder
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<!TObject>::get_Value()
    IL_000b:  ret
  } // end of method ReferenceWrapper`1::get_TargetObject

  .method family hidebysig newslot abstract virtual 
          instance string  Shorten() cil managed
  {
  } // end of method ReferenceWrapper`1::Shorten

  .method private hidebysig instance !TObject 
          RetrieveTargetObject(class LibGit2Sharp.Reference reference) cil managed
  {
    // Code size       70 (0x46)
    .maxstack  2
    .locals init (class LibGit2Sharp.DirectReference V_0,
             class LibGit2Sharp.GitObject V_1,
             !TObject V_2,
             !TObject V_3)
    IL_0000:  ldarg.1
    IL_0001:  callvirt   instance class LibGit2Sharp.DirectReference LibGit2Sharp.Reference::ResolveToDirectReference()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldnull
    IL_0009:  call       bool LibGit2Sharp.Reference::op_Equality(class LibGit2Sharp.Reference,
                                                                  class LibGit2Sharp.Reference)
    IL_000e:  brfalse.s  IL_001a

    IL_0010:  ldloca.s   V_2
    IL_0012:  initobj    !TObject
    IL_0018:  ldloc.2
    IL_0019:  ret

    IL_001a:  ldloc.0
    IL_001b:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.DirectReference::get_Target()
    IL_0020:  stloc.1
    IL_0021:  ldloc.1
    IL_0022:  ldnull
    IL_0023:  call       bool LibGit2Sharp.GitObject::op_Equality(class LibGit2Sharp.GitObject,
                                                                  class LibGit2Sharp.GitObject)
    IL_0028:  brfalse.s  IL_0034

    IL_002a:  ldloca.s   V_3
    IL_002c:  initobj    !TObject
    IL_0032:  ldloc.3
    IL_0033:  ret

    IL_0034:  ldarg.0
    IL_0035:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.ReferenceWrapper`1<!TObject>::repo
    IL_003a:  ldloc.1
    IL_003b:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0040:  call       !!0 LibGit2Sharp.RepositoryExtensions::Lookup<!TObject>(class LibGit2Sharp.IRepository,
                                                                                 class LibGit2Sharp.ObjectId)
    IL_0045:  ret
  } // end of method ReferenceWrapper`1::RetrieveTargetObject

  .method public hidebysig newslot virtual final 
          instance bool  Equals(class LibGit2Sharp.ReferenceWrapper`1<!TObject> other) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.ReferenceWrapper`1<!0>> class LibGit2Sharp.ReferenceWrapper`1<!TObject>::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance bool class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.ReferenceWrapper`1<!TObject>>::Equals(!0,
                                                                                                                                               !0)
    IL_000c:  ret
  } // end of method ReferenceWrapper`1::Equals

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  isinst     class LibGit2Sharp.ReferenceWrapper`1<!TObject>
    IL_0007:  call       instance bool class LibGit2Sharp.ReferenceWrapper`1<!TObject>::Equals(class LibGit2Sharp.ReferenceWrapper`1<!0>)
    IL_000c:  ret
  } // end of method ReferenceWrapper`1::Equals

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.ReferenceWrapper`1<!0>> class LibGit2Sharp.ReferenceWrapper`1<!TObject>::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  callvirt   instance int32 class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.ReferenceWrapper`1<!TObject>>::GetHashCode(!0)
    IL_000b:  ret
  } // end of method ReferenceWrapper`1::GetHashCode

  .method public hidebysig specialname static 
          bool  op_Equality(class LibGit2Sharp.ReferenceWrapper`1<!TObject> left,
                            class LibGit2Sharp.ReferenceWrapper`1<!TObject> right) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ret
  } // end of method ReferenceWrapper`1::op_Equality

  .method public hidebysig specialname static 
          bool  op_Inequality(class LibGit2Sharp.ReferenceWrapper`1<!TObject> left,
                              class LibGit2Sharp.ReferenceWrapper`1<!TObject> right) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  ret
  } // end of method ReferenceWrapper`1::op_Inequality

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       88 (0x58)
    .maxstack  7
    .locals init (object[] V_0,
             !TObject V_1)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "{0} => \"{1}\""
    IL_000a:  ldc.i4.2
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<!TObject>::get_CanonicalName()
    IL_0019:  stelem.ref
    IL_001a:  ldloc.0
    IL_001b:  ldc.i4.1
    IL_001c:  ldarg.0
    IL_001d:  call       instance !0 class LibGit2Sharp.ReferenceWrapper`1<!TObject>::get_TargetObject()
    IL_0022:  box        !TObject
    IL_0027:  ldnull
    IL_0028:  call       bool LibGit2Sharp.GitObject::op_Inequality(class LibGit2Sharp.GitObject,
                                                                    class LibGit2Sharp.GitObject)
    IL_002d:  brtrue.s   IL_0036

    IL_002f:  ldstr      "\?"
    IL_0034:  br.s       IL_0050

    IL_0036:  ldarg.0
    IL_0037:  call       instance !0 class LibGit2Sharp.ReferenceWrapper`1<!TObject>::get_TargetObject()
    IL_003c:  stloc.1
    IL_003d:  ldloca.s   V_1
    IL_003f:  constrained. !TObject
    IL_0045:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_004a:  ldc.i4.7
    IL_004b:  callvirt   instance string LibGit2Sharp.ObjectId::ToString(int32)
    IL_0050:  stelem.ref
    IL_0051:  ldloc.0
    IL_0052:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0057:  ret
  } // end of method ReferenceWrapper`1::get_DebuggerDisplay

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       83 (0x53)
    .maxstack  5
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.ReferenceWrapper`1<!TObject>,object>[] V_0)
    IL_0000:  ldc.i4.2
    IL_0001:  newarr     class [System.Core]System.Func`2<class LibGit2Sharp.ReferenceWrapper`1<!TObject>,object>
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldc.i4.0
    IL_0009:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.ReferenceWrapper`1<!0>,object> class LibGit2Sharp.ReferenceWrapper`1<!TObject>::'CS$<>9__CachedAnonymousMethodDelegate6'
    IL_000e:  brtrue.s   IL_0021

    IL_0010:  ldnull
    IL_0011:  ldftn      object class LibGit2Sharp.ReferenceWrapper`1<!TObject>::'<.cctor>b__4'(class LibGit2Sharp.ReferenceWrapper`1<!0>)
    IL_0017:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.ReferenceWrapper`1<!TObject>,object>::.ctor(object,
                                                                                                                                       native int)
    IL_001c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.ReferenceWrapper`1<!0>,object> class LibGit2Sharp.ReferenceWrapper`1<!TObject>::'CS$<>9__CachedAnonymousMethodDelegate6'
    IL_0021:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.ReferenceWrapper`1<!0>,object> class LibGit2Sharp.ReferenceWrapper`1<!TObject>::'CS$<>9__CachedAnonymousMethodDelegate6'
    IL_0026:  stelem.ref
    IL_0027:  ldloc.0
    IL_0028:  ldc.i4.1
    IL_0029:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.ReferenceWrapper`1<!0>,object> class LibGit2Sharp.ReferenceWrapper`1<!TObject>::'CS$<>9__CachedAnonymousMethodDelegate7'
    IL_002e:  brtrue.s   IL_0041

    IL_0030:  ldnull
    IL_0031:  ldftn      object class LibGit2Sharp.ReferenceWrapper`1<!TObject>::'<.cctor>b__5'(class LibGit2Sharp.ReferenceWrapper`1<!0>)
    IL_0037:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.ReferenceWrapper`1<!TObject>,object>::.ctor(object,
                                                                                                                                       native int)
    IL_003c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.ReferenceWrapper`1<!0>,object> class LibGit2Sharp.ReferenceWrapper`1<!TObject>::'CS$<>9__CachedAnonymousMethodDelegate7'
    IL_0041:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.ReferenceWrapper`1<!0>,object> class LibGit2Sharp.ReferenceWrapper`1<!TObject>::'CS$<>9__CachedAnonymousMethodDelegate7'
    IL_0046:  stelem.ref
    IL_0047:  ldloc.0
    IL_0048:  newobj     instance void class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.ReferenceWrapper`1<!TObject>>::.ctor(class [System.Core]System.Func`2<!0,object>[])
    IL_004d:  stsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.ReferenceWrapper`1<!0>> class LibGit2Sharp.ReferenceWrapper`1<!TObject>::equalityHelper
    IL_0052:  ret
  } // end of method ReferenceWrapper`1::.cctor

  .method private hidebysig static object 
          '<.cctor>b__4'(class LibGit2Sharp.ReferenceWrapper`1<!TObject> x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<!TObject>::get_CanonicalName()
    IL_0006:  ret
  } // end of method ReferenceWrapper`1::'<.cctor>b__4'

  .method private hidebysig static object 
          '<.cctor>b__5'(class LibGit2Sharp.ReferenceWrapper`1<!TObject> x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance !0 class LibGit2Sharp.ReferenceWrapper`1<!TObject>::get_TargetObject()
    IL_0006:  box        !TObject
    IL_000b:  ret
  } // end of method ReferenceWrapper`1::'<.cctor>b__5'

  .property instance string CanonicalName()
  {
    .get instance string LibGit2Sharp.ReferenceWrapper`1::get_CanonicalName()
  } // end of property ReferenceWrapper`1::CanonicalName
  .property instance string Name()
  {
    .get instance string LibGit2Sharp.ReferenceWrapper`1::get_Name()
  } // end of property ReferenceWrapper`1::Name
  .property instance !TObject TargetObject()
  {
    .get instance !TObject LibGit2Sharp.ReferenceWrapper`1::get_TargetObject()
  } // end of property ReferenceWrapper`1::TargetObject
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.ReferenceWrapper`1::get_DebuggerDisplay()
  } // end of property ReferenceWrapper`1::DebuggerDisplay
} // end of class LibGit2Sharp.ReferenceWrapper`1

.class public auto ansi beforefieldinit LibGit2Sharp.Branch
       extends class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>
{
  .custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClassa'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public string canonicalName
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClassa'::.ctor

    .method public hidebysig instance string 
            '<.ctor>b__8'(class LibGit2Sharp.Reference _) cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      string LibGit2Sharp.Branch/'<>c__DisplayClassa'::canonicalName
      IL_0006:  ret
    } // end of method '<>c__DisplayClassa'::'<.ctor>b__8'

  } // end of class '<>c__DisplayClassa'

  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Branch> trackedBranch
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> 'CS$<>9__CachedAnonymousMethodDelegated'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::.ctor()
    IL_0006:  ret
  } // end of method Branch::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.Reference reference,
                               string canonicalName) cil managed
  {
    // Code size       41 (0x29)
    .maxstack  6
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> V_0,
             class LibGit2Sharp.Branch/'<>c__DisplayClassa' V_1)
    IL_0000:  ldnull
    IL_0001:  stloc.0
    IL_0002:  newobj     instance void LibGit2Sharp.Branch/'<>c__DisplayClassa'::.ctor()
    IL_0007:  stloc.1
    IL_0008:  ldloc.1
    IL_0009:  ldarg.3
    IL_000a:  stfld      string LibGit2Sharp.Branch/'<>c__DisplayClassa'::canonicalName
    IL_000f:  ldarg.0
    IL_0010:  ldarg.1
    IL_0011:  ldarg.2
    IL_0012:  ldloc.0
    IL_0013:  brtrue.s   IL_0022

    IL_0015:  ldloc.1
    IL_0016:  ldftn      instance string LibGit2Sharp.Branch/'<>c__DisplayClassa'::'<.ctor>b__8'(class LibGit2Sharp.Reference)
    IL_001c:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string>::.ctor(object,
                                                                                                                    native int)
    IL_0021:  stloc.0
    IL_0022:  ldloc.0
    IL_0023:  call       instance void LibGit2Sharp.Branch::.ctor(class LibGit2Sharp.Repository,
                                                                  class LibGit2Sharp.Reference,
                                                                  class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string>)
    IL_0028:  ret
  } // end of method Branch::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.Reference reference) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> LibGit2Sharp.Branch::'CS$<>9__CachedAnonymousMethodDelegated'
    IL_0008:  brtrue.s   IL_001b

    IL_000a:  ldnull
    IL_000b:  ldftn      string LibGit2Sharp.Branch::'<.ctor>b__c'(class LibGit2Sharp.Reference)
    IL_0011:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string>::.ctor(object,
                                                                                                                    native int)
    IL_0016:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> LibGit2Sharp.Branch::'CS$<>9__CachedAnonymousMethodDelegated'
    IL_001b:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> LibGit2Sharp.Branch::'CS$<>9__CachedAnonymousMethodDelegated'
    IL_0020:  call       instance void LibGit2Sharp.Branch::.ctor(class LibGit2Sharp.Repository,
                                                                  class LibGit2Sharp.Reference,
                                                                  class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string>)
    IL_0025:  ret
  } // end of method Branch::.ctor

  .method private hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.Reference reference,
                               class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> canonicalNameSelector) cil managed
  {
    // Code size       33 (0x21)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  call       instance void class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::.ctor(class LibGit2Sharp.Repository,
                                                                                                               class LibGit2Sharp.Reference,
                                                                                                               class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string>)
    IL_0009:  ldarg.0
    IL_000a:  ldarg.0
    IL_000b:  ldftn      instance class LibGit2Sharp.Branch LibGit2Sharp.Branch::ResolveTrackedBranch()
    IL_0011:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.Branch>::.ctor(object,
                                                                                                          native int)
    IL_0016:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Branch>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_001b:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Branch> LibGit2Sharp.Branch::trackedBranch
    IL_0020:  ret
  } // end of method Branch::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.TreeEntry 
          get_Item(string relativePath) cil managed
  {
    // Code size       29 (0x1d)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_0006:  ldnull
    IL_0007:  call       bool LibGit2Sharp.GitObject::op_Equality(class LibGit2Sharp.GitObject,
                                                                  class LibGit2Sharp.GitObject)
    IL_000c:  brfalse.s  IL_0010

    IL_000e:  ldnull
    IL_000f:  ret

    IL_0010:  ldarg.0
    IL_0011:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_0016:  ldarg.1
    IL_0017:  callvirt   instance class LibGit2Sharp.TreeEntry LibGit2Sharp.Commit::get_Item(string)
    IL_001c:  ret
  } // end of method Branch::get_Item

  .method public hidebysig newslot specialname virtual 
          instance bool  get_IsRemote() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_0006:  call       bool LibGit2Sharp.Branch::IsRemoteBranch(string)
    IL_000b:  ret
  } // end of method Branch::get_IsRemote

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Branch 
          get_TrackedBranch() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Branch> LibGit2Sharp.Branch::trackedBranch
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Branch>::get_Value()
    IL_000b:  ret
  } // end of method Branch::get_TrackedBranch

  .method public hidebysig newslot specialname virtual 
          instance bool  get_IsTracking() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.Branch::get_TrackedBranch()
    IL_0006:  ldnull
    IL_0007:  call       bool class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::op_Inequality(class LibGit2Sharp.ReferenceWrapper`1<!0>,
                                                                                                              class LibGit2Sharp.ReferenceWrapper`1<!0>)
    IL_000c:  ret
  } // end of method Branch::get_IsTracking

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.BranchTrackingDetails 
          get_TrackingDetails() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::repo
    IL_0006:  ldarg.0
    IL_0007:  newobj     instance void LibGit2Sharp.BranchTrackingDetails::.ctor(class LibGit2Sharp.Repository,
                                                                                 class LibGit2Sharp.Branch)
    IL_000c:  ret
  } // end of method Branch::get_TrackingDetails

  .method public hidebysig newslot specialname virtual 
          instance bool  get_IsCurrentRepositoryHead() cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::get_Head()
    IL_000b:  ldarg.0
    IL_000c:  call       bool class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::op_Equality(class LibGit2Sharp.ReferenceWrapper`1<!0>,
                                                                                                            class LibGit2Sharp.ReferenceWrapper`1<!0>)
    IL_0011:  ret
  } // end of method Branch::get_IsCurrentRepositoryHead

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Commit 
          get_Tip() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance !0 class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_TargetObject()
    IL_0006:  ret
  } // end of method Branch::get_Tip

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.ICommitLog 
          get_Commits() cil managed
  {
    // Code size       31 (0x1f)
    .maxstack  3
    .locals init (class LibGit2Sharp.CommitFilter V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.IQueryableCommitLog LibGit2Sharp.Repository::get_Commits()
    IL_000b:  newobj     instance void LibGit2Sharp.CommitFilter::.ctor()
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldarg.0
    IL_0013:  callvirt   instance void LibGit2Sharp.CommitFilter::set_Since(object)
    IL_0018:  ldloc.0
    IL_0019:  callvirt   instance class LibGit2Sharp.ICommitLog LibGit2Sharp.IQueryableCommitLog::QueryBy(class LibGit2Sharp.CommitFilter)
    IL_001e:  ret
  } // end of method Branch::get_Commits

  .method public hidebysig newslot specialname virtual 
          instance string  get_UpstreamBranchCanonicalName() cil managed
  {
    // Code size       33 (0x21)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance bool LibGit2Sharp.Branch::get_IsRemote()
    IL_0006:  brfalse.s  IL_001a

    IL_0008:  ldarg.0
    IL_0009:  callvirt   instance class LibGit2Sharp.Remote LibGit2Sharp.Branch::get_Remote()
    IL_000e:  ldarg.0
    IL_000f:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_0014:  callvirt   instance string LibGit2Sharp.Remote::FetchSpecTransformToSource(string)
    IL_0019:  ret

    IL_001a:  ldarg.0
    IL_001b:  call       instance string LibGit2Sharp.Branch::UpstreamBranchCanonicalNameFromLocalBranch()
    IL_0020:  ret
  } // end of method Branch::get_UpstreamBranchCanonicalName

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Remote 
          get_Remote() cil managed
  {
    // Code size       52 (0x34)
    .maxstack  2
    .locals init (string V_0)
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance bool LibGit2Sharp.Branch::get_IsRemote()
    IL_0006:  brfalse.s  IL_0011

    IL_0008:  ldarg.0
    IL_0009:  call       instance string LibGit2Sharp.Branch::RemoteNameFromRemoteTrackingBranch()
    IL_000e:  stloc.0
    IL_000f:  br.s       IL_001d

    IL_0011:  ldarg.0
    IL_0012:  call       instance string LibGit2Sharp.Branch::RemoteNameFromLocalBranch()
    IL_0017:  stloc.0
    IL_0018:  ldloc.0
    IL_0019:  brtrue.s   IL_001d

    IL_001b:  ldnull
    IL_001c:  ret

    IL_001d:  ldarg.0
    IL_001e:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::repo
    IL_0023:  callvirt   instance class LibGit2Sharp.Network LibGit2Sharp.Repository::get_Network()
    IL_0028:  callvirt   instance class LibGit2Sharp.RemoteCollection LibGit2Sharp.Network::get_Remotes()
    IL_002d:  ldloc.0
    IL_002e:  callvirt   instance class LibGit2Sharp.Remote LibGit2Sharp.RemoteCollection::get_Item(string)
    IL_0033:  ret
  } // end of method Branch::get_Remote

  .method private hidebysig instance string 
          UpstreamBranchCanonicalNameFromLocalBranch() cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  4
    .locals init (class LibGit2Sharp.ConfigurationEntry`1<string> V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Configuration LibGit2Sharp.Repository::get_Config()
    IL_000b:  ldstr      "branch"
    IL_0010:  ldarg.0
    IL_0011:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_Name()
    IL_0016:  ldstr      "merge"
    IL_001b:  call       class LibGit2Sharp.ConfigurationEntry`1<!!0> LibGit2Sharp.ConfigurationExtensions::Get<string>(class LibGit2Sharp.Configuration,
                                                                                                                        string,
                                                                                                                        string,
                                                                                                                        string)
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  brtrue.s   IL_0026

    IL_0024:  ldnull
    IL_0025:  ret

    IL_0026:  ldloc.0
    IL_0027:  callvirt   instance !0 class LibGit2Sharp.ConfigurationEntry`1<string>::get_Value()
    IL_002c:  ret
  } // end of method Branch::UpstreamBranchCanonicalNameFromLocalBranch

  .method private hidebysig instance string 
          RemoteNameFromLocalBranch() cil managed
  {
    // Code size       71 (0x47)
    .maxstack  4
    .locals init (class LibGit2Sharp.ConfigurationEntry`1<string> V_0,
             string V_1)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Configuration LibGit2Sharp.Repository::get_Config()
    IL_000b:  ldstr      "branch"
    IL_0010:  ldarg.0
    IL_0011:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_Name()
    IL_0016:  ldstr      "remote"
    IL_001b:  call       class LibGit2Sharp.ConfigurationEntry`1<!!0> LibGit2Sharp.ConfigurationExtensions::Get<string>(class LibGit2Sharp.Configuration,
                                                                                                                        string,
                                                                                                                        string,
                                                                                                                        string)
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  brtrue.s   IL_0026

    IL_0024:  ldnull
    IL_0025:  ret

    IL_0026:  ldloc.0
    IL_0027:  callvirt   instance !0 class LibGit2Sharp.ConfigurationEntry`1<string>::get_Value()
    IL_002c:  stloc.1
    IL_002d:  ldloc.1
    IL_002e:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
    IL_0033:  brtrue.s   IL_0043

    IL_0035:  ldloc.1
    IL_0036:  ldstr      "."
    IL_003b:  ldc.i4.4
    IL_003c:  call       bool [mscorlib]System.String::Equals(string,
                                                              string,
                                                              valuetype [mscorlib]System.StringComparison)
    IL_0041:  brfalse.s  IL_0045

    IL_0043:  ldnull
    IL_0044:  ret

    IL_0045:  ldloc.1
    IL_0046:  ret
  } // end of method Branch::RemoteNameFromLocalBranch

  .method private hidebysig instance string 
          RemoteNameFromRemoteTrackingBranch() cil managed
  {
    // Code size       23 (0x17)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  ldarg.0
    IL_000c:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_0011:  call       string LibGit2Sharp.Core.Proxy::git_branch_remote_name(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                string)
    IL_0016:  ret
  } // end of method Branch::RemoteNameFromRemoteTrackingBranch

  .method public hidebysig newslot virtual 
          instance void  Checkout() cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::repo
    IL_0006:  ldarg.0
    IL_0007:  call       class LibGit2Sharp.Branch LibGit2Sharp.RepositoryExtensions::Checkout(class LibGit2Sharp.IRepository,
                                                                                               class LibGit2Sharp.Branch)
    IL_000c:  pop
    IL_000d:  ret
  } // end of method Branch::Checkout

  .method public hidebysig newslot virtual 
          instance void  Checkout(valuetype LibGit2Sharp.CheckoutOptions checkoutOptions,
                                  class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 80 96 54 68 69 73 20 6D 65 74 68 6F 64 20   // ....This method 
                                                                                77 69 6C 6C 20 62 65 20 72 65 6D 6F 76 65 64 20   // will be removed 
                                                                                69 6E 20 74 68 65 20 6E 65 78 74 20 72 65 6C 65   // in the next rele
                                                                                61 73 65 2E 20 50 6C 65 61 73 65 20 75 73 65 20   // ase. Please use 
                                                                                43 68 65 63 6B 6F 75 74 28 43 68 65 63 6B 6F 75   // Checkout(Checkou
                                                                                74 4D 6F 64 69 66 69 65 72 73 2C 20 43 68 65 63   // tModifiers, Chec
                                                                                6B 6F 75 74 50 72 6F 67 72 65 73 73 48 61 6E 64   // koutProgressHand
                                                                                6C 65 72 2C 20 43 68 65 63 6B 6F 75 74 4E 6F 74   // ler, CheckoutNot
                                                                                69 66 69 63 61 74 69 6F 6E 4F 70 74 69 6F 6E 73   // ificationOptions
                                                                                29 20 69 6E 73 74 65 61 64 2E 00 00 )             // ) instead...
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldnull
    IL_0004:  callvirt   instance void LibGit2Sharp.Branch::Checkout(valuetype LibGit2Sharp.CheckoutModifiers,
                                                                     class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                     class LibGit2Sharp.CheckoutNotificationOptions)
    IL_0009:  ret
  } // end of method Branch::Checkout

  .method public hidebysig newslot virtual 
          instance void  Checkout(valuetype LibGit2Sharp.CheckoutModifiers checkoutModifiers,
                                  class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress,
                                  class LibGit2Sharp.CheckoutNotificationOptions checkoutNotificationOptions) cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::repo
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  ldarg.2
    IL_0009:  ldarg.3
    IL_000a:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::Checkout(class LibGit2Sharp.Branch,
                                                                                              valuetype LibGit2Sharp.CheckoutModifiers,
                                                                                              class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                                              class LibGit2Sharp.CheckoutNotificationOptions)
    IL_000f:  pop
    IL_0010:  ret
  } // end of method Branch::Checkout

  .method private hidebysig instance class LibGit2Sharp.Branch 
          ResolveTrackedBranch() cil managed
  {
    // Code size       86 (0x56)
    .maxstack  4
    .locals init (string V_0,
             class LibGit2Sharp.Branch V_1)
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance bool LibGit2Sharp.Branch::get_IsRemote()
    IL_0006:  brfalse.s  IL_000a

    IL_0008:  ldnull
    IL_0009:  ret

    IL_000a:  ldarg.0
    IL_000b:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::repo
    IL_0010:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0015:  ldarg.0
    IL_0016:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_001b:  call       string LibGit2Sharp.Core.Proxy::git_branch_upstream_name(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                  string)
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  brtrue.s   IL_0026

    IL_0024:  ldnull
    IL_0025:  ret

    IL_0026:  ldarg.0
    IL_0027:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::repo
    IL_002c:  callvirt   instance class LibGit2Sharp.BranchCollection LibGit2Sharp.Repository::get_Branches()
    IL_0031:  ldloc.0
    IL_0032:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::get_Item(string)
    IL_0037:  stloc.1
    IL_0038:  ldloc.1
    IL_0039:  ldnull
    IL_003a:  call       bool class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::op_Inequality(class LibGit2Sharp.ReferenceWrapper`1<!0>,
                                                                                                              class LibGit2Sharp.ReferenceWrapper`1<!0>)
    IL_003f:  brfalse.s  IL_0043

    IL_0041:  ldloc.1
    IL_0042:  ret

    IL_0043:  ldarg.0
    IL_0044:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::repo
    IL_0049:  ldloc.0
    IL_004a:  newobj     instance void LibGit2Sharp.VoidReference::.ctor(string)
    IL_004f:  ldloc.0
    IL_0050:  newobj     instance void LibGit2Sharp.Branch::.ctor(class LibGit2Sharp.Repository,
                                                                  class LibGit2Sharp.Reference,
                                                                  string)
    IL_0055:  ret
  } // end of method Branch::ResolveTrackedBranch

  .method private hidebysig static bool  IsRemoteBranch(string canonicalName) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       bool LibGit2Sharp.ReferenceExtensions::LooksLikeRemoteTrackingBranch(string)
    IL_0006:  ret
  } // end of method Branch::IsRemoteBranch

  .method family hidebysig virtual instance string 
          Shorten() cil managed
  {
    // Code size       108 (0x6c)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_0006:  call       bool LibGit2Sharp.ReferenceExtensions::LooksLikeLocalBranch(string)
    IL_000b:  brfalse.s  IL_0023

    IL_000d:  ldarg.0
    IL_000e:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_0013:  call       string LibGit2Sharp.Reference::get_LocalBranchPrefix()
    IL_0018:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_001d:  callvirt   instance string [mscorlib]System.String::Substring(int32)
    IL_0022:  ret

    IL_0023:  ldarg.0
    IL_0024:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_0029:  call       bool LibGit2Sharp.ReferenceExtensions::LooksLikeRemoteTrackingBranch(string)
    IL_002e:  brfalse.s  IL_0046

    IL_0030:  ldarg.0
    IL_0031:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_0036:  call       string LibGit2Sharp.Reference::get_RemoteTrackingBranchPrefix()
    IL_003b:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0040:  callvirt   instance string [mscorlib]System.String::Substring(int32)
    IL_0045:  ret

    IL_0046:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_004b:  ldstr      "'{0}' does not look like a valid branch name."
    IL_0050:  ldc.i4.1
    IL_0051:  newarr     [mscorlib]System.Object
    IL_0056:  stloc.0
    IL_0057:  ldloc.0
    IL_0058:  ldc.i4.0
    IL_0059:  ldarg.0
    IL_005a:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_005f:  stelem.ref
    IL_0060:  ldloc.0
    IL_0061:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0066:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_006b:  throw
  } // end of method Branch::Shorten

  .method private hidebysig static string 
          '<.ctor>b__c'(class LibGit2Sharp.Reference r) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Reference::get_TargetIdentifier()
    IL_0006:  ret
  } // end of method Branch::'<.ctor>b__c'

  .property instance class LibGit2Sharp.TreeEntry
          Item(string)
  {
    .get instance class LibGit2Sharp.TreeEntry LibGit2Sharp.Branch::get_Item(string)
  } // end of property Branch::Item
  .property instance bool IsRemote()
  {
    .get instance bool LibGit2Sharp.Branch::get_IsRemote()
  } // end of property Branch::IsRemote
  .property instance class LibGit2Sharp.Branch
          TrackedBranch()
  {
    .get instance class LibGit2Sharp.Branch LibGit2Sharp.Branch::get_TrackedBranch()
  } // end of property Branch::TrackedBranch
  .property instance bool IsTracking()
  {
    .get instance bool LibGit2Sharp.Branch::get_IsTracking()
  } // end of property Branch::IsTracking
  .property instance class LibGit2Sharp.BranchTrackingDetails
          TrackingDetails()
  {
    .get instance class LibGit2Sharp.BranchTrackingDetails LibGit2Sharp.Branch::get_TrackingDetails()
  } // end of property Branch::TrackingDetails
  .property instance bool IsCurrentRepositoryHead()
  {
    .get instance bool LibGit2Sharp.Branch::get_IsCurrentRepositoryHead()
  } // end of property Branch::IsCurrentRepositoryHead
  .property instance class LibGit2Sharp.Commit
          Tip()
  {
    .get instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
  } // end of property Branch::Tip
  .property instance class LibGit2Sharp.ICommitLog
          Commits()
  {
    .get instance class LibGit2Sharp.ICommitLog LibGit2Sharp.Branch::get_Commits()
  } // end of property Branch::Commits
  .property instance string UpstreamBranchCanonicalName()
  {
    .get instance string LibGit2Sharp.Branch::get_UpstreamBranchCanonicalName()
  } // end of property Branch::UpstreamBranchCanonicalName
  .property instance class LibGit2Sharp.Remote
          Remote()
  {
    .get instance class LibGit2Sharp.Remote LibGit2Sharp.Branch::get_Remote()
  } // end of property Branch::Remote
} // end of class LibGit2Sharp.Branch

.class public auto ansi beforefieldinit LibGit2Sharp.BranchCollection
       extends [mscorlib]System.Object
       implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Branch>,
                  [mscorlib]System.Collections.IEnumerable
{
  .custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field assembly initonly class LibGit2Sharp.Repository repo
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method BranchCollection::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchCollection::repo
    IL_000d:  ret
  } // end of method BranchCollection::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Branch 
          get_Item(string name) cil managed
  {
    // Code size       88 (0x58)
    .maxstack  2
    .locals init (class LibGit2Sharp.Branch V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.1
    IL_000c:  call       bool LibGit2Sharp.BranchCollection::LooksLikeABranchName(string)
    IL_0011:  brfalse.s  IL_001b

    IL_0013:  ldarg.0
    IL_0014:  ldarg.1
    IL_0015:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::BuildFromReferenceName(string)
    IL_001a:  ret

    IL_001b:  ldarg.0
    IL_001c:  ldarg.1
    IL_001d:  call       string LibGit2Sharp.BranchCollection::ShortToLocalName(string)
    IL_0022:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::BuildFromReferenceName(string)
    IL_0027:  stloc.0
    IL_0028:  ldloc.0
    IL_0029:  ldnull
    IL_002a:  call       bool class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::op_Inequality(class LibGit2Sharp.ReferenceWrapper`1<!0>,
                                                                                                              class LibGit2Sharp.ReferenceWrapper`1<!0>)
    IL_002f:  brfalse.s  IL_0033

    IL_0031:  ldloc.0
    IL_0032:  ret

    IL_0033:  ldarg.0
    IL_0034:  ldarg.1
    IL_0035:  call       string LibGit2Sharp.BranchCollection::ShortToRemoteName(string)
    IL_003a:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::BuildFromReferenceName(string)
    IL_003f:  stloc.0
    IL_0040:  ldloc.0
    IL_0041:  ldnull
    IL_0042:  call       bool class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::op_Inequality(class LibGit2Sharp.ReferenceWrapper`1<!0>,
                                                                                                              class LibGit2Sharp.ReferenceWrapper`1<!0>)
    IL_0047:  brfalse.s  IL_004b

    IL_0049:  ldloc.0
    IL_004a:  ret

    IL_004b:  ldarg.0
    IL_004c:  ldarg.1
    IL_004d:  call       string LibGit2Sharp.BranchCollection::ShortToRefName(string)
    IL_0052:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::BuildFromReferenceName(string)
    IL_0057:  ret
  } // end of method BranchCollection::get_Item

  .method private hidebysig static string 
          ShortToLocalName(string name) cil managed
  {
    // Code size       36 (0x24)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "{0}{1}"
    IL_000a:  ldc.i4.2
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  call       string LibGit2Sharp.Reference::get_LocalBranchPrefix()
    IL_0018:  stelem.ref
    IL_0019:  ldloc.0
    IL_001a:  ldc.i4.1
    IL_001b:  ldarg.0
    IL_001c:  stelem.ref
    IL_001d:  ldloc.0
    IL_001e:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0023:  ret
  } // end of method BranchCollection::ShortToLocalName

  .method private hidebysig static string 
          ShortToRemoteName(string name) cil managed
  {
    // Code size       36 (0x24)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "{0}{1}"
    IL_000a:  ldc.i4.2
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  call       string LibGit2Sharp.Reference::get_RemoteTrackingBranchPrefix()
    IL_0018:  stelem.ref
    IL_0019:  ldloc.0
    IL_001a:  ldc.i4.1
    IL_001b:  ldarg.0
    IL_001c:  stelem.ref
    IL_001d:  ldloc.0
    IL_001e:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0023:  ret
  } // end of method BranchCollection::ShortToRemoteName

  .method private hidebysig static string 
          ShortToRefName(string name) cil managed
  {
    // Code size       36 (0x24)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "{0}{1}"
    IL_000a:  ldc.i4.2
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldstr      "refs/"
    IL_0018:  stelem.ref
    IL_0019:  ldloc.0
    IL_001a:  ldc.i4.1
    IL_001b:  ldarg.0
    IL_001c:  stelem.ref
    IL_001d:  ldloc.0
    IL_001e:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0023:  ret
  } // end of method BranchCollection::ShortToRefName

  .method private hidebysig instance class LibGit2Sharp.Branch 
          BuildFromReferenceName(string canonicalName) cil managed
  {
    // Code size       43 (0x2b)
    .maxstack  4
    .locals init (class LibGit2Sharp.Reference V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchCollection::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_000b:  ldarg.1
    IL_000c:  callvirt   instance !!0 LibGit2Sharp.ReferenceCollection::Resolve<class LibGit2Sharp.Reference>(string)
    IL_0011:  stloc.0
    IL_0012:  ldloc.0
    IL_0013:  ldnull
    IL_0014:  call       bool LibGit2Sharp.Reference::op_Equality(class LibGit2Sharp.Reference,
                                                                  class LibGit2Sharp.Reference)
    IL_0019:  brtrue.s   IL_0029

    IL_001b:  ldarg.0
    IL_001c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchCollection::repo
    IL_0021:  ldloc.0
    IL_0022:  ldarg.1
    IL_0023:  newobj     instance void LibGit2Sharp.Branch::.ctor(class LibGit2Sharp.Repository,
                                                                  class LibGit2Sharp.Reference,
                                                                  string)
    IL_0028:  ret

    IL_0029:  ldnull
    IL_002a:  ret
  } // end of method BranchCollection::BuildFromReferenceName

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Branch> 
          GetEnumerator() cil managed
  {
    // Code size       52 (0x34)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchCollection::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  ldc.i4.3
    IL_000c:  ldnull
    IL_000d:  ldftn      string LibGit2Sharp.BranchCollection::branchToCanoncialName(native int,
                                                                                     valuetype LibGit2Sharp.Core.GitBranchType)
    IL_0013:  newobj     instance void class [System.Core]System.Func`3<native int,valuetype LibGit2Sharp.Core.GitBranchType,string>::.ctor(object,
                                                                                                                                            native int)
    IL_0018:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!0> LibGit2Sharp.Core.Proxy::git_branch_foreach<string>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                           valuetype LibGit2Sharp.Core.GitBranchType,
                                                                                                                                           class [System.Core]System.Func`3<native int,valuetype LibGit2Sharp.Core.GitBranchType,!!0>)
    IL_001d:  ldarg.0
    IL_001e:  ldftn      instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::'<GetEnumerator>b__0'(string)
    IL_0024:  newobj     instance void class [System.Core]System.Func`2<string,class LibGit2Sharp.Branch>::.ctor(object,
                                                                                                                 native int)
    IL_0029:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!1> [System.Core]System.Linq.Enumerable::Select<string,class LibGit2Sharp.Branch>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                     class [System.Core]System.Func`2<!!0,!!1>)
    IL_002e:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Branch>::GetEnumerator()
    IL_0033:  ret
  } // end of method BranchCollection::GetEnumerator

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Branch> LibGit2Sharp.BranchCollection::GetEnumerator()
    IL_0006:  ret
  } // end of method BranchCollection::System.Collections.IEnumerable.GetEnumerator

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Branch 
          Add(string name,
              class LibGit2Sharp.Commit commit,
              [opt] bool allowOverwrite) cil managed
  {
    .param [3] = bool(false)
    // Code size       72 (0x48)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "commit"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.0
    IL_0017:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchCollection::repo
    IL_001c:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0021:  ldarg.1
    IL_0022:  ldarg.2
    IL_0023:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0028:  ldarg.3
    IL_0029:  call       class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.Core.Proxy::git_branch_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                        string,
                                                                                                                        class LibGit2Sharp.ObjectId,
                                                                                                                        bool)
    IL_002e:  stloc.0
    .try
    {
      IL_002f:  leave.s    IL_003b

    }  // end .try
    finally
    {
      IL_0031:  ldloc.0
      IL_0032:  brfalse.s  IL_003a

      IL_0034:  ldloc.0
      IL_0035:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_003a:  endfinally
    }  // end handler
    IL_003b:  ldarg.0
    IL_003c:  ldarg.1
    IL_003d:  call       string LibGit2Sharp.BranchCollection::ShortToLocalName(string)
    IL_0042:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::get_Item(string)
    IL_0047:  ret
  } // end of method BranchCollection::Add

  .method public hidebysig newslot virtual 
          instance void  Remove(class LibGit2Sharp.Branch branch) cil managed
  {
    // Code size       54 (0x36)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "branch"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchCollection::repo
    IL_0011:  callvirt   instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_0016:  ldarg.1
    IL_0017:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_001c:  ldc.i4.1
    IL_001d:  callvirt   instance class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.ReferenceCollection::RetrieveReferencePtr(string,
                                                                                                                                             bool)
    IL_0022:  stloc.0
    .try
    {
      IL_0023:  ldloc.0
      IL_0024:  call       void LibGit2Sharp.Core.Proxy::git_branch_delete(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
      IL_0029:  leave.s    IL_0035

    }  // end .try
    finally
    {
      IL_002b:  ldloc.0
      IL_002c:  brfalse.s  IL_0034

      IL_002e:  ldloc.0
      IL_002f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0034:  endfinally
    }  // end handler
    IL_0035:  ret
  } // end of method BranchCollection::Remove

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Branch 
          Move(class LibGit2Sharp.Branch branch,
               string newName,
               [opt] bool allowOverwrite) cil managed
  {
    .param [3] = bool(false)
    // Code size       143 (0x8f)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_1,
             object[] V_2)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "branch"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "newName"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0016:  ldarg.1
    IL_0017:  callvirt   instance bool LibGit2Sharp.Branch::get_IsRemote()
    IL_001c:  brfalse.s  IL_0044

    IL_001e:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0023:  ldstr      "Cannot rename branch '{0}'. It's a remote tracking"
    + " branch."
    IL_0028:  ldc.i4.1
    IL_0029:  newarr     [mscorlib]System.Object
    IL_002e:  stloc.2
    IL_002f:  ldloc.2
    IL_0030:  ldc.i4.0
    IL_0031:  ldarg.1
    IL_0032:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_Name()
    IL_0037:  stelem.ref
    IL_0038:  ldloc.2
    IL_0039:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_003e:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0043:  throw

    IL_0044:  ldarg.0
    IL_0045:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchCollection::repo
    IL_004a:  callvirt   instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_004f:  call       string LibGit2Sharp.Reference::get_LocalBranchPrefix()
    IL_0054:  ldarg.1
    IL_0055:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_Name()
    IL_005a:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_005f:  ldc.i4.1
    IL_0060:  callvirt   instance class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.ReferenceCollection::RetrieveReferencePtr(string,
                                                                                                                                             bool)
    IL_0065:  stloc.0
    .try
    {
      IL_0066:  ldloc.0
      IL_0067:  ldarg.2
      IL_0068:  ldarg.3
      IL_0069:  call       class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.Core.Proxy::git_branch_move(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                                                        string,
                                                                                                                        bool)
      IL_006e:  stloc.1
      .try
      {
        IL_006f:  leave.s    IL_007b

      }  // end .try
      finally
      {
        IL_0071:  ldloc.1
        IL_0072:  brfalse.s  IL_007a

        IL_0074:  ldloc.1
        IL_0075:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_007a:  endfinally
      }  // end handler
      IL_007b:  leave.s    IL_0087

    }  // end .try
    finally
    {
      IL_007d:  ldloc.0
      IL_007e:  brfalse.s  IL_0086

      IL_0080:  ldloc.0
      IL_0081:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0086:  endfinally
    }  // end handler
    IL_0087:  ldarg.0
    IL_0088:  ldarg.2
    IL_0089:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::get_Item(string)
    IL_008e:  ret
  } // end of method BranchCollection::Move

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Branch 
          Update(class LibGit2Sharp.Branch branch,
                 class [mscorlib]System.Action`1<class LibGit2Sharp.BranchUpdater>[] actions) cil managed
  {
    .param [2]
    .custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       53 (0x35)
    .maxstack  3
    .locals init (class LibGit2Sharp.BranchUpdater V_0,
             class [mscorlib]System.Action`1<class LibGit2Sharp.BranchUpdater> V_1,
             class [mscorlib]System.Action`1<class LibGit2Sharp.BranchUpdater>[] V_2,
             int32 V_3)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchCollection::repo
    IL_0006:  ldarg.1
    IL_0007:  newobj     instance void LibGit2Sharp.BranchUpdater::.ctor(class LibGit2Sharp.Repository,
                                                                         class LibGit2Sharp.Branch)
    IL_000c:  stloc.0
    IL_000d:  ldarg.2
    IL_000e:  stloc.2
    IL_000f:  ldc.i4.0
    IL_0010:  stloc.3
    IL_0011:  br.s       IL_0022

    IL_0013:  ldloc.2
    IL_0014:  ldloc.3
    IL_0015:  ldelem.ref
    IL_0016:  stloc.1
    IL_0017:  ldloc.1
    IL_0018:  ldloc.0
    IL_0019:  callvirt   instance void class [mscorlib]System.Action`1<class LibGit2Sharp.BranchUpdater>::Invoke(!0)
    IL_001e:  ldloc.3
    IL_001f:  ldc.i4.1
    IL_0020:  add
    IL_0021:  stloc.3
    IL_0022:  ldloc.3
    IL_0023:  ldloc.2
    IL_0024:  ldlen
    IL_0025:  conv.i4
    IL_0026:  blt.s      IL_0013

    IL_0028:  ldarg.0
    IL_0029:  ldarg.1
    IL_002a:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_Name()
    IL_002f:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::get_Item(string)
    IL_0034:  ret
  } // end of method BranchCollection::Update

  .method private hidebysig static bool  LooksLikeABranchName(string referenceName) cil managed
  {
    // Code size       30 (0x1e)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "HEAD"
    IL_0006:  call       bool [mscorlib]System.String::op_Equality(string,
                                                                   string)
    IL_000b:  brtrue.s   IL_001c

    IL_000d:  ldarg.0
    IL_000e:  call       bool LibGit2Sharp.ReferenceExtensions::LooksLikeLocalBranch(string)
    IL_0013:  brtrue.s   IL_001c

    IL_0015:  ldarg.0
    IL_0016:  call       bool LibGit2Sharp.ReferenceExtensions::LooksLikeRemoteTrackingBranch(string)
    IL_001b:  ret

    IL_001c:  ldc.i4.1
    IL_001d:  ret
  } // end of method BranchCollection::LooksLikeABranchName

  .method private hidebysig static string 
          branchToCanoncialName(native int namePtr,
                                valuetype LibGit2Sharp.Core.GitBranchType branchType) cil managed
  {
    // Code size       43 (0x2b)
    .maxstack  2
    .locals init (string V_0,
             valuetype LibGit2Sharp.Core.GitBranchType V_1)
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
    IL_0006:  stloc.0
    IL_0007:  ldarg.1
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.1
    IL_000b:  sub
    IL_000c:  switch     ( 
                          IL_001b,
                          IL_0022)
    IL_0019:  br.s       IL_0029

    IL_001b:  ldloc.0
    IL_001c:  call       string LibGit2Sharp.BranchCollection::ShortToLocalName(string)
    IL_0021:  ret

    IL_0022:  ldloc.0
    IL_0023:  call       string LibGit2Sharp.BranchCollection::ShortToRemoteName(string)
    IL_0028:  ret

    IL_0029:  ldloc.0
    IL_002a:  ret
  } // end of method BranchCollection::branchToCanoncialName

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       38 (0x26)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "Count = {0}"
    IL_000a:  ldc.i4.1
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  call       int32 [System.Core]System.Linq.Enumerable::Count<class LibGit2Sharp.Branch>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0019:  box        [mscorlib]System.Int32
    IL_001e:  stelem.ref
    IL_001f:  ldloc.0
    IL_0020:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0025:  ret
  } // end of method BranchCollection::get_DebuggerDisplay

  .method private hidebysig instance class LibGit2Sharp.Branch 
          '<GetEnumerator>b__0'(string n) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::get_Item(string)
    IL_0007:  ret
  } // end of method BranchCollection::'<GetEnumerator>b__0'

  .property instance class LibGit2Sharp.Branch
          Item(string)
  {
    .get instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::get_Item(string)
  } // end of property BranchCollection::Item
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.BranchCollection::get_DebuggerDisplay()
  } // end of property BranchCollection::DebuggerDisplay
} // end of class LibGit2Sharp.BranchCollection

.class public abstract auto ansi sealed beforefieldinit LibGit2Sharp.BranchCollectionExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static class LibGit2Sharp.Branch 
          Add(class LibGit2Sharp.BranchCollection branches,
              string name,
              string committish,
              [opt] bool allowOverwrite) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [4] = bool(false)
    // Code size       45 (0x2d)
    .maxstack  4
    .locals init (class LibGit2Sharp.Commit V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "committish"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0016:  ldarg.0
    IL_0017:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchCollection::repo
    IL_001c:  ldarg.2
    IL_001d:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Repository::LookupCommit(string)
    IL_0022:  stloc.0
    IL_0023:  ldarg.0
    IL_0024:  ldarg.1
    IL_0025:  ldloc.0
    IL_0026:  ldarg.3
    IL_0027:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::Add(string,
                                                                                               class LibGit2Sharp.Commit,
                                                                                               bool)
    IL_002c:  ret
  } // end of method BranchCollectionExtensions::Add

  .method public hidebysig static void  Remove(class LibGit2Sharp.BranchCollection branches,
                                               string name,
                                               [opt] bool isRemote) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [3] = bool(false)
    // Code size       55 (0x37)
    .maxstack  3
    .locals init (string V_0,
             class LibGit2Sharp.Branch V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.2
    IL_000c:  brtrue.s   IL_0011

    IL_000e:  ldarg.1
    IL_000f:  br.s       IL_001c

    IL_0011:  call       string LibGit2Sharp.Reference::get_RemoteTrackingBranchPrefix()
    IL_0016:  ldarg.1
    IL_0017:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_001c:  stloc.0
    IL_001d:  ldarg.0
    IL_001e:  ldloc.0
    IL_001f:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::get_Item(string)
    IL_0024:  stloc.1
    IL_0025:  ldloc.1
    IL_0026:  ldnull
    IL_0027:  call       bool class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::op_Equality(class LibGit2Sharp.ReferenceWrapper`1<!0>,
                                                                                                            class LibGit2Sharp.ReferenceWrapper`1<!0>)
    IL_002c:  brfalse.s  IL_002f

    IL_002e:  ret

    IL_002f:  ldarg.0
    IL_0030:  ldloc.1
    IL_0031:  callvirt   instance void LibGit2Sharp.BranchCollection::Remove(class LibGit2Sharp.Branch)
    IL_0036:  ret
  } // end of method BranchCollectionExtensions::Remove

  .method public hidebysig static class LibGit2Sharp.Branch 
          Move(class LibGit2Sharp.BranchCollection branches,
               string currentName,
               string newName,
               [opt] bool allowOverwrite) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [4] = bool(false)
    // Code size       60 (0x3c)
    .maxstack  4
    .locals init (class LibGit2Sharp.Branch V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "currentName"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "newName"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0016:  ldarg.0
    IL_0017:  ldarg.1
    IL_0018:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::get_Item(string)
    IL_001d:  stloc.0
    IL_001e:  ldloc.0
    IL_001f:  ldnull
    IL_0020:  call       bool class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::op_Equality(class LibGit2Sharp.ReferenceWrapper`1<!0>,
                                                                                                            class LibGit2Sharp.ReferenceWrapper`1<!0>)
    IL_0025:  brfalse.s  IL_0032

    IL_0027:  ldstr      "No branch named '{0}' exists in the repository."
    IL_002c:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0031:  throw

    IL_0032:  ldarg.0
    IL_0033:  ldloc.0
    IL_0034:  ldarg.2
    IL_0035:  ldarg.3
    IL_0036:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::Move(class LibGit2Sharp.Branch,
                                                                                                string,
                                                                                                bool)
    IL_003b:  ret
  } // end of method BranchCollectionExtensions::Move

} // end of class LibGit2Sharp.BranchCollectionExtensions

.class public auto ansi beforefieldinit LibGit2Sharp.BranchTrackingDetails
       extends [mscorlib]System.Object
{
  .field private initonly class LibGit2Sharp.Repository repo
  .field private initonly class LibGit2Sharp.Branch branch
  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>>> aheadBehind
  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Commit> commonAncestor
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method BranchTrackingDetails::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.Branch branch) cil managed
  {
    // Code size       67 (0x43)
    .maxstack  4
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchTrackingDetails::repo
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  stfld      class LibGit2Sharp.Branch LibGit2Sharp.BranchTrackingDetails::branch
    IL_0014:  ldarg.0
    IL_0015:  ldarg.0
    IL_0016:  ldftn      instance class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>> LibGit2Sharp.BranchTrackingDetails::ResolveAheadBehind()
    IL_001c:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>>>::.ctor(object,
                                                                                                                                                                                                                  native int)
    IL_0021:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>>>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_0026:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>>> LibGit2Sharp.BranchTrackingDetails::aheadBehind
    IL_002b:  ldarg.0
    IL_002c:  ldarg.0
    IL_002d:  ldftn      instance class LibGit2Sharp.Commit LibGit2Sharp.BranchTrackingDetails::ResolveCommonAncestor()
    IL_0033:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.Commit>::.ctor(object,
                                                                                                          native int)
    IL_0038:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Commit>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_003d:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Commit> LibGit2Sharp.BranchTrackingDetails::commonAncestor
    IL_0042:  ret
  } // end of method BranchTrackingDetails::.ctor

  .method public hidebysig newslot specialname virtual 
          instance valuetype [mscorlib]System.Nullable`1<int32> 
          get_AheadBy() cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>>> LibGit2Sharp.BranchTrackingDetails::aheadBehind
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>>>::get_Value()
    IL_000b:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>>::get_Item1()
    IL_0010:  ret
  } // end of method BranchTrackingDetails::get_AheadBy

  .method public hidebysig newslot specialname virtual 
          instance valuetype [mscorlib]System.Nullable`1<int32> 
          get_BehindBy() cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>>> LibGit2Sharp.BranchTrackingDetails::aheadBehind
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>>>::get_Value()
    IL_000b:  callvirt   instance !1 class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>>::get_Item2()
    IL_0010:  ret
  } // end of method BranchTrackingDetails::get_BehindBy

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Commit 
          get_CommonAncestor() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Commit> LibGit2Sharp.BranchTrackingDetails::commonAncestor
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Commit>::get_Value()
    IL_000b:  ret
  } // end of method BranchTrackingDetails::get_CommonAncestor

  .method private hidebysig instance class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>> 
          ResolveAheadBehind() cil managed
  {
    // Code size       81 (0x51)
    .maxstack  4
    .locals init (valuetype [mscorlib]System.Nullable`1<int32> V_0,
             valuetype [mscorlib]System.Nullable`1<int32> V_1)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.BranchTrackingDetails::branch
    IL_0006:  callvirt   instance bool LibGit2Sharp.Branch::get_IsTracking()
    IL_000b:  brtrue.s   IL_0025

    IL_000d:  ldloca.s   V_0
    IL_000f:  initobj    valuetype [mscorlib]System.Nullable`1<int32>
    IL_0015:  ldloc.0
    IL_0016:  ldloca.s   V_1
    IL_0018:  initobj    valuetype [mscorlib]System.Nullable`1<int32>
    IL_001e:  ldloc.1
    IL_001f:  newobj     instance void class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>>::.ctor(!0,
                                                                                                                                                                                !1)
    IL_0024:  ret

    IL_0025:  ldarg.0
    IL_0026:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchTrackingDetails::repo
    IL_002b:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0030:  ldarg.0
    IL_0031:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.BranchTrackingDetails::branch
    IL_0036:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.Branch::get_TrackedBranch()
    IL_003b:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_0040:  ldarg.0
    IL_0041:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.BranchTrackingDetails::branch
    IL_0046:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_004b:  call       class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>> LibGit2Sharp.Core.Proxy::git_graph_ahead_behind(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                                                                                           class LibGit2Sharp.Commit,
                                                                                                                                                                                                           class LibGit2Sharp.Commit)
    IL_0050:  ret
  } // end of method BranchTrackingDetails::ResolveAheadBehind

  .method private hidebysig instance class LibGit2Sharp.Commit 
          ResolveCommonAncestor() cil managed
  {
    // Code size       104 (0x68)
    .maxstack  3
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.BranchTrackingDetails::branch
    IL_0006:  callvirt   instance bool LibGit2Sharp.Branch::get_IsTracking()
    IL_000b:  brtrue.s   IL_000f

    IL_000d:  ldnull
    IL_000e:  ret

    IL_000f:  ldarg.0
    IL_0010:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.BranchTrackingDetails::branch
    IL_0015:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_001a:  ldnull
    IL_001b:  call       bool LibGit2Sharp.GitObject::op_Equality(class LibGit2Sharp.GitObject,
                                                                  class LibGit2Sharp.GitObject)
    IL_0020:  brtrue.s   IL_003a

    IL_0022:  ldarg.0
    IL_0023:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.BranchTrackingDetails::branch
    IL_0028:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.Branch::get_TrackedBranch()
    IL_002d:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_0032:  ldnull
    IL_0033:  call       bool LibGit2Sharp.GitObject::op_Equality(class LibGit2Sharp.GitObject,
                                                                  class LibGit2Sharp.GitObject)
    IL_0038:  brfalse.s  IL_003c

    IL_003a:  ldnull
    IL_003b:  ret

    IL_003c:  ldarg.0
    IL_003d:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchTrackingDetails::repo
    IL_0042:  callvirt   instance class LibGit2Sharp.IQueryableCommitLog LibGit2Sharp.Repository::get_Commits()
    IL_0047:  ldarg.0
    IL_0048:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.BranchTrackingDetails::branch
    IL_004d:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_0052:  ldarg.0
    IL_0053:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.BranchTrackingDetails::branch
    IL_0058:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.Branch::get_TrackedBranch()
    IL_005d:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_0062:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.IQueryableCommitLog::FindCommonAncestor(class LibGit2Sharp.Commit,
                                                                                                                 class LibGit2Sharp.Commit)
    IL_0067:  ret
  } // end of method BranchTrackingDetails::ResolveCommonAncestor

  .property instance valuetype [mscorlib]System.Nullable`1<int32>
          AheadBy()
  {
    .get instance valuetype [mscorlib]System.Nullable`1<int32> LibGit2Sharp.BranchTrackingDetails::get_AheadBy()
  } // end of property BranchTrackingDetails::AheadBy
  .property instance valuetype [mscorlib]System.Nullable`1<int32>
          BehindBy()
  {
    .get instance valuetype [mscorlib]System.Nullable`1<int32> LibGit2Sharp.BranchTrackingDetails::get_BehindBy()
  } // end of property BranchTrackingDetails::BehindBy
  .property instance class LibGit2Sharp.Commit
          CommonAncestor()
  {
    .get instance class LibGit2Sharp.Commit LibGit2Sharp.BranchTrackingDetails::get_CommonAncestor()
  } // end of property BranchTrackingDetails::CommonAncestor
} // end of class LibGit2Sharp.BranchTrackingDetails

.class public auto ansi beforefieldinit LibGit2Sharp.BranchUpdater
       extends [mscorlib]System.Object
{
  .field private initonly class LibGit2Sharp.Repository repo
  .field private initonly class LibGit2Sharp.Branch branch
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method BranchUpdater::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.Branch branch) cil managed
  {
    // Code size       43 (0x2b)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.1
    IL_0007:  ldstr      "repo"
    IL_000c:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0011:  ldarg.2
    IL_0012:  ldstr      "branch"
    IL_0017:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_001c:  ldarg.0
    IL_001d:  ldarg.1
    IL_001e:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchUpdater::repo
    IL_0023:  ldarg.0
    IL_0024:  ldarg.2
    IL_0025:  stfld      class LibGit2Sharp.Branch LibGit2Sharp.BranchUpdater::branch
    IL_002a:  ret
  } // end of method BranchUpdater::.ctor

  .method public hidebysig newslot specialname virtual 
          instance void  set_TrackedBranch(string 'value') cil managed
  {
    // Code size       23 (0x17)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
    IL_0006:  brfalse.s  IL_000f

    IL_0008:  ldarg.0
    IL_0009:  call       instance void LibGit2Sharp.BranchUpdater::UnsetUpstream()
    IL_000e:  ret

    IL_000f:  ldarg.0
    IL_0010:  ldarg.1
    IL_0011:  call       instance void LibGit2Sharp.BranchUpdater::SetUpstream(string)
    IL_0016:  ret
  } // end of method BranchUpdater::set_TrackedBranch

  .method public hidebysig newslot specialname virtual 
          instance void  set_UpstreamBranch(string 'value') cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LibGit2Sharp.BranchUpdater::SetUpstreamBranch(string)
    IL_0007:  ret
  } // end of method BranchUpdater::set_UpstreamBranch

  .method public hidebysig newslot specialname virtual 
          instance void  set_Remote(string 'value') cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LibGit2Sharp.BranchUpdater::SetUpstreamRemote(string)
    IL_0007:  ret
  } // end of method BranchUpdater::set_Remote

  .method private hidebysig instance void 
          UnsetUpstream() cil managed
  {
    // Code size       23 (0x17)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldsfld     string [mscorlib]System.String::Empty
    IL_0006:  call       instance void LibGit2Sharp.BranchUpdater::SetUpstreamRemote(string)
    IL_000b:  ldarg.0
    IL_000c:  ldsfld     string [mscorlib]System.String::Empty
    IL_0011:  call       instance void LibGit2Sharp.BranchUpdater::SetUpstreamBranch(string)
    IL_0016:  ret
  } // end of method BranchUpdater::UnsetUpstream

  .method private hidebysig instance void 
          SetUpstream(string upstreamBranchName) cil managed
  {
    // Code size       50 (0x32)
    .maxstack  4
    .locals init (string V_0,
             string V_1)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.BranchUpdater::branch
    IL_0006:  callvirt   instance bool LibGit2Sharp.Branch::get_IsRemote()
    IL_000b:  brfalse.s  IL_0018

    IL_000d:  ldstr      "Cannot set upstream branch on a remote branch."
    IL_0012:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0017:  throw

    IL_0018:  ldarg.0
    IL_0019:  ldarg.1
    IL_001a:  ldloca.s   V_0
    IL_001c:  ldloca.s   V_1
    IL_001e:  call       instance void LibGit2Sharp.BranchUpdater::GetUpstreamInformation(string,
                                                                                          string&,
                                                                                          string&)
    IL_0023:  ldarg.0
    IL_0024:  ldloc.0
    IL_0025:  call       instance void LibGit2Sharp.BranchUpdater::SetUpstreamRemote(string)
    IL_002a:  ldarg.0
    IL_002b:  ldloc.1
    IL_002c:  call       instance void LibGit2Sharp.BranchUpdater::SetUpstreamBranch(string)
    IL_0031:  ret
  } // end of method BranchUpdater::SetUpstream

  .method private hidebysig instance void 
          SetUpstreamBranch(string mergeBranchName) cil managed
  {
    // Code size       69 (0x45)
    .maxstack  4
    .locals init (string V_0)
    IL_0000:  ldstr      "branch.{0}.merge"
    IL_0005:  ldarg.0
    IL_0006:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.BranchUpdater::branch
    IL_000b:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_Name()
    IL_0010:  call       string [mscorlib]System.String::Format(string,
                                                                object)
    IL_0015:  stloc.0
    IL_0016:  ldarg.1
    IL_0017:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
    IL_001c:  brfalse.s  IL_0031

    IL_001e:  ldarg.0
    IL_001f:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchUpdater::repo
    IL_0024:  callvirt   instance class LibGit2Sharp.Configuration LibGit2Sharp.Repository::get_Config()
    IL_0029:  ldloc.0
    IL_002a:  ldc.i4.4
    IL_002b:  callvirt   instance void LibGit2Sharp.Configuration::Unset(string,
                                                                         valuetype LibGit2Sharp.ConfigurationLevel)
    IL_0030:  ret

    IL_0031:  ldarg.0
    IL_0032:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchUpdater::repo
    IL_0037:  callvirt   instance class LibGit2Sharp.Configuration LibGit2Sharp.Repository::get_Config()
    IL_003c:  ldloc.0
    IL_003d:  ldarg.1
    IL_003e:  ldc.i4.4
    IL_003f:  callvirt   instance void LibGit2Sharp.Configuration::Set<string>(string,
                                                                               !!0,
                                                                               valuetype LibGit2Sharp.ConfigurationLevel)
    IL_0044:  ret
  } // end of method BranchUpdater::SetUpstreamBranch

  .method private hidebysig instance void 
          SetUpstreamRemote(string remoteName) cil managed
  {
    // Code size       107 (0x6b)
    .maxstack  4
    .locals init (string V_0)
    IL_0000:  ldstr      "branch.{0}.remote"
    IL_0005:  ldarg.0
    IL_0006:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.BranchUpdater::branch
    IL_000b:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_Name()
    IL_0010:  call       string [mscorlib]System.String::Format(string,
                                                                object)
    IL_0015:  stloc.0
    IL_0016:  ldarg.1
    IL_0017:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
    IL_001c:  brfalse.s  IL_0031

    IL_001e:  ldarg.0
    IL_001f:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchUpdater::repo
    IL_0024:  callvirt   instance class LibGit2Sharp.Configuration LibGit2Sharp.Repository::get_Config()
    IL_0029:  ldloc.0
    IL_002a:  ldc.i4.4
    IL_002b:  callvirt   instance void LibGit2Sharp.Configuration::Unset(string,
                                                                         valuetype LibGit2Sharp.ConfigurationLevel)
    IL_0030:  ret

    IL_0031:  ldarg.1
    IL_0032:  ldstr      "."
    IL_0037:  ldc.i4.4
    IL_0038:  callvirt   instance bool [mscorlib]System.String::Equals(string,
                                                                       valuetype [mscorlib]System.StringComparison)
    IL_003d:  brtrue.s   IL_0057

    IL_003f:  ldarg.0
    IL_0040:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchUpdater::repo
    IL_0045:  callvirt   instance class LibGit2Sharp.Network LibGit2Sharp.Repository::get_Network()
    IL_004a:  callvirt   instance class LibGit2Sharp.RemoteCollection LibGit2Sharp.Network::get_Remotes()
    IL_004f:  ldarg.1
    IL_0050:  ldc.i4.1
    IL_0051:  callvirt   instance class LibGit2Sharp.Remote LibGit2Sharp.RemoteCollection::RemoteForName(string,
                                                                                                         bool)
    IL_0056:  pop
    IL_0057:  ldarg.0
    IL_0058:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchUpdater::repo
    IL_005d:  callvirt   instance class LibGit2Sharp.Configuration LibGit2Sharp.Repository::get_Config()
    IL_0062:  ldloc.0
    IL_0063:  ldarg.1
    IL_0064:  ldc.i4.4
    IL_0065:  callvirt   instance void LibGit2Sharp.Configuration::Set<string>(string,
                                                                               !!0,
                                                                               valuetype LibGit2Sharp.ConfigurationLevel)
    IL_006a:  ret
  } // end of method BranchUpdater::SetUpstreamRemote

  .method private hidebysig instance void 
          GetUpstreamInformation(string canonicalName,
                                 [out] string& remoteName,
                                 [out] string& mergeBranchName) cil managed
  {
    // Code size       120 (0x78)
    .maxstack  5
    .locals init (class LibGit2Sharp.Remote V_0,
             object[] V_1)
    IL_0000:  ldarg.2
    IL_0001:  ldnull
    IL_0002:  stind.ref
    IL_0003:  ldarg.3
    IL_0004:  ldnull
    IL_0005:  stind.ref
    IL_0006:  ldarg.1
    IL_0007:  call       bool LibGit2Sharp.ReferenceExtensions::LooksLikeLocalBranch(string)
    IL_000c:  brfalse.s  IL_0019

    IL_000e:  ldarg.2
    IL_000f:  ldstr      "."
    IL_0014:  stind.ref
    IL_0015:  ldarg.3
    IL_0016:  ldarg.1
    IL_0017:  stind.ref
    IL_0018:  ret

    IL_0019:  ldarg.1
    IL_001a:  call       bool LibGit2Sharp.ReferenceExtensions::LooksLikeRemoteTrackingBranch(string)
    IL_001f:  brfalse.s  IL_0057

    IL_0021:  ldarg.2
    IL_0022:  ldarg.0
    IL_0023:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchUpdater::repo
    IL_0028:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_002d:  ldarg.1
    IL_002e:  call       string LibGit2Sharp.Core.Proxy::git_branch_remote_name(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                string)
    IL_0033:  stind.ref
    IL_0034:  ldarg.0
    IL_0035:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.BranchUpdater::repo
    IL_003a:  callvirt   instance class LibGit2Sharp.Network LibGit2Sharp.Repository::get_Network()
    IL_003f:  callvirt   instance class LibGit2Sharp.RemoteCollection LibGit2Sharp.Network::get_Remotes()
    IL_0044:  ldarg.2
    IL_0045:  ldind.ref
    IL_0046:  ldc.i4.1
    IL_0047:  callvirt   instance class LibGit2Sharp.Remote LibGit2Sharp.RemoteCollection::RemoteForName(string,
                                                                                                         bool)
    IL_004c:  stloc.0
    IL_004d:  ldarg.3
    IL_004e:  ldloc.0
    IL_004f:  ldarg.1
    IL_0050:  callvirt   instance string LibGit2Sharp.Remote::FetchSpecTransformToSource(string)
    IL_0055:  stind.ref
    IL_0056:  ret

    IL_0057:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_005c:  ldstr      "'{0}' does not look like a valid canonical branch "
    + "name."
    IL_0061:  ldc.i4.1
    IL_0062:  newarr     [mscorlib]System.Object
    IL_0067:  stloc.1
    IL_0068:  ldloc.1
    IL_0069:  ldc.i4.0
    IL_006a:  ldarg.1
    IL_006b:  stelem.ref
    IL_006c:  ldloc.1
    IL_006d:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0072:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0077:  throw
  } // end of method BranchUpdater::GetUpstreamInformation

  .property instance string TrackedBranch()
  {
    .set instance void LibGit2Sharp.BranchUpdater::set_TrackedBranch(string)
  } // end of property BranchUpdater::TrackedBranch
  .property instance string UpstreamBranch()
  {
    .set instance void LibGit2Sharp.BranchUpdater::set_UpstreamBranch(string)
  } // end of property BranchUpdater::UpstreamBranch
  .property instance string Remote()
  {
    .set instance void LibGit2Sharp.BranchUpdater::set_Remote(string)
  } // end of property BranchUpdater::Remote
} // end of class LibGit2Sharp.BranchUpdater

.class public abstract auto ansi beforefieldinit LibGit2Sharp.Changes
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field private initonly class [mscorlib]System.Text.StringBuilder patchBuilder
  .field private int32 '<LinesAdded>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private int32 '<LinesDeleted>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private bool '<IsBinaryComparison>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method assembly hidebysig instance void 
          AppendToPatch(string patch) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Text.StringBuilder LibGit2Sharp.Changes::patchBuilder
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_000c:  pop
    IL_000d:  ret
  } // end of method Changes::AppendToPatch

  .method public hidebysig newslot specialname virtual 
          instance int32  get_LinesAdded() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      int32 LibGit2Sharp.Changes::'<LinesAdded>k__BackingField'
    IL_0006:  ret
  } // end of method Changes::get_LinesAdded

  .method assembly hidebysig newslot specialname strict virtual 
          instance void  set_LinesAdded(int32 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      int32 LibGit2Sharp.Changes::'<LinesAdded>k__BackingField'
    IL_0007:  ret
  } // end of method Changes::set_LinesAdded

  .method public hidebysig newslot specialname virtual 
          instance int32  get_LinesDeleted() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      int32 LibGit2Sharp.Changes::'<LinesDeleted>k__BackingField'
    IL_0006:  ret
  } // end of method Changes::get_LinesDeleted

  .method assembly hidebysig newslot specialname strict virtual 
          instance void  set_LinesDeleted(int32 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      int32 LibGit2Sharp.Changes::'<LinesDeleted>k__BackingField'
    IL_0007:  ret
  } // end of method Changes::set_LinesDeleted

  .method public hidebysig newslot specialname virtual 
          instance string  get_Patch() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Text.StringBuilder LibGit2Sharp.Changes::patchBuilder
    IL_0006:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_000b:  ret
  } // end of method Changes::get_Patch

  .method public hidebysig newslot specialname virtual 
          instance bool  get_IsBinaryComparison() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      bool LibGit2Sharp.Changes::'<IsBinaryComparison>k__BackingField'
    IL_0006:  ret
  } // end of method Changes::get_IsBinaryComparison

  .method family hidebysig newslot specialname virtual 
          instance void  set_IsBinaryComparison(bool 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      bool LibGit2Sharp.Changes::'<IsBinaryComparison>k__BackingField'
    IL_0007:  ret
  } // end of method Changes::set_IsBinaryComparison

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       52 (0x34)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "{{+{0}, -{1}}}"
    IL_000a:  ldc.i4.2
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance int32 LibGit2Sharp.Changes::get_LinesAdded()
    IL_0019:  box        [mscorlib]System.Int32
    IL_001e:  stelem.ref
    IL_001f:  ldloc.0
    IL_0020:  ldc.i4.1
    IL_0021:  ldarg.0
    IL_0022:  callvirt   instance int32 LibGit2Sharp.Changes::get_LinesDeleted()
    IL_0027:  box        [mscorlib]System.Int32
    IL_002c:  stelem.ref
    IL_002d:  ldloc.0
    IL_002e:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0033:  ret
  } // end of method Changes::get_DebuggerDisplay

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_0006:  stfld      class [mscorlib]System.Text.StringBuilder LibGit2Sharp.Changes::patchBuilder
    IL_000b:  ldarg.0
    IL_000c:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0011:  ret
  } // end of method Changes::.ctor

  .property instance int32 LinesAdded()
  {
    .get instance int32 LibGit2Sharp.Changes::get_LinesAdded()
    .set instance void LibGit2Sharp.Changes::set_LinesAdded(int32)
  } // end of property Changes::LinesAdded
  .property instance int32 LinesDeleted()
  {
    .get instance int32 LibGit2Sharp.Changes::get_LinesDeleted()
    .set instance void LibGit2Sharp.Changes::set_LinesDeleted(int32)
  } // end of property Changes::LinesDeleted
  .property instance string Patch()
  {
    .get instance string LibGit2Sharp.Changes::get_Patch()
  } // end of property Changes::Patch
  .property instance bool IsBinaryComparison()
  {
    .get instance bool LibGit2Sharp.Changes::get_IsBinaryComparison()
    .set instance void LibGit2Sharp.Changes::set_IsBinaryComparison(bool)
  } // end of property Changes::IsBinaryComparison
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.Changes::get_DebuggerDisplay()
  } // end of property Changes::DebuggerDisplay
} // end of class LibGit2Sharp.Changes

.class private auto ansi beforefieldinit LibGit2Sharp.CheckoutCallbacks
       extends [mscorlib]System.Object
{
  .field private initonly class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress
  .field private initonly class LibGit2Sharp.Handlers.CheckoutNotifyHandler onCheckoutNotify
  .method private hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress,
                               class LibGit2Sharp.Handlers.CheckoutNotifyHandler onCheckoutNotify) cil managed
  {
    // Code size       21 (0x15)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Handlers.CheckoutProgressHandler LibGit2Sharp.CheckoutCallbacks::onCheckoutProgress
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  stfld      class LibGit2Sharp.Handlers.CheckoutNotifyHandler LibGit2Sharp.CheckoutCallbacks::onCheckoutNotify
    IL_0014:  ret
  } // end of method CheckoutCallbacks::.ctor

  .method public hidebysig specialname instance class LibGit2Sharp.Core.progress_cb 
          get_CheckoutProgressCallback() cil managed
  {
    // Code size       23 (0x17)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Handlers.CheckoutProgressHandler LibGit2Sharp.CheckoutCallbacks::onCheckoutProgress
    IL_0006:  brfalse.s  IL_0015

    IL_0008:  ldarg.0
    IL_0009:  ldftn      instance void LibGit2Sharp.CheckoutCallbacks::OnGitCheckoutProgress(native int,
                                                                                             native uint,
                                                                                             native uint,
                                                                                             native int)
    IL_000f:  newobj     instance void LibGit2Sharp.Core.progress_cb::.ctor(object,
                                                                            native int)
    IL_0014:  ret

    IL_0015:  ldnull
    IL_0016:  ret
  } // end of method CheckoutCallbacks::get_CheckoutProgressCallback

  .method public hidebysig specialname instance class LibGit2Sharp.Core.checkout_notify_cb 
          get_CheckoutNotifyCallback() cil managed
  {
    // Code size       23 (0x17)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Handlers.CheckoutNotifyHandler LibGit2Sharp.CheckoutCallbacks::onCheckoutNotify
    IL_0006:  brfalse.s  IL_0015

    IL_0008:  ldarg.0
    IL_0009:  ldftn      instance int32 LibGit2Sharp.CheckoutCallbacks::OnGitCheckoutNotify(valuetype LibGit2Sharp.CheckoutNotifyFlags,
                                                                                            native int,
                                                                                            native int,
                                                                                            native int,
                                                                                            native int,
                                                                                            native int)
    IL_000f:  newobj     instance void LibGit2Sharp.Core.checkout_notify_cb::.ctor(object,
                                                                                   native int)
    IL_0014:  ret

    IL_0015:  ldnull
    IL_0016:  ret
  } // end of method CheckoutCallbacks::get_CheckoutNotifyCallback

  .method assembly hidebysig static class LibGit2Sharp.CheckoutCallbacks 
          GenerateCheckoutCallbacks(class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress,
                                    class LibGit2Sharp.Handlers.CheckoutNotifyHandler onCheckoutNotify) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  newobj     instance void LibGit2Sharp.CheckoutCallbacks::.ctor(class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                             class LibGit2Sharp.Handlers.CheckoutNotifyHandler)
    IL_0007:  ret
  } // end of method CheckoutCallbacks::GenerateCheckoutCallbacks

  .method private hidebysig instance void 
          OnGitCheckoutProgress(native int str,
                                native uint completedSteps,
                                native uint totalSteps,
                                native int payload) cil managed
  {
    // Code size       60 (0x3c)
    .maxstack  4
    .locals init (string V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Handlers.CheckoutProgressHandler LibGit2Sharp.CheckoutCallbacks::onCheckoutProgress
    IL_0006:  brfalse.s  IL_003b

    IL_0008:  ldarg.1
    IL_0009:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_000e:  call       bool [mscorlib]System.IntPtr::op_Inequality(native int,
                                                                     native int)
    IL_0013:  brtrue.s   IL_001c

    IL_0015:  ldsfld     string [mscorlib]System.String::Empty
    IL_001a:  br.s       IL_0022

    IL_001c:  ldarg.1
    IL_001d:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
    IL_0022:  stloc.0
    IL_0023:  ldarg.0
    IL_0024:  ldfld      class LibGit2Sharp.Handlers.CheckoutProgressHandler LibGit2Sharp.CheckoutCallbacks::onCheckoutProgress
    IL_0029:  ldloc.0
    IL_002a:  ldarg.2
    IL_002b:  call       uint32 [mscorlib]System.UIntPtr::op_Explicit(native uint)
    IL_0030:  ldarg.3
    IL_0031:  call       uint32 [mscorlib]System.UIntPtr::op_Explicit(native uint)
    IL_0036:  callvirt   instance void LibGit2Sharp.Handlers.CheckoutProgressHandler::Invoke(string,
                                                                                             int32,
                                                                                             int32)
    IL_003b:  ret
  } // end of method CheckoutCallbacks::OnGitCheckoutProgress

  .method private hidebysig instance int32 
          OnGitCheckoutNotify(valuetype LibGit2Sharp.CheckoutNotifyFlags why,
                              native int pathPtr,
                              native int baselinePtr,
                              native int targetPtr,
                              native int workdirPtr,
                              native int payloadPtr) cil managed
  {
    // Code size       64 (0x40)
    .maxstack  3
    .locals init (int32 V_0,
             string V_1)
    IL_0000:  ldc.i4.0
    IL_0001:  stloc.0
    IL_0002:  ldarg.0
    IL_0003:  ldfld      class LibGit2Sharp.Handlers.CheckoutNotifyHandler LibGit2Sharp.CheckoutCallbacks::onCheckoutNotify
    IL_0008:  brfalse.s  IL_003e

    IL_000a:  ldarg.2
    IL_000b:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0010:  call       bool [mscorlib]System.IntPtr::op_Inequality(native int,
                                                                     native int)
    IL_0015:  brtrue.s   IL_001e

    IL_0017:  ldsfld     string [mscorlib]System.String::Empty
    IL_001c:  br.s       IL_0029

    IL_001e:  ldarg.2
    IL_001f:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePathMarshaler::FromNative(native int)
    IL_0024:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
    IL_0029:  stloc.1
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class LibGit2Sharp.Handlers.CheckoutNotifyHandler LibGit2Sharp.CheckoutCallbacks::onCheckoutNotify
    IL_0030:  ldloc.1
    IL_0031:  ldarg.1
    IL_0032:  callvirt   instance bool LibGit2Sharp.Handlers.CheckoutNotifyHandler::Invoke(string,
                                                                                           valuetype LibGit2Sharp.CheckoutNotifyFlags)
    IL_0037:  brtrue.s   IL_003c

    IL_0039:  ldc.i4.1
    IL_003a:  br.s       IL_003d

    IL_003c:  ldc.i4.0
    IL_003d:  stloc.0
    IL_003e:  ldloc.0
    IL_003f:  ret
  } // end of method CheckoutCallbacks::OnGitCheckoutNotify

  .property instance class LibGit2Sharp.Core.progress_cb
          CheckoutProgressCallback()
  {
    .get instance class LibGit2Sharp.Core.progress_cb LibGit2Sharp.CheckoutCallbacks::get_CheckoutProgressCallback()
  } // end of property CheckoutCallbacks::CheckoutProgressCallback
  .property instance class LibGit2Sharp.Core.checkout_notify_cb
          CheckoutNotifyCallback()
  {
    .get instance class LibGit2Sharp.Core.checkout_notify_cb LibGit2Sharp.CheckoutCallbacks::get_CheckoutNotifyCallback()
  } // end of property CheckoutCallbacks::CheckoutNotifyCallback
} // end of class LibGit2Sharp.CheckoutCallbacks

.class public auto ansi sealed LibGit2Sharp.CheckoutModifiers
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.CheckoutModifiers None = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.CheckoutModifiers Force = int32(0x00000001)
} // end of class LibGit2Sharp.CheckoutModifiers

.class public auto ansi sealed LibGit2Sharp.CheckoutNotifyFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.CheckoutNotifyFlags None = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.CheckoutNotifyFlags Conflict = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.CheckoutNotifyFlags Dirty = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.CheckoutNotifyFlags Updated = int32(0x00000004)
  .field public static literal valuetype LibGit2Sharp.CheckoutNotifyFlags Untracked = int32(0x00000008)
  .field public static literal valuetype LibGit2Sharp.CheckoutNotifyFlags Ignored = int32(0x00000010)
} // end of class LibGit2Sharp.CheckoutNotifyFlags

.class public auto ansi beforefieldinit LibGit2Sharp.CheckoutNotificationOptions
       extends [mscorlib]System.Object
{
  .field private class LibGit2Sharp.Handlers.CheckoutNotifyHandler '<CheckoutNotifyHandler>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private valuetype LibGit2Sharp.CheckoutNotifyFlags '<NotifyFlags>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method CheckoutNotificationOptions::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Handlers.CheckoutNotifyHandler 
          get_CheckoutNotifyHandler() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Handlers.CheckoutNotifyHandler LibGit2Sharp.CheckoutNotificationOptions::'<CheckoutNotifyHandler>k__BackingField'
    IL_0006:  ret
  } // end of method CheckoutNotificationOptions::get_CheckoutNotifyHandler

  .method private hidebysig specialname instance void 
          set_CheckoutNotifyHandler(class LibGit2Sharp.Handlers.CheckoutNotifyHandler 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      class LibGit2Sharp.Handlers.CheckoutNotifyHandler LibGit2Sharp.CheckoutNotificationOptions::'<CheckoutNotifyHandler>k__BackingField'
    IL_0007:  ret
  } // end of method CheckoutNotificationOptions::set_CheckoutNotifyHandler

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.CheckoutNotifyFlags 
          get_NotifyFlags() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.CheckoutNotifyFlags LibGit2Sharp.CheckoutNotificationOptions::'<NotifyFlags>k__BackingField'
    IL_0006:  ret
  } // end of method CheckoutNotificationOptions::get_NotifyFlags

  .method private hidebysig specialname instance void 
          set_NotifyFlags(valuetype LibGit2Sharp.CheckoutNotifyFlags 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      valuetype LibGit2Sharp.CheckoutNotifyFlags LibGit2Sharp.CheckoutNotificationOptions::'<NotifyFlags>k__BackingField'
    IL_0007:  ret
  } // end of method CheckoutNotificationOptions::set_NotifyFlags

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Handlers.CheckoutNotifyHandler checkoutNotifyHandler,
                               valuetype LibGit2Sharp.CheckoutNotifyFlags notifyFlags) cil managed
  {
    // Code size       21 (0x15)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void LibGit2Sharp.CheckoutNotificationOptions::set_CheckoutNotifyHandler(class LibGit2Sharp.Handlers.CheckoutNotifyHandler)
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  call       instance void LibGit2Sharp.CheckoutNotificationOptions::set_NotifyFlags(valuetype LibGit2Sharp.CheckoutNotifyFlags)
    IL_0014:  ret
  } // end of method CheckoutNotificationOptions::.ctor

  .property instance class LibGit2Sharp.Handlers.CheckoutNotifyHandler
          CheckoutNotifyHandler()
  {
    .set instance void LibGit2Sharp.CheckoutNotificationOptions::set_CheckoutNotifyHandler(class LibGit2Sharp.Handlers.CheckoutNotifyHandler)
    .get instance class LibGit2Sharp.Handlers.CheckoutNotifyHandler LibGit2Sharp.CheckoutNotificationOptions::get_CheckoutNotifyHandler()
  } // end of property CheckoutNotificationOptions::CheckoutNotifyHandler
  .property instance valuetype LibGit2Sharp.CheckoutNotifyFlags
          NotifyFlags()
  {
    .get instance valuetype LibGit2Sharp.CheckoutNotifyFlags LibGit2Sharp.CheckoutNotificationOptions::get_NotifyFlags()
    .set instance void LibGit2Sharp.CheckoutNotificationOptions::set_NotifyFlags(valuetype LibGit2Sharp.CheckoutNotifyFlags)
  } // end of property CheckoutNotificationOptions::NotifyFlags
} // end of class LibGit2Sharp.CheckoutNotificationOptions

.class public auto ansi sealed LibGit2Sharp.CheckoutOptions
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 2E 54 68 69 73 20 74 79 70 65 20 77 69 6C   // ...This type wil
                                                                              6C 20 62 65 20 72 65 6D 6F 76 65 64 20 69 6E 20   // l be removed in 
                                                                              74 68 65 20 6E 65 78 74 20 72 65 6C 65 61 73 65   // the next release
                                                                              2E 00 00 )                                        // ...
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.CheckoutOptions None = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.CheckoutOptions Force = int32(0x00000001)
} // end of class LibGit2Sharp.CheckoutOptions

.class public auto ansi beforefieldinit LibGit2Sharp.CommitFilter
       extends [mscorlib]System.Object
{
  .field private valuetype LibGit2Sharp.CommitSortStrategies '<SortBy>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private object '<Since>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private object '<Until>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       25 (0x19)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldc.i4.2
    IL_0008:  call       instance void LibGit2Sharp.CommitFilter::set_SortBy(valuetype LibGit2Sharp.CommitSortStrategies)
    IL_000d:  ldarg.0
    IL_000e:  ldstr      "HEAD"
    IL_0013:  call       instance void LibGit2Sharp.CommitFilter::set_Since(object)
    IL_0018:  ret
  } // end of method CommitFilter::.ctor

  .method public hidebysig specialname instance valuetype LibGit2Sharp.CommitSortStrategies 
          get_SortBy() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.CommitSortStrategies LibGit2Sharp.CommitFilter::'<SortBy>k__BackingField'
    IL_0006:  ret
  } // end of method CommitFilter::get_SortBy

  .method public hidebysig specialname instance void 
          set_SortBy(valuetype LibGit2Sharp.CommitSortStrategies 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      valuetype LibGit2Sharp.CommitSortStrategies LibGit2Sharp.CommitFilter::'<SortBy>k__BackingField'
    IL_0007:  ret
  } // end of method CommitFilter::set_SortBy

  .method public hidebysig specialname instance object 
          get_Since() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      object LibGit2Sharp.CommitFilter::'<Since>k__BackingField'
    IL_0006:  ret
  } // end of method CommitFilter::get_Since

  .method public hidebysig specialname instance void 
          set_Since(object 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      object LibGit2Sharp.CommitFilter::'<Since>k__BackingField'
    IL_0007:  ret
  } // end of method CommitFilter::set_Since

  .method assembly hidebysig specialname 
          instance class [mscorlib]System.Collections.Generic.IList`1<object> 
          get_SinceList() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance object LibGit2Sharp.CommitFilter::get_Since()
    IL_0006:  call       class [mscorlib]System.Collections.Generic.IList`1<object> LibGit2Sharp.CommitFilter::ToList(object)
    IL_000b:  ret
  } // end of method CommitFilter::get_SinceList

  .method public hidebysig specialname instance object 
          get_Until() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      object LibGit2Sharp.CommitFilter::'<Until>k__BackingField'
    IL_0006:  ret
  } // end of method CommitFilter::get_Until

  .method public hidebysig specialname instance void 
          set_Until(object 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      object LibGit2Sharp.CommitFilter::'<Until>k__BackingField'
    IL_0007:  ret
  } // end of method CommitFilter::set_Until

  .method assembly hidebysig specialname 
          instance class [mscorlib]System.Collections.Generic.IList`1<object> 
          get_UntilList() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance object LibGit2Sharp.CommitFilter::get_Until()
    IL_0006:  call       class [mscorlib]System.Collections.Generic.IList`1<object> LibGit2Sharp.CommitFilter::ToList(object)
    IL_000b:  ret
  } // end of method CommitFilter::get_UntilList

  .method private hidebysig static class [mscorlib]System.Collections.Generic.IList`1<object> 
          ToList(object obj) cil managed
  {
    // Code size       194 (0xc2)
    .maxstack  3
    .locals init (class [mscorlib]System.Collections.Generic.List`1<object> V_0,
             class [mscorlib]System.Type[] V_1,
             class [mscorlib]System.Type[] V_2)
    IL_0000:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<object>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldarg.0
    IL_0007:  brtrue.s   IL_000b

    IL_0009:  ldloc.0
    IL_000a:  ret

    IL_000b:  ldc.i4.s   10
    IL_000d:  newarr     [mscorlib]System.Type
    IL_0012:  stloc.2
    IL_0013:  ldloc.2
    IL_0014:  ldc.i4.0
    IL_0015:  ldtoken    [mscorlib]System.String
    IL_001a:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_001f:  stelem.ref
    IL_0020:  ldloc.2
    IL_0021:  ldc.i4.1
    IL_0022:  ldtoken    LibGit2Sharp.ObjectId
    IL_0027:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_002c:  stelem.ref
    IL_002d:  ldloc.2
    IL_002e:  ldc.i4.2
    IL_002f:  ldtoken    LibGit2Sharp.Commit
    IL_0034:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0039:  stelem.ref
    IL_003a:  ldloc.2
    IL_003b:  ldc.i4.3
    IL_003c:  ldtoken    LibGit2Sharp.TagAnnotation
    IL_0041:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0046:  stelem.ref
    IL_0047:  ldloc.2
    IL_0048:  ldc.i4.4
    IL_0049:  ldtoken    LibGit2Sharp.Tag
    IL_004e:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0053:  stelem.ref
    IL_0054:  ldloc.2
    IL_0055:  ldc.i4.5
    IL_0056:  ldtoken    LibGit2Sharp.Branch
    IL_005b:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0060:  stelem.ref
    IL_0061:  ldloc.2
    IL_0062:  ldc.i4.6
    IL_0063:  ldtoken    LibGit2Sharp.DetachedHead
    IL_0068:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_006d:  stelem.ref
    IL_006e:  ldloc.2
    IL_006f:  ldc.i4.7
    IL_0070:  ldtoken    LibGit2Sharp.Reference
    IL_0075:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_007a:  stelem.ref
    IL_007b:  ldloc.2
    IL_007c:  ldc.i4.8
    IL_007d:  ldtoken    LibGit2Sharp.DirectReference
    IL_0082:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0087:  stelem.ref
    IL_0088:  ldloc.2
    IL_0089:  ldc.i4.s   9
    IL_008b:  ldtoken    LibGit2Sharp.SymbolicReference
    IL_0090:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0095:  stelem.ref
    IL_0096:  ldloc.2
    IL_0097:  stloc.1
    IL_0098:  ldloc.1
    IL_0099:  ldarg.0
    IL_009a:  callvirt   instance class [mscorlib]System.Type [mscorlib]System.Object::GetType()
    IL_009f:  call       bool [System.Core]System.Linq.Enumerable::Contains<class [mscorlib]System.Type>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                         !!0)
    IL_00a4:  brfalse.s  IL_00af

    IL_00a6:  ldloc.0
    IL_00a7:  ldarg.0
    IL_00a8:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<object>::Add(!0)
    IL_00ad:  ldloc.0
    IL_00ae:  ret

    IL_00af:  ldloc.0
    IL_00b0:  ldarg.0
    IL_00b1:  castclass  [mscorlib]System.Collections.IEnumerable
    IL_00b6:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> [System.Core]System.Linq.Enumerable::Cast<object>(class [mscorlib]System.Collections.IEnumerable)
    IL_00bb:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<object>::AddRange(class [mscorlib]System.Collections.Generic.IEnumerable`1<!0>)
    IL_00c0:  ldloc.0
    IL_00c1:  ret
  } // end of method CommitFilter::ToList

  .property instance valuetype LibGit2Sharp.CommitSortStrategies
          SortBy()
  {
    .get instance valuetype LibGit2Sharp.CommitSortStrategies LibGit2Sharp.CommitFilter::get_SortBy()
    .set instance void LibGit2Sharp.CommitFilter::set_SortBy(valuetype LibGit2Sharp.CommitSortStrategies)
  } // end of property CommitFilter::SortBy
  .property instance object Since()
  {
    .get instance object LibGit2Sharp.CommitFilter::get_Since()
    .set instance void LibGit2Sharp.CommitFilter::set_Since(object)
  } // end of property CommitFilter::Since
  .property instance class [mscorlib]System.Collections.Generic.IList`1<object>
          SinceList()
  {
    .get instance class [mscorlib]System.Collections.Generic.IList`1<object> LibGit2Sharp.CommitFilter::get_SinceList()
  } // end of property CommitFilter::SinceList
  .property instance object Until()
  {
    .get instance object LibGit2Sharp.CommitFilter::get_Until()
    .set instance void LibGit2Sharp.CommitFilter::set_Until(object)
  } // end of property CommitFilter::Until
  .property instance class [mscorlib]System.Collections.Generic.IList`1<object>
          UntilList()
  {
    .get instance class [mscorlib]System.Collections.Generic.IList`1<object> LibGit2Sharp.CommitFilter::get_UntilList()
  } // end of property CommitFilter::UntilList
} // end of class LibGit2Sharp.CommitFilter

.class public auto ansi sealed LibGit2Sharp.CommitSortStrategies
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.CommitSortStrategies None = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.CommitSortStrategies Topological = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.CommitSortStrategies Time = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.CommitSortStrategies Reverse = int32(0x00000004)
} // end of class LibGit2Sharp.CommitSortStrategies

.class public auto ansi beforefieldinit LibGit2Sharp.CompareOptions
       extends [mscorlib]System.Object
{
  .field private int32 '<ContextLines>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private int32 '<InterhunkLines>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       21 (0x15)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldc.i4.3
    IL_0008:  call       instance void LibGit2Sharp.CompareOptions::set_ContextLines(int32)
    IL_000d:  ldarg.0
    IL_000e:  ldc.i4.0
    IL_000f:  call       instance void LibGit2Sharp.CompareOptions::set_InterhunkLines(int32)
    IL_0014:  ret
  } // end of method CompareOptions::.ctor

  .method public hidebysig specialname instance int32 
          get_ContextLines() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      int32 LibGit2Sharp.CompareOptions::'<ContextLines>k__BackingField'
    IL_0006:  ret
  } // end of method CompareOptions::get_ContextLines

  .method public hidebysig specialname instance void 
          set_ContextLines(int32 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      int32 LibGit2Sharp.CompareOptions::'<ContextLines>k__BackingField'
    IL_0007:  ret
  } // end of method CompareOptions::set_ContextLines

  .method public hidebysig specialname instance int32 
          get_InterhunkLines() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      int32 LibGit2Sharp.CompareOptions::'<InterhunkLines>k__BackingField'
    IL_0006:  ret
  } // end of method CompareOptions::get_InterhunkLines

  .method public hidebysig specialname instance void 
          set_InterhunkLines(int32 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      int32 LibGit2Sharp.CompareOptions::'<InterhunkLines>k__BackingField'
    IL_0007:  ret
  } // end of method CompareOptions::set_InterhunkLines

  .property instance int32 ContextLines()
  {
    .get instance int32 LibGit2Sharp.CompareOptions::get_ContextLines()
    .set instance void LibGit2Sharp.CompareOptions::set_ContextLines(int32)
  } // end of property CompareOptions::ContextLines
  .property instance int32 InterhunkLines()
  {
    .set instance void LibGit2Sharp.CompareOptions::set_InterhunkLines(int32)
    .get instance int32 LibGit2Sharp.CompareOptions::get_InterhunkLines()
  } // end of property CompareOptions::InterhunkLines
} // end of class LibGit2Sharp.CompareOptions

.class private sequential ansi beforefieldinit LibGit2Sharp.Core.GitRepositoryInitOptions
       extends [mscorlib]System.Object
       implements [mscorlib]System.IDisposable
{
  .field public uint32 Version
  .field public valuetype LibGit2Sharp.Core.GitRepositoryInitFlags Flags
  .field public int32 Mode
  .field public native int WorkDirPath
  .field public native int Description
  .field public native int TemplatePath
  .field public native int InitialHead
  .field public native int OriginUrl
  .method public hidebysig static class LibGit2Sharp.Core.GitRepositoryInitOptions 
          BuildFrom(class LibGit2Sharp.Core.FilePath workdirPath,
                    bool isBare) cil managed
  {
    // Code size       57 (0x39)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.GitRepositoryInitOptions V_0,
             class LibGit2Sharp.Core.GitRepositoryInitOptions V_1)
    IL_0000:  newobj     instance void LibGit2Sharp.Core.GitRepositoryInitOptions::.ctor()
    IL_0005:  stloc.1
    IL_0006:  ldloc.1
    IL_0007:  ldc.i4.s   16
    IL_0009:  stfld      valuetype LibGit2Sharp.Core.GitRepositoryInitFlags LibGit2Sharp.Core.GitRepositoryInitOptions::Flags
    IL_000e:  ldloc.1
    IL_000f:  ldc.i4.0
    IL_0010:  stfld      int32 LibGit2Sharp.Core.GitRepositoryInitOptions::Mode
    IL_0015:  ldloc.1
    IL_0016:  stloc.0
    IL_0017:  ldarg.0
    IL_0018:  brfalse.s  IL_0026

    IL_001a:  ldloc.0
    IL_001b:  ldarg.0
    IL_001c:  call       native int LibGit2Sharp.Core.FilePathMarshaler::FromManaged(class LibGit2Sharp.Core.FilePath)
    IL_0021:  stfld      native int LibGit2Sharp.Core.GitRepositoryInitOptions::WorkDirPath
    IL_0026:  ldarg.1
    IL_0027:  brfalse.s  IL_0037

    IL_0029:  ldloc.0
    IL_002a:  dup
    IL_002b:  ldfld      valuetype LibGit2Sharp.Core.GitRepositoryInitFlags LibGit2Sharp.Core.GitRepositoryInitOptions::Flags
    IL_0030:  ldc.i4.1
    IL_0031:  or
    IL_0032:  stfld      valuetype LibGit2Sharp.Core.GitRepositoryInitFlags LibGit2Sharp.Core.GitRepositoryInitOptions::Flags
    IL_0037:  ldloc.0
    IL_0038:  ret
  } // end of method GitRepositoryInitOptions::BuildFrom

  .method public hidebysig newslot virtual final 
          instance void  Dispose() cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int LibGit2Sharp.Core.GitRepositoryInitOptions::WorkDirPath
    IL_0006:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_000b:  call       bool [mscorlib]System.IntPtr::op_Equality(native int,
                                                                   native int)
    IL_0010:  brfalse.s  IL_0013

    IL_0012:  ret

    IL_0013:  ldarg.0
    IL_0014:  ldfld      native int LibGit2Sharp.Core.GitRepositoryInitOptions::WorkDirPath
    IL_0019:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::FreeHGlobal(native int)
    IL_001e:  ldarg.0
    IL_001f:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0024:  stfld      native int LibGit2Sharp.Core.GitRepositoryInitOptions::WorkDirPath
    IL_0029:  ret
  } // end of method GitRepositoryInitOptions::Dispose

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.1
    IL_0002:  stfld      uint32 LibGit2Sharp.Core.GitRepositoryInitOptions::Version
    IL_0007:  ldarg.0
    IL_0008:  call       instance void [mscorlib]System.Object::.ctor()
    IL_000d:  ret
  } // end of method GitRepositoryInitOptions::.ctor

} // end of class LibGit2Sharp.Core.GitRepositoryInitOptions

.class private auto ansi sealed LibGit2Sharp.Core.GitRepositoryInitFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.Core.GitRepositoryInitFlags GIT_REPOSITORY_INIT_BARE = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.Core.GitRepositoryInitFlags GIT_REPOSITORY_INIT_NO_REINIT = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.Core.GitRepositoryInitFlags GIT_REPOSITORY_INIT_NO_DOTGIT_DIR = int32(0x00000004)
  .field public static literal valuetype LibGit2Sharp.Core.GitRepositoryInitFlags GIT_REPOSITORY_INIT_MKDIR = int32(0x00000008)
  .field public static literal valuetype LibGit2Sharp.Core.GitRepositoryInitFlags GIT_REPOSITORY_INIT_MKPATH = int32(0x00000010)
  .field public static literal valuetype LibGit2Sharp.Core.GitRepositoryInitFlags GIT_REPOSITORY_INIT_EXTERNAL_TEMPLATE = int32(0x00000020)
} // end of class LibGit2Sharp.Core.GitRepositoryInitFlags

.class private auto ansi beforefieldinit LibGit2Sharp.Core.HistoryRewriter
       extends [mscorlib]System.Object
{
  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass6'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public string backupName
    .field public class LibGit2Sharp.Reference newRef
    .field public class LibGit2Sharp.Core.HistoryRewriter '<>4__this'
    .field public class LibGit2Sharp.DirectReference oldRef
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass6'::.ctor

    .method public hidebysig instance void 
            '<RewriteReference>b__3'() cil managed
    {
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Core.HistoryRewriter LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::'<>4__this'
      IL_0006:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Core.HistoryRewriter::repo
      IL_000b:  callvirt   instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
      IL_0010:  ldarg.0
      IL_0011:  ldfld      string LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::backupName
      IL_0016:  call       void LibGit2Sharp.ReferenceCollectionExtensions::Remove(class LibGit2Sharp.ReferenceCollection,
                                                                                   string)
      IL_001b:  ret
    } // end of method '<>c__DisplayClass6'::'<RewriteReference>b__3'

    .method public hidebysig instance void 
            '<RewriteReference>b__4'() cil managed
    {
      // Code size       50 (0x32)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Core.HistoryRewriter LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::'<>4__this'
      IL_0006:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Core.HistoryRewriter::repo
      IL_000b:  callvirt   instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
      IL_0010:  ldarg.0
      IL_0011:  ldfld      class LibGit2Sharp.DirectReference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::oldRef
      IL_0016:  ldarg.0
      IL_0017:  ldfld      class LibGit2Sharp.DirectReference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::oldRef
      IL_001c:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.DirectReference::get_Target()
      IL_0021:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
      IL_0026:  ldstr      "filter-branch: abort"
      IL_002b:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::UpdateTarget(class LibGit2Sharp.Reference,
                                                                                                                class LibGit2Sharp.ObjectId,
                                                                                                                string)
      IL_0030:  pop
      IL_0031:  ret
    } // end of method '<>c__DisplayClass6'::'<RewriteReference>b__4'

    .method public hidebysig instance void 
            '<RewriteReference>b__5'() cil managed
    {
      // Code size       41 (0x29)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Core.HistoryRewriter LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::'<>4__this'
      IL_0006:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Core.HistoryRewriter::repo
      IL_000b:  callvirt   instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
      IL_0010:  ldarg.0
      IL_0011:  ldfld      class LibGit2Sharp.Reference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::newRef
      IL_0016:  ldarg.0
      IL_0017:  ldfld      class LibGit2Sharp.DirectReference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::oldRef
      IL_001c:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
      IL_0021:  ldc.i4.0
      IL_0022:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::Move(class LibGit2Sharp.Reference,
                                                                                                        string,
                                                                                                        bool)
      IL_0027:  pop
      IL_0028:  ret
    } // end of method '<>c__DisplayClass6'::'<RewriteReference>b__5'

  } // end of class '<>c__DisplayClass6'

  .field private initonly class LibGit2Sharp.Repository repo
  .field private initonly class [System.Core]System.Collections.Generic.HashSet`1<class LibGit2Sharp.Commit> targetedCommits
  .field private initonly class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.ObjectId> shaMap
  .field private initonly class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.CommitRewriteInfo> headerRewriter
  .field private initonly class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.TreeDefinition> treeRewriter
  .field private initonly string backupRefsNamespace
  .field private initonly class [System.Core]System.Func`2<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>> parentsRewriter
  .field private initonly class [System.Core]System.Func`4<string,bool,class LibGit2Sharp.GitObject,string> tagNameRewriter
  .field private static class [System.Core]System.Func`2<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>> 'CS$<>9__CachedAnonymousMethodDelegate1'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> commitsToRewrite,
                               class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.CommitRewriteInfo> headerRewriter,
                               class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.TreeDefinition> treeRewriter,
                               class [System.Core]System.Func`2<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>> parentsRewriter,
                               class [System.Core]System.Func`4<string,bool,class LibGit2Sharp.GitObject,string> tagNameRewriter,
                               string backupRefsNamespace) cil managed
  {
    // Code size       125 (0x7d)
    .maxstack  4
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.ObjectId>::.ctor()
    IL_0006:  stfld      class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.ObjectId> LibGit2Sharp.Core.HistoryRewriter::shaMap
    IL_000b:  ldarg.0
    IL_000c:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0011:  ldarg.0
    IL_0012:  ldarg.1
    IL_0013:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Core.HistoryRewriter::repo
    IL_0018:  ldarg.0
    IL_0019:  ldarg.2
    IL_001a:  newobj     instance void class [System.Core]System.Collections.Generic.HashSet`1<class LibGit2Sharp.Commit>::.ctor(class [mscorlib]System.Collections.Generic.IEnumerable`1<!0>)
    IL_001f:  stfld      class [System.Core]System.Collections.Generic.HashSet`1<class LibGit2Sharp.Commit> LibGit2Sharp.Core.HistoryRewriter::targetedCommits
    IL_0024:  ldarg.0
    IL_0025:  ldarg.3
    IL_0026:  dup
    IL_0027:  brtrue.s   IL_0036

    IL_0029:  pop
    IL_002a:  ldnull
    IL_002b:  ldftn      class LibGit2Sharp.CommitRewriteInfo LibGit2Sharp.CommitRewriteInfo::From(class LibGit2Sharp.Commit)
    IL_0031:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.CommitRewriteInfo>::.ctor(object,
                                                                                                                                               native int)
    IL_0036:  stfld      class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.CommitRewriteInfo> LibGit2Sharp.Core.HistoryRewriter::headerRewriter
    IL_003b:  ldarg.0
    IL_003c:  ldarg.s    treeRewriter
    IL_003e:  stfld      class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.TreeDefinition> LibGit2Sharp.Core.HistoryRewriter::treeRewriter
    IL_0043:  ldarg.0
    IL_0044:  ldarg.s    tagNameRewriter
    IL_0046:  stfld      class [System.Core]System.Func`4<string,bool,class LibGit2Sharp.GitObject,string> LibGit2Sharp.Core.HistoryRewriter::tagNameRewriter
    IL_004b:  ldarg.0
    IL_004c:  ldarg.s    parentsRewriter
    IL_004e:  dup
    IL_004f:  brtrue.s   IL_006f

    IL_0051:  pop
    IL_0052:  ldsfld     class [System.Core]System.Func`2<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>> LibGit2Sharp.Core.HistoryRewriter::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0057:  brtrue.s   IL_006a

    IL_0059:  ldnull
    IL_005a:  ldftn      class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> LibGit2Sharp.Core.HistoryRewriter::'<.ctor>b__0'(class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>)
    IL_0060:  newobj     instance void class [System.Core]System.Func`2<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>>::.ctor(object,
                                                                                                                                                                                                                                                        native int)
    IL_0065:  stsfld     class [System.Core]System.Func`2<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>> LibGit2Sharp.Core.HistoryRewriter::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_006a:  ldsfld     class [System.Core]System.Func`2<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>> LibGit2Sharp.Core.HistoryRewriter::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_006f:  stfld      class [System.Core]System.Func`2<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>> LibGit2Sharp.Core.HistoryRewriter::parentsRewriter
    IL_0074:  ldarg.0
    IL_0075:  ldarg.s    backupRefsNamespace
    IL_0077:  stfld      string LibGit2Sharp.Core.HistoryRewriter::backupRefsNamespace
    IL_007c:  ret
  } // end of method HistoryRewriter::.ctor

  .method public hidebysig instance void 
          Execute() cil managed
  {
    // Code size       296 (0x128)
    .maxstack  5
    .locals init (class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Reference> V_0,
             class LibGit2Sharp.CommitFilter V_1,
             class LibGit2Sharp.ICommitLog V_2,
             class LibGit2Sharp.Commit V_3,
             class [System]System.Collections.Generic.Queue`1<class [System.Core]System.Action> V_4,
             class LibGit2Sharp.Reference V_5,
             class LibGit2Sharp.DirectReference V_6,
             class LibGit2Sharp.ObjectId V_7,
             class [System.Core]System.Action V_8,
             class LibGit2Sharp.CommitFilter V_9,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Commit> V_10,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Reference> V_11,
             valuetype [System]System.Collections.Generic.Queue`1/Enumerator<class [System.Core]System.Action> V_12)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Core.HistoryRewriter::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class [System.Core]System.Collections.Generic.HashSet`1<class LibGit2Sharp.Commit> LibGit2Sharp.Core.HistoryRewriter::targetedCommits
    IL_0011:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Reference> LibGit2Sharp.ReferenceCollectionExtensions::ReachableFrom(class LibGit2Sharp.ReferenceCollection,
                                                                                                                                                                          class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>)
    IL_0016:  call       class [mscorlib]System.Collections.Generic.List`1<!!0> [System.Core]System.Linq.Enumerable::ToList<class LibGit2Sharp.Reference>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_001b:  stloc.0
    IL_001c:  newobj     instance void LibGit2Sharp.CommitFilter::.ctor()
    IL_0021:  stloc.s    V_9
    IL_0023:  ldloc.s    V_9
    IL_0025:  ldloc.0
    IL_0026:  callvirt   instance void LibGit2Sharp.CommitFilter::set_Since(object)
    IL_002b:  ldloc.s    V_9
    IL_002d:  ldc.i4.5
    IL_002e:  callvirt   instance void LibGit2Sharp.CommitFilter::set_SortBy(valuetype LibGit2Sharp.CommitSortStrategies)
    IL_0033:  ldloc.s    V_9
    IL_0035:  stloc.1
    IL_0036:  ldarg.0
    IL_0037:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Core.HistoryRewriter::repo
    IL_003c:  callvirt   instance class LibGit2Sharp.IQueryableCommitLog LibGit2Sharp.Repository::get_Commits()
    IL_0041:  ldloc.1
    IL_0042:  callvirt   instance class LibGit2Sharp.ICommitLog LibGit2Sharp.IQueryableCommitLog::QueryBy(class LibGit2Sharp.CommitFilter)
    IL_0047:  stloc.2
    IL_0048:  ldloc.2
    IL_0049:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>::GetEnumerator()
    IL_004e:  stloc.s    V_10
    .try
    {
      IL_0050:  br.s       IL_0061

      IL_0052:  ldloc.s    V_10
      IL_0054:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Commit>::get_Current()
      IL_0059:  stloc.3
      IL_005a:  ldarg.0
      IL_005b:  ldloc.3
      IL_005c:  call       instance void LibGit2Sharp.Core.HistoryRewriter::RewriteCommit(class LibGit2Sharp.Commit)
      IL_0061:  ldloc.s    V_10
      IL_0063:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_0068:  brtrue.s   IL_0052

      IL_006a:  leave.s    IL_0078

    }  // end .try
    finally
    {
      IL_006c:  ldloc.s    V_10
      IL_006e:  brfalse.s  IL_0077

      IL_0070:  ldloc.s    V_10
      IL_0072:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0077:  endfinally
    }  // end handler
    IL_0078:  newobj     instance void class [System]System.Collections.Generic.Queue`1<class [System.Core]System.Action>::.ctor()
    IL_007d:  stloc.s    V_4
    .try
    {
      IL_007f:  ldloc.0
      IL_0080:  ldarg.0
      IL_0081:  ldftn      instance int32 LibGit2Sharp.Core.HistoryRewriter::ReferenceDepth(class LibGit2Sharp.Reference)
      IL_0087:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Reference,int32>::.ctor(object,
                                                                                                                     native int)
      IL_008c:  call       class [System.Core]System.Linq.IOrderedEnumerable`1<!!0> [System.Core]System.Linq.Enumerable::OrderBy<class LibGit2Sharp.Reference,int32>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                     class [System.Core]System.Func`2<!!0,!!1>)
      IL_0091:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Reference>::GetEnumerator()
      IL_0096:  stloc.s    V_11
      .try
      {
        IL_0098:  br.s       IL_00d7

        IL_009a:  ldloc.s    V_11
        IL_009c:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Reference>::get_Current()
        IL_00a1:  stloc.s    V_5
        IL_00a3:  ldloc.s    V_5
        IL_00a5:  isinst     LibGit2Sharp.DirectReference
        IL_00aa:  stloc.s    V_6
        IL_00ac:  ldloc.s    V_6
        IL_00ae:  ldnull
        IL_00af:  call       bool LibGit2Sharp.Reference::op_Equality(class LibGit2Sharp.Reference,
                                                                      class LibGit2Sharp.Reference)
        IL_00b4:  brtrue.s   IL_00d7

        IL_00b6:  ldarg.0
        IL_00b7:  ldloc.s    V_6
        IL_00b9:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.DirectReference::get_Target()
        IL_00be:  call       instance class LibGit2Sharp.ObjectId LibGit2Sharp.Core.HistoryRewriter::RewriteTarget(class LibGit2Sharp.GitObject)
        IL_00c3:  stloc.s    V_7
        IL_00c5:  ldarg.0
        IL_00c6:  ldloc.s    V_6
        IL_00c8:  ldloc.s    V_7
        IL_00ca:  ldarg.0
        IL_00cb:  ldfld      string LibGit2Sharp.Core.HistoryRewriter::backupRefsNamespace
        IL_00d0:  ldloc.s    V_4
        IL_00d2:  call       instance void LibGit2Sharp.Core.HistoryRewriter::RewriteReference(class LibGit2Sharp.DirectReference,
                                                                                               class LibGit2Sharp.ObjectId,
                                                                                               string,
                                                                                               class [System]System.Collections.Generic.Queue`1<class [System.Core]System.Action>)
        IL_00d7:  ldloc.s    V_11
        IL_00d9:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
        IL_00de:  brtrue.s   IL_009a

        IL_00e0:  leave.s    IL_00ee

      }  // end .try
      finally
      {
        IL_00e2:  ldloc.s    V_11
        IL_00e4:  brfalse.s  IL_00ed

        IL_00e6:  ldloc.s    V_11
        IL_00e8:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_00ed:  endfinally
      }  // end handler
      IL_00ee:  leave.s    IL_0127

    }  // end .try
    catch [mscorlib]System.Exception 
    {
      IL_00f0:  pop
      IL_00f1:  ldloc.s    V_4
      IL_00f3:  callvirt   instance valuetype [System]System.Collections.Generic.Queue`1/Enumerator<!0> class [System]System.Collections.Generic.Queue`1<class [System.Core]System.Action>::GetEnumerator()
      IL_00f8:  stloc.s    V_12
      .try
      {
        IL_00fa:  br.s       IL_010c

        IL_00fc:  ldloca.s   V_12
        IL_00fe:  call       instance !0 valuetype [System]System.Collections.Generic.Queue`1/Enumerator<class [System.Core]System.Action>::get_Current()
        IL_0103:  stloc.s    V_8
        IL_0105:  ldloc.s    V_8
        IL_0107:  callvirt   instance void [System.Core]System.Action::Invoke()
        IL_010c:  ldloca.s   V_12
        IL_010e:  call       instance bool valuetype [System]System.Collections.Generic.Queue`1/Enumerator<class [System.Core]System.Action>::MoveNext()
        IL_0113:  brtrue.s   IL_00fc

        IL_0115:  leave.s    IL_0125

      }  // end .try
      finally
      {
        IL_0117:  ldloca.s   V_12
        IL_0119:  constrained. valuetype [System]System.Collections.Generic.Queue`1/Enumerator<class [System.Core]System.Action>
        IL_011f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0124:  endfinally
      }  // end handler
      IL_0125:  rethrow
    }  // end handler
    IL_0127:  ret
  } // end of method HistoryRewriter::Execute

  .method private hidebysig instance void 
          RewriteReference(class LibGit2Sharp.DirectReference oldRef,
                           class LibGit2Sharp.ObjectId newTarget,
                           string backupNamePrefix,
                           class [System]System.Collections.Generic.Queue`1<class [System.Core]System.Action> rollbackActions) cil managed
  {
    // Code size       435 (0x1b3)
    .maxstack  5
    .locals init (string V_0,
             class LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6' V_1)
    IL_0000:  newobj     instance void LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::.ctor()
    IL_0005:  stloc.1
    IL_0006:  ldloc.1
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.DirectReference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::oldRef
    IL_000d:  ldloc.1
    IL_000e:  ldarg.0
    IL_000f:  stfld      class LibGit2Sharp.Core.HistoryRewriter LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::'<>4__this'
    IL_0014:  ldloc.1
    IL_0015:  ldfld      class LibGit2Sharp.DirectReference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::oldRef
    IL_001a:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_001f:  stloc.0
    IL_0020:  ldloc.1
    IL_0021:  ldfld      class LibGit2Sharp.DirectReference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::oldRef
    IL_0026:  call       bool LibGit2Sharp.ReferenceExtensions::IsTag(class LibGit2Sharp.Reference)
    IL_002b:  brfalse.s  IL_0071

    IL_002d:  ldarg.0
    IL_002e:  ldfld      class [System.Core]System.Func`4<string,bool,class LibGit2Sharp.GitObject,string> LibGit2Sharp.Core.HistoryRewriter::tagNameRewriter
    IL_0033:  brfalse.s  IL_0071

    IL_0035:  call       string LibGit2Sharp.Reference::get_TagPrefix()
    IL_003a:  ldarg.0
    IL_003b:  ldfld      class [System.Core]System.Func`4<string,bool,class LibGit2Sharp.GitObject,string> LibGit2Sharp.Core.HistoryRewriter::tagNameRewriter
    IL_0040:  ldloc.1
    IL_0041:  ldfld      class LibGit2Sharp.DirectReference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::oldRef
    IL_0046:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_004b:  call       string LibGit2Sharp.Reference::get_TagPrefix()
    IL_0050:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0055:  callvirt   instance string [mscorlib]System.String::Substring(int32)
    IL_005a:  ldc.i4.0
    IL_005b:  ldloc.1
    IL_005c:  ldfld      class LibGit2Sharp.DirectReference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::oldRef
    IL_0061:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.DirectReference::get_Target()
    IL_0066:  callvirt   instance !3 class [System.Core]System.Func`4<string,bool,class LibGit2Sharp.GitObject,string>::Invoke(!0,
                                                                                                                               !1,
                                                                                                                               !2)
    IL_006b:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0070:  stloc.0
    IL_0071:  ldloc.1
    IL_0072:  ldfld      class LibGit2Sharp.DirectReference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::oldRef
    IL_0077:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.DirectReference::get_Target()
    IL_007c:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0081:  ldarg.2
    IL_0082:  call       bool LibGit2Sharp.ObjectId::op_Equality(class LibGit2Sharp.ObjectId,
                                                                 class LibGit2Sharp.ObjectId)
    IL_0087:  brfalse.s  IL_009d

    IL_0089:  ldloc.1
    IL_008a:  ldfld      class LibGit2Sharp.DirectReference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::oldRef
    IL_008f:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0094:  ldloc.0
    IL_0095:  call       bool [mscorlib]System.String::op_Equality(string,
                                                                   string)
    IL_009a:  brfalse.s  IL_009d

    IL_009c:  ret

    IL_009d:  ldloc.1
    IL_009e:  ldarg.3
    IL_009f:  ldloc.1
    IL_00a0:  ldfld      class LibGit2Sharp.DirectReference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::oldRef
    IL_00a5:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_00aa:  ldstr      "refs/"
    IL_00af:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_00b4:  callvirt   instance string [mscorlib]System.String::Substring(int32)
    IL_00b9:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_00be:  stfld      string LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::backupName
    IL_00c3:  ldarg.0
    IL_00c4:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Core.HistoryRewriter::repo
    IL_00c9:  callvirt   instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_00ce:  ldloc.1
    IL_00cf:  ldfld      string LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::backupName
    IL_00d4:  callvirt   instance !!0 LibGit2Sharp.ReferenceCollection::Resolve<class LibGit2Sharp.Reference>(string)
    IL_00d9:  ldnull
    IL_00da:  call       bool LibGit2Sharp.Reference::op_Inequality(class LibGit2Sharp.Reference,
                                                                    class LibGit2Sharp.Reference)
    IL_00df:  brfalse.s  IL_0102

    IL_00e1:  ldstr      "Can't back up reference '{0}' - '{1}' already exists"
    IL_00e6:  ldloc.1
    IL_00e7:  ldfld      class LibGit2Sharp.DirectReference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::oldRef
    IL_00ec:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_00f1:  ldloc.1
    IL_00f2:  ldfld      string LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::backupName
    IL_00f7:  call       string [mscorlib]System.String::Format(string,
                                                                object,
                                                                object)
    IL_00fc:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor(string)
    IL_0101:  throw

    IL_0102:  ldarg.0
    IL_0103:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Core.HistoryRewriter::repo
    IL_0108:  callvirt   instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_010d:  ldloc.1
    IL_010e:  ldfld      string LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::backupName
    IL_0113:  ldloc.1
    IL_0114:  ldfld      class LibGit2Sharp.DirectReference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::oldRef
    IL_0119:  callvirt   instance string LibGit2Sharp.Reference::get_TargetIdentifier()
    IL_011e:  ldc.i4.0
    IL_011f:  ldstr      "filter-branch: backup"
    IL_0124:  call       class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollectionExtensions::Add(class LibGit2Sharp.ReferenceCollection,
                                                                                                      string,
                                                                                                      string,
                                                                                                      bool,
                                                                                                      string)
    IL_0129:  pop
    IL_012a:  ldarg.s    rollbackActions
    IL_012c:  ldloc.1
    IL_012d:  ldftn      instance void LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::'<RewriteReference>b__3'()
    IL_0133:  newobj     instance void [System.Core]System.Action::.ctor(object,
                                                                         native int)
    IL_0138:  callvirt   instance void class [System]System.Collections.Generic.Queue`1<class [System.Core]System.Action>::Enqueue(!0)
    IL_013d:  ldloc.1
    IL_013e:  ldarg.0
    IL_013f:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Core.HistoryRewriter::repo
    IL_0144:  callvirt   instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_0149:  ldloc.1
    IL_014a:  ldfld      class LibGit2Sharp.DirectReference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::oldRef
    IL_014f:  ldarg.2
    IL_0150:  ldstr      "filter-branch: rewrite"
    IL_0155:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::UpdateTarget(class LibGit2Sharp.Reference,
                                                                                                              class LibGit2Sharp.ObjectId,
                                                                                                              string)
    IL_015a:  stfld      class LibGit2Sharp.Reference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::newRef
    IL_015f:  ldarg.s    rollbackActions
    IL_0161:  ldloc.1
    IL_0162:  ldftn      instance void LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::'<RewriteReference>b__4'()
    IL_0168:  newobj     instance void [System.Core]System.Action::.ctor(object,
                                                                         native int)
    IL_016d:  callvirt   instance void class [System]System.Collections.Generic.Queue`1<class [System.Core]System.Action>::Enqueue(!0)
    IL_0172:  ldloc.1
    IL_0173:  ldfld      class LibGit2Sharp.Reference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::newRef
    IL_0178:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_017d:  ldloc.0
    IL_017e:  call       bool [mscorlib]System.String::op_Equality(string,
                                                                   string)
    IL_0183:  brfalse.s  IL_0186

    IL_0185:  ret

    IL_0186:  ldarg.0
    IL_0187:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Core.HistoryRewriter::repo
    IL_018c:  callvirt   instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_0191:  ldloc.1
    IL_0192:  ldfld      class LibGit2Sharp.Reference LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::newRef
    IL_0197:  ldloc.0
    IL_0198:  ldc.i4.0
    IL_0199:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::Move(class LibGit2Sharp.Reference,
                                                                                                      string,
                                                                                                      bool)
    IL_019e:  pop
    IL_019f:  ldarg.s    rollbackActions
    IL_01a1:  ldloc.1
    IL_01a2:  ldftn      instance void LibGit2Sharp.Core.HistoryRewriter/'<>c__DisplayClass6'::'<RewriteReference>b__5'()
    IL_01a8:  newobj     instance void [System.Core]System.Action::.ctor(object,
                                                                         native int)
    IL_01ad:  callvirt   instance void class [System]System.Collections.Generic.Queue`1<class [System.Core]System.Action>::Enqueue(!0)
    IL_01b2:  ret
  } // end of method HistoryRewriter::RewriteReference

  .method private hidebysig instance void 
          RewriteCommit(class LibGit2Sharp.Commit commit) cil managed
  {
    // Code size       197 (0xc5)
    .maxstack  6
    .locals init (class LibGit2Sharp.CommitRewriteInfo V_0,
             class LibGit2Sharp.Tree V_1,
             class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> V_2,
             class LibGit2Sharp.TreeDefinition V_3,
             class LibGit2Sharp.Commit V_4)
    IL_0000:  ldarg.1
    IL_0001:  call       class LibGit2Sharp.CommitRewriteInfo LibGit2Sharp.CommitRewriteInfo::From(class LibGit2Sharp.Commit)
    IL_0006:  stloc.0
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance class LibGit2Sharp.Tree LibGit2Sharp.Commit::get_Tree()
    IL_000d:  stloc.1
    IL_000e:  ldarg.1
    IL_000f:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> LibGit2Sharp.Commit::get_Parents()
    IL_0014:  ldarg.0
    IL_0015:  ldftn      instance class LibGit2Sharp.ObjectId LibGit2Sharp.Core.HistoryRewriter::'<RewriteCommit>b__8'(class LibGit2Sharp.Commit)
    IL_001b:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.ObjectId>::.ctor(object,
                                                                                                                                      native int)
    IL_0020:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!1> [System.Core]System.Linq.Enumerable::Select<class LibGit2Sharp.Commit,class LibGit2Sharp.ObjectId>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                                          class [System.Core]System.Func`2<!!0,!!1>)
    IL_0025:  ldarg.0
    IL_0026:  ldftn      instance class LibGit2Sharp.Commit LibGit2Sharp.Core.HistoryRewriter::'<RewriteCommit>b__9'(class LibGit2Sharp.ObjectId)
    IL_002c:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.Commit>::.ctor(object,
                                                                                                                                      native int)
    IL_0031:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!1> [System.Core]System.Linq.Enumerable::Select<class LibGit2Sharp.ObjectId,class LibGit2Sharp.Commit>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                                          class [System.Core]System.Func`2<!!0,!!1>)
    IL_0036:  stloc.2
    IL_0037:  ldarg.0
    IL_0038:  ldfld      class [System.Core]System.Collections.Generic.HashSet`1<class LibGit2Sharp.Commit> LibGit2Sharp.Core.HistoryRewriter::targetedCommits
    IL_003d:  ldarg.1
    IL_003e:  callvirt   instance bool class [System.Core]System.Collections.Generic.HashSet`1<class LibGit2Sharp.Commit>::Contains(!0)
    IL_0043:  brfalse.s  IL_0086

    IL_0045:  ldarg.0
    IL_0046:  ldfld      class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.CommitRewriteInfo> LibGit2Sharp.Core.HistoryRewriter::headerRewriter
    IL_004b:  ldarg.1
    IL_004c:  callvirt   instance !1 class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.CommitRewriteInfo>::Invoke(!0)
    IL_0051:  stloc.0
    IL_0052:  ldarg.0
    IL_0053:  ldfld      class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.TreeDefinition> LibGit2Sharp.Core.HistoryRewriter::treeRewriter
    IL_0058:  brfalse.s  IL_0079

    IL_005a:  ldarg.0
    IL_005b:  ldfld      class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.TreeDefinition> LibGit2Sharp.Core.HistoryRewriter::treeRewriter
    IL_0060:  ldarg.1
    IL_0061:  callvirt   instance !1 class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.TreeDefinition>::Invoke(!0)
    IL_0066:  stloc.3
    IL_0067:  ldarg.0
    IL_0068:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Core.HistoryRewriter::repo
    IL_006d:  callvirt   instance class LibGit2Sharp.ObjectDatabase LibGit2Sharp.Repository::get_ObjectDatabase()
    IL_0072:  ldloc.3
    IL_0073:  callvirt   instance class LibGit2Sharp.Tree LibGit2Sharp.ObjectDatabase::CreateTree(class LibGit2Sharp.TreeDefinition)
    IL_0078:  stloc.1
    IL_0079:  ldarg.0
    IL_007a:  ldfld      class [System.Core]System.Func`2<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>> LibGit2Sharp.Core.HistoryRewriter::parentsRewriter
    IL_007f:  ldloc.2
    IL_0080:  callvirt   instance !1 class [System.Core]System.Func`2<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>>::Invoke(!0)
    IL_0085:  stloc.2
    IL_0086:  ldarg.0
    IL_0087:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Core.HistoryRewriter::repo
    IL_008c:  callvirt   instance class LibGit2Sharp.ObjectDatabase LibGit2Sharp.Repository::get_ObjectDatabase()
    IL_0091:  ldloc.0
    IL_0092:  callvirt   instance string LibGit2Sharp.CommitRewriteInfo::get_Message()
    IL_0097:  ldloc.0
    IL_0098:  callvirt   instance class LibGit2Sharp.Signature LibGit2Sharp.CommitRewriteInfo::get_Author()
    IL_009d:  ldloc.0
    IL_009e:  callvirt   instance class LibGit2Sharp.Signature LibGit2Sharp.CommitRewriteInfo::get_Committer()
    IL_00a3:  ldloc.1
    IL_00a4:  ldloc.2
    IL_00a5:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.ObjectDatabase::CreateCommit(string,
                                                                                                      class LibGit2Sharp.Signature,
                                                                                                      class LibGit2Sharp.Signature,
                                                                                                      class LibGit2Sharp.Tree,
                                                                                                      class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>)
    IL_00aa:  stloc.s    V_4
    IL_00ac:  ldarg.0
    IL_00ad:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.ObjectId> LibGit2Sharp.Core.HistoryRewriter::shaMap
    IL_00b2:  ldarg.1
    IL_00b3:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_00b8:  ldloc.s    V_4
    IL_00ba:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_00bf:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.ObjectId>::set_Item(!0,
                                                                                                                                                                  !1)
    IL_00c4:  ret
  } // end of method HistoryRewriter::RewriteCommit

  .method private hidebysig instance class LibGit2Sharp.ObjectId 
          RewriteTarget(class LibGit2Sharp.GitObject oldTarget) cil managed
  {
    // Code size       190 (0xbe)
    .maxstack  5
    .locals init (class LibGit2Sharp.TagAnnotation V_0,
             class LibGit2Sharp.ObjectId V_1,
             class LibGit2Sharp.GitObject V_2,
             string V_3,
             class LibGit2Sharp.TagAnnotation V_4)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.ObjectId> LibGit2Sharp.Core.HistoryRewriter::shaMap
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_000c:  callvirt   instance bool class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.ObjectId>::ContainsKey(!0)
    IL_0011:  brfalse.s  IL_0025

    IL_0013:  ldarg.0
    IL_0014:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.ObjectId> LibGit2Sharp.Core.HistoryRewriter::shaMap
    IL_0019:  ldarg.1
    IL_001a:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_001f:  callvirt   instance !1 class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.ObjectId>::get_Item(!0)
    IL_0024:  ret

    IL_0025:  ldarg.1
    IL_0026:  isinst     LibGit2Sharp.TagAnnotation
    IL_002b:  stloc.0
    IL_002c:  ldloc.0
    IL_002d:  ldnull
    IL_002e:  call       bool LibGit2Sharp.GitObject::op_Equality(class LibGit2Sharp.GitObject,
                                                                  class LibGit2Sharp.GitObject)
    IL_0033:  brfalse.s  IL_003c

    IL_0035:  ldarg.1
    IL_0036:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_003b:  ret

    IL_003c:  ldarg.0
    IL_003d:  ldloc.0
    IL_003e:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.TagAnnotation::get_Target()
    IL_0043:  call       instance class LibGit2Sharp.ObjectId LibGit2Sharp.Core.HistoryRewriter::RewriteTarget(class LibGit2Sharp.GitObject)
    IL_0048:  stloc.1
    IL_0049:  ldarg.0
    IL_004a:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Core.HistoryRewriter::repo
    IL_004f:  ldloc.1
    IL_0050:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.Repository::Lookup(class LibGit2Sharp.ObjectId)
    IL_0055:  stloc.2
    IL_0056:  ldloc.0
    IL_0057:  callvirt   instance string LibGit2Sharp.TagAnnotation::get_Name()
    IL_005c:  stloc.3
    IL_005d:  ldarg.0
    IL_005e:  ldfld      class [System.Core]System.Func`4<string,bool,class LibGit2Sharp.GitObject,string> LibGit2Sharp.Core.HistoryRewriter::tagNameRewriter
    IL_0063:  brfalse.s  IL_007e

    IL_0065:  ldarg.0
    IL_0066:  ldfld      class [System.Core]System.Func`4<string,bool,class LibGit2Sharp.GitObject,string> LibGit2Sharp.Core.HistoryRewriter::tagNameRewriter
    IL_006b:  ldloc.0
    IL_006c:  callvirt   instance string LibGit2Sharp.TagAnnotation::get_Name()
    IL_0071:  ldc.i4.1
    IL_0072:  ldloc.0
    IL_0073:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.TagAnnotation::get_Target()
    IL_0078:  callvirt   instance !3 class [System.Core]System.Func`4<string,bool,class LibGit2Sharp.GitObject,string>::Invoke(!0,
                                                                                                                               !1,
                                                                                                                               !2)
    IL_007d:  stloc.3
    IL_007e:  ldarg.0
    IL_007f:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Core.HistoryRewriter::repo
    IL_0084:  callvirt   instance class LibGit2Sharp.ObjectDatabase LibGit2Sharp.Repository::get_ObjectDatabase()
    IL_0089:  ldloc.3
    IL_008a:  ldloc.2
    IL_008b:  ldloc.0
    IL_008c:  callvirt   instance class LibGit2Sharp.Signature LibGit2Sharp.TagAnnotation::get_Tagger()
    IL_0091:  ldloc.0
    IL_0092:  callvirt   instance string LibGit2Sharp.TagAnnotation::get_Message()
    IL_0097:  callvirt   instance class LibGit2Sharp.TagAnnotation LibGit2Sharp.ObjectDatabase::CreateTagAnnotation(string,
                                                                                                                    class LibGit2Sharp.GitObject,
                                                                                                                    class LibGit2Sharp.Signature,
                                                                                                                    string)
    IL_009c:  stloc.s    V_4
    IL_009e:  ldarg.0
    IL_009f:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.ObjectId> LibGit2Sharp.Core.HistoryRewriter::shaMap
    IL_00a4:  ldloc.0
    IL_00a5:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_00aa:  ldloc.s    V_4
    IL_00ac:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_00b1:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.ObjectId>::set_Item(!0,
                                                                                                                                                                  !1)
    IL_00b6:  ldloc.s    V_4
    IL_00b8:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_00bd:  ret
  } // end of method HistoryRewriter::RewriteTarget

  .method private hidebysig instance int32 
          ReferenceDepth(class LibGit2Sharp.Reference reference) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  4
    .locals init (class LibGit2Sharp.DirectReference V_0)
    IL_0000:  ldarg.1
    IL_0001:  isinst     LibGit2Sharp.DirectReference
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldnull
    IL_0009:  call       bool LibGit2Sharp.Reference::op_Equality(class LibGit2Sharp.Reference,
                                                                  class LibGit2Sharp.Reference)
    IL_000e:  brtrue.s   IL_0012

    IL_0010:  ldc.i4.1
    IL_0011:  ret

    IL_0012:  ldc.i4.1
    IL_0013:  ldarg.0
    IL_0014:  ldarg.1
    IL_0015:  castclass  LibGit2Sharp.SymbolicReference
    IL_001a:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.SymbolicReference::get_Target()
    IL_001f:  call       instance int32 LibGit2Sharp.Core.HistoryRewriter::ReferenceDepth(class LibGit2Sharp.Reference)
    IL_0024:  add
    IL_0025:  ret
  } // end of method HistoryRewriter::ReferenceDepth

  .method private hidebysig static class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> 
          '<.ctor>b__0'(class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> ps) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ret
  } // end of method HistoryRewriter::'<.ctor>b__0'

  .method private hidebysig instance class LibGit2Sharp.ObjectId 
          '<RewriteCommit>b__8'(class LibGit2Sharp.Commit oldParent) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       44 (0x2c)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.ObjectId> LibGit2Sharp.Core.HistoryRewriter::shaMap
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_000c:  callvirt   instance bool class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.ObjectId>::ContainsKey(!0)
    IL_0011:  brtrue.s   IL_001a

    IL_0013:  ldarg.1
    IL_0014:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0019:  ret

    IL_001a:  ldarg.0
    IL_001b:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.ObjectId> LibGit2Sharp.Core.HistoryRewriter::shaMap
    IL_0020:  ldarg.1
    IL_0021:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0026:  callvirt   instance !1 class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.ObjectId,class LibGit2Sharp.ObjectId>::get_Item(!0)
    IL_002b:  ret
  } // end of method HistoryRewriter::'<RewriteCommit>b__8'

  .method private hidebysig instance class LibGit2Sharp.Commit 
          '<RewriteCommit>b__9'(class LibGit2Sharp.ObjectId id) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Core.HistoryRewriter::repo
    IL_0006:  ldarg.1
    IL_0007:  call       !!0 LibGit2Sharp.RepositoryExtensions::Lookup<class LibGit2Sharp.Commit>(class LibGit2Sharp.IRepository,
                                                                                                  class LibGit2Sharp.ObjectId)
    IL_000c:  ret
  } // end of method HistoryRewriter::'<RewriteCommit>b__9'

} // end of class LibGit2Sharp.Core.HistoryRewriter

.class private sequential ansi beforefieldinit LibGit2Sharp.Core.GitStrArrayIn
       extends [mscorlib]System.Object
       implements [mscorlib]System.IDisposable
{
  .field public native int strings
  .field public uint32 size
  .method public hidebysig static class LibGit2Sharp.Core.GitStrArrayIn 
          BuildFrom(class LibGit2Sharp.Core.FilePath[] paths) cil managed
  {
    // Code size       110 (0x6e)
    .maxstack  4
    .locals init (int32 V_0,
             native int[] V_1,
             int32 V_2,
             string V_3,
             int32 V_4,
             native int V_5,
             class LibGit2Sharp.Core.GitStrArrayIn V_6)
    IL_0000:  ldarg.0
    IL_0001:  ldlen
    IL_0002:  conv.i4
    IL_0003:  stloc.0
    IL_0004:  ldloc.0
    IL_0005:  newarr     [mscorlib]System.IntPtr
    IL_000a:  stloc.1
    IL_000b:  ldc.i4.0
    IL_000c:  stloc.2
    IL_000d:  br.s       IL_0033

    IL_000f:  ldarg.0
    IL_0010:  ldloc.2
    IL_0011:  ldelem.ref
    IL_0012:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Posix()
    IL_0017:  stloc.3
    IL_0018:  ldloc.1
    IL_0019:  ldloc.2
    IL_001a:  ldelema    [mscorlib]System.IntPtr
    IL_001f:  ldloc.3
    IL_0020:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0025:  call       native int LibGit2Sharp.Core.FilePathMarshaler::FromManaged(class LibGit2Sharp.Core.FilePath)
    IL_002a:  stobj      [mscorlib]System.IntPtr
    IL_002f:  ldloc.2
    IL_0030:  ldc.i4.1
    IL_0031:  add
    IL_0032:  stloc.2
    IL_0033:  ldloc.2
    IL_0034:  ldloc.0
    IL_0035:  blt.s      IL_000f

    IL_0037:  call       int32 [mscorlib]System.IntPtr::get_Size()
    IL_003c:  ldloc.0
    IL_003d:  mul
    IL_003e:  stloc.s    V_4
    IL_0040:  ldloc.s    V_4
    IL_0042:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::AllocHGlobal(int32)
    IL_0047:  stloc.s    V_5
    IL_0049:  ldloc.1
    IL_004a:  ldc.i4.0
    IL_004b:  ldloc.s    V_5
    IL_004d:  ldloc.0
    IL_004e:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::Copy(native int[],
                                                                                     int32,
                                                                                     native int,
                                                                                     int32)
    IL_0053:  newobj     instance void LibGit2Sharp.Core.GitStrArrayIn::.ctor()
    IL_0058:  stloc.s    V_6
    IL_005a:  ldloc.s    V_6
    IL_005c:  ldloc.s    V_5
    IL_005e:  stfld      native int LibGit2Sharp.Core.GitStrArrayIn::strings
    IL_0063:  ldloc.s    V_6
    IL_0065:  ldloc.0
    IL_0066:  stfld      uint32 LibGit2Sharp.Core.GitStrArrayIn::size
    IL_006b:  ldloc.s    V_6
    IL_006d:  ret
  } // end of method GitStrArrayIn::BuildFrom

  .method public hidebysig newslot virtual final 
          instance void  Dispose() cil managed
  {
    // Code size       85 (0x55)
    .maxstack  4
    .locals init (int32 V_0,
             native int[] V_1,
             int32 V_2)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      uint32 LibGit2Sharp.Core.GitStrArrayIn::size
    IL_0006:  brtrue.s   IL_0009

    IL_0008:  ret

    IL_0009:  ldarg.0
    IL_000a:  ldfld      uint32 LibGit2Sharp.Core.GitStrArrayIn::size
    IL_000f:  stloc.0
    IL_0010:  ldloc.0
    IL_0011:  newarr     [mscorlib]System.IntPtr
    IL_0016:  stloc.1
    IL_0017:  ldarg.0
    IL_0018:  ldfld      native int LibGit2Sharp.Core.GitStrArrayIn::strings
    IL_001d:  ldloc.1
    IL_001e:  ldc.i4.0
    IL_001f:  ldloc.0
    IL_0020:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::Copy(native int,
                                                                                     native int[],
                                                                                     int32,
                                                                                     int32)
    IL_0025:  ldc.i4.0
    IL_0026:  stloc.2
    IL_0027:  br.s       IL_003e

    IL_0029:  ldloc.1
    IL_002a:  ldloc.2
    IL_002b:  ldelema    [mscorlib]System.IntPtr
    IL_0030:  ldobj      [mscorlib]System.IntPtr
    IL_0035:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::FreeHGlobal(native int)
    IL_003a:  ldloc.2
    IL_003b:  ldc.i4.1
    IL_003c:  add
    IL_003d:  stloc.2
    IL_003e:  ldloc.2
    IL_003f:  ldloc.0
    IL_0040:  blt.s      IL_0029

    IL_0042:  ldarg.0
    IL_0043:  ldfld      native int LibGit2Sharp.Core.GitStrArrayIn::strings
    IL_0048:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::FreeHGlobal(native int)
    IL_004d:  ldarg.0
    IL_004e:  ldc.i4.0
    IL_004f:  stfld      uint32 LibGit2Sharp.Core.GitStrArrayIn::size
    IL_0054:  ret
  } // end of method GitStrArrayIn::Dispose

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method GitStrArrayIn::.ctor

} // end of class LibGit2Sharp.Core.GitStrArrayIn

.class private abstract auto ansi sealed beforefieldinit LibGit2Sharp.Core.NativeDllName
       extends [mscorlib]System.Object
{
  .field public static literal string Name = "git2-7940036"
} // end of class LibGit2Sharp.Core.NativeDllName

.class public auto ansi beforefieldinit LibGit2Sharp.CommitRewriteInfo
       extends [mscorlib]System.Object
{
  .field private class LibGit2Sharp.Signature '<Author>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private class LibGit2Sharp.Signature '<Committer>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private string '<Message>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig specialname instance class LibGit2Sharp.Signature 
          get_Author() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Signature LibGit2Sharp.CommitRewriteInfo::'<Author>k__BackingField'
    IL_0006:  ret
  } // end of method CommitRewriteInfo::get_Author

  .method public hidebysig specialname instance void 
          set_Author(class LibGit2Sharp.Signature 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      class LibGit2Sharp.Signature LibGit2Sharp.CommitRewriteInfo::'<Author>k__BackingField'
    IL_0007:  ret
  } // end of method CommitRewriteInfo::set_Author

  .method public hidebysig specialname instance class LibGit2Sharp.Signature 
          get_Committer() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Signature LibGit2Sharp.CommitRewriteInfo::'<Committer>k__BackingField'
    IL_0006:  ret
  } // end of method CommitRewriteInfo::get_Committer

  .method public hidebysig specialname instance void 
          set_Committer(class LibGit2Sharp.Signature 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      class LibGit2Sharp.Signature LibGit2Sharp.CommitRewriteInfo::'<Committer>k__BackingField'
    IL_0007:  ret
  } // end of method CommitRewriteInfo::set_Committer

  .method public hidebysig specialname instance string 
          get_Message() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.CommitRewriteInfo::'<Message>k__BackingField'
    IL_0006:  ret
  } // end of method CommitRewriteInfo::get_Message

  .method public hidebysig specialname instance void 
          set_Message(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.CommitRewriteInfo::'<Message>k__BackingField'
    IL_0007:  ret
  } // end of method CommitRewriteInfo::set_Message

  .method public hidebysig static class LibGit2Sharp.CommitRewriteInfo 
          From(class LibGit2Sharp.Commit commit) cil managed
  {
    // Code size       44 (0x2c)
    .maxstack  2
    .locals init (class LibGit2Sharp.CommitRewriteInfo V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.CommitRewriteInfo::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  callvirt   instance class LibGit2Sharp.Signature LibGit2Sharp.Commit::get_Author()
    IL_000d:  callvirt   instance void LibGit2Sharp.CommitRewriteInfo::set_Author(class LibGit2Sharp.Signature)
    IL_0012:  ldloc.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance class LibGit2Sharp.Signature LibGit2Sharp.Commit::get_Committer()
    IL_0019:  callvirt   instance void LibGit2Sharp.CommitRewriteInfo::set_Committer(class LibGit2Sharp.Signature)
    IL_001e:  ldloc.0
    IL_001f:  ldarg.0
    IL_0020:  callvirt   instance string LibGit2Sharp.Commit::get_Message()
    IL_0025:  callvirt   instance void LibGit2Sharp.CommitRewriteInfo::set_Message(string)
    IL_002a:  ldloc.0
    IL_002b:  ret
  } // end of method CommitRewriteInfo::From

  .method public hidebysig static class LibGit2Sharp.CommitRewriteInfo 
          From(class LibGit2Sharp.Commit commit,
               [opt] class LibGit2Sharp.Signature author,
               [opt] class LibGit2Sharp.Signature committer,
               [opt] string message) cil managed
  {
    .param [2] = nullref
    .param [3] = nullref
    .param [4] = nullref
    // Code size       60 (0x3c)
    .maxstack  3
    .locals init (class LibGit2Sharp.CommitRewriteInfo V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.CommitRewriteInfo LibGit2Sharp.CommitRewriteInfo::From(class LibGit2Sharp.Commit)
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldarg.1
    IL_0009:  dup
    IL_000a:  brtrue.s   IL_0013

    IL_000c:  pop
    IL_000d:  ldloc.0
    IL_000e:  callvirt   instance class LibGit2Sharp.Signature LibGit2Sharp.CommitRewriteInfo::get_Author()
    IL_0013:  callvirt   instance void LibGit2Sharp.CommitRewriteInfo::set_Author(class LibGit2Sharp.Signature)
    IL_0018:  ldloc.0
    IL_0019:  ldarg.2
    IL_001a:  dup
    IL_001b:  brtrue.s   IL_0024

    IL_001d:  pop
    IL_001e:  ldloc.0
    IL_001f:  callvirt   instance class LibGit2Sharp.Signature LibGit2Sharp.CommitRewriteInfo::get_Committer()
    IL_0024:  callvirt   instance void LibGit2Sharp.CommitRewriteInfo::set_Committer(class LibGit2Sharp.Signature)
    IL_0029:  ldloc.0
    IL_002a:  ldarg.3
    IL_002b:  dup
    IL_002c:  brtrue.s   IL_0035

    IL_002e:  pop
    IL_002f:  ldloc.0
    IL_0030:  callvirt   instance string LibGit2Sharp.CommitRewriteInfo::get_Message()
    IL_0035:  callvirt   instance void LibGit2Sharp.CommitRewriteInfo::set_Message(string)
    IL_003a:  ldloc.0
    IL_003b:  ret
  } // end of method CommitRewriteInfo::From

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method CommitRewriteInfo::.ctor

  .property instance class LibGit2Sharp.Signature
          Author()
  {
    .set instance void LibGit2Sharp.CommitRewriteInfo::set_Author(class LibGit2Sharp.Signature)
    .get instance class LibGit2Sharp.Signature LibGit2Sharp.CommitRewriteInfo::get_Author()
  } // end of property CommitRewriteInfo::Author
  .property instance class LibGit2Sharp.Signature
          Committer()
  {
    .get instance class LibGit2Sharp.Signature LibGit2Sharp.CommitRewriteInfo::get_Committer()
    .set instance void LibGit2Sharp.CommitRewriteInfo::set_Committer(class LibGit2Sharp.Signature)
  } // end of property CommitRewriteInfo::Committer
  .property instance string Message()
  {
    .get instance string LibGit2Sharp.CommitRewriteInfo::get_Message()
    .set instance void LibGit2Sharp.CommitRewriteInfo::set_Message(string)
  } // end of property CommitRewriteInfo::Message
} // end of class LibGit2Sharp.CommitRewriteInfo

.class private auto ansi sealed LibGit2Sharp.DiffModifiers
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.DiffModifiers None = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.DiffModifiers IncludeUntracked = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.DiffModifiers IncludeUnmodified = int32(0x00000004)
  .field public static literal valuetype LibGit2Sharp.DiffModifiers DisablePathspecMatch = int32(0x00000008)
  .field public static literal valuetype LibGit2Sharp.DiffModifiers IncludeIgnored = int32(0x00000010)
} // end of class LibGit2Sharp.DiffModifiers

.class public auto ansi sealed LibGit2Sharp.ObjectType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.ObjectType Commit = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.ObjectType Tree = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.ObjectType Blob = int32(0x00000003)
  .field public static literal valuetype LibGit2Sharp.ObjectType Tag = int32(0x00000004)
} // end of class LibGit2Sharp.ObjectType

.class private abstract auto ansi sealed beforefieldinit LibGit2Sharp.ObjectTypeExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static valuetype LibGit2Sharp.Core.GitObjectType 
          ToGitObjectType(valuetype LibGit2Sharp.ObjectType 'type') cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       58 (0x3a)
    .maxstack  2
    .locals init (valuetype LibGit2Sharp.ObjectType V_0)
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.1
    IL_0004:  sub
    IL_0005:  switch     ( 
                          IL_001c,
                          IL_001e,
                          IL_0020,
                          IL_0022)
    IL_001a:  br.s       IL_0024

    IL_001c:  ldc.i4.1
    IL_001d:  ret

    IL_001e:  ldc.i4.2
    IL_001f:  ret

    IL_0020:  ldc.i4.3
    IL_0021:  ret

    IL_0022:  ldc.i4.4
    IL_0023:  ret

    IL_0024:  ldstr      "Cannot map {0} to a GitObjectType."
    IL_0029:  ldarg.0
    IL_002a:  box        LibGit2Sharp.ObjectType
    IL_002f:  call       string [mscorlib]System.String::Format(string,
                                                                object)
    IL_0034:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor(string)
    IL_0039:  throw
  } // end of method ObjectTypeExtensions::ToGitObjectType

} // end of class LibGit2Sharp.ObjectTypeExtensions

.class private abstract auto ansi sealed beforefieldinit LibGit2Sharp.Core.UniqueId
       extends [mscorlib]System.Object
{
  .field public static literal string UniqueIdentifier = "83959e5d-2d2c-429f-ac8f-ee3622cb38a0"
} // end of class LibGit2Sharp.Core.UniqueId

.class public abstract auto ansi sealed beforefieldinit LibGit2Sharp.ReferenceExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .method assembly hidebysig static bool 
          LooksLikeLocalBranch(string canonicalName) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Reference::get_LocalBranchPrefix()
    IL_0006:  call       bool LibGit2Sharp.ReferenceExtensions::IsPrefixedBy(string,
                                                                             string)
    IL_000b:  ret
  } // end of method ReferenceExtensions::LooksLikeLocalBranch

  .method assembly hidebysig static bool 
          LooksLikeRemoteTrackingBranch(string canonicalName) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Reference::get_RemoteTrackingBranchPrefix()
    IL_0006:  call       bool LibGit2Sharp.ReferenceExtensions::IsPrefixedBy(string,
                                                                             string)
    IL_000b:  ret
  } // end of method ReferenceExtensions::LooksLikeRemoteTrackingBranch

  .method assembly hidebysig static bool 
          LooksLikeTag(string canonicalName) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Reference::get_TagPrefix()
    IL_0006:  call       bool LibGit2Sharp.ReferenceExtensions::IsPrefixedBy(string,
                                                                             string)
    IL_000b:  ret
  } // end of method ReferenceExtensions::LooksLikeTag

  .method assembly hidebysig static bool 
          LooksLikeNote(string canonicalName) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Reference::get_NotePrefix()
    IL_0006:  call       bool LibGit2Sharp.ReferenceExtensions::IsPrefixedBy(string,
                                                                             string)
    IL_000b:  ret
  } // end of method ReferenceExtensions::LooksLikeNote

  .method private hidebysig static bool  IsPrefixedBy(string input,
                                                      string prefix) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.4
    IL_0003:  callvirt   instance bool [mscorlib]System.String::StartsWith(string,
                                                                           valuetype [mscorlib]System.StringComparison)
    IL_0008:  ret
  } // end of method ReferenceExtensions::IsPrefixedBy

  .method public hidebysig static bool  IsLocalBranch(class LibGit2Sharp.Reference reference) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0006:  call       bool LibGit2Sharp.ReferenceExtensions::LooksLikeLocalBranch(string)
    IL_000b:  ret
  } // end of method ReferenceExtensions::IsLocalBranch

  .method public hidebysig static bool  IsRemoteTrackingBranch(class LibGit2Sharp.Reference reference) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0006:  call       bool LibGit2Sharp.ReferenceExtensions::LooksLikeRemoteTrackingBranch(string)
    IL_000b:  ret
  } // end of method ReferenceExtensions::IsRemoteTrackingBranch

  .method public hidebysig static bool  IsTag(class LibGit2Sharp.Reference reference) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0006:  call       bool LibGit2Sharp.ReferenceExtensions::LooksLikeTag(string)
    IL_000b:  ret
  } // end of method ReferenceExtensions::IsTag

  .method public hidebysig static bool  IsNote(class LibGit2Sharp.Reference reference) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0006:  call       bool LibGit2Sharp.ReferenceExtensions::LooksLikeNote(string)
    IL_000b:  ret
  } // end of method ReferenceExtensions::IsNote

} // end of class LibGit2Sharp.ReferenceExtensions

.class public auto ansi beforefieldinit LibGit2Sharp.Conflict
       extends [mscorlib]System.Object
       implements class [mscorlib]System.IEquatable`1<class LibGit2Sharp.Conflict>
{
  .field private initonly class LibGit2Sharp.IndexEntry ancestor
  .field private initonly class LibGit2Sharp.IndexEntry ours
  .field private initonly class LibGit2Sharp.IndexEntry theirs
  .field private static initonly class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Conflict> equalityHelper
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object> 'CS$<>9__CachedAnonymousMethodDelegate3'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object> 'CS$<>9__CachedAnonymousMethodDelegate4'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object> 'CS$<>9__CachedAnonymousMethodDelegate5'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method Conflict::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.IndexEntry ancestor,
                               class LibGit2Sharp.IndexEntry ours,
                               class LibGit2Sharp.IndexEntry theirs) cil managed
  {
    // Code size       28 (0x1c)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.IndexEntry LibGit2Sharp.Conflict::ancestor
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  stfld      class LibGit2Sharp.IndexEntry LibGit2Sharp.Conflict::ours
    IL_0014:  ldarg.0
    IL_0015:  ldarg.3
    IL_0016:  stfld      class LibGit2Sharp.IndexEntry LibGit2Sharp.Conflict::theirs
    IL_001b:  ret
  } // end of method Conflict::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.IndexEntry 
          get_Ancestor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.IndexEntry LibGit2Sharp.Conflict::ancestor
    IL_0006:  ret
  } // end of method Conflict::get_Ancestor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.IndexEntry 
          get_Ours() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.IndexEntry LibGit2Sharp.Conflict::ours
    IL_0006:  ret
  } // end of method Conflict::get_Ours

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.IndexEntry 
          get_Theirs() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.IndexEntry LibGit2Sharp.Conflict::theirs
    IL_0006:  ret
  } // end of method Conflict::get_Theirs

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  isinst     LibGit2Sharp.Conflict
    IL_0007:  call       instance bool LibGit2Sharp.Conflict::Equals(class LibGit2Sharp.Conflict)
    IL_000c:  ret
  } // end of method Conflict::Equals

  .method public hidebysig newslot virtual final 
          instance bool  Equals(class LibGit2Sharp.Conflict other) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Conflict> LibGit2Sharp.Conflict::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance bool class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Conflict>::Equals(!0,
                                                                                                                           !0)
    IL_000c:  ret
  } // end of method Conflict::Equals

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Conflict> LibGit2Sharp.Conflict::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  callvirt   instance int32 class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Conflict>::GetHashCode(!0)
    IL_000b:  ret
  } // end of method Conflict::GetHashCode

  .method public hidebysig specialname static 
          bool  op_Equality(class LibGit2Sharp.Conflict left,
                            class LibGit2Sharp.Conflict right) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ret
  } // end of method Conflict::op_Equality

  .method public hidebysig specialname static 
          bool  op_Inequality(class LibGit2Sharp.Conflict left,
                              class LibGit2Sharp.Conflict right) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  ret
  } // end of method Conflict::op_Inequality

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       115 (0x73)
    .maxstack  5
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object>[] V_0)
    IL_0000:  ldc.i4.3
    IL_0001:  newarr     class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object>
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldc.i4.0
    IL_0009:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object> LibGit2Sharp.Conflict::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_000e:  brtrue.s   IL_0021

    IL_0010:  ldnull
    IL_0011:  ldftn      object LibGit2Sharp.Conflict::'<.cctor>b__0'(class LibGit2Sharp.Conflict)
    IL_0017:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object>::.ctor(object,
                                                                                                                   native int)
    IL_001c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object> LibGit2Sharp.Conflict::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_0021:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object> LibGit2Sharp.Conflict::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_0026:  stelem.ref
    IL_0027:  ldloc.0
    IL_0028:  ldc.i4.1
    IL_0029:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object> LibGit2Sharp.Conflict::'CS$<>9__CachedAnonymousMethodDelegate4'
    IL_002e:  brtrue.s   IL_0041

    IL_0030:  ldnull
    IL_0031:  ldftn      object LibGit2Sharp.Conflict::'<.cctor>b__1'(class LibGit2Sharp.Conflict)
    IL_0037:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object>::.ctor(object,
                                                                                                                   native int)
    IL_003c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object> LibGit2Sharp.Conflict::'CS$<>9__CachedAnonymousMethodDelegate4'
    IL_0041:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object> LibGit2Sharp.Conflict::'CS$<>9__CachedAnonymousMethodDelegate4'
    IL_0046:  stelem.ref
    IL_0047:  ldloc.0
    IL_0048:  ldc.i4.2
    IL_0049:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object> LibGit2Sharp.Conflict::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_004e:  brtrue.s   IL_0061

    IL_0050:  ldnull
    IL_0051:  ldftn      object LibGit2Sharp.Conflict::'<.cctor>b__2'(class LibGit2Sharp.Conflict)
    IL_0057:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object>::.ctor(object,
                                                                                                                   native int)
    IL_005c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object> LibGit2Sharp.Conflict::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0061:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Conflict,object> LibGit2Sharp.Conflict::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0066:  stelem.ref
    IL_0067:  ldloc.0
    IL_0068:  newobj     instance void class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Conflict>::.ctor(class [System.Core]System.Func`2<!0,object>[])
    IL_006d:  stsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Conflict> LibGit2Sharp.Conflict::equalityHelper
    IL_0072:  ret
  } // end of method Conflict::.cctor

  .method private hidebysig static object 
          '<.cctor>b__0'(class LibGit2Sharp.Conflict x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.IndexEntry LibGit2Sharp.Conflict::get_Ancestor()
    IL_0006:  ret
  } // end of method Conflict::'<.cctor>b__0'

  .method private hidebysig static object 
          '<.cctor>b__1'(class LibGit2Sharp.Conflict x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.IndexEntry LibGit2Sharp.Conflict::get_Ours()
    IL_0006:  ret
  } // end of method Conflict::'<.cctor>b__1'

  .method private hidebysig static object 
          '<.cctor>b__2'(class LibGit2Sharp.Conflict x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.IndexEntry LibGit2Sharp.Conflict::get_Theirs()
    IL_0006:  ret
  } // end of method Conflict::'<.cctor>b__2'

  .property instance class LibGit2Sharp.IndexEntry
          Ancestor()
  {
    .get instance class LibGit2Sharp.IndexEntry LibGit2Sharp.Conflict::get_Ancestor()
  } // end of property Conflict::Ancestor
  .property instance class LibGit2Sharp.IndexEntry
          Ours()
  {
    .get instance class LibGit2Sharp.IndexEntry LibGit2Sharp.Conflict::get_Ours()
  } // end of property Conflict::Ours
  .property instance class LibGit2Sharp.IndexEntry
          Theirs()
  {
    .get instance class LibGit2Sharp.IndexEntry LibGit2Sharp.Conflict::get_Theirs()
  } // end of property Conflict::Theirs
} // end of class LibGit2Sharp.Conflict

.class public auto ansi beforefieldinit LibGit2Sharp.ConflictCollection
       extends [mscorlib]System.Object
       implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Conflict>,
                  [mscorlib]System.Collections.IEnumerable
{
  .custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .field private initonly class LibGit2Sharp.Repository repo
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ConflictCollection::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.ConflictCollection::repo
    IL_000d:  ret
  } // end of method ConflictCollection::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Conflict 
          get_Item(string path) cil managed
  {
    // Code size       34 (0x22)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ConflictCollection::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Index LibGit2Sharp.Repository::get_Index()
    IL_000b:  callvirt   instance class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::get_Handle()
    IL_0010:  ldarg.0
    IL_0011:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ConflictCollection::repo
    IL_0016:  ldarg.1
    IL_0017:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_001c:  call       class LibGit2Sharp.Conflict LibGit2Sharp.Core.Proxy::git_index_conflict_get(class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                                                     class LibGit2Sharp.Repository,
                                                                                                     class LibGit2Sharp.Core.FilePath)
    IL_0021:  ret
  } // end of method ConflictCollection::get_Item

  .method private hidebysig instance class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Conflict> 
          AllConflicts() cil managed
  {
    // Code size       260 (0x104)
    .maxstack  5
    .locals init (class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Conflict> V_0,
             class LibGit2Sharp.IndexEntry V_1,
             class LibGit2Sharp.IndexEntry V_2,
             class LibGit2Sharp.IndexEntry V_3,
             string V_4,
             class LibGit2Sharp.IndexEntry V_5,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.IndexEntry> V_6,
             valuetype LibGit2Sharp.StageLevel V_7,
             object[] V_8)
    IL_0000:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Conflict>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldnull
    IL_0007:  stloc.1
    IL_0008:  ldnull
    IL_0009:  stloc.2
    IL_000a:  ldnull
    IL_000b:  stloc.3
    IL_000c:  ldnull
    IL_000d:  stloc.s    V_4
    IL_000f:  ldarg.0
    IL_0010:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ConflictCollection::repo
    IL_0015:  callvirt   instance class LibGit2Sharp.Index LibGit2Sharp.Repository::get_Index()
    IL_001a:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.IndexEntry> LibGit2Sharp.Index::GetEnumerator()
    IL_001f:  stloc.s    V_6
    .try
    {
      IL_0021:  br         IL_00d6

      IL_0026:  ldloc.s    V_6
      IL_0028:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.IndexEntry>::get_Current()
      IL_002d:  stloc.s    V_5
      IL_002f:  ldloc.s    V_5
      IL_0031:  callvirt   instance valuetype LibGit2Sharp.StageLevel LibGit2Sharp.IndexEntry::get_StageLevel()
      IL_0036:  brfalse    IL_00d6

      IL_003b:  ldloc.s    V_4
      IL_003d:  brfalse.s  IL_0064

      IL_003f:  ldloc.s    V_5
      IL_0041:  callvirt   instance string LibGit2Sharp.IndexEntry::get_Path()
      IL_0046:  ldloc.s    V_4
      IL_0048:  ldc.i4.4
      IL_0049:  callvirt   instance bool [mscorlib]System.String::Equals(string,
                                                                         valuetype [mscorlib]System.StringComparison)
      IL_004e:  brtrue.s   IL_0064

      IL_0050:  ldloc.0
      IL_0051:  ldloc.1
      IL_0052:  ldloc.2
      IL_0053:  ldloc.3
      IL_0054:  newobj     instance void LibGit2Sharp.Conflict::.ctor(class LibGit2Sharp.IndexEntry,
                                                                      class LibGit2Sharp.IndexEntry,
                                                                      class LibGit2Sharp.IndexEntry)
      IL_0059:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Conflict>::Add(!0)
      IL_005e:  ldnull
      IL_005f:  stloc.1
      IL_0060:  ldnull
      IL_0061:  stloc.2
      IL_0062:  ldnull
      IL_0063:  stloc.3
      IL_0064:  ldloc.s    V_5
      IL_0066:  callvirt   instance string LibGit2Sharp.IndexEntry::get_Path()
      IL_006b:  stloc.s    V_4
      IL_006d:  ldloc.s    V_5
      IL_006f:  callvirt   instance valuetype LibGit2Sharp.StageLevel LibGit2Sharp.IndexEntry::get_StageLevel()
      IL_0074:  stloc.s    V_7
      IL_0076:  ldloc.s    V_7
      IL_0078:  ldc.i4.1
      IL_0079:  sub
      IL_007a:  switch     ( 
                            IL_008d,
                            IL_0092,
                            IL_0097)
      IL_008b:  br.s       IL_009c

      IL_008d:  ldloc.s    V_5
      IL_008f:  stloc.1
      IL_0090:  br.s       IL_00d6

      IL_0092:  ldloc.s    V_5
      IL_0094:  stloc.2
      IL_0095:  br.s       IL_00d6

      IL_0097:  ldloc.s    V_5
      IL_0099:  stloc.3
      IL_009a:  br.s       IL_00d6

      IL_009c:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_00a1:  ldstr      "Entry '{0}' bears an unexpected StageLevel '{1}'"
      IL_00a6:  ldc.i4.2
      IL_00a7:  newarr     [mscorlib]System.Object
      IL_00ac:  stloc.s    V_8
      IL_00ae:  ldloc.s    V_8
      IL_00b0:  ldc.i4.0
      IL_00b1:  ldloc.s    V_5
      IL_00b3:  callvirt   instance string LibGit2Sharp.IndexEntry::get_Path()
      IL_00b8:  stelem.ref
      IL_00b9:  ldloc.s    V_8
      IL_00bb:  ldc.i4.1
      IL_00bc:  ldloc.s    V_5
      IL_00be:  callvirt   instance valuetype LibGit2Sharp.StageLevel LibGit2Sharp.IndexEntry::get_StageLevel()
      IL_00c3:  box        LibGit2Sharp.StageLevel
      IL_00c8:  stelem.ref
      IL_00c9:  ldloc.s    V_8
      IL_00cb:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                  string,
                                                                  object[])
      IL_00d0:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor(string)
      IL_00d5:  throw

      IL_00d6:  ldloc.s    V_6
      IL_00d8:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_00dd:  brtrue     IL_0026

      IL_00e2:  leave.s    IL_00f0

    }  // end .try
    finally
    {
      IL_00e4:  ldloc.s    V_6
      IL_00e6:  brfalse.s  IL_00ef

      IL_00e8:  ldloc.s    V_6
      IL_00ea:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_00ef:  endfinally
    }  // end handler
    IL_00f0:  ldloc.s    V_4
    IL_00f2:  brfalse.s  IL_0102

    IL_00f4:  ldloc.0
    IL_00f5:  ldloc.1
    IL_00f6:  ldloc.2
    IL_00f7:  ldloc.3
    IL_00f8:  newobj     instance void LibGit2Sharp.Conflict::.ctor(class LibGit2Sharp.IndexEntry,
                                                                    class LibGit2Sharp.IndexEntry,
                                                                    class LibGit2Sharp.IndexEntry)
    IL_00fd:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Conflict>::Add(!0)
    IL_0102:  ldloc.0
    IL_0103:  ret
  } // end of method ConflictCollection::AllConflicts

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Conflict> 
          GetEnumerator() cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Conflict> LibGit2Sharp.ConflictCollection::AllConflicts()
    IL_0006:  callvirt   instance valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<!0> class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Conflict>::GetEnumerator()
    IL_000b:  box        valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<class LibGit2Sharp.Conflict>
    IL_0010:  ret
  } // end of method ConflictCollection::GetEnumerator

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Conflict> LibGit2Sharp.ConflictCollection::GetEnumerator()
    IL_0006:  ret
  } // end of method ConflictCollection::System.Collections.IEnumerable.GetEnumerator

  .property instance class LibGit2Sharp.Conflict
          Item(string)
  {
    .get instance class LibGit2Sharp.Conflict LibGit2Sharp.ConflictCollection::get_Item(string)
  } // end of property ConflictCollection::Item
} // end of class LibGit2Sharp.ConflictCollection

.class public auto ansi beforefieldinit LibGit2Sharp.RemoteUpdater
       extends [mscorlib]System.Object
{
  .field private initonly class LibGit2Sharp.Repository repo
  .field private initonly class LibGit2Sharp.Remote remote
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method RemoteUpdater::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.Remote remote) cil managed
  {
    // Code size       43 (0x2b)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.1
    IL_0007:  ldstr      "repo"
    IL_000c:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0011:  ldarg.2
    IL_0012:  ldstr      "remote"
    IL_0017:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_001c:  ldarg.0
    IL_001d:  ldarg.1
    IL_001e:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.RemoteUpdater::repo
    IL_0023:  ldarg.0
    IL_0024:  ldarg.2
    IL_0025:  stfld      class LibGit2Sharp.Remote LibGit2Sharp.RemoteUpdater::remote
    IL_002a:  ret
  } // end of method RemoteUpdater::.ctor

  .method public hidebysig newslot specialname virtual 
          instance void  set_TagFetchMode(valuetype LibGit2Sharp.TagFetchMode 'value') cil managed
  {
    // Code size       55 (0x37)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.RemoteSafeHandle V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.RemoteUpdater::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Remote LibGit2Sharp.RemoteUpdater::remote
    IL_0011:  callvirt   instance string LibGit2Sharp.Remote::get_Name()
    IL_0016:  ldc.i4.1
    IL_0017:  call       class LibGit2Sharp.Core.Handles.RemoteSafeHandle LibGit2Sharp.Core.Proxy::git_remote_load(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                   string,
                                                                                                                   bool)
    IL_001c:  stloc.0
    .try
    {
      IL_001d:  ldloc.0
      IL_001e:  ldarg.1
      IL_001f:  call       void LibGit2Sharp.Core.Proxy::git_remote_set_autotag(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                valuetype LibGit2Sharp.TagFetchMode)
      IL_0024:  ldloc.0
      IL_0025:  call       void LibGit2Sharp.Core.Proxy::git_remote_save(class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
      IL_002a:  leave.s    IL_0036

    }  // end .try
    finally
    {
      IL_002c:  ldloc.0
      IL_002d:  brfalse.s  IL_0035

      IL_002f:  ldloc.0
      IL_0030:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0035:  endfinally
    }  // end handler
    IL_0036:  ret
  } // end of method RemoteUpdater::set_TagFetchMode

  .property instance valuetype LibGit2Sharp.TagFetchMode
          TagFetchMode()
  {
    .set instance void LibGit2Sharp.RemoteUpdater::set_TagFetchMode(valuetype LibGit2Sharp.TagFetchMode)
  } // end of property RemoteUpdater::TagFetchMode
} // end of class LibGit2Sharp.RemoteUpdater

.class public auto ansi serializable beforefieldinit LibGit2Sharp.RemoveFromIndexException
       extends LibGit2Sharp.LibGit2SharpException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor()
    IL_0006:  ret
  } // end of method RemoveFromIndexException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0007:  ret
  } // end of method RemoveFromIndexException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               class [mscorlib]System.Exception innerException) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 class [mscorlib]System.Exception)
    IL_0008:  ret
  } // end of method RemoveFromIndexException::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                               valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo,
                                                                                 valuetype [mscorlib]System.Runtime.Serialization.StreamingContext)
    IL_0008:  ret
  } // end of method RemoveFromIndexException::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               valuetype LibGit2Sharp.Core.GitErrorCode code,
                               valuetype LibGit2Sharp.Core.GitErrorCategory category) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_0009:  ret
  } // end of method RemoveFromIndexException::.ctor

} // end of class LibGit2Sharp.RemoveFromIndexException

.class private abstract auto ansi beforefieldinit LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase
       extends [mscorlib]System.Runtime.InteropServices.SafeHandle
{
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0006:  ldc.i4.0
    IL_0007:  call       instance void [mscorlib]System.Runtime.InteropServices.SafeHandle::.ctor(native int,
                                                                                                  bool)
    IL_000c:  ret
  } // end of method NotOwnedSafeHandleBase::.ctor

  .method public hidebysig specialname virtual 
          instance bool  get_IsInvalid() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance bool LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase::get_IsZero()
    IL_0006:  ret
  } // end of method NotOwnedSafeHandleBase::get_IsInvalid

  .method public hidebysig specialname instance bool 
          get_IsZero() cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_000b:  call       bool [mscorlib]System.IntPtr::op_Equality(native int,
                                                                   native int)
    IL_0010:  ret
  } // end of method NotOwnedSafeHandleBase::get_IsZero

  .method family hidebysig virtual instance bool 
          ReleaseHandle() cil managed
  {
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  ldc.i4.1
    IL_0001:  ret
  } // end of method NotOwnedSafeHandleBase::ReleaseHandle

  .property instance bool IsInvalid()
  {
    .get instance bool LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase::get_IsInvalid()
  } // end of property NotOwnedSafeHandleBase::IsInvalid
  .property instance bool IsZero()
  {
    .get instance bool LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase::get_IsZero()
  } // end of property NotOwnedSafeHandleBase::IsZero
} // end of class LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.GitRefSpecHandle
       extends LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method GitRefSpecHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.GitRefSpecHandle

.class private abstract auto ansi beforefieldinit LibGit2Sharp.Core.Handles.SafeHandleBase
       extends [mscorlib]System.Runtime.InteropServices.SafeHandle
{
  .field private int32 registered
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       25 (0x19)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0006:  ldc.i4.1
    IL_0007:  call       instance void [mscorlib]System.Runtime.InteropServices.SafeHandle::.ctor(native int,
                                                                                                  bool)
    IL_000c:  call       void LibGit2Sharp.Core.NativeMethods::AddHandle()
    IL_0011:  ldarg.0
    IL_0012:  ldc.i4.1
    IL_0013:  stfld      int32 LibGit2Sharp.Core.Handles.SafeHandleBase::registered
    IL_0018:  ret
  } // end of method SafeHandleBase::.ctor

  .method public hidebysig specialname virtual final 
          instance bool  get_IsInvalid() cil managed
  {
    // Code size       33 (0x21)
    .maxstack  3
    .locals init (bool V_0)
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance bool LibGit2Sharp.Core.Handles.SafeHandleBase::IsInvalidImpl()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  brfalse.s  IL_001f

    IL_000a:  ldarg.0
    IL_000b:  ldflda     int32 LibGit2Sharp.Core.Handles.SafeHandleBase::registered
    IL_0010:  ldc.i4.0
    IL_0011:  ldc.i4.1
    IL_0012:  call       int32 [mscorlib]System.Threading.Interlocked::CompareExchange(int32&,
                                                                                       int32,
                                                                                       int32)
    IL_0017:  ldc.i4.1
    IL_0018:  bne.un.s   IL_001f

    IL_001a:  call       void LibGit2Sharp.Core.NativeMethods::RemoveHandle()
    IL_001f:  ldloc.0
    IL_0020:  ret
  } // end of method SafeHandleBase::get_IsInvalid

  .method family hidebysig newslot virtual 
          instance bool  IsInvalidImpl() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.ConstrainedExecution.ReliabilityContractAttribute::.ctor(valuetype [mscorlib]System.Runtime.ConstrainedExecution.Consistency,
                                                                                                            valuetype [mscorlib]System.Runtime.ConstrainedExecution.Cer) = ( 01 00 03 00 00 00 02 00 00 00 00 00 ) 
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_000b:  call       bool [mscorlib]System.IntPtr::op_Equality(native int,
                                                                   native int)
    IL_0010:  ret
  } // end of method SafeHandleBase::IsInvalidImpl

  .method family hidebysig newslot abstract virtual 
          instance bool  ReleaseHandleImpl() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.ConstrainedExecution.ReliabilityContractAttribute::.ctor(valuetype [mscorlib]System.Runtime.ConstrainedExecution.Consistency,
                                                                                                            valuetype [mscorlib]System.Runtime.ConstrainedExecution.Cer) = ( 01 00 03 00 00 00 02 00 00 00 00 00 ) 
  } // end of method SafeHandleBase::ReleaseHandleImpl

  .method family hidebysig virtual final 
          instance bool  ReleaseHandle() cil managed
  {
    // Code size       37 (0x25)
    .maxstack  3
    .locals init (bool V_0)
    .try
    {
      IL_0000:  ldarg.0
      IL_0001:  callvirt   instance bool LibGit2Sharp.Core.Handles.SafeHandleBase::ReleaseHandleImpl()
      IL_0006:  stloc.0
      IL_0007:  leave.s    IL_0023

    }  // end .try
    finally
    {
      IL_0009:  ldarg.0
      IL_000a:  ldflda     int32 LibGit2Sharp.Core.Handles.SafeHandleBase::registered
      IL_000f:  ldc.i4.0
      IL_0010:  ldc.i4.1
      IL_0011:  call       int32 [mscorlib]System.Threading.Interlocked::CompareExchange(int32&,
                                                                                         int32,
                                                                                         int32)
      IL_0016:  ldc.i4.1
      IL_0017:  bne.un.s   IL_0020

      IL_0019:  call       void LibGit2Sharp.Core.NativeMethods::RemoveHandle()
      IL_001e:  br.s       IL_0022

      IL_0020:  ldc.i4.0
      IL_0021:  stloc.0
      IL_0022:  endfinally
    }  // end handler
    IL_0023:  ldloc.0
    IL_0024:  ret
  } // end of method SafeHandleBase::ReleaseHandle

  .property instance bool IsInvalid()
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 ) 
    .get instance bool LibGit2Sharp.Core.Handles.SafeHandleBase::get_IsInvalid()
  } // end of property SafeHandleBase::IsInvalid
} // end of class LibGit2Sharp.Core.Handles.SafeHandleBase

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.NullRepositorySafeHandle
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_000c:  stfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0011:  ret
  } // end of method NullRepositorySafeHandle::.ctor

  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  ldc.i4.1
    IL_0001:  ret
  } // end of method NullRepositorySafeHandle::ReleaseHandleImpl

} // end of class LibGit2Sharp.Core.Handles.NullRepositorySafeHandle

.class public auto ansi beforefieldinit LibGit2Sharp.GitLink
       extends LibGit2Sharp.GitObject
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.GitObject::.ctor()
    IL_0006:  ret
  } // end of method GitLink::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.ObjectId id) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.GitObject::.ctor(class LibGit2Sharp.Repository,
                                                                     class LibGit2Sharp.ObjectId)
    IL_0008:  ret
  } // end of method GitLink::.ctor

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0006:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_000b:  ret
  } // end of method GitLink::get_DebuggerDisplay

  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.GitLink::get_DebuggerDisplay()
  } // end of property GitLink::DebuggerDisplay
} // end of class LibGit2Sharp.GitLink

.class private auto ansi sealed LibGit2Sharp.Core.RepositoryOpenFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.Core.RepositoryOpenFlags NoSearch = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.Core.RepositoryOpenFlags CrossFS = int32(0x00000002)
} // end of class LibGit2Sharp.Core.RepositoryOpenFlags

.class public auto ansi sealed LibGit2Sharp.StashModifiers
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.StashModifiers Default = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.StashModifiers KeepIndex = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.StashModifiers IncludeUntracked = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.StashModifiers IncludeIgnored = int32(0x00000004)
} // end of class LibGit2Sharp.StashModifiers

.class public auto ansi sealed LibGit2Sharp.TreeEntryTargetType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.TreeEntryTargetType Blob = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.TreeEntryTargetType Tree = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.TreeEntryTargetType GitLink = int32(0x00000002)
} // end of class LibGit2Sharp.TreeEntryTargetType

.class private abstract auto ansi sealed beforefieldinit LibGit2Sharp.TreeEntryTargetTypeExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static valuetype LibGit2Sharp.Core.GitObjectType 
          ToGitObjectType(valuetype LibGit2Sharp.TreeEntryTargetType 'type') cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       44 (0x2c)
    .maxstack  2
    .locals init (valuetype LibGit2Sharp.TreeEntryTargetType V_0)
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  switch     ( 
                          IL_0014,
                          IL_0012)
    IL_0010:  br.s       IL_0016

    IL_0012:  ldc.i4.2
    IL_0013:  ret

    IL_0014:  ldc.i4.3
    IL_0015:  ret

    IL_0016:  ldstr      "Cannot map {0} to a GitObjectType."
    IL_001b:  ldarg.0
    IL_001c:  box        LibGit2Sharp.TreeEntryTargetType
    IL_0021:  call       string [mscorlib]System.String::Format(string,
                                                                object)
    IL_0026:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor(string)
    IL_002b:  throw
  } // end of method TreeEntryTargetTypeExtensions::ToGitObjectType

} // end of class LibGit2Sharp.TreeEntryTargetTypeExtensions

.class public auto ansi serializable beforefieldinit LibGit2Sharp.UnmatchedPathException
       extends LibGit2Sharp.LibGit2SharpException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor()
    IL_0006:  ret
  } // end of method UnmatchedPathException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0007:  ret
  } // end of method UnmatchedPathException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               class [mscorlib]System.Exception innerException) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 class [mscorlib]System.Exception)
    IL_0008:  ret
  } // end of method UnmatchedPathException::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                               valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo,
                                                                                 valuetype [mscorlib]System.Runtime.Serialization.StreamingContext)
    IL_0008:  ret
  } // end of method UnmatchedPathException::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               valuetype LibGit2Sharp.Core.GitErrorCode code,
                               valuetype LibGit2Sharp.Core.GitErrorCategory category) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_0009:  ret
  } // end of method UnmatchedPathException::.ctor

} // end of class LibGit2Sharp.UnmatchedPathException

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.ReflogEntrySafeHandle
       extends LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method ReflogEntrySafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.ReflogEntrySafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.ReflogSafeHandle
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_reflog_free(native int)
    IL_000b:  ldc.i4.1
    IL_000c:  ret
  } // end of method ReflogSafeHandle::ReleaseHandleImpl

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method ReflogSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.ReflogSafeHandle

.class public auto ansi beforefieldinit LibGit2Sharp.ReflogCollection
       extends [mscorlib]System.Object
       implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.ReflogEntry>,
                  [mscorlib]System.Collections.IEnumerable
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field assembly initonly class LibGit2Sharp.Repository repo
  .field private initonly string canonicalName
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ReflogCollection::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               string canonicalName) cil managed
  {
    // Code size       43 (0x2b)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.2
    IL_0007:  ldstr      "canonicalName"
    IL_000c:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0011:  ldarg.1
    IL_0012:  ldstr      "repo"
    IL_0017:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_001c:  ldarg.0
    IL_001d:  ldarg.1
    IL_001e:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.ReflogCollection::repo
    IL_0023:  ldarg.0
    IL_0024:  ldarg.2
    IL_0025:  stfld      string LibGit2Sharp.ReflogCollection::canonicalName
    IL_002a:  ret
  } // end of method ReflogCollection::.ctor

  .method public hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ReflogEntry> 
          GetEnumerator() cil managed
  {
    // Code size       119 (0x77)
    .maxstack  3
    .locals init (class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.ReflogEntry> V_0,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_1,
             class LibGit2Sharp.Core.Handles.ReflogSafeHandle V_2,
             int32 V_3,
             int32 V_4,
             class LibGit2Sharp.Core.Handles.ReflogEntrySafeHandle V_5)
    IL_0000:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.ReflogEntry>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldarg.0
    IL_0007:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReflogCollection::repo
    IL_000c:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0011:  ldarg.0
    IL_0012:  ldfld      string LibGit2Sharp.ReflogCollection::canonicalName
    IL_0017:  ldc.i4.1
    IL_0018:  call       class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.Core.Proxy::git_reference_lookup(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                           string,
                                                                                                                           bool)
    IL_001d:  stloc.1
    .try
    {
      IL_001e:  ldloc.1
      IL_001f:  call       class LibGit2Sharp.Core.Handles.ReflogSafeHandle LibGit2Sharp.Core.Proxy::git_reflog_read(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
      IL_0024:  stloc.2
      .try
      {
        IL_0025:  ldloc.2
        IL_0026:  call       int32 LibGit2Sharp.Core.Proxy::git_reflog_entrycount(class LibGit2Sharp.Core.Handles.ReflogSafeHandle)
        IL_002b:  stloc.3
        IL_002c:  ldc.i4.0
        IL_002d:  stloc.s    V_4
        IL_002f:  br.s       IL_004e

        IL_0031:  ldloc.2
        IL_0032:  ldloc.s    V_4
        IL_0034:  call       class LibGit2Sharp.Core.Handles.ReflogEntrySafeHandle LibGit2Sharp.Core.Proxy::git_reflog_entry_byindex(class LibGit2Sharp.Core.Handles.ReflogSafeHandle,
                                                                                                                                     int32)
        IL_0039:  stloc.s    V_5
        IL_003b:  ldloc.0
        IL_003c:  ldloc.s    V_5
        IL_003e:  newobj     instance void LibGit2Sharp.ReflogEntry::.ctor(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
        IL_0043:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.ReflogEntry>::Add(!0)
        IL_0048:  ldloc.s    V_4
        IL_004a:  ldc.i4.1
        IL_004b:  add
        IL_004c:  stloc.s    V_4
        IL_004e:  ldloc.s    V_4
        IL_0050:  ldloc.3
        IL_0051:  blt.s      IL_0031

        IL_0053:  leave.s    IL_005f

      }  // end .try
      finally
      {
        IL_0055:  ldloc.2
        IL_0056:  brfalse.s  IL_005e

        IL_0058:  ldloc.2
        IL_0059:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_005e:  endfinally
      }  // end handler
      IL_005f:  leave.s    IL_006b

    }  // end .try
    finally
    {
      IL_0061:  ldloc.1
      IL_0062:  brfalse.s  IL_006a

      IL_0064:  ldloc.1
      IL_0065:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_006a:  endfinally
    }  // end handler
    IL_006b:  ldloc.0
    IL_006c:  callvirt   instance valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<!0> class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.ReflogEntry>::GetEnumerator()
    IL_0071:  box        valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<class LibGit2Sharp.ReflogEntry>
    IL_0076:  ret
  } // end of method ReflogCollection::GetEnumerator

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ReflogEntry> LibGit2Sharp.ReflogCollection::GetEnumerator()
    IL_0006:  ret
  } // end of method ReflogCollection::System.Collections.IEnumerable.GetEnumerator

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       38 (0x26)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "Count = {0}"
    IL_000a:  ldc.i4.1
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  call       int32 [System.Core]System.Linq.Enumerable::Count<class LibGit2Sharp.ReflogEntry>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0019:  box        [mscorlib]System.Int32
    IL_001e:  stelem.ref
    IL_001f:  ldloc.0
    IL_0020:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0025:  ret
  } // end of method ReflogCollection::get_DebuggerDisplay

  .method assembly hidebysig newslot strict virtual 
          instance void  Append(class LibGit2Sharp.ObjectId target,
                                string reflogMessage,
                                class LibGit2Sharp.Signature committer) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0,
             class LibGit2Sharp.Core.Handles.ReflogSafeHandle V_1,
             string V_2)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReflogCollection::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  ldarg.0
    IL_000c:  ldfld      string LibGit2Sharp.ReflogCollection::canonicalName
    IL_0011:  ldc.i4.1
    IL_0012:  call       class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.Core.Proxy::git_reference_lookup(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                           string,
                                                                                                                           bool)
    IL_0017:  stloc.0
    .try
    {
      IL_0018:  ldloc.0
      IL_0019:  call       class LibGit2Sharp.Core.Handles.ReflogSafeHandle LibGit2Sharp.Core.Proxy::git_reflog_read(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
      IL_001e:  stloc.1
      .try
      {
        IL_001f:  ldarg.2
        IL_0020:  call       string LibGit2Sharp.Core.Proxy::git_message_prettify(string)
        IL_0025:  stloc.2
        IL_0026:  ldloc.1
        IL_0027:  ldarg.1
        IL_0028:  ldarg.3
        IL_0029:  ldloc.2
        IL_002a:  call       void LibGit2Sharp.Core.Proxy::git_reflog_append(class LibGit2Sharp.Core.Handles.ReflogSafeHandle,
                                                                             class LibGit2Sharp.ObjectId,
                                                                             class LibGit2Sharp.Signature,
                                                                             string)
        IL_002f:  leave.s    IL_003b

      }  // end .try
      finally
      {
        IL_0031:  ldloc.1
        IL_0032:  brfalse.s  IL_003a

        IL_0034:  ldloc.1
        IL_0035:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_003a:  endfinally
      }  // end handler
      IL_003b:  leave.s    IL_0047

    }  // end .try
    finally
    {
      IL_003d:  ldloc.0
      IL_003e:  brfalse.s  IL_0046

      IL_0040:  ldloc.0
      IL_0041:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0046:  endfinally
    }  // end handler
    IL_0047:  ret
  } // end of method ReflogCollection::Append

  .method assembly hidebysig instance void 
          Append(class LibGit2Sharp.ObjectId target,
                 string reflogMessage) cil managed
  {
    // Code size       33 (0x21)
    .maxstack  4
    .locals init (class LibGit2Sharp.Signature V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReflogCollection::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Configuration LibGit2Sharp.Repository::get_Config()
    IL_000b:  call       valuetype [mscorlib]System.DateTimeOffset [mscorlib]System.DateTimeOffset::get_Now()
    IL_0010:  ldc.i4.0
    IL_0011:  callvirt   instance class LibGit2Sharp.Signature LibGit2Sharp.Configuration::BuildSignatureFromGlobalConfiguration(valuetype [mscorlib]System.DateTimeOffset,
                                                                                                                                 bool)
    IL_0016:  stloc.0
    IL_0017:  ldarg.0
    IL_0018:  ldarg.1
    IL_0019:  ldarg.2
    IL_001a:  ldloc.0
    IL_001b:  callvirt   instance void LibGit2Sharp.ReflogCollection::Append(class LibGit2Sharp.ObjectId,
                                                                             string,
                                                                             class LibGit2Sharp.Signature)
    IL_0020:  ret
  } // end of method ReflogCollection::Append

  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.ReflogCollection::get_DebuggerDisplay()
  } // end of property ReflogCollection::DebuggerDisplay
} // end of class LibGit2Sharp.ReflogCollection

.class private auto ansi beforefieldinit LibGit2Sharp.Core.PathCase
       extends [mscorlib]System.Object
{
  .field private initonly class [mscorlib]System.StringComparer comparer
  .field private initonly valuetype [mscorlib]System.StringComparison comparison
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.IRepository repo) cil managed
  {
    // Code size       78 (0x4e)
    .maxstack  2
    .locals init (class LibGit2Sharp.ConfigurationEntry`1<bool> V_0,
             bool V_1)
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance class LibGit2Sharp.Configuration LibGit2Sharp.IRepository::get_Config()
    IL_000c:  ldstr      "core.ignorecase"
    IL_0011:  callvirt   instance class LibGit2Sharp.ConfigurationEntry`1<!!0> LibGit2Sharp.Configuration::Get<bool>(string)
    IL_0016:  stloc.0
    IL_0017:  ldloc.0
    IL_0018:  brfalse.s  IL_0022

    IL_001a:  ldloc.0
    IL_001b:  callvirt   instance !0 class LibGit2Sharp.ConfigurationEntry`1<bool>::get_Value()
    IL_0020:  br.s       IL_0023

    IL_0022:  ldc.i4.0
    IL_0023:  stloc.1
    IL_0024:  ldloc.1
    IL_0025:  ldc.i4.1
    IL_0026:  bne.un.s   IL_003b

    IL_0028:  ldarg.0
    IL_0029:  call       class [mscorlib]System.StringComparer [mscorlib]System.StringComparer::get_OrdinalIgnoreCase()
    IL_002e:  stfld      class [mscorlib]System.StringComparer LibGit2Sharp.Core.PathCase::comparer
    IL_0033:  ldarg.0
    IL_0034:  ldc.i4.5
    IL_0035:  stfld      valuetype [mscorlib]System.StringComparison LibGit2Sharp.Core.PathCase::comparison
    IL_003a:  ret

    IL_003b:  ldarg.0
    IL_003c:  call       class [mscorlib]System.StringComparer [mscorlib]System.StringComparer::get_Ordinal()
    IL_0041:  stfld      class [mscorlib]System.StringComparer LibGit2Sharp.Core.PathCase::comparer
    IL_0046:  ldarg.0
    IL_0047:  ldc.i4.4
    IL_0048:  stfld      valuetype [mscorlib]System.StringComparison LibGit2Sharp.Core.PathCase::comparison
    IL_004d:  ret
  } // end of method PathCase::.ctor

  .method public hidebysig specialname instance class [mscorlib]System.StringComparer 
          get_Comparer() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.StringComparer LibGit2Sharp.Core.PathCase::comparer
    IL_0006:  ret
  } // end of method PathCase::get_Comparer

  .method public hidebysig instance bool 
          StartsWith(string path,
                     string 'value') cil managed
  {
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse.s  IL_0011

    IL_0003:  ldarg.1
    IL_0004:  ldarg.2
    IL_0005:  ldarg.0
    IL_0006:  ldfld      valuetype [mscorlib]System.StringComparison LibGit2Sharp.Core.PathCase::comparison
    IL_000b:  callvirt   instance bool [mscorlib]System.String::StartsWith(string,
                                                                           valuetype [mscorlib]System.StringComparison)
    IL_0010:  ret

    IL_0011:  ldc.i4.0
    IL_0012:  ret
  } // end of method PathCase::StartsWith

  .property instance class [mscorlib]System.StringComparer
          Comparer()
  {
    .get instance class [mscorlib]System.StringComparer LibGit2Sharp.Core.PathCase::get_Comparer()
  } // end of property PathCase::Comparer
} // end of class LibGit2Sharp.Core.PathCase

.class private auto ansi beforefieldinit LibGit2Sharp.MatchedPathsAggregator
       extends [mscorlib]System.Object
       implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Core.FilePath>,
                  [mscorlib]System.Collections.IEnumerable
{
  .field private initonly class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath> matchedPaths
  .method assembly hidebysig instance int32 
          OnGitDiffNotify(native int diffListSoFar,
                          native int deltaToAdd,
                          native int matchedPathspec,
                          native int payload) cil managed
  {
    // Code size       57 (0x39)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.FilePath V_0)
    IL_0000:  ldarg.3
    IL_0001:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0006:  call       bool [mscorlib]System.IntPtr::op_Inequality(native int,
                                                                     native int)
    IL_000b:  brtrue.s   IL_0014

    IL_000d:  ldsfld     class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::Empty
    IL_0012:  br.s       IL_001a

    IL_0014:  ldarg.3
    IL_0015:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePathMarshaler::FromNative(native int)
    IL_001a:  stloc.0
    IL_001b:  ldarg.0
    IL_001c:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath> LibGit2Sharp.MatchedPathsAggregator::matchedPaths
    IL_0021:  ldloc.0
    IL_0022:  callvirt   instance bool class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath>::Contains(!0)
    IL_0027:  brfalse.s  IL_002b

    IL_0029:  ldc.i4.0
    IL_002a:  ret

    IL_002b:  ldarg.0
    IL_002c:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath> LibGit2Sharp.MatchedPathsAggregator::matchedPaths
    IL_0031:  ldloc.0
    IL_0032:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath>::Add(!0)
    IL_0037:  ldc.i4.0
    IL_0038:  ret
  } // end of method MatchedPathsAggregator::OnGitDiffNotify

  .method public hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Core.FilePath> 
          GetEnumerator() cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath> LibGit2Sharp.MatchedPathsAggregator::matchedPaths
    IL_0006:  callvirt   instance valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<!0> class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath>::GetEnumerator()
    IL_000b:  box        valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<class LibGit2Sharp.Core.FilePath>
    IL_0010:  ret
  } // end of method MatchedPathsAggregator::GetEnumerator

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Core.FilePath> LibGit2Sharp.MatchedPathsAggregator::GetEnumerator()
    IL_0006:  ret
  } // end of method MatchedPathsAggregator::System.Collections.IEnumerable.GetEnumerator

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath>::.ctor()
    IL_0006:  stfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath> LibGit2Sharp.MatchedPathsAggregator::matchedPaths
    IL_000b:  ldarg.0
    IL_000c:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0011:  ret
  } // end of method MatchedPathsAggregator::.ctor

} // end of class LibGit2Sharp.MatchedPathsAggregator

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.SubmoduleSafeHandle
       extends LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method SubmoduleSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle

.class private abstract auto ansi beforefieldinit LibGit2Sharp.Core.LazyGroup`1<T>
       extends [mscorlib]System.Object
{
  .class interface abstract auto ansi nested private IEvaluator`1<T,TInput>
  {
    .method public hidebysig newslot abstract virtual 
            instance void  Evaluate(!TInput input) cil managed
    {
    } // end of method IEvaluator`1::Evaluate

  } // end of class IEvaluator`1

  .class auto ansi nested private beforefieldinit Dependent`2<T,TInput,TOutput>
         extends [mscorlib]System.Object
         implements class LibGit2Sharp.Core.ILazy`1<!TOutput>,
                    class LibGit2Sharp.Core.LazyGroup`1/IEvaluator`1<!T,!TInput>
  {
    .field private initonly class [System.Core]System.Func`2<!TInput,!TOutput> valueFactory
    .field private initonly class LibGit2Sharp.Core.LazyGroup`1<!TInput> lazyGroup
    .field private !TOutput 'value'
    .field private bool hasBeenEvaluated
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(class [System.Core]System.Func`2<!TInput,!TOutput> valueFactory,
                                 class LibGit2Sharp.Core.LazyGroup`1<!TInput> lazyGroup) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  stfld      class [System.Core]System.Func`2<!1,!2> class LibGit2Sharp.Core.LazyGroup`1/Dependent`2<!T,!TInput,!TOutput>::valueFactory
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  stfld      class LibGit2Sharp.Core.LazyGroup`1<!1> class LibGit2Sharp.Core.LazyGroup`1/Dependent`2<!T,!TInput,!TOutput>::lazyGroup
      IL_0014:  ret
    } // end of method Dependent`2::.ctor

    .method public hidebysig newslot specialname virtual final 
            instance !TOutput  get_Value() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance !2 class LibGit2Sharp.Core.LazyGroup`1/Dependent`2<!T,!TInput,!TOutput>::Evaluate()
      IL_0006:  ret
    } // end of method Dependent`2::get_Value

    .method private hidebysig instance !TOutput 
            Evaluate() cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      bool class LibGit2Sharp.Core.LazyGroup`1/Dependent`2<!T,!TInput,!TOutput>::hasBeenEvaluated
      IL_0006:  brtrue.s   IL_0013

      IL_0008:  ldarg.0
      IL_0009:  ldfld      class LibGit2Sharp.Core.LazyGroup`1<!1> class LibGit2Sharp.Core.LazyGroup`1/Dependent`2<!T,!TInput,!TOutput>::lazyGroup
      IL_000e:  callvirt   instance void class LibGit2Sharp.Core.LazyGroup`1<!TInput>::Evaluate()
      IL_0013:  ldarg.0
      IL_0014:  ldfld      !2 class LibGit2Sharp.Core.LazyGroup`1/Dependent`2<!T,!TInput,!TOutput>::'value'
      IL_0019:  ret
    } // end of method Dependent`2::Evaluate

    .method private hidebysig newslot virtual final 
            instance void  'LibGit2Sharp.Core.LazyGroup<T>.IEvaluator<TInput>.Evaluate'(!TInput input) cil managed
    {
      .override  method instance void class LibGit2Sharp.Core.LazyGroup`1/IEvaluator`1<!T,!TInput>::Evaluate(!1)
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.0
      IL_0002:  ldfld      class [System.Core]System.Func`2<!1,!2> class LibGit2Sharp.Core.LazyGroup`1/Dependent`2<!T,!TInput,!TOutput>::valueFactory
      IL_0007:  ldarg.1
      IL_0008:  callvirt   instance !1 class [System.Core]System.Func`2<!TInput,!TOutput>::Invoke(!0)
      IL_000d:  stfld      !2 class LibGit2Sharp.Core.LazyGroup`1/Dependent`2<!T,!TInput,!TOutput>::'value'
      IL_0012:  ldarg.0
      IL_0013:  ldc.i4.1
      IL_0014:  stfld      bool class LibGit2Sharp.Core.LazyGroup`1/Dependent`2<!T,!TInput,!TOutput>::hasBeenEvaluated
      IL_0019:  ret
    } // end of method Dependent`2::'LibGit2Sharp.Core.LazyGroup<T>.IEvaluator<TInput>.Evaluate'

    .property instance !TOutput Value()
    {
      .get instance !TOutput LibGit2Sharp.Core.LazyGroup`1/Dependent`2::get_Value()
    } // end of property Dependent`2::Value
  } // end of class Dependent`2

  .class auto ansi nested family beforefieldinit LazyWrapper`1<T,TType>
         extends class LibGit2Sharp.Core.Compat.Lazy`1<!TType>
         implements class LibGit2Sharp.Core.ILazy`1<!TType>
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(class [System.Core]System.Func`1<!TType> evaluator) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void class LibGit2Sharp.Core.Compat.Lazy`1<!TType>::.ctor(class [System.Core]System.Func`1<!0>)
      IL_0007:  ret
    } // end of method LazyWrapper`1::.ctor

  } // end of class LazyWrapper`1

  .field private initonly class [mscorlib]System.Collections.Generic.IList`1<class LibGit2Sharp.Core.LazyGroup`1/IEvaluator`1<!T,!T>> evaluators
  .field private initonly object lock
  .field private bool evaluated
  .field family initonly class LibGit2Sharp.Repository repo
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       36 (0x24)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.LazyGroup`1/IEvaluator`1<!T,!T>>::.ctor()
    IL_0006:  stfld      class [mscorlib]System.Collections.Generic.IList`1<class LibGit2Sharp.Core.LazyGroup`1/IEvaluator`1<!0,!0>> class LibGit2Sharp.Core.LazyGroup`1<!T>::evaluators
    IL_000b:  ldarg.0
    IL_000c:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0011:  stfld      object class LibGit2Sharp.Core.LazyGroup`1<!T>::lock
    IL_0016:  ldarg.0
    IL_0017:  call       instance void [mscorlib]System.Object::.ctor()
    IL_001c:  ldarg.0
    IL_001d:  ldarg.1
    IL_001e:  stfld      class LibGit2Sharp.Repository class LibGit2Sharp.Core.LazyGroup`1<!T>::repo
    IL_0023:  ret
  } // end of method LazyGroup`1::.ctor

  .method public hidebysig instance class LibGit2Sharp.Core.ILazy`1<!!TResult> 
          AddLazy<TResult>(class [System.Core]System.Func`2<!T,!!TResult> func) cil managed
  {
    // Code size       22 (0x16)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.LazyGroup`1/Dependent`2<!T,!T,!!TResult> V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldarg.0
    IL_0002:  newobj     instance void class LibGit2Sharp.Core.LazyGroup`1/Dependent`2<!T,!T,!!TResult>::.ctor(class [System.Core]System.Func`2<!1,!2>,
                                                                                                               class LibGit2Sharp.Core.LazyGroup`1<!1>)
    IL_0007:  stloc.0
    IL_0008:  ldarg.0
    IL_0009:  ldfld      class [mscorlib]System.Collections.Generic.IList`1<class LibGit2Sharp.Core.LazyGroup`1/IEvaluator`1<!0,!0>> class LibGit2Sharp.Core.LazyGroup`1<!T>::evaluators
    IL_000e:  ldloc.0
    IL_000f:  callvirt   instance void class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Core.LazyGroup`1/IEvaluator`1<!T,!T>>::Add(!0)
    IL_0014:  ldloc.0
    IL_0015:  ret
  } // end of method LazyGroup`1::AddLazy

  .method public hidebysig instance void 
          Evaluate() cil managed
  {
    // Code size       74 (0x4a)
    .maxstack  4
    .locals init (class [mscorlib]System.Action`1<!T> V_0,
             object V_1)
    IL_0000:  ldnull
    IL_0001:  stloc.0
    IL_0002:  ldarg.0
    IL_0003:  ldfld      bool class LibGit2Sharp.Core.LazyGroup`1<!T>::evaluated
    IL_0008:  brfalse.s  IL_000b

    IL_000a:  ret

    IL_000b:  ldarg.0
    IL_000c:  ldfld      object class LibGit2Sharp.Core.LazyGroup`1<!T>::lock
    IL_0011:  dup
    IL_0012:  stloc.1
    IL_0013:  call       void [mscorlib]System.Threading.Monitor::Enter(object)
    .try
    {
      IL_0018:  ldarg.0
      IL_0019:  ldfld      bool class LibGit2Sharp.Core.LazyGroup`1<!T>::evaluated
      IL_001e:  brfalse.s  IL_0022

      IL_0020:  leave.s    IL_0049

      IL_0022:  ldarg.0
      IL_0023:  ldloc.0
      IL_0024:  brtrue.s   IL_0033

      IL_0026:  ldarg.0
      IL_0027:  ldftn      instance void class LibGit2Sharp.Core.LazyGroup`1<!T>::'<Evaluate>b__0'(!0)
      IL_002d:  newobj     instance void class [mscorlib]System.Action`1<!T>::.ctor(object,
                                                                                    native int)
      IL_0032:  stloc.0
      IL_0033:  ldloc.0
      IL_0034:  callvirt   instance void class LibGit2Sharp.Core.LazyGroup`1<!T>::EvaluateInternal(class [mscorlib]System.Action`1<!0>)
      IL_0039:  ldarg.0
      IL_003a:  ldc.i4.1
      IL_003b:  stfld      bool class LibGit2Sharp.Core.LazyGroup`1<!T>::evaluated
      IL_0040:  leave.s    IL_0049

    }  // end .try
    finally
    {
      IL_0042:  ldloc.1
      IL_0043:  call       void [mscorlib]System.Threading.Monitor::Exit(object)
      IL_0048:  endfinally
    }  // end handler
    IL_0049:  ret
  } // end of method LazyGroup`1::Evaluate

  .method family hidebysig newslot abstract virtual 
          instance void  EvaluateInternal(class [mscorlib]System.Action`1<!T> evaluator) cil managed
  {
  } // end of method LazyGroup`1::EvaluateInternal

  .method family hidebysig static class LibGit2Sharp.Core.ILazy`1<!!TResult> 
          Singleton<TResult>(class [System.Core]System.Func`1<!!TResult> resultSelector) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void class LibGit2Sharp.Core.LazyGroup`1/LazyWrapper`1<!T,!!TResult>::.ctor(class [System.Core]System.Func`1<!1>)
    IL_0006:  ret
  } // end of method LazyGroup`1::Singleton

  .method private hidebysig instance void 
          '<Evaluate>b__0'(!T input) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       49 (0x31)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.LazyGroup`1/IEvaluator`1<!T,!T> V_0,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Core.LazyGroup`1/IEvaluator`1<!T,!T>> V_1)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.IList`1<class LibGit2Sharp.Core.LazyGroup`1/IEvaluator`1<!0,!0>> class LibGit2Sharp.Core.LazyGroup`1<!T>::evaluators
    IL_0006:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Core.LazyGroup`1/IEvaluator`1<!T,!T>>::GetEnumerator()
    IL_000b:  stloc.1
    .try
    {
      IL_000c:  br.s       IL_001c

      IL_000e:  ldloc.1
      IL_000f:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Core.LazyGroup`1/IEvaluator`1<!T,!T>>::get_Current()
      IL_0014:  stloc.0
      IL_0015:  ldloc.0
      IL_0016:  ldarg.1
      IL_0017:  callvirt   instance void class LibGit2Sharp.Core.LazyGroup`1/IEvaluator`1<!T,!T>::Evaluate(!1)
      IL_001c:  ldloc.1
      IL_001d:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_0022:  brtrue.s   IL_000e

      IL_0024:  leave.s    IL_0030

    }  // end .try
    finally
    {
      IL_0026:  ldloc.1
      IL_0027:  brfalse.s  IL_002f

      IL_0029:  ldloc.1
      IL_002a:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002f:  endfinally
    }  // end handler
    IL_0030:  ret
  } // end of method LazyGroup`1::'<Evaluate>b__0'

} // end of class LibGit2Sharp.Core.LazyGroup`1

.class interface private abstract auto ansi LibGit2Sharp.Core.ILazy`1<T>
{
  .method public hidebysig newslot specialname abstract virtual 
          instance !T  get_Value() cil managed
  {
  } // end of method ILazy`1::get_Value

  .property instance !T Value()
  {
    .get instance !T LibGit2Sharp.Core.ILazy`1::get_Value()
  } // end of property ILazy`1::Value
} // end of class LibGit2Sharp.Core.ILazy`1

.class public auto ansi beforefieldinit LibGit2Sharp.Core.Compat.Lazy`1<TType>
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerStepThroughAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private initonly class [System.Core]System.Func`1<!TType> evaluator
  .field private !TType 'value'
  .field private bool hasBeenEvaluated
  .field private initonly object padLock
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class [System.Core]System.Func`1<!TType> evaluator) cil managed
  {
    // Code size       36 (0x24)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0006:  stfld      object class LibGit2Sharp.Core.Compat.Lazy`1<!TType>::padLock
    IL_000b:  ldarg.0
    IL_000c:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0011:  ldarg.1
    IL_0012:  ldstr      "evaluator"
    IL_0017:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_001c:  ldarg.0
    IL_001d:  ldarg.1
    IL_001e:  stfld      class [System.Core]System.Func`1<!0> class LibGit2Sharp.Core.Compat.Lazy`1<!TType>::evaluator
    IL_0023:  ret
  } // end of method Lazy`1::.ctor

  .method public hidebysig newslot specialname virtual final 
          instance !TType  get_Value() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<!TType>::Evaluate()
    IL_0006:  ret
  } // end of method Lazy`1::get_Value

  .method private hidebysig instance !TType 
          Evaluate() cil managed
  {
    // Code size       69 (0x45)
    .maxstack  2
    .locals init (object V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      bool class LibGit2Sharp.Core.Compat.Lazy`1<!TType>::hasBeenEvaluated
    IL_0006:  brtrue.s   IL_003e

    IL_0008:  ldarg.0
    IL_0009:  ldfld      object class LibGit2Sharp.Core.Compat.Lazy`1<!TType>::padLock
    IL_000e:  dup
    IL_000f:  stloc.0
    IL_0010:  call       void [mscorlib]System.Threading.Monitor::Enter(object)
    .try
    {
      IL_0015:  ldarg.0
      IL_0016:  ldfld      bool class LibGit2Sharp.Core.Compat.Lazy`1<!TType>::hasBeenEvaluated
      IL_001b:  brtrue.s   IL_0035

      IL_001d:  ldarg.0
      IL_001e:  ldarg.0
      IL_001f:  ldfld      class [System.Core]System.Func`1<!0> class LibGit2Sharp.Core.Compat.Lazy`1<!TType>::evaluator
      IL_0024:  callvirt   instance !0 class [System.Core]System.Func`1<!TType>::Invoke()
      IL_0029:  stfld      !0 class LibGit2Sharp.Core.Compat.Lazy`1<!TType>::'value'
      IL_002e:  ldarg.0
      IL_002f:  ldc.i4.1
      IL_0030:  stfld      bool class LibGit2Sharp.Core.Compat.Lazy`1<!TType>::hasBeenEvaluated
      IL_0035:  leave.s    IL_003e

    }  // end .try
    finally
    {
      IL_0037:  ldloc.0
      IL_0038:  call       void [mscorlib]System.Threading.Monitor::Exit(object)
      IL_003d:  endfinally
    }  // end handler
    IL_003e:  ldarg.0
    IL_003f:  ldfld      !0 class LibGit2Sharp.Core.Compat.Lazy`1<!TType>::'value'
    IL_0044:  ret
  } // end of method Lazy`1::Evaluate

  .property instance !TType Value()
  {
    .get instance !TType LibGit2Sharp.Core.Compat.Lazy`1::get_Value()
  } // end of property Lazy`1::Value
} // end of class LibGit2Sharp.Core.Compat.Lazy`1

.class private auto ansi beforefieldinit LibGit2Sharp.Core.SubmoduleLazyGroup
       extends class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle>
{
  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass3'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class [mscorlib]System.Action`1<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle> evaluator
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass3'::.ctor

    .method public hidebysig instance object 
            '<EvaluateInternal>b__2'(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle handle) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class [mscorlib]System.Action`1<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle> LibGit2Sharp.Core.SubmoduleLazyGroup/'<>c__DisplayClass3'::evaluator
      IL_0006:  ldarg.1
      IL_0007:  callvirt   instance void class [mscorlib]System.Action`1<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle>::Invoke(!0)
      IL_000c:  ldnull
      IL_000d:  ret
    } // end of method '<>c__DisplayClass3'::'<EvaluateInternal>b__2'

  } // end of class '<>c__DisplayClass3'

  .field private initonly string name
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               string name) cil managed
  {
    // Code size       15 (0xf)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle>::.ctor(class LibGit2Sharp.Repository)
    IL_0007:  ldarg.0
    IL_0008:  ldarg.2
    IL_0009:  stfld      string LibGit2Sharp.Core.SubmoduleLazyGroup::name
    IL_000e:  ret
  } // end of method SubmoduleLazyGroup::.ctor

  .method family hidebysig virtual instance void 
          EvaluateInternal(class [mscorlib]System.Action`1<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle> evaluator) cil managed
  {
    // Code size       50 (0x32)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.SubmoduleLazyGroup/'<>c__DisplayClass3' V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.Core.SubmoduleLazyGroup/'<>c__DisplayClass3'::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class [mscorlib]System.Action`1<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle> LibGit2Sharp.Core.SubmoduleLazyGroup/'<>c__DisplayClass3'::evaluator
    IL_000d:  ldarg.0
    IL_000e:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle>::repo
    IL_0013:  callvirt   instance class LibGit2Sharp.SubmoduleCollection LibGit2Sharp.Repository::get_Submodules()
    IL_0018:  ldarg.0
    IL_0019:  ldfld      string LibGit2Sharp.Core.SubmoduleLazyGroup::name
    IL_001e:  ldloc.0
    IL_001f:  ldftn      instance object LibGit2Sharp.Core.SubmoduleLazyGroup/'<>c__DisplayClass3'::'<EvaluateInternal>b__2'(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_0025:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,object>::.ctor(object,
                                                                                                                                           native int)
    IL_002a:  ldc.i4.1
    IL_002b:  callvirt   instance !!0 LibGit2Sharp.SubmoduleCollection::Lookup<object>(string,
                                                                                       class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,!!0>,
                                                                                       bool)
    IL_0030:  pop
    IL_0031:  ret
  } // end of method SubmoduleLazyGroup::EvaluateInternal

} // end of class LibGit2Sharp.Core.SubmoduleLazyGroup

.class public auto ansi beforefieldinit LibGit2Sharp.Network
       extends [mscorlib]System.Object
{
  .class auto ansi nested private beforefieldinit PushCallbacks
         extends [mscorlib]System.Object
  {
    .field private initonly class LibGit2Sharp.Handlers.PushStatusErrorHandler onError
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(class LibGit2Sharp.Handlers.PushStatusErrorHandler onError) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  stfld      class LibGit2Sharp.Handlers.PushStatusErrorHandler LibGit2Sharp.Network/PushCallbacks::onError
      IL_000d:  ret
    } // end of method PushCallbacks::.ctor

    .method public hidebysig instance int32 
            Callback(native int referenceNamePtr,
                     native int msgPtr,
                     native int payload) cil managed
    {
      // Code size       83 (0x53)
      .maxstack  4
      .locals init (string V_0,
               string V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Handlers.PushStatusErrorHandler LibGit2Sharp.Network/PushCallbacks::onError
      IL_0006:  brtrue.s   IL_000a

      IL_0008:  ldc.i4.0
      IL_0009:  ret

      IL_000a:  ldarg.1
      IL_000b:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_0010:  call       bool [mscorlib]System.IntPtr::op_Equality(native int,
                                                                     native int)
      IL_0015:  brfalse.s  IL_0024

      IL_0017:  ldc.i4.2
      IL_0018:  ldstr      "Not expecting null for reference name in push stat"
      + "us."
      IL_001d:  call       void LibGit2Sharp.Core.Proxy::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                        string)
      IL_0022:  ldc.i4.m1
      IL_0023:  ret

      IL_0024:  ldarg.2
      IL_0025:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_002a:  call       bool [mscorlib]System.IntPtr::op_Inequality(native int,
                                                                       native int)
      IL_002f:  brfalse.s  IL_0051

      IL_0031:  ldarg.1
      IL_0032:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
      IL_0037:  stloc.0
      IL_0038:  ldarg.2
      IL_0039:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
      IL_003e:  stloc.1
      IL_003f:  ldarg.0
      IL_0040:  ldfld      class LibGit2Sharp.Handlers.PushStatusErrorHandler LibGit2Sharp.Network/PushCallbacks::onError
      IL_0045:  ldloc.0
      IL_0046:  ldloc.1
      IL_0047:  newobj     instance void LibGit2Sharp.PushStatusError::.ctor(string,
                                                                             string)
      IL_004c:  callvirt   instance void LibGit2Sharp.Handlers.PushStatusErrorHandler::Invoke(class LibGit2Sharp.PushStatusError)
      IL_0051:  ldc.i4.0
      IL_0052:  ret
    } // end of method PushCallbacks::Callback

  } // end of class PushCallbacks

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass2'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Repository repository
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass2'::.ctor

    .method public hidebysig instance class LibGit2Sharp.RemoteCollection 
            '<.ctor>b__0'() cil managed
    {
      // Code size       12 (0xc)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Network/'<>c__DisplayClass2'::repository
      IL_0006:  newobj     instance void LibGit2Sharp.RemoteCollection::.ctor(class LibGit2Sharp.Repository)
      IL_000b:  ret
    } // end of method '<>c__DisplayClass2'::'<.ctor>b__0'

  } // end of class '<>c__DisplayClass2'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass5'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public int32 i
    .field public class LibGit2Sharp.Network '<>4__this'
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass5'::.ctor

    .method public hidebysig instance class LibGit2Sharp.FetchHead 
            '<get_FetchHeads>b__4'(string name,
                                   string url,
                                   valuetype LibGit2Sharp.Core.GitOid oid,
                                   bool isMerge) cil managed
    {
      // Code size       44 (0x2c)
      .maxstack  8
      .locals init (int32 V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Network LibGit2Sharp.Network/'<>c__DisplayClass5'::'<>4__this'
      IL_0006:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Network::repository
      IL_000b:  ldarg.1
      IL_000c:  ldarg.2
      IL_000d:  ldarg.3
      IL_000e:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
      IL_0013:  ldarg.s    isMerge
      IL_0015:  ldarg.0
      IL_0016:  dup
      IL_0017:  ldfld      int32 LibGit2Sharp.Network/'<>c__DisplayClass5'::i
      IL_001c:  dup
      IL_001d:  stloc.0
      IL_001e:  ldc.i4.1
      IL_001f:  add
      IL_0020:  stfld      int32 LibGit2Sharp.Network/'<>c__DisplayClass5'::i
      IL_0025:  ldloc.0
      IL_0026:  newobj     instance void LibGit2Sharp.FetchHead::.ctor(class LibGit2Sharp.Repository,
                                                                       string,
                                                                       string,
                                                                       class LibGit2Sharp.ObjectId,
                                                                       bool,
                                                                       int32)
      IL_002b:  ret
    } // end of method '<>c__DisplayClass5'::'<get_FetchHeads>b__4'

  } // end of class '<>c__DisplayClass5'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass9'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.DirectReference> directReferences
    .field public class LibGit2Sharp.Network '<>4__this'
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass9'::.ctor

    .method public hidebysig instance int32 
            '<ListReferences>b__7'(valuetype LibGit2Sharp.Core.GitRemoteHead& remoteHead,
                                   native int payload) cil managed
    {
      // Code size       86 (0x56)
      .maxstack  5
      .locals init (class LibGit2Sharp.ObjectId V_0,
               string V_1)
      IL_0000:  ldarg.1
      IL_0001:  ldfld      native int LibGit2Sharp.Core.GitRemoteHead::NamePtr
      IL_0006:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_000b:  call       bool [mscorlib]System.IntPtr::op_Equality(native int,
                                                                     native int)
      IL_0010:  brfalse.s  IL_001f

      IL_0012:  ldc.i4.2
      IL_0013:  ldstr      "Not expecting null value for reference name."
      IL_0018:  call       void LibGit2Sharp.Core.Proxy::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                        string)
      IL_001d:  ldc.i4.m1
      IL_001e:  ret

      IL_001f:  ldarg.1
      IL_0020:  ldfld      valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.Core.GitRemoteHead::Oid
      IL_0025:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
      IL_002a:  stloc.0
      IL_002b:  ldarg.1
      IL_002c:  ldfld      native int LibGit2Sharp.Core.GitRemoteHead::NamePtr
      IL_0031:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
      IL_0036:  stloc.1
      IL_0037:  ldarg.0
      IL_0038:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.DirectReference> LibGit2Sharp.Network/'<>c__DisplayClass9'::directReferences
      IL_003d:  ldloc.1
      IL_003e:  ldarg.0
      IL_003f:  ldfld      class LibGit2Sharp.Network LibGit2Sharp.Network/'<>c__DisplayClass9'::'<>4__this'
      IL_0044:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Network::repository
      IL_0049:  ldloc.0
      IL_004a:  newobj     instance void LibGit2Sharp.DirectReference::.ctor(string,
                                                                             class LibGit2Sharp.Repository,
                                                                             class LibGit2Sharp.ObjectId)
      IL_004f:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.DirectReference>::Add(!0)
      IL_0054:  ldc.i4.0
      IL_0055:  ret
    } // end of method '<>c__DisplayClass9'::'<ListReferences>b__7'

  } // end of class '<>c__DisplayClass9'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClassd'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Credentials credentials
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClassd'::.ctor

    .method public hidebysig instance int32 
            '<Fetch>b__b'([out] native int& cred,
                          native int url,
                          native int username_from_url,
                          uint32 types,
                          native int payload) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      class LibGit2Sharp.Credentials LibGit2Sharp.Network/'<>c__DisplayClassd'::credentials
      IL_0007:  callvirt   instance string LibGit2Sharp.Credentials::get_Username()
      IL_000c:  ldarg.0
      IL_000d:  ldfld      class LibGit2Sharp.Credentials LibGit2Sharp.Network/'<>c__DisplayClassd'::credentials
      IL_0012:  callvirt   instance string LibGit2Sharp.Credentials::get_Password()
      IL_0017:  call       int32 LibGit2Sharp.Core.NativeMethods::git_cred_userpass_plaintext_new(native int&,
                                                                                                  string,
                                                                                                  string)
      IL_001c:  ret
    } // end of method '<>c__DisplayClassd'::'<Fetch>b__b'

  } // end of class '<>c__DisplayClassd'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass11'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Credentials credentials
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass11'::.ctor

    .method public hidebysig instance int32 
            '<Push>b__f'([out] native int& cred,
                         native int url,
                         native int username_from_url,
                         uint32 types,
                         native int payload) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      class LibGit2Sharp.Credentials LibGit2Sharp.Network/'<>c__DisplayClass11'::credentials
      IL_0007:  callvirt   instance string LibGit2Sharp.Credentials::get_Username()
      IL_000c:  ldarg.0
      IL_000d:  ldfld      class LibGit2Sharp.Credentials LibGit2Sharp.Network/'<>c__DisplayClass11'::credentials
      IL_0012:  callvirt   instance string LibGit2Sharp.Credentials::get_Password()
      IL_0017:  call       int32 LibGit2Sharp.Core.NativeMethods::git_cred_userpass_plaintext_new(native int&,
                                                                                                  string,
                                                                                                  string)
      IL_001c:  ret
    } // end of method '<>c__DisplayClass11'::'<Push>b__f'

  } // end of class '<>c__DisplayClass11'

  .field private initonly class LibGit2Sharp.Repository repository
  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.RemoteCollection> remotes
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method Network::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repository) cil managed
  {
    // Code size       62 (0x3e)
    .maxstack  4
    .locals init (class [System.Core]System.Func`1<class LibGit2Sharp.RemoteCollection> V_0,
             class LibGit2Sharp.Network/'<>c__DisplayClass2' V_1)
    IL_0000:  ldnull
    IL_0001:  stloc.0
    IL_0002:  newobj     instance void LibGit2Sharp.Network/'<>c__DisplayClass2'::.ctor()
    IL_0007:  stloc.1
    IL_0008:  ldloc.1
    IL_0009:  ldarg.1
    IL_000a:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Network/'<>c__DisplayClass2'::repository
    IL_000f:  ldarg.0
    IL_0010:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0015:  ldarg.0
    IL_0016:  ldloc.1
    IL_0017:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Network/'<>c__DisplayClass2'::repository
    IL_001c:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Network::repository
    IL_0021:  ldarg.0
    IL_0022:  ldloc.0
    IL_0023:  brtrue.s   IL_0032

    IL_0025:  ldloc.1
    IL_0026:  ldftn      instance class LibGit2Sharp.RemoteCollection LibGit2Sharp.Network/'<>c__DisplayClass2'::'<.ctor>b__0'()
    IL_002c:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.RemoteCollection>::.ctor(object,
                                                                                                                    native int)
    IL_0031:  stloc.0
    IL_0032:  ldloc.0
    IL_0033:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.RemoteCollection>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_0038:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.RemoteCollection> LibGit2Sharp.Network::remotes
    IL_003d:  ret
  } // end of method Network::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.FetchHead> 
          get_FetchHeads() cil managed
  {
    // Code size       49 (0x31)
    .maxstack  4
    .locals init (class LibGit2Sharp.Network/'<>c__DisplayClass5' V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.Network/'<>c__DisplayClass5'::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Network LibGit2Sharp.Network/'<>c__DisplayClass5'::'<>4__this'
    IL_000d:  ldloc.0
    IL_000e:  ldc.i4.0
    IL_000f:  stfld      int32 LibGit2Sharp.Network/'<>c__DisplayClass5'::i
    IL_0014:  ldarg.0
    IL_0015:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Network::repository
    IL_001a:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_001f:  ldloc.0
    IL_0020:  ldftn      instance class LibGit2Sharp.FetchHead LibGit2Sharp.Network/'<>c__DisplayClass5'::'<get_FetchHeads>b__4'(string,
                                                                                                                                 string,
                                                                                                                                 valuetype LibGit2Sharp.Core.GitOid,
                                                                                                                                 bool)
    IL_0026:  newobj     instance void class [System.Core]System.Func`5<string,string,valuetype LibGit2Sharp.Core.GitOid,bool,class LibGit2Sharp.FetchHead>::.ctor(object,
                                                                                                                                                                   native int)
    IL_002b:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!0> LibGit2Sharp.Core.Proxy::git_repository_fetchhead_foreach<class LibGit2Sharp.FetchHead>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                                                               class [System.Core]System.Func`5<string,string,valuetype LibGit2Sharp.Core.GitOid,bool,!!0>)
    IL_0030:  ret
  } // end of method Network::get_FetchHeads

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.RemoteCollection 
          get_Remotes() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.RemoteCollection> LibGit2Sharp.Network::remotes
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.RemoteCollection>::get_Value()
    IL_000b:  ret
  } // end of method Network::get_Remotes

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.DirectReference> 
          ListReferences(class LibGit2Sharp.Remote remote) cil managed
  {
    // Code size       112 (0x70)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.RemoteSafeHandle V_0,
             class LibGit2Sharp.Core.NativeMethods/git_headlist_cb V_1,
             class LibGit2Sharp.Core.NativeMethods/git_headlist_cb V_2,
             class LibGit2Sharp.Network/'<>c__DisplayClass9' V_3)
    IL_0000:  ldnull
    IL_0001:  stloc.2
    IL_0002:  newobj     instance void LibGit2Sharp.Network/'<>c__DisplayClass9'::.ctor()
    IL_0007:  stloc.3
    IL_0008:  ldloc.3
    IL_0009:  ldarg.0
    IL_000a:  stfld      class LibGit2Sharp.Network LibGit2Sharp.Network/'<>c__DisplayClass9'::'<>4__this'
    IL_000f:  ldarg.1
    IL_0010:  ldstr      "remote"
    IL_0015:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_001a:  ldloc.3
    IL_001b:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.DirectReference>::.ctor()
    IL_0020:  stfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.DirectReference> LibGit2Sharp.Network/'<>c__DisplayClass9'::directReferences
    IL_0025:  ldarg.0
    IL_0026:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Network::repository
    IL_002b:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0030:  ldarg.1
    IL_0031:  callvirt   instance string LibGit2Sharp.Remote::get_Name()
    IL_0036:  ldc.i4.1
    IL_0037:  call       class LibGit2Sharp.Core.Handles.RemoteSafeHandle LibGit2Sharp.Core.Proxy::git_remote_load(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                   string,
                                                                                                                   bool)
    IL_003c:  stloc.0
    .try
    {
      IL_003d:  ldloc.0
      IL_003e:  ldc.i4.0
      IL_003f:  call       void LibGit2Sharp.Core.Proxy::git_remote_connect(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                            valuetype LibGit2Sharp.Core.GitDirection)
      IL_0044:  ldloc.2
      IL_0045:  brtrue.s   IL_0054

      IL_0047:  ldloc.3
      IL_0048:  ldftn      instance int32 LibGit2Sharp.Network/'<>c__DisplayClass9'::'<ListReferences>b__7'(valuetype LibGit2Sharp.Core.GitRemoteHead&,
                                                                                                            native int)
      IL_004e:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_headlist_cb::.ctor(object,
                                                                                                native int)
      IL_0053:  stloc.2
      IL_0054:  ldloc.2
      IL_0055:  stloc.1
      IL_0056:  ldloc.0
      IL_0057:  ldloc.1
      IL_0058:  call       void LibGit2Sharp.Core.Proxy::git_remote_ls(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                       class LibGit2Sharp.Core.NativeMethods/git_headlist_cb)
      IL_005d:  leave.s    IL_0069

    }  // end .try
    finally
    {
      IL_005f:  ldloc.0
      IL_0060:  brfalse.s  IL_0068

      IL_0062:  ldloc.0
      IL_0063:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0068:  endfinally
    }  // end handler
    IL_0069:  ldloc.3
    IL_006a:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.DirectReference> LibGit2Sharp.Network/'<>c__DisplayClass9'::directReferences
    IL_006f:  ret
  } // end of method Network::ListReferences

  .method public hidebysig newslot virtual 
          instance void  Fetch(class LibGit2Sharp.Remote remote,
                               [opt] valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.TagFetchMode> tagFetchMode,
                               [opt] class LibGit2Sharp.Handlers.ProgressHandler onProgress,
                               [opt] class LibGit2Sharp.Handlers.CompletionHandler onCompletion,
                               [opt] class LibGit2Sharp.Handlers.UpdateTipsHandler onUpdateTips,
                               [opt] class LibGit2Sharp.Handlers.TransferProgressHandler onTransferProgress,
                               [opt] class LibGit2Sharp.Credentials credentials) cil managed
  {
    .param [2] = nullref
    .param [3] = nullref
    .param [4] = nullref
    .param [5] = nullref
    .param [6] = nullref
    .param [7] = nullref
    // Code size       196 (0xc4)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb V_0,
             class LibGit2Sharp.Core.Handles.RemoteSafeHandle V_1,
             class LibGit2Sharp.RemoteCallbacks V_2,
             valuetype LibGit2Sharp.Core.GitRemoteCallbacks V_3,
             class LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb V_4,
             class LibGit2Sharp.Network/'<>c__DisplayClassd' V_5)
    IL_0000:  ldnull
    IL_0001:  stloc.s    V_4
    IL_0003:  newobj     instance void LibGit2Sharp.Network/'<>c__DisplayClassd'::.ctor()
    IL_0008:  stloc.s    V_5
    IL_000a:  ldloc.s    V_5
    IL_000c:  ldarg.s    credentials
    IL_000e:  stfld      class LibGit2Sharp.Credentials LibGit2Sharp.Network/'<>c__DisplayClassd'::credentials
    IL_0013:  ldarg.1
    IL_0014:  ldstr      "remote"
    IL_0019:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_001e:  ldnull
    IL_001f:  stloc.0
    IL_0020:  ldarg.0
    IL_0021:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Network::repository
    IL_0026:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_002b:  ldarg.1
    IL_002c:  callvirt   instance string LibGit2Sharp.Remote::get_Name()
    IL_0031:  ldc.i4.1
    IL_0032:  call       class LibGit2Sharp.Core.Handles.RemoteSafeHandle LibGit2Sharp.Core.Proxy::git_remote_load(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                   string,
                                                                                                                   bool)
    IL_0037:  stloc.1
    .try
    {
      IL_0038:  ldarg.3
      IL_0039:  ldarg.s    onCompletion
      IL_003b:  ldarg.s    onUpdateTips
      IL_003d:  newobj     instance void LibGit2Sharp.RemoteCallbacks::.ctor(class LibGit2Sharp.Handlers.ProgressHandler,
                                                                             class LibGit2Sharp.Handlers.CompletionHandler,
                                                                             class LibGit2Sharp.Handlers.UpdateTipsHandler)
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  callvirt   instance valuetype LibGit2Sharp.Core.GitRemoteCallbacks LibGit2Sharp.RemoteCallbacks::GenerateCallbacks()
      IL_0049:  stloc.3
      IL_004a:  ldarga.s   tagFetchMode
      IL_004c:  call       instance bool valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.TagFetchMode>::get_HasValue()
      IL_0051:  brfalse.s  IL_0060

      IL_0053:  ldloc.1
      IL_0054:  ldarga.s   tagFetchMode
      IL_0056:  call       instance !0 valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.TagFetchMode>::get_Value()
      IL_005b:  call       void LibGit2Sharp.Core.Proxy::git_remote_set_autotag(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                valuetype LibGit2Sharp.TagFetchMode)
      IL_0060:  ldloc.s    V_5
      IL_0062:  ldfld      class LibGit2Sharp.Credentials LibGit2Sharp.Network/'<>c__DisplayClassd'::credentials
      IL_0067:  brfalse.s  IL_008b

      IL_0069:  ldloc.s    V_4
      IL_006b:  brtrue.s   IL_007c

      IL_006d:  ldloc.s    V_5
      IL_006f:  ldftn      instance int32 LibGit2Sharp.Network/'<>c__DisplayClassd'::'<Fetch>b__b'(native int&,
                                                                                                   native int,
                                                                                                   native int,
                                                                                                   uint32,
                                                                                                   native int)
      IL_0075:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb::.ctor(object,
                                                                                                    native int)
      IL_007a:  stloc.s    V_4
      IL_007c:  ldloc.s    V_4
      IL_007e:  stloc.0
      IL_007f:  ldloc.1
      IL_0080:  ldloc.0
      IL_0081:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_0086:  call       void LibGit2Sharp.Core.Proxy::git_remote_set_cred_acquire_cb(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                        class LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb,
                                                                                        native int)
      IL_008b:  ldloc.1
      IL_008c:  ldloca.s   V_3
      IL_008e:  call       void LibGit2Sharp.Core.Proxy::git_remote_set_callbacks(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                  valuetype LibGit2Sharp.Core.GitRemoteCallbacks&)
      .try
      {
        IL_0093:  ldloc.1
        IL_0094:  ldc.i4.0
        IL_0095:  call       void LibGit2Sharp.Core.Proxy::git_remote_connect(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                              valuetype LibGit2Sharp.Core.GitDirection)
        IL_009a:  ldloc.1
        IL_009b:  ldarg.s    onTransferProgress
        IL_009d:  call       void LibGit2Sharp.Core.Proxy::git_remote_download(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                               class LibGit2Sharp.Handlers.TransferProgressHandler)
        IL_00a2:  ldloc.1
        IL_00a3:  call       void LibGit2Sharp.Core.Proxy::git_remote_update_tips(class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
        IL_00a8:  leave.s    IL_00b1

      }  // end .try
      finally
      {
        IL_00aa:  ldloc.1
        IL_00ab:  call       void LibGit2Sharp.Core.Proxy::git_remote_disconnect(class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
        IL_00b0:  endfinally
      }  // end handler
      IL_00b1:  leave.s    IL_00bd

    }  // end .try
    finally
    {
      IL_00b3:  ldloc.1
      IL_00b4:  brfalse.s  IL_00bc

      IL_00b6:  ldloc.1
      IL_00b7:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_00bc:  endfinally
    }  // end handler
    IL_00bd:  ldloc.0
    IL_00be:  call       void [mscorlib]System.GC::KeepAlive(object)
    IL_00c3:  ret
  } // end of method Network::Fetch

  .method public hidebysig newslot virtual 
          instance void  Push(class LibGit2Sharp.Remote remote,
                              string objectish,
                              string destinationSpec,
                              class LibGit2Sharp.Handlers.PushStatusErrorHandler onPushStatusError,
                              [opt] class LibGit2Sharp.Credentials credentials) cil managed
  {
    .param [5] = nullref
    // Code size       72 (0x48)
    .maxstack  7
    .locals init (object[] V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "remote"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "objectish"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.3
    IL_0017:  ldarg.3
    IL_0018:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_001d:  ldarg.0
    IL_001e:  ldarg.1
    IL_001f:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0024:  ldstr      "{0}:{1}"
    IL_0029:  ldc.i4.2
    IL_002a:  newarr     [mscorlib]System.Object
    IL_002f:  stloc.0
    IL_0030:  ldloc.0
    IL_0031:  ldc.i4.0
    IL_0032:  ldarg.2
    IL_0033:  stelem.ref
    IL_0034:  ldloc.0
    IL_0035:  ldc.i4.1
    IL_0036:  ldarg.3
    IL_0037:  stelem.ref
    IL_0038:  ldloc.0
    IL_0039:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_003e:  ldarg.s    onPushStatusError
    IL_0040:  ldarg.s    credentials
    IL_0042:  callvirt   instance void LibGit2Sharp.Network::Push(class LibGit2Sharp.Remote,
                                                                  string,
                                                                  class LibGit2Sharp.Handlers.PushStatusErrorHandler,
                                                                  class LibGit2Sharp.Credentials)
    IL_0047:  ret
  } // end of method Network::Push

  .method public hidebysig newslot virtual 
          instance void  Push(class LibGit2Sharp.Remote remote,
                              string pushRefSpec,
                              class LibGit2Sharp.Handlers.PushStatusErrorHandler onPushStatusError,
                              [opt] class LibGit2Sharp.Credentials credentials) cil managed
  {
    .param [4] = nullref
    // Code size       45 (0x2d)
    .maxstack  5
    .locals init (string[] V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "remote"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "pushRefSpec"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0016:  ldarg.0
    IL_0017:  ldarg.1
    IL_0018:  ldc.i4.1
    IL_0019:  newarr     [mscorlib]System.String
    IL_001e:  stloc.0
    IL_001f:  ldloc.0
    IL_0020:  ldc.i4.0
    IL_0021:  ldarg.2
    IL_0022:  stelem.ref
    IL_0023:  ldloc.0
    IL_0024:  ldarg.3
    IL_0025:  ldarg.s    credentials
    IL_0027:  callvirt   instance void LibGit2Sharp.Network::Push(class LibGit2Sharp.Remote,
                                                                  class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                  class LibGit2Sharp.Handlers.PushStatusErrorHandler,
                                                                  class LibGit2Sharp.Credentials)
    IL_002c:  ret
  } // end of method Network::Push

  .method public hidebysig newslot virtual 
          instance void  Push(class LibGit2Sharp.Remote remote,
                              class [mscorlib]System.Collections.Generic.IEnumerable`1<string> pushRefSpecs,
                              class LibGit2Sharp.Handlers.PushStatusErrorHandler onPushStatusError,
                              [opt] class LibGit2Sharp.Credentials credentials) cil managed
  {
    .param [4] = nullref
    // Code size       279 (0x117)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb V_0,
             class LibGit2Sharp.Network/PushCallbacks V_1,
             class LibGit2Sharp.Core.Handles.RemoteSafeHandle V_2,
             class LibGit2Sharp.Core.Handles.PushSafeHandle V_3,
             string V_4,
             class LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb V_5,
             class LibGit2Sharp.Network/'<>c__DisplayClass11' V_6,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<string> V_7)
    IL_0000:  ldnull
    IL_0001:  stloc.s    V_5
    IL_0003:  newobj     instance void LibGit2Sharp.Network/'<>c__DisplayClass11'::.ctor()
    IL_0008:  stloc.s    V_6
    IL_000a:  ldloc.s    V_6
    IL_000c:  ldarg.s    credentials
    IL_000e:  stfld      class LibGit2Sharp.Credentials LibGit2Sharp.Network/'<>c__DisplayClass11'::credentials
    IL_0013:  ldarg.1
    IL_0014:  ldstr      "remote"
    IL_0019:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_001e:  ldarg.2
    IL_001f:  ldstr      "pushRefSpecs"
    IL_0024:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0029:  ldnull
    IL_002a:  stloc.0
    IL_002b:  ldarg.2
    IL_002c:  call       bool [System.Core]System.Linq.Enumerable::Any<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0031:  brtrue.s   IL_0034

    IL_0033:  ret

    IL_0034:  ldarg.3
    IL_0035:  newobj     instance void LibGit2Sharp.Network/PushCallbacks::.ctor(class LibGit2Sharp.Handlers.PushStatusErrorHandler)
    IL_003a:  stloc.1
    IL_003b:  ldarg.0
    IL_003c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Network::repository
    IL_0041:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0046:  ldarg.1
    IL_0047:  callvirt   instance string LibGit2Sharp.Remote::get_Name()
    IL_004c:  ldc.i4.1
    IL_004d:  call       class LibGit2Sharp.Core.Handles.RemoteSafeHandle LibGit2Sharp.Core.Proxy::git_remote_load(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                   string,
                                                                                                                   bool)
    IL_0052:  stloc.2
    .try
    {
      IL_0053:  ldloc.s    V_6
      IL_0055:  ldfld      class LibGit2Sharp.Credentials LibGit2Sharp.Network/'<>c__DisplayClass11'::credentials
      IL_005a:  brfalse.s  IL_007e

      IL_005c:  ldloc.s    V_5
      IL_005e:  brtrue.s   IL_006f

      IL_0060:  ldloc.s    V_6
      IL_0062:  ldftn      instance int32 LibGit2Sharp.Network/'<>c__DisplayClass11'::'<Push>b__f'(native int&,
                                                                                                   native int,
                                                                                                   native int,
                                                                                                   uint32,
                                                                                                   native int)
      IL_0068:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb::.ctor(object,
                                                                                                    native int)
      IL_006d:  stloc.s    V_5
      IL_006f:  ldloc.s    V_5
      IL_0071:  stloc.0
      IL_0072:  ldloc.2
      IL_0073:  ldloc.0
      IL_0074:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_0079:  call       void LibGit2Sharp.Core.Proxy::git_remote_set_cred_acquire_cb(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                        class LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb,
                                                                                        native int)
      .try
      {
        IL_007e:  ldloc.2
        IL_007f:  ldc.i4.1
        IL_0080:  call       void LibGit2Sharp.Core.Proxy::git_remote_connect(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                              valuetype LibGit2Sharp.Core.GitDirection)
        IL_0085:  ldloc.2
        IL_0086:  call       class LibGit2Sharp.Core.Handles.PushSafeHandle LibGit2Sharp.Core.Proxy::git_push_new(class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
        IL_008b:  stloc.3
        .try
        {
          IL_008c:  ldarg.2
          IL_008d:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<string>::GetEnumerator()
          IL_0092:  stloc.s    V_7
          .try
          {
            IL_0094:  br.s       IL_00a7

            IL_0096:  ldloc.s    V_7
            IL_0098:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<string>::get_Current()
            IL_009d:  stloc.s    V_4
            IL_009f:  ldloc.3
            IL_00a0:  ldloc.s    V_4
            IL_00a2:  call       void LibGit2Sharp.Core.Proxy::git_push_add_refspec(class LibGit2Sharp.Core.Handles.PushSafeHandle,
                                                                                    string)
            IL_00a7:  ldloc.s    V_7
            IL_00a9:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
            IL_00ae:  brtrue.s   IL_0096

            IL_00b0:  leave.s    IL_00be

          }  // end .try
          finally
          {
            IL_00b2:  ldloc.s    V_7
            IL_00b4:  brfalse.s  IL_00bd

            IL_00b6:  ldloc.s    V_7
            IL_00b8:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
            IL_00bd:  endfinally
          }  // end handler
          IL_00be:  ldloc.3
          IL_00bf:  call       void LibGit2Sharp.Core.Proxy::git_push_finish(class LibGit2Sharp.Core.Handles.PushSafeHandle)
          IL_00c4:  ldloc.3
          IL_00c5:  call       bool LibGit2Sharp.Core.Proxy::git_push_unpack_ok(class LibGit2Sharp.Core.Handles.PushSafeHandle)
          IL_00ca:  brtrue.s   IL_00d7

          IL_00cc:  ldstr      "Push failed - remote did not successfully unpack."
          IL_00d1:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
          IL_00d6:  throw

          IL_00d7:  ldloc.3
          IL_00d8:  ldloc.1
          IL_00d9:  ldftn      instance int32 LibGit2Sharp.Network/PushCallbacks::Callback(native int,
                                                                                           native int,
                                                                                           native int)
          IL_00df:  newobj     instance void LibGit2Sharp.Core.NativeMethods/push_status_foreach_cb::.ctor(object,
                                                                                                           native int)
          IL_00e4:  call       void LibGit2Sharp.Core.Proxy::git_push_status_foreach(class LibGit2Sharp.Core.Handles.PushSafeHandle,
                                                                                     class LibGit2Sharp.Core.NativeMethods/push_status_foreach_cb)
          IL_00e9:  ldloc.3
          IL_00ea:  call       void LibGit2Sharp.Core.Proxy::git_push_update_tips(class LibGit2Sharp.Core.Handles.PushSafeHandle)
          IL_00ef:  leave.s    IL_00fb

        }  // end .try
        finally
        {
          IL_00f1:  ldloc.3
          IL_00f2:  brfalse.s  IL_00fa

          IL_00f4:  ldloc.3
          IL_00f5:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          IL_00fa:  endfinally
        }  // end handler
        IL_00fb:  leave.s    IL_0104

      }  // end .try
      finally
      {
        IL_00fd:  ldloc.2
        IL_00fe:  call       void LibGit2Sharp.Core.Proxy::git_remote_disconnect(class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
        IL_0103:  endfinally
      }  // end handler
      IL_0104:  leave.s    IL_0110

    }  // end .try
    finally
    {
      IL_0106:  ldloc.2
      IL_0107:  brfalse.s  IL_010f

      IL_0109:  ldloc.2
      IL_010a:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_010f:  endfinally
    }  // end handler
    IL_0110:  ldloc.0
    IL_0111:  call       void [mscorlib]System.GC::KeepAlive(object)
    IL_0116:  ret
  } // end of method Network::Push

  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.FetchHead>
          FetchHeads()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.FetchHead> LibGit2Sharp.Network::get_FetchHeads()
  } // end of property Network::FetchHeads
  .property instance class LibGit2Sharp.RemoteCollection
          Remotes()
  {
    .get instance class LibGit2Sharp.RemoteCollection LibGit2Sharp.Network::get_Remotes()
  } // end of property Network::Remotes
} // end of class LibGit2Sharp.Network

.class private sequential ansi sealed beforefieldinit LibGit2Sharp.Core.GitRemoteHead
       extends [mscorlib]System.ValueType
{
  .field public bool Local
  .field public valuetype LibGit2Sharp.Core.GitOid Oid
  .field public valuetype LibGit2Sharp.Core.GitOid Loid
  .field public native int NamePtr
} // end of class LibGit2Sharp.Core.GitRemoteHead

.class public auto ansi beforefieldinit LibGit2Sharp.ReflogEntry
       extends [mscorlib]System.Object
{
  .field private initonly class LibGit2Sharp.ObjectId _from
  .field private initonly class LibGit2Sharp.ObjectId _to
  .field private initonly class LibGit2Sharp.Signature _commiter
  .field private initonly string message
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ReflogEntry::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.InteropServices.SafeHandle entryHandle) cil managed
  {
    // Code size       55 (0x37)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_reflog_entry_id_old(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_000d:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.ReflogEntry::_from
    IL_0012:  ldarg.0
    IL_0013:  ldarg.1
    IL_0014:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_reflog_entry_id_new(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_0019:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.ReflogEntry::_to
    IL_001e:  ldarg.0
    IL_001f:  ldarg.1
    IL_0020:  call       class LibGit2Sharp.Signature LibGit2Sharp.Core.Proxy::git_reflog_entry_committer(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_0025:  stfld      class LibGit2Sharp.Signature LibGit2Sharp.ReflogEntry::_commiter
    IL_002a:  ldarg.0
    IL_002b:  ldarg.1
    IL_002c:  call       string LibGit2Sharp.Core.Proxy::git_reflog_entry_message(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_0031:  stfld      string LibGit2Sharp.ReflogEntry::message
    IL_0036:  ret
  } // end of method ReflogEntry::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.ObjectId 
          get_From() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.ReflogEntry::_from
    IL_0006:  ret
  } // end of method ReflogEntry::get_From

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.ObjectId 
          get_To() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.ReflogEntry::_to
    IL_0006:  ret
  } // end of method ReflogEntry::get_To

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Signature 
          get_Commiter() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Signature LibGit2Sharp.ReflogEntry::_commiter
    IL_0006:  ret
  } // end of method ReflogEntry::get_Commiter

  .method public hidebysig newslot specialname virtual 
          instance string  get_Message() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.ReflogEntry::message
    IL_0006:  ret
  } // end of method ReflogEntry::get_Message

  .property instance class LibGit2Sharp.ObjectId
          From()
  {
    .get instance class LibGit2Sharp.ObjectId LibGit2Sharp.ReflogEntry::get_From()
  } // end of property ReflogEntry::From
  .property instance class LibGit2Sharp.ObjectId
          To()
  {
    .get instance class LibGit2Sharp.ObjectId LibGit2Sharp.ReflogEntry::get_To()
  } // end of property ReflogEntry::To
  .property instance class LibGit2Sharp.Signature
          Commiter()
  {
    .get instance class LibGit2Sharp.Signature LibGit2Sharp.ReflogEntry::get_Commiter()
  } // end of property ReflogEntry::Commiter
  .property instance string Message()
  {
    .get instance string LibGit2Sharp.ReflogEntry::get_Message()
  } // end of property ReflogEntry::Message
} // end of class LibGit2Sharp.ReflogEntry

.class public auto ansi beforefieldinit LibGit2Sharp.Stash
       extends class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>
{
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> 'CS$<>9__CachedAnonymousMethodDelegate1'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::.ctor()
    IL_0006:  ret
  } // end of method Stash::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.ObjectId targetId,
                               int32 index) cil managed
  {
    // Code size       60 (0x3c)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldstr      "stash@{{{0}}}"
    IL_0007:  ldarg.3
    IL_0008:  box        [mscorlib]System.Int32
    IL_000d:  call       string [mscorlib]System.String::Format(string,
                                                                object)
    IL_0012:  ldarg.1
    IL_0013:  ldarg.2
    IL_0014:  newobj     instance void LibGit2Sharp.DirectReference::.ctor(string,
                                                                           class LibGit2Sharp.Repository,
                                                                           class LibGit2Sharp.ObjectId)
    IL_0019:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> LibGit2Sharp.Stash::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_001e:  brtrue.s   IL_0031

    IL_0020:  ldnull
    IL_0021:  ldftn      string LibGit2Sharp.Stash::'<.ctor>b__0'(class LibGit2Sharp.Reference)
    IL_0027:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string>::.ctor(object,
                                                                                                                    native int)
    IL_002c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> LibGit2Sharp.Stash::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0031:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> LibGit2Sharp.Stash::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0036:  call       instance void class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::.ctor(class LibGit2Sharp.Repository,
                                                                                                               class LibGit2Sharp.Reference,
                                                                                                               class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string>)
    IL_003b:  ret
  } // end of method Stash::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Commit 
          get_Target() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Stash::get_WorkTree()
    IL_0006:  ret
  } // end of method Stash::get_Target

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Commit 
          get_WorkTree() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance !0 class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_TargetObject()
    IL_0006:  ret
  } // end of method Stash::get_WorkTree

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Commit 
          get_Base() cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance !0 class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_TargetObject()
    IL_0006:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> LibGit2Sharp.Commit::get_Parents()
    IL_000b:  call       !!0 [System.Core]System.Linq.Enumerable::First<class LibGit2Sharp.Commit>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0010:  ret
  } // end of method Stash::get_Base

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Commit 
          get_Index() cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.1
    IL_0002:  call       instance class LibGit2Sharp.Commit LibGit2Sharp.Stash::GetParentAtOrDefault(int32)
    IL_0007:  ret
  } // end of method Stash::get_Index

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Commit 
          get_Untracked() cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.2
    IL_0002:  call       instance class LibGit2Sharp.Commit LibGit2Sharp.Stash::GetParentAtOrDefault(int32)
    IL_0007:  ret
  } // end of method Stash::get_Untracked

  .method private hidebysig instance class LibGit2Sharp.Commit 
          GetParentAtOrDefault(int32 parentIndex) cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance !0 class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_TargetObject()
    IL_0006:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> LibGit2Sharp.Commit::get_Parents()
    IL_000b:  ldarg.1
    IL_000c:  call       !!0 [System.Core]System.Linq.Enumerable::ElementAtOrDefault<class LibGit2Sharp.Commit>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                int32)
    IL_0011:  ret
  } // end of method Stash::GetParentAtOrDefault

  .method public hidebysig newslot specialname virtual 
          instance string  get_Message() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Stash::get_WorkTree()
    IL_0006:  callvirt   instance string LibGit2Sharp.Commit::get_Message()
    IL_000b:  ret
  } // end of method Stash::get_Message

  .method family hidebysig virtual instance string 
          Shorten() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_0006:  ret
  } // end of method Stash::Shorten

  .method private hidebysig static string 
          '<.ctor>b__0'(class LibGit2Sharp.Reference r) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0006:  ret
  } // end of method Stash::'<.ctor>b__0'

  .property instance class LibGit2Sharp.Commit
          Target()
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 55 54 68 69 73 20 70 72 6F 70 65 72 74 79   // ..UThis property
                                                                                20 77 69 6C 6C 20 62 65 20 72 65 6D 6F 76 65 64   //  will be removed
                                                                                20 69 6E 20 74 68 65 20 6E 65 78 74 20 72 65 6C   //  in the next rel
                                                                                65 61 73 65 2E 20 50 6C 65 61 73 65 20 75 73 65   // ease. Please use
                                                                                20 53 74 61 73 68 2E 57 6F 72 6B 54 72 65 65 20   //  Stash.WorkTree 
                                                                                69 6E 73 74 65 61 64 2E 00 00 )                   // instead...
    .get instance class LibGit2Sharp.Commit LibGit2Sharp.Stash::get_Target()
  } // end of property Stash::Target
  .property instance class LibGit2Sharp.Commit
          WorkTree()
  {
    .get instance class LibGit2Sharp.Commit LibGit2Sharp.Stash::get_WorkTree()
  } // end of property Stash::WorkTree
  .property instance class LibGit2Sharp.Commit
          Base()
  {
    .get instance class LibGit2Sharp.Commit LibGit2Sharp.Stash::get_Base()
  } // end of property Stash::Base
  .property instance class LibGit2Sharp.Commit
          Index()
  {
    .get instance class LibGit2Sharp.Commit LibGit2Sharp.Stash::get_Index()
  } // end of property Stash::Index
  .property instance class LibGit2Sharp.Commit
          Untracked()
  {
    .get instance class LibGit2Sharp.Commit LibGit2Sharp.Stash::get_Untracked()
  } // end of property Stash::Untracked
  .property instance string Message()
  {
    .get instance string LibGit2Sharp.Stash::get_Message()
  } // end of property Stash::Message
} // end of class LibGit2Sharp.Stash

.class public auto ansi sealed LibGit2Sharp.StashOptions
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 2E 54 68 69 73 20 74 79 70 65 20 77 69 6C   // ...This type wil
                                                                              6C 20 62 65 20 72 65 6D 6F 76 65 64 20 69 6E 20   // l be removed in 
                                                                              74 68 65 20 6E 65 78 74 20 72 65 6C 65 61 73 65   // the next release
                                                                              2E 00 00 )                                        // ...
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.StashOptions Default = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.StashOptions KeepIndex = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.StashOptions IncludeUntracked = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.StashOptions IncludeIgnored = int32(0x00000004)
} // end of class LibGit2Sharp.StashOptions

.class public auto ansi serializable beforefieldinit LibGit2Sharp.OrphanedHeadException
       extends LibGit2Sharp.LibGit2SharpException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor()
    IL_0006:  ret
  } // end of method OrphanedHeadException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0007:  ret
  } // end of method OrphanedHeadException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               class [mscorlib]System.Exception innerException) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 class [mscorlib]System.Exception)
    IL_0008:  ret
  } // end of method OrphanedHeadException::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                               valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo,
                                                                                 valuetype [mscorlib]System.Runtime.Serialization.StreamingContext)
    IL_0008:  ret
  } // end of method OrphanedHeadException::.ctor

} // end of class LibGit2Sharp.OrphanedHeadException

.class public auto ansi beforefieldinit LibGit2Sharp.StashCollection
       extends [mscorlib]System.Object
       implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Stash>,
                  [mscorlib]System.Collections.IEnumerable
{
  .custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field assembly initonly class LibGit2Sharp.Repository repo
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method StashCollection::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.StashCollection::repo
    IL_000d:  ret
  } // end of method StashCollection::.ctor

  .method public hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Stash> 
          GetEnumerator() cil managed
  {
    // Code size       34 (0x22)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.StashCollection::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  ldarg.0
    IL_000c:  ldftn      instance class LibGit2Sharp.Stash LibGit2Sharp.StashCollection::'<GetEnumerator>b__0'(int32,
                                                                                                               native int,
                                                                                                               valuetype LibGit2Sharp.Core.GitOid)
    IL_0012:  newobj     instance void class [System.Core]System.Func`4<int32,native int,valuetype LibGit2Sharp.Core.GitOid,class LibGit2Sharp.Stash>::.ctor(object,
                                                                                                                                                             native int)
    IL_0017:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!0> LibGit2Sharp.Core.Proxy::git_stash_foreach<class LibGit2Sharp.Stash>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                                            class [System.Core]System.Func`4<int32,native int,valuetype LibGit2Sharp.Core.GitOid,!!0>)
    IL_001c:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Stash>::GetEnumerator()
    IL_0021:  ret
  } // end of method StashCollection::GetEnumerator

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Stash> LibGit2Sharp.StashCollection::GetEnumerator()
    IL_0006:  ret
  } // end of method StashCollection::System.Collections.IEnumerable.GetEnumerator

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Stash 
          get_Item(int32 index) cil managed
  {
    // Code size       80 (0x50)
    .maxstack  4
    .locals init (class LibGit2Sharp.GitObject V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldc.i4.0
    IL_0002:  bge.s      IL_0014

    IL_0004:  ldstr      "index"
    IL_0009:  ldstr      "The passed index must be a positive integer."
    IL_000e:  newobj     instance void [mscorlib]System.ArgumentOutOfRangeException::.ctor(string,
                                                                                           string)
    IL_0013:  throw

    IL_0014:  ldarg.0
    IL_0015:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.StashCollection::repo
    IL_001a:  ldstr      "stash@{{{0}}}"
    IL_001f:  ldarg.1
    IL_0020:  box        [mscorlib]System.Int32
    IL_0025:  call       string [mscorlib]System.String::Format(string,
                                                                object)
    IL_002a:  ldc.i4.1
    IL_002b:  ldc.i4.0
    IL_002c:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.Repository::Lookup(string,
                                                                                               valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                               valuetype LibGit2Sharp.Core.LookUpOptions)
    IL_0031:  stloc.0
    IL_0032:  ldloc.0
    IL_0033:  ldnull
    IL_0034:  call       bool LibGit2Sharp.GitObject::op_Equality(class LibGit2Sharp.GitObject,
                                                                  class LibGit2Sharp.GitObject)
    IL_0039:  brtrue.s   IL_004e

    IL_003b:  ldarg.0
    IL_003c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.StashCollection::repo
    IL_0041:  ldloc.0
    IL_0042:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0047:  ldarg.1
    IL_0048:  newobj     instance void LibGit2Sharp.Stash::.ctor(class LibGit2Sharp.Repository,
                                                                 class LibGit2Sharp.ObjectId,
                                                                 int32)
    IL_004d:  ret

    IL_004e:  ldnull
    IL_004f:  ret
  } // end of method StashCollection::get_Item

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Stash 
          Add(class LibGit2Sharp.Signature stasher,
              [opt] string message,
              [opt] valuetype LibGit2Sharp.StashOptions options) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 6B 54 68 69 73 20 6D 65 74 68 6F 64 20 77   // ..kThis method w
                                                                                69 6C 6C 20 62 65 20 72 65 6D 6F 76 65 64 20 69   // ill be removed i
                                                                                6E 20 74 68 65 20 6E 65 78 74 20 72 65 6C 65 61   // n the next relea
                                                                                73 65 2E 20 50 6C 65 61 73 65 20 75 73 65 20 41   // se. Please use A
                                                                                64 64 28 53 69 67 6E 61 74 75 72 65 2C 20 73 74   // dd(Signature, st
                                                                                72 69 6E 67 2C 20 53 74 61 73 68 4D 6F 64 69 66   // ring, StashModif
                                                                                69 65 72 73 29 20 69 6E 73 74 65 61 64 2E 00 00 ) // iers) instead...
    .param [2] = nullref
    .param [3] = int32(0x00000000)
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  callvirt   instance class LibGit2Sharp.Stash LibGit2Sharp.StashCollection::Add(class LibGit2Sharp.Signature,
                                                                                             string,
                                                                                             valuetype LibGit2Sharp.StashModifiers)
    IL_0009:  ret
  } // end of method StashCollection::Add

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Stash 
          Add(class LibGit2Sharp.Signature stasher,
              [opt] string message,
              [opt] valuetype LibGit2Sharp.StashModifiers options) cil managed
  {
    .param [2] = nullref
    .param [3] = int32(0x00000000)
    // Code size       78 (0x4e)
    .maxstack  4
    .locals init (string V_0,
             class LibGit2Sharp.ObjectId V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "stasher"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
    IL_0011:  brtrue.s   IL_0016

    IL_0013:  ldarg.2
    IL_0014:  br.s       IL_001b

    IL_0016:  ldsfld     string [mscorlib]System.String::Empty
    IL_001b:  call       string LibGit2Sharp.Core.Proxy::git_message_prettify(string)
    IL_0020:  stloc.0
    IL_0021:  ldarg.0
    IL_0022:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.StashCollection::repo
    IL_0027:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_002c:  ldarg.1
    IL_002d:  ldloc.0
    IL_002e:  ldarg.3
    IL_002f:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_stash_save(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                             class LibGit2Sharp.Signature,
                                                                                             string,
                                                                                             valuetype LibGit2Sharp.StashModifiers)
    IL_0034:  stloc.1
    IL_0035:  ldloc.1
    IL_0036:  ldnull
    IL_0037:  call       bool LibGit2Sharp.ObjectId::op_Equality(class LibGit2Sharp.ObjectId,
                                                                 class LibGit2Sharp.ObjectId)
    IL_003c:  brfalse.s  IL_0040

    IL_003e:  ldnull
    IL_003f:  ret

    IL_0040:  ldarg.0
    IL_0041:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.StashCollection::repo
    IL_0046:  ldloc.1
    IL_0047:  ldc.i4.0
    IL_0048:  newobj     instance void LibGit2Sharp.Stash::.ctor(class LibGit2Sharp.Repository,
                                                                 class LibGit2Sharp.ObjectId,
                                                                 int32)
    IL_004d:  ret
  } // end of method StashCollection::Add

  .method public hidebysig newslot virtual 
          instance void  Remove(int32 index) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldc.i4.0
    IL_0002:  bge.s      IL_0014

    IL_0004:  ldstr      "The passed index must be a positive integer."
    IL_0009:  ldstr      "index"
    IL_000e:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string,
                                                                                 string)
    IL_0013:  throw

    IL_0014:  ldarg.0
    IL_0015:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.StashCollection::repo
    IL_001a:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_001f:  ldarg.1
    IL_0020:  call       void LibGit2Sharp.Core.Proxy::git_stash_drop(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                      int32)
    IL_0025:  ret
  } // end of method StashCollection::Remove

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       38 (0x26)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "Count = {0}"
    IL_000a:  ldc.i4.1
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  call       int32 [System.Core]System.Linq.Enumerable::Count<class LibGit2Sharp.Stash>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0019:  box        [mscorlib]System.Int32
    IL_001e:  stelem.ref
    IL_001f:  ldloc.0
    IL_0020:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0025:  ret
  } // end of method StashCollection::get_DebuggerDisplay

  .method private hidebysig instance class LibGit2Sharp.Stash 
          '<GetEnumerator>b__0'(int32 index,
                                native int message,
                                valuetype LibGit2Sharp.Core.GitOid commitId) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.StashCollection::repo
    IL_0006:  ldarg.3
    IL_0007:  newobj     instance void LibGit2Sharp.ObjectId::.ctor(valuetype LibGit2Sharp.Core.GitOid)
    IL_000c:  ldarg.1
    IL_000d:  newobj     instance void LibGit2Sharp.Stash::.ctor(class LibGit2Sharp.Repository,
                                                                 class LibGit2Sharp.ObjectId,
                                                                 int32)
    IL_0012:  ret
  } // end of method StashCollection::'<GetEnumerator>b__0'

  .property instance class LibGit2Sharp.Stash
          Item(int32)
  {
    .get instance class LibGit2Sharp.Stash LibGit2Sharp.StashCollection::get_Item(int32)
  } // end of property StashCollection::Item
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.StashCollection::get_DebuggerDisplay()
  } // end of property StashCollection::DebuggerDisplay
} // end of class LibGit2Sharp.StashCollection

.class public auto ansi beforefieldinit LibGit2Sharp.ExplicitPathsOptions
       extends [mscorlib]System.Object
{
  .field private bool '<ShouldFailOnUnmatchedPath>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private class LibGit2Sharp.Handlers.UnmatchedPathHandler '<OnUnmatchedPath>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldc.i4.1
    IL_0008:  call       instance void LibGit2Sharp.ExplicitPathsOptions::set_ShouldFailOnUnmatchedPath(bool)
    IL_000d:  ret
  } // end of method ExplicitPathsOptions::.ctor

  .method public hidebysig specialname instance bool 
          get_ShouldFailOnUnmatchedPath() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      bool LibGit2Sharp.ExplicitPathsOptions::'<ShouldFailOnUnmatchedPath>k__BackingField'
    IL_0006:  ret
  } // end of method ExplicitPathsOptions::get_ShouldFailOnUnmatchedPath

  .method public hidebysig specialname instance void 
          set_ShouldFailOnUnmatchedPath(bool 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      bool LibGit2Sharp.ExplicitPathsOptions::'<ShouldFailOnUnmatchedPath>k__BackingField'
    IL_0007:  ret
  } // end of method ExplicitPathsOptions::set_ShouldFailOnUnmatchedPath

  .method public hidebysig specialname instance class LibGit2Sharp.Handlers.UnmatchedPathHandler 
          get_OnUnmatchedPath() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Handlers.UnmatchedPathHandler LibGit2Sharp.ExplicitPathsOptions::'<OnUnmatchedPath>k__BackingField'
    IL_0006:  ret
  } // end of method ExplicitPathsOptions::get_OnUnmatchedPath

  .method public hidebysig specialname instance void 
          set_OnUnmatchedPath(class LibGit2Sharp.Handlers.UnmatchedPathHandler 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      class LibGit2Sharp.Handlers.UnmatchedPathHandler LibGit2Sharp.ExplicitPathsOptions::'<OnUnmatchedPath>k__BackingField'
    IL_0007:  ret
  } // end of method ExplicitPathsOptions::set_OnUnmatchedPath

  .property instance bool ShouldFailOnUnmatchedPath()
  {
    .get instance bool LibGit2Sharp.ExplicitPathsOptions::get_ShouldFailOnUnmatchedPath()
    .set instance void LibGit2Sharp.ExplicitPathsOptions::set_ShouldFailOnUnmatchedPath(bool)
  } // end of property ExplicitPathsOptions::ShouldFailOnUnmatchedPath
  .property instance class LibGit2Sharp.Handlers.UnmatchedPathHandler
          OnUnmatchedPath()
  {
    .get instance class LibGit2Sharp.Handlers.UnmatchedPathHandler LibGit2Sharp.ExplicitPathsOptions::get_OnUnmatchedPath()
    .set instance void LibGit2Sharp.ExplicitPathsOptions::set_OnUnmatchedPath(class LibGit2Sharp.Handlers.UnmatchedPathHandler)
  } // end of property ExplicitPathsOptions::OnUnmatchedPath
} // end of class LibGit2Sharp.ExplicitPathsOptions

.class public auto ansi beforefieldinit LibGit2Sharp.Submodule
       extends [mscorlib]System.Object
       implements class [mscorlib]System.IEquatable`1<class LibGit2Sharp.Submodule>
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field private static initonly class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Submodule> equalityHelper
  .field private initonly class LibGit2Sharp.Repository repo
  .field private initonly string name
  .field private initonly string path
  .field private initonly string url
  .field private initonly class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.ObjectId> headCommitId
  .field private initonly class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.ObjectId> indexCommitId
  .field private initonly class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.ObjectId> workdirCommitId
  .field private initonly class LibGit2Sharp.Core.ILazy`1<bool> fetchRecurseSubmodulesRule
  .field private initonly class LibGit2Sharp.Core.ILazy`1<valuetype LibGit2Sharp.SubmoduleIgnore> ignoreRule
  .field private initonly class LibGit2Sharp.Core.ILazy`1<valuetype LibGit2Sharp.SubmoduleUpdate> updateRule
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Submodule,object> 'CS$<>9__CachedAnonymousMethodDelegate2'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Submodule,object> 'CS$<>9__CachedAnonymousMethodDelegate3'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method Submodule::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               string name,
                               string path,
                               string url) cil managed
  {
    // Code size       196 (0xc4)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.SubmoduleLazyGroup V_0,
             class LibGit2Sharp.Core.SubmoduleLazyGroup V_1)
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Submodule::repo
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  stfld      string LibGit2Sharp.Submodule::name
    IL_0014:  ldarg.0
    IL_0015:  ldarg.3
    IL_0016:  stfld      string LibGit2Sharp.Submodule::path
    IL_001b:  ldarg.0
    IL_001c:  ldarg.s    url
    IL_001e:  stfld      string LibGit2Sharp.Submodule::url
    IL_0023:  ldarg.1
    IL_0024:  ldarg.2
    IL_0025:  newobj     instance void LibGit2Sharp.Core.SubmoduleLazyGroup::.ctor(class LibGit2Sharp.Repository,
                                                                                   string)
    IL_002a:  stloc.0
    IL_002b:  ldarg.0
    IL_002c:  ldloc.0
    IL_002d:  ldnull
    IL_002e:  ldftn      class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_submodule_head_id(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_0034:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,class LibGit2Sharp.ObjectId>::.ctor(object,
                                                                                                                                                                native int)
    IL_0039:  callvirt   instance class LibGit2Sharp.Core.ILazy`1<!!0> class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle>::AddLazy<class LibGit2Sharp.ObjectId>(class [System.Core]System.Func`2<!0,!!0>)
    IL_003e:  stfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.Submodule::headCommitId
    IL_0043:  ldarg.0
    IL_0044:  ldloc.0
    IL_0045:  ldnull
    IL_0046:  ldftn      class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_submodule_index_id(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_004c:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,class LibGit2Sharp.ObjectId>::.ctor(object,
                                                                                                                                                                native int)
    IL_0051:  callvirt   instance class LibGit2Sharp.Core.ILazy`1<!!0> class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle>::AddLazy<class LibGit2Sharp.ObjectId>(class [System.Core]System.Func`2<!0,!!0>)
    IL_0056:  stfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.Submodule::indexCommitId
    IL_005b:  ldarg.0
    IL_005c:  ldloc.0
    IL_005d:  ldnull
    IL_005e:  ldftn      class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_submodule_wd_id(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_0064:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,class LibGit2Sharp.ObjectId>::.ctor(object,
                                                                                                                                                                native int)
    IL_0069:  callvirt   instance class LibGit2Sharp.Core.ILazy`1<!!0> class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle>::AddLazy<class LibGit2Sharp.ObjectId>(class [System.Core]System.Func`2<!0,!!0>)
    IL_006e:  stfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.Submodule::workdirCommitId
    IL_0073:  ldarg.1
    IL_0074:  ldarg.2
    IL_0075:  newobj     instance void LibGit2Sharp.Core.SubmoduleLazyGroup::.ctor(class LibGit2Sharp.Repository,
                                                                                   string)
    IL_007a:  stloc.1
    IL_007b:  ldarg.0
    IL_007c:  ldloc.1
    IL_007d:  ldnull
    IL_007e:  ldftn      bool LibGit2Sharp.Core.Proxy::git_submodule_fetch_recurse_submodules(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_0084:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,bool>::.ctor(object,
                                                                                                                                         native int)
    IL_0089:  callvirt   instance class LibGit2Sharp.Core.ILazy`1<!!0> class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle>::AddLazy<bool>(class [System.Core]System.Func`2<!0,!!0>)
    IL_008e:  stfld      class LibGit2Sharp.Core.ILazy`1<bool> LibGit2Sharp.Submodule::fetchRecurseSubmodulesRule
    IL_0093:  ldarg.0
    IL_0094:  ldloc.1
    IL_0095:  ldnull
    IL_0096:  ldftn      valuetype LibGit2Sharp.SubmoduleIgnore LibGit2Sharp.Core.Proxy::git_submodule_ignore(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_009c:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,valuetype LibGit2Sharp.SubmoduleIgnore>::.ctor(object,
                                                                                                                                                                           native int)
    IL_00a1:  callvirt   instance class LibGit2Sharp.Core.ILazy`1<!!0> class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle>::AddLazy<valuetype LibGit2Sharp.SubmoduleIgnore>(class [System.Core]System.Func`2<!0,!!0>)
    IL_00a6:  stfld      class LibGit2Sharp.Core.ILazy`1<valuetype LibGit2Sharp.SubmoduleIgnore> LibGit2Sharp.Submodule::ignoreRule
    IL_00ab:  ldarg.0
    IL_00ac:  ldloc.1
    IL_00ad:  ldnull
    IL_00ae:  ldftn      valuetype LibGit2Sharp.SubmoduleUpdate LibGit2Sharp.Core.Proxy::git_submodule_update(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_00b4:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,valuetype LibGit2Sharp.SubmoduleUpdate>::.ctor(object,
                                                                                                                                                                           native int)
    IL_00b9:  callvirt   instance class LibGit2Sharp.Core.ILazy`1<!!0> class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle>::AddLazy<valuetype LibGit2Sharp.SubmoduleUpdate>(class [System.Core]System.Func`2<!0,!!0>)
    IL_00be:  stfld      class LibGit2Sharp.Core.ILazy`1<valuetype LibGit2Sharp.SubmoduleUpdate> LibGit2Sharp.Submodule::updateRule
    IL_00c3:  ret
  } // end of method Submodule::.ctor

  .method public hidebysig newslot specialname virtual 
          instance string  get_Name() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Submodule::name
    IL_0006:  ret
  } // end of method Submodule::get_Name

  .method public hidebysig newslot specialname virtual 
          instance string  get_Path() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Submodule::path
    IL_0006:  ret
  } // end of method Submodule::get_Path

  .method public hidebysig newslot specialname virtual 
          instance string  get_Url() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Submodule::url
    IL_0006:  ret
  } // end of method Submodule::get_Url

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.ObjectId 
          get_HeadCommitId() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.Submodule::headCommitId
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.ObjectId>::get_Value()
    IL_000b:  ret
  } // end of method Submodule::get_HeadCommitId

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.ObjectId 
          get_IndexCommitId() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.Submodule::indexCommitId
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.ObjectId>::get_Value()
    IL_000b:  ret
  } // end of method Submodule::get_IndexCommitId

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.ObjectId 
          get_WorkDirCommitId() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.Submodule::workdirCommitId
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.ObjectId>::get_Value()
    IL_000b:  ret
  } // end of method Submodule::get_WorkDirCommitId

  .method public hidebysig newslot specialname virtual 
          instance bool  get_FetchRecurseSubmodulesRule() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<bool> LibGit2Sharp.Submodule::fetchRecurseSubmodulesRule
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<bool>::get_Value()
    IL_000b:  ret
  } // end of method Submodule::get_FetchRecurseSubmodulesRule

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.SubmoduleIgnore 
          get_IgnoreRule() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<valuetype LibGit2Sharp.SubmoduleIgnore> LibGit2Sharp.Submodule::ignoreRule
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<valuetype LibGit2Sharp.SubmoduleIgnore>::get_Value()
    IL_000b:  ret
  } // end of method Submodule::get_IgnoreRule

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.SubmoduleUpdate 
          get_UpdateRule() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<valuetype LibGit2Sharp.SubmoduleUpdate> LibGit2Sharp.Submodule::updateRule
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<valuetype LibGit2Sharp.SubmoduleUpdate>::get_Value()
    IL_000b:  ret
  } // end of method Submodule::get_UpdateRule

  .method public hidebysig newslot virtual 
          instance valuetype LibGit2Sharp.SubmoduleStatus 
          RetrieveStatus() cil managed
  {
    // Code size       44 (0x2c)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle V_0,
             valuetype LibGit2Sharp.SubmoduleStatus V_1)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Submodule::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  ldarg.0
    IL_000c:  callvirt   instance string LibGit2Sharp.Submodule::get_Name()
    IL_0011:  call       class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle LibGit2Sharp.Core.Proxy::git_submodule_lookup(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                           string)
    IL_0016:  stloc.0
    .try
    {
      IL_0017:  ldloc.0
      IL_0018:  call       valuetype LibGit2Sharp.SubmoduleStatus LibGit2Sharp.Core.Proxy::git_submodule_status(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
      IL_001d:  stloc.1
      IL_001e:  leave.s    IL_002a

    }  // end .try
    finally
    {
      IL_0020:  ldloc.0
      IL_0021:  brfalse.s  IL_0029

      IL_0023:  ldloc.0
      IL_0024:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0029:  endfinally
    }  // end handler
    IL_002a:  ldloc.1
    IL_002b:  ret
  } // end of method Submodule::RetrieveStatus

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  isinst     LibGit2Sharp.Submodule
    IL_0007:  call       instance bool LibGit2Sharp.Submodule::Equals(class LibGit2Sharp.Submodule)
    IL_000c:  ret
  } // end of method Submodule::Equals

  .method public hidebysig newslot virtual final 
          instance bool  Equals(class LibGit2Sharp.Submodule other) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Submodule> LibGit2Sharp.Submodule::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance bool class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Submodule>::Equals(!0,
                                                                                                                            !0)
    IL_000c:  ret
  } // end of method Submodule::Equals

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Submodule> LibGit2Sharp.Submodule::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  callvirt   instance int32 class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Submodule>::GetHashCode(!0)
    IL_000b:  ret
  } // end of method Submodule::GetHashCode

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Submodule::get_Name()
    IL_0006:  ret
  } // end of method Submodule::ToString

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "{0} => {1}"
    IL_000a:  ldc.i4.2
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance string LibGit2Sharp.Submodule::get_Name()
    IL_0019:  stelem.ref
    IL_001a:  ldloc.0
    IL_001b:  ldc.i4.1
    IL_001c:  ldarg.0
    IL_001d:  callvirt   instance string LibGit2Sharp.Submodule::get_Url()
    IL_0022:  stelem.ref
    IL_0023:  ldloc.0
    IL_0024:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0029:  ret
  } // end of method Submodule::get_DebuggerDisplay

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       83 (0x53)
    .maxstack  5
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.Submodule,object>[] V_0)
    IL_0000:  ldc.i4.2
    IL_0001:  newarr     class [System.Core]System.Func`2<class LibGit2Sharp.Submodule,object>
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldc.i4.0
    IL_0009:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Submodule,object> LibGit2Sharp.Submodule::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_000e:  brtrue.s   IL_0021

    IL_0010:  ldnull
    IL_0011:  ldftn      object LibGit2Sharp.Submodule::'<.cctor>b__0'(class LibGit2Sharp.Submodule)
    IL_0017:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Submodule,object>::.ctor(object,
                                                                                                                    native int)
    IL_001c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Submodule,object> LibGit2Sharp.Submodule::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0021:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Submodule,object> LibGit2Sharp.Submodule::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0026:  stelem.ref
    IL_0027:  ldloc.0
    IL_0028:  ldc.i4.1
    IL_0029:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Submodule,object> LibGit2Sharp.Submodule::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_002e:  brtrue.s   IL_0041

    IL_0030:  ldnull
    IL_0031:  ldftn      object LibGit2Sharp.Submodule::'<.cctor>b__1'(class LibGit2Sharp.Submodule)
    IL_0037:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Submodule,object>::.ctor(object,
                                                                                                                    native int)
    IL_003c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Submodule,object> LibGit2Sharp.Submodule::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_0041:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Submodule,object> LibGit2Sharp.Submodule::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_0046:  stelem.ref
    IL_0047:  ldloc.0
    IL_0048:  newobj     instance void class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Submodule>::.ctor(class [System.Core]System.Func`2<!0,object>[])
    IL_004d:  stsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Submodule> LibGit2Sharp.Submodule::equalityHelper
    IL_0052:  ret
  } // end of method Submodule::.cctor

  .method private hidebysig static object 
          '<.cctor>b__0'(class LibGit2Sharp.Submodule x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Submodule::get_Name()
    IL_0006:  ret
  } // end of method Submodule::'<.cctor>b__0'

  .method private hidebysig static object 
          '<.cctor>b__1'(class LibGit2Sharp.Submodule x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Submodule::get_HeadCommitId()
    IL_0006:  ret
  } // end of method Submodule::'<.cctor>b__1'

  .property instance string Name()
  {
    .get instance string LibGit2Sharp.Submodule::get_Name()
  } // end of property Submodule::Name
  .property instance string Path()
  {
    .get instance string LibGit2Sharp.Submodule::get_Path()
  } // end of property Submodule::Path
  .property instance string Url()
  {
    .get instance string LibGit2Sharp.Submodule::get_Url()
  } // end of property Submodule::Url
  .property instance class LibGit2Sharp.ObjectId
          HeadCommitId()
  {
    .get instance class LibGit2Sharp.ObjectId LibGit2Sharp.Submodule::get_HeadCommitId()
  } // end of property Submodule::HeadCommitId
  .property instance class LibGit2Sharp.ObjectId
          IndexCommitId()
  {
    .get instance class LibGit2Sharp.ObjectId LibGit2Sharp.Submodule::get_IndexCommitId()
  } // end of property Submodule::IndexCommitId
  .property instance class LibGit2Sharp.ObjectId
          WorkDirCommitId()
  {
    .get instance class LibGit2Sharp.ObjectId LibGit2Sharp.Submodule::get_WorkDirCommitId()
  } // end of property Submodule::WorkDirCommitId
  .property instance bool FetchRecurseSubmodulesRule()
  {
    .get instance bool LibGit2Sharp.Submodule::get_FetchRecurseSubmodulesRule()
  } // end of property Submodule::FetchRecurseSubmodulesRule
  .property instance valuetype LibGit2Sharp.SubmoduleIgnore
          IgnoreRule()
  {
    .get instance valuetype LibGit2Sharp.SubmoduleIgnore LibGit2Sharp.Submodule::get_IgnoreRule()
  } // end of property Submodule::IgnoreRule
  .property instance valuetype LibGit2Sharp.SubmoduleUpdate
          UpdateRule()
  {
    .get instance valuetype LibGit2Sharp.SubmoduleUpdate LibGit2Sharp.Submodule::get_UpdateRule()
  } // end of property Submodule::UpdateRule
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.Submodule::get_DebuggerDisplay()
  } // end of property Submodule::DebuggerDisplay
} // end of class LibGit2Sharp.Submodule

.class public auto ansi beforefieldinit LibGit2Sharp.SubmoduleCollection
       extends [mscorlib]System.Object
       implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Submodule>,
                  [mscorlib]System.Collections.IEnumerable
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass1'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.SubmoduleCollection '<>4__this'
    .field public string name
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass1'::.ctor

    .method public hidebysig instance class LibGit2Sharp.Submodule 
            '<get_Item>b__0'(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle handle) cil managed
    {
      // Code size       35 (0x23)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.SubmoduleCollection LibGit2Sharp.SubmoduleCollection/'<>c__DisplayClass1'::'<>4__this'
      IL_0006:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.SubmoduleCollection::repo
      IL_000b:  ldarg.0
      IL_000c:  ldfld      string LibGit2Sharp.SubmoduleCollection/'<>c__DisplayClass1'::name
      IL_0011:  ldarg.1
      IL_0012:  call       string LibGit2Sharp.Core.Proxy::git_submodule_path(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
      IL_0017:  ldarg.1
      IL_0018:  call       string LibGit2Sharp.Core.Proxy::git_submodule_url(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
      IL_001d:  newobj     instance void LibGit2Sharp.Submodule::.ctor(class LibGit2Sharp.Repository,
                                                                       string,
                                                                       string,
                                                                       string)
      IL_0022:  ret
    } // end of method '<>c__DisplayClass1'::'<get_Item>b__0'

  } // end of class '<>c__DisplayClass1'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass7'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public bool writeIndex
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass7'::.ctor

    .method public hidebysig instance bool 
            '<TryStage>b__6'(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle handle) cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brtrue.s   IL_0005

      IL_0003:  ldc.i4.0
      IL_0004:  ret

      IL_0005:  ldarg.1
      IL_0006:  ldarg.0
      IL_0007:  ldfld      bool LibGit2Sharp.SubmoduleCollection/'<>c__DisplayClass7'::writeIndex
      IL_000c:  call       void LibGit2Sharp.Core.Proxy::git_submodule_add_to_index(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,
                                                                                    bool)
      IL_0011:  ldc.i4.1
      IL_0012:  ret
    } // end of method '<>c__DisplayClass7'::'<TryStage>b__6'

  } // end of class '<>c__DisplayClass7'

  .field assembly initonly class LibGit2Sharp.Repository repo
  .field private static class [System.Core]System.Func`3<native int,native int,string> 'CS$<>9__CachedAnonymousMethodDelegate5'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method SubmoduleCollection::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.SubmoduleCollection::repo
    IL_000d:  ret
  } // end of method SubmoduleCollection::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Submodule 
          get_Item(string name) cil managed
  {
    // Code size       62 (0x3e)
    .maxstack  5
    .locals init (class LibGit2Sharp.SubmoduleCollection/'<>c__DisplayClass1' V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.SubmoduleCollection/'<>c__DisplayClass1'::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      string LibGit2Sharp.SubmoduleCollection/'<>c__DisplayClass1'::name
    IL_000d:  ldloc.0
    IL_000e:  ldarg.0
    IL_000f:  stfld      class LibGit2Sharp.SubmoduleCollection LibGit2Sharp.SubmoduleCollection/'<>c__DisplayClass1'::'<>4__this'
    IL_0014:  ldloc.0
    IL_0015:  ldfld      string LibGit2Sharp.SubmoduleCollection/'<>c__DisplayClass1'::name
    IL_001a:  ldstr      "name"
    IL_001f:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0024:  ldarg.0
    IL_0025:  ldloc.0
    IL_0026:  ldfld      string LibGit2Sharp.SubmoduleCollection/'<>c__DisplayClass1'::name
    IL_002b:  ldloc.0
    IL_002c:  ldftn      instance class LibGit2Sharp.Submodule LibGit2Sharp.SubmoduleCollection/'<>c__DisplayClass1'::'<get_Item>b__0'(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_0032:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,class LibGit2Sharp.Submodule>::.ctor(object,
                                                                                                                                                                 native int)
    IL_0037:  ldc.i4.0
    IL_0038:  call       instance !!0 LibGit2Sharp.SubmoduleCollection::Lookup<class LibGit2Sharp.Submodule>(string,
                                                                                                             class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,!!0>,
                                                                                                             bool)
    IL_003d:  ret
  } // end of method SubmoduleCollection::get_Item

  .method public hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Submodule> 
          GetEnumerator() cil managed
  {
    // Code size       68 (0x44)
    .maxstack  4
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.SubmoduleCollection::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  ldsfld     class [System.Core]System.Func`3<native int,native int,string> LibGit2Sharp.SubmoduleCollection::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0010:  brtrue.s   IL_0023

    IL_0012:  ldnull
    IL_0013:  ldftn      string LibGit2Sharp.SubmoduleCollection::'<GetEnumerator>b__3'(native int,
                                                                                        native int)
    IL_0019:  newobj     instance void class [System.Core]System.Func`3<native int,native int,string>::.ctor(object,
                                                                                                             native int)
    IL_001e:  stsfld     class [System.Core]System.Func`3<native int,native int,string> LibGit2Sharp.SubmoduleCollection::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0023:  ldsfld     class [System.Core]System.Func`3<native int,native int,string> LibGit2Sharp.SubmoduleCollection::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0028:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!0> LibGit2Sharp.Core.Proxy::git_submodule_foreach<string>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                              class [System.Core]System.Func`3<native int,native int,!!0>)
    IL_002d:  ldarg.0
    IL_002e:  ldftn      instance class LibGit2Sharp.Submodule LibGit2Sharp.SubmoduleCollection::'<GetEnumerator>b__4'(string)
    IL_0034:  newobj     instance void class [System.Core]System.Func`2<string,class LibGit2Sharp.Submodule>::.ctor(object,
                                                                                                                    native int)
    IL_0039:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!1> [System.Core]System.Linq.Enumerable::Select<string,class LibGit2Sharp.Submodule>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                        class [System.Core]System.Func`2<!!0,!!1>)
    IL_003e:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Submodule>::GetEnumerator()
    IL_0043:  ret
  } // end of method SubmoduleCollection::GetEnumerator

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Submodule> LibGit2Sharp.SubmoduleCollection::GetEnumerator()
    IL_0006:  ret
  } // end of method SubmoduleCollection::System.Collections.IEnumerable.GetEnumerator

  .method assembly hidebysig instance bool 
          TryStage(string relativePath,
                   bool writeIndex) cil managed
  {
    // Code size       34 (0x22)
    .maxstack  5
    .locals init (class LibGit2Sharp.SubmoduleCollection/'<>c__DisplayClass7' V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.SubmoduleCollection/'<>c__DisplayClass7'::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.2
    IL_0008:  stfld      bool LibGit2Sharp.SubmoduleCollection/'<>c__DisplayClass7'::writeIndex
    IL_000d:  ldarg.0
    IL_000e:  ldarg.1
    IL_000f:  ldloc.0
    IL_0010:  ldftn      instance bool LibGit2Sharp.SubmoduleCollection/'<>c__DisplayClass7'::'<TryStage>b__6'(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_0016:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,bool>::.ctor(object,
                                                                                                                                         native int)
    IL_001b:  ldc.i4.0
    IL_001c:  call       instance !!0 LibGit2Sharp.SubmoduleCollection::Lookup<bool>(string,
                                                                                     class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,!!0>,
                                                                                     bool)
    IL_0021:  ret
  } // end of method SubmoduleCollection::TryStage

  .method assembly hidebysig instance !!T 
          Lookup<T>(string name,
                    class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,!!T> selector,
                    [opt] bool throwIfNotFound) cil managed
  {
    .param [3] = bool(false)
    // Code size       97 (0x61)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle V_0,
             !!T V_1,
             object[] V_2,
             !!T V_3)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.SubmoduleCollection::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  ldarg.1
    IL_000c:  call       class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle LibGit2Sharp.Core.Proxy::git_submodule_lookup(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                           string)
    IL_0011:  stloc.0
    .try
    {
      IL_0012:  ldloc.0
      IL_0013:  brfalse.s  IL_0025

      IL_0015:  ldloc.0
      IL_0016:  call       void LibGit2Sharp.Core.Proxy::git_submodule_reload(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
      IL_001b:  ldarg.2
      IL_001c:  ldloc.0
      IL_001d:  callvirt   instance !1 class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,!!T>::Invoke(!0)
      IL_0022:  stloc.1
      IL_0023:  leave.s    IL_005f

      IL_0025:  ldarg.3
      IL_0026:  brfalse.s  IL_0049

      IL_0028:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_002d:  ldstr      "Submodule lookup failed for '{0}'."
      IL_0032:  ldc.i4.1
      IL_0033:  newarr     [mscorlib]System.Object
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ldarg.1
      IL_003c:  stelem.ref
      IL_003d:  ldloc.2
      IL_003e:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                  string,
                                                                  object[])
      IL_0043:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
      IL_0048:  throw

      IL_0049:  ldloca.s   V_3
      IL_004b:  initobj    !!T
      IL_0051:  ldloc.3
      IL_0052:  stloc.1
      IL_0053:  leave.s    IL_005f

    }  // end .try
    finally
    {
      IL_0055:  ldloc.0
      IL_0056:  brfalse.s  IL_005e

      IL_0058:  ldloc.0
      IL_0059:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_005e:  endfinally
    }  // end handler
    IL_005f:  ldloc.1
    IL_0060:  ret
  } // end of method SubmoduleCollection::Lookup

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       38 (0x26)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "Count = {0}"
    IL_000a:  ldc.i4.1
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  call       int32 [System.Core]System.Linq.Enumerable::Count<class LibGit2Sharp.Submodule>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0019:  box        [mscorlib]System.Int32
    IL_001e:  stelem.ref
    IL_001f:  ldloc.0
    IL_0020:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0025:  ret
  } // end of method SubmoduleCollection::get_DebuggerDisplay

  .method private hidebysig static string 
          '<GetEnumerator>b__3'(native int h,
                                native int n) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
    IL_0006:  ret
  } // end of method SubmoduleCollection::'<GetEnumerator>b__3'

  .method private hidebysig instance class LibGit2Sharp.Submodule 
          '<GetEnumerator>b__4'(string n) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance class LibGit2Sharp.Submodule LibGit2Sharp.SubmoduleCollection::get_Item(string)
    IL_0007:  ret
  } // end of method SubmoduleCollection::'<GetEnumerator>b__4'

  .property instance class LibGit2Sharp.Submodule
          Item(string)
  {
    .get instance class LibGit2Sharp.Submodule LibGit2Sharp.SubmoduleCollection::get_Item(string)
  } // end of property SubmoduleCollection::Item
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.SubmoduleCollection::get_DebuggerDisplay()
  } // end of property SubmoduleCollection::DebuggerDisplay
} // end of class LibGit2Sharp.SubmoduleCollection

.class public abstract auto ansi sealed beforefieldinit LibGit2Sharp.SubmoduleExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static literal valuetype LibGit2Sharp.SubmoduleStatus UnmodifiedMask = int32(0xFFFFFFF0)
  .field private static literal valuetype LibGit2Sharp.SubmoduleStatus WorkDirDirtyMask = int32(0x00003800)
  .method public hidebysig static bool  IsUnmodified(valuetype LibGit2Sharp.SubmoduleStatus this) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.s   -16
    IL_0003:  and
    IL_0004:  ldc.i4.0
    IL_0005:  ceq
    IL_0007:  ret
  } // end of method SubmoduleExtensions::IsUnmodified

  .method public hidebysig static bool  IsWorkingDirectoryDirty(valuetype LibGit2Sharp.SubmoduleStatus this) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4     0x3800
    IL_0006:  and
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  ldc.i4.0
    IL_000b:  ceq
    IL_000d:  ret
  } // end of method SubmoduleExtensions::IsWorkingDirectoryDirty

} // end of class LibGit2Sharp.SubmoduleExtensions

.class public auto ansi sealed LibGit2Sharp.SubmoduleIgnore
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.SubmoduleIgnore Default = int32(0xFFFFFFFF)
  .field public static literal valuetype LibGit2Sharp.SubmoduleIgnore None = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.SubmoduleIgnore Untracked = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.SubmoduleIgnore Dirty = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.SubmoduleIgnore All = int32(0x00000003)
} // end of class LibGit2Sharp.SubmoduleIgnore

.class public auto ansi sealed LibGit2Sharp.SubmoduleStatus
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.SubmoduleStatus Unmodified = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.SubmoduleStatus InHead = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.SubmoduleStatus InIndex = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.SubmoduleStatus InConfig = int32(0x00000004)
  .field public static literal valuetype LibGit2Sharp.SubmoduleStatus InWorkDir = int32(0x00000008)
  .field public static literal valuetype LibGit2Sharp.SubmoduleStatus IndexAdded = int32(0x00000010)
  .field public static literal valuetype LibGit2Sharp.SubmoduleStatus IndexDeleted = int32(0x00000020)
  .field public static literal valuetype LibGit2Sharp.SubmoduleStatus IndexModified = int32(0x00000040)
  .field public static literal valuetype LibGit2Sharp.SubmoduleStatus WorkDirUninitialized = int32(0x00000080)
  .field public static literal valuetype LibGit2Sharp.SubmoduleStatus WorkDirAdded = int32(0x00000100)
  .field public static literal valuetype LibGit2Sharp.SubmoduleStatus WorkDirDeleted = int32(0x00000200)
  .field public static literal valuetype LibGit2Sharp.SubmoduleStatus WorkDirModified = int32(0x00000400)
  .field public static literal valuetype LibGit2Sharp.SubmoduleStatus WorkDirFilesIndexDirty = int32(0x00000800)
  .field public static literal valuetype LibGit2Sharp.SubmoduleStatus WorkDirFilesModified = int32(0x00001000)
  .field public static literal valuetype LibGit2Sharp.SubmoduleStatus WorkDirFilesUntracked = int32(0x00002000)
} // end of class LibGit2Sharp.SubmoduleStatus

.class public auto ansi sealed LibGit2Sharp.SubmoduleUpdate
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.SubmoduleUpdate Default = int32(0xFFFFFFFF)
  .field public static literal valuetype LibGit2Sharp.SubmoduleUpdate Checkout = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.SubmoduleUpdate Rebase = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.SubmoduleUpdate Merge = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.SubmoduleUpdate None = int32(0x00000003)
} // end of class LibGit2Sharp.SubmoduleUpdate

.class public auto ansi serializable beforefieldinit LibGit2Sharp.UnmergedIndexEntriesException
       extends LibGit2Sharp.LibGit2SharpException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor()
    IL_0006:  ret
  } // end of method UnmergedIndexEntriesException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0007:  ret
  } // end of method UnmergedIndexEntriesException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               class [mscorlib]System.Exception innerException) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 class [mscorlib]System.Exception)
    IL_0008:  ret
  } // end of method UnmergedIndexEntriesException::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                               valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo,
                                                                                 valuetype [mscorlib]System.Runtime.Serialization.StreamingContext)
    IL_0008:  ret
  } // end of method UnmergedIndexEntriesException::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               valuetype LibGit2Sharp.Core.GitErrorCode code,
                               valuetype LibGit2Sharp.Core.GitErrorCategory category) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_0009:  ret
  } // end of method UnmergedIndexEntriesException::.ctor

} // end of class LibGit2Sharp.UnmergedIndexEntriesException

.class public auto ansi beforefieldinit LibGit2Sharp.Commit
       extends LibGit2Sharp.GitObject
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .class auto ansi nested private beforefieldinit ParentsCollection
         extends [mscorlib]System.Object
         implements class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit>,
                    class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,
                    [mscorlib]System.Collections.IEnumerable
  {
    .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClassa'
           extends [mscorlib]System.Object
    {
      .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
      .field public class LibGit2Sharp.Commit/ParentsCollection '<>4__this'
      .field public class LibGit2Sharp.Repository repo
      .field public class LibGit2Sharp.ObjectId commitId
      .method public hidebysig specialname rtspecialname 
              instance void  .ctor() cil managed
      {
        // Code size       7 (0x7)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
        IL_0006:  ret
      } // end of method '<>c__DisplayClassa'::.ctor

      .method public hidebysig instance int32 
              '<.ctor>b__6'() cil managed
      {
        // Code size       23 (0x17)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Commit/ParentsCollection/'<>c__DisplayClassa'::repo
        IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
        IL_000b:  ldarg.0
        IL_000c:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.Commit/ParentsCollection/'<>c__DisplayClassa'::commitId
        IL_0011:  call       int32 LibGit2Sharp.Core.Proxy::git_commit_parentcount(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                   class LibGit2Sharp.ObjectId)
        IL_0016:  ret
      } // end of method '<>c__DisplayClassa'::'<.ctor>b__6'

      .method public hidebysig instance class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit> 
              '<.ctor>b__7'() cil managed
      {
        // Code size       24 (0x18)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  ldfld      class LibGit2Sharp.Commit/ParentsCollection LibGit2Sharp.Commit/ParentsCollection/'<>c__DisplayClassa'::'<>4__this'
        IL_0006:  ldarg.0
        IL_0007:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Commit/ParentsCollection/'<>c__DisplayClassa'::repo
        IL_000c:  ldarg.0
        IL_000d:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.Commit/ParentsCollection/'<>c__DisplayClassa'::commitId
        IL_0012:  call       instance class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit> LibGit2Sharp.Commit/ParentsCollection::RetrieveParentsOfCommit(class LibGit2Sharp.Repository,
                                                                                                                                                                                         class LibGit2Sharp.ObjectId)
        IL_0017:  ret
      } // end of method '<>c__DisplayClassa'::'<.ctor>b__7'

    } // end of class '<>c__DisplayClassa'

    .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit>> _parents
    .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<int32> _count
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(class LibGit2Sharp.Repository repo,
                                 class LibGit2Sharp.ObjectId commitId) cil managed
    {
      // Code size       94 (0x5e)
      .maxstack  4
      .locals init (class [System.Core]System.Func`1<int32> V_0,
               class [System.Core]System.Func`1<class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit>> V_1,
               class LibGit2Sharp.Commit/ParentsCollection/'<>c__DisplayClassa' V_2)
      IL_0000:  ldnull
      IL_0001:  stloc.0
      IL_0002:  ldnull
      IL_0003:  stloc.1
      IL_0004:  newobj     instance void LibGit2Sharp.Commit/ParentsCollection/'<>c__DisplayClassa'::.ctor()
      IL_0009:  stloc.2
      IL_000a:  ldloc.2
      IL_000b:  ldarg.1
      IL_000c:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Commit/ParentsCollection/'<>c__DisplayClassa'::repo
      IL_0011:  ldloc.2
      IL_0012:  ldarg.2
      IL_0013:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.Commit/ParentsCollection/'<>c__DisplayClassa'::commitId
      IL_0018:  ldarg.0
      IL_0019:  call       instance void [mscorlib]System.Object::.ctor()
      IL_001e:  ldloc.2
      IL_001f:  ldarg.0
      IL_0020:  stfld      class LibGit2Sharp.Commit/ParentsCollection LibGit2Sharp.Commit/ParentsCollection/'<>c__DisplayClassa'::'<>4__this'
      IL_0025:  ldarg.0
      IL_0026:  ldloc.0
      IL_0027:  brtrue.s   IL_0036

      IL_0029:  ldloc.2
      IL_002a:  ldftn      instance int32 LibGit2Sharp.Commit/ParentsCollection/'<>c__DisplayClassa'::'<.ctor>b__6'()
      IL_0030:  newobj     instance void class [System.Core]System.Func`1<int32>::.ctor(object,
                                                                                        native int)
      IL_0035:  stloc.0
      IL_0036:  ldloc.0
      IL_0037:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<int32>::.ctor(class [System.Core]System.Func`1<!0>)
      IL_003c:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<int32> LibGit2Sharp.Commit/ParentsCollection::_count
      IL_0041:  ldarg.0
      IL_0042:  ldloc.1
      IL_0043:  brtrue.s   IL_0052

      IL_0045:  ldloc.2
      IL_0046:  ldftn      instance class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit> LibGit2Sharp.Commit/ParentsCollection/'<>c__DisplayClassa'::'<.ctor>b__7'()
      IL_004c:  newobj     instance void class [System.Core]System.Func`1<class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit>>::.ctor(object,
                                                                                                                                                                      native int)
      IL_0051:  stloc.1
      IL_0052:  ldloc.1
      IL_0053:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit>>::.ctor(class [System.Core]System.Func`1<!0>)
      IL_0058:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit>> LibGit2Sharp.Commit/ParentsCollection::_parents
      IL_005d:  ret
    } // end of method ParentsCollection::.ctor

    .method private hidebysig instance class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit> 
            RetrieveParentsOfCommit(class LibGit2Sharp.Repository repo,
                                    class LibGit2Sharp.ObjectId commitId) cil managed
    {
      // Code size       93 (0x5d)
      .maxstack  4
      .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
               int32 V_1,
               class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Commit> V_2,
               uint32 V_3,
               class LibGit2Sharp.ObjectId V_4,
               class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit> V_5)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
      IL_0007:  ldc.i4.0
      IL_0008:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    bool)
      IL_000d:  stloc.0
      .try
      {
        IL_000e:  ldarg.0
        IL_000f:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<int32> LibGit2Sharp.Commit/ParentsCollection::_count
        IL_0014:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<int32>::get_Value()
        IL_0019:  stloc.1
        IL_001a:  ldloc.1
        IL_001b:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Commit>::.ctor(int32)
        IL_0020:  stloc.2
        IL_0021:  ldc.i4.0
        IL_0022:  stloc.3
        IL_0023:  br.s       IL_0045

        IL_0025:  ldloc.0
        IL_0026:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
        IL_002b:  ldloc.3
        IL_002c:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_commit_parent_oid(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                                        uint32)
        IL_0031:  stloc.s    V_4
        IL_0033:  ldloc.2
        IL_0034:  ldarg.1
        IL_0035:  ldloc.s    V_4
        IL_0037:  newobj     instance void LibGit2Sharp.Commit::.ctor(class LibGit2Sharp.Repository,
                                                                      class LibGit2Sharp.ObjectId)
        IL_003c:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Commit>::Add(!0)
        IL_0041:  ldloc.3
        IL_0042:  ldc.i4.1
        IL_0043:  add
        IL_0044:  stloc.3
        IL_0045:  ldloc.3
        IL_0046:  conv.u8
        IL_0047:  ldloc.1
        IL_0048:  conv.i8
        IL_0049:  blt.s      IL_0025

        IL_004b:  ldloc.2
        IL_004c:  stloc.s    V_5
        IL_004e:  leave.s    IL_005a

      }  // end .try
      finally
      {
        IL_0050:  ldloc.0
        IL_0051:  brfalse.s  IL_0059

        IL_0053:  ldloc.0
        IL_0054:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0059:  endfinally
      }  // end handler
      IL_005a:  ldloc.s    V_5
      IL_005c:  ret
    } // end of method ParentsCollection::RetrieveParentsOfCommit

    .method public hidebysig newslot virtual final 
            instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Commit> 
            GetEnumerator() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit>> LibGit2Sharp.Commit/ParentsCollection::_parents
      IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit>>::get_Value()
      IL_000b:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>::GetEnumerator()
      IL_0010:  ret
    } // end of method ParentsCollection::GetEnumerator

    .method private hidebysig newslot virtual final 
            instance class [mscorlib]System.Collections.IEnumerator 
            System.Collections.IEnumerable.GetEnumerator() cil managed
    {
      .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Commit> LibGit2Sharp.Commit/ParentsCollection::GetEnumerator()
      IL_0006:  ret
    } // end of method ParentsCollection::System.Collections.IEnumerable.GetEnumerator

    .method public hidebysig newslot virtual final 
            instance void  Add(class LibGit2Sharp.Commit item) cil managed
    {
      // Code size       6 (0x6)
      .maxstack  8
      IL_0000:  newobj     instance void [mscorlib]System.NotSupportedException::.ctor()
      IL_0005:  throw
    } // end of method ParentsCollection::Add

    .method public hidebysig newslot virtual final 
            instance void  Clear() cil managed
    {
      // Code size       6 (0x6)
      .maxstack  8
      IL_0000:  newobj     instance void [mscorlib]System.NotSupportedException::.ctor()
      IL_0005:  throw
    } // end of method ParentsCollection::Clear

    .method public hidebysig newslot virtual final 
            instance bool  Contains(class LibGit2Sharp.Commit item) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit>> LibGit2Sharp.Commit/ParentsCollection::_parents
      IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit>>::get_Value()
      IL_000b:  ldarg.1
      IL_000c:  callvirt   instance bool class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit>::Contains(!0)
      IL_0011:  ret
    } // end of method ParentsCollection::Contains

    .method public hidebysig newslot virtual final 
            instance void  CopyTo(class LibGit2Sharp.Commit[] 'array',
                                  int32 arrayIndex) cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit>> LibGit2Sharp.Commit/ParentsCollection::_parents
      IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit>>::get_Value()
      IL_000b:  ldarg.1
      IL_000c:  ldarg.2
      IL_000d:  callvirt   instance void class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Commit>::CopyTo(!0[],
                                                                                                                                     int32)
      IL_0012:  ret
    } // end of method ParentsCollection::CopyTo

    .method public hidebysig newslot virtual final 
            instance bool  Remove(class LibGit2Sharp.Commit item) cil managed
    {
      // Code size       6 (0x6)
      .maxstack  8
      IL_0000:  newobj     instance void [mscorlib]System.NotSupportedException::.ctor()
      IL_0005:  throw
    } // end of method ParentsCollection::Remove

    .method public hidebysig newslot specialname virtual final 
            instance int32  get_Count() cil managed
    {
      // Code size       12 (0xc)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<int32> LibGit2Sharp.Commit/ParentsCollection::_count
      IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<int32>::get_Value()
      IL_000b:  ret
    } // end of method ParentsCollection::get_Count

    .method public hidebysig newslot specialname virtual final 
            instance bool  get_IsReadOnly() cil managed
    {
      // Code size       2 (0x2)
      .maxstack  8
      IL_0000:  ldc.i4.1
      IL_0001:  ret
    } // end of method ParentsCollection::get_IsReadOnly

    .property instance int32 Count()
    {
      .get instance int32 LibGit2Sharp.Commit/ParentsCollection::get_Count()
    } // end of property ParentsCollection::Count
    .property instance bool IsReadOnly()
    {
      .get instance bool LibGit2Sharp.Commit/ParentsCollection::get_IsReadOnly()
    } // end of property ParentsCollection::IsReadOnly
  } // end of class ParentsCollection

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass4'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Commit '<>4__this'
    .field public class LibGit2Sharp.ObjectId id
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass4'::.ctor

    .method public hidebysig instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note> 
            '<.ctor>b__1'() cil managed
    {
      // Code size       23 (0x17)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Commit LibGit2Sharp.Commit/'<>c__DisplayClass4'::'<>4__this'
      IL_0006:  ldarg.0
      IL_0007:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.Commit/'<>c__DisplayClass4'::id
      IL_000c:  call       instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note> LibGit2Sharp.Commit::RetrieveNotesOfCommit(class LibGit2Sharp.ObjectId)
      IL_0011:  call       class [mscorlib]System.Collections.Generic.List`1<!!0> [System.Core]System.Linq.Enumerable::ToList<class LibGit2Sharp.Note>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
      IL_0016:  ret
    } // end of method '<>c__DisplayClass4'::'<.ctor>b__1'

  } // end of class '<>c__DisplayClass4'

  .field private initonly class LibGit2Sharp.Core.GitObjectLazyGroup group
  .field private initonly class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Tree> lazyTree
  .field private initonly class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Signature> lazyAuthor
  .field private initonly class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Signature> lazyCommitter
  .field private initonly class LibGit2Sharp.Core.ILazy`1<string> lazyMessage
  .field private initonly class LibGit2Sharp.Core.ILazy`1<string> lazyEncoding
  .field private initonly class LibGit2Sharp.Commit/ParentsCollection parents
  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<string> lazyShortMessage
  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note>> lazyNotes
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.GitObject::.ctor()
    IL_0006:  ret
  } // end of method Commit::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.ObjectId id) cil managed
  {
    // Code size       286 (0x11e)
    .maxstack  6
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Tree> V_0,
             class [System.Core]System.Func`1<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note>> V_1,
             class LibGit2Sharp.Commit/'<>c__DisplayClass4' V_2)
    IL_0000:  ldnull
    IL_0001:  stloc.0
    IL_0002:  ldnull
    IL_0003:  stloc.1
    IL_0004:  newobj     instance void LibGit2Sharp.Commit/'<>c__DisplayClass4'::.ctor()
    IL_0009:  stloc.2
    IL_000a:  ldloc.2
    IL_000b:  ldarg.2
    IL_000c:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.Commit/'<>c__DisplayClass4'::id
    IL_0011:  ldarg.0
    IL_0012:  ldarg.1
    IL_0013:  ldloc.2
    IL_0014:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.Commit/'<>c__DisplayClass4'::id
    IL_0019:  call       instance void LibGit2Sharp.GitObject::.ctor(class LibGit2Sharp.Repository,
                                                                     class LibGit2Sharp.ObjectId)
    IL_001e:  ldloc.2
    IL_001f:  ldarg.0
    IL_0020:  stfld      class LibGit2Sharp.Commit LibGit2Sharp.Commit/'<>c__DisplayClass4'::'<>4__this'
    IL_0025:  ldarg.0
    IL_0026:  ldarg.0
    IL_0027:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.GitObject::repo
    IL_002c:  ldloc.2
    IL_002d:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.Commit/'<>c__DisplayClass4'::id
    IL_0032:  ldloc.0
    IL_0033:  brtrue.s   IL_0042

    IL_0035:  ldarg.0
    IL_0036:  ldftn      instance class LibGit2Sharp.Tree LibGit2Sharp.Commit::'<.ctor>b__0'(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_003c:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Tree>::.ctor(object,
                                                                                                                                                            native int)
    IL_0041:  stloc.0
    IL_0042:  ldloc.0
    IL_0043:  call       class LibGit2Sharp.Core.ILazy`1<!!0> LibGit2Sharp.Core.GitObjectLazyGroup::Singleton<class LibGit2Sharp.Tree>(class LibGit2Sharp.Repository,
                                                                                                                                       class LibGit2Sharp.ObjectId,
                                                                                                                                       class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,!!0>)
    IL_0048:  stfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Tree> LibGit2Sharp.Commit::lazyTree
    IL_004d:  ldarg.0
    IL_004e:  ldarg.0
    IL_004f:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.GitObject::repo
    IL_0054:  ldloc.2
    IL_0055:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.Commit/'<>c__DisplayClass4'::id
    IL_005a:  newobj     instance void LibGit2Sharp.Core.GitObjectLazyGroup::.ctor(class LibGit2Sharp.Repository,
                                                                                   class LibGit2Sharp.ObjectId)
    IL_005f:  stfld      class LibGit2Sharp.Core.GitObjectLazyGroup LibGit2Sharp.Commit::group
    IL_0064:  ldarg.0
    IL_0065:  ldarg.0
    IL_0066:  ldfld      class LibGit2Sharp.Core.GitObjectLazyGroup LibGit2Sharp.Commit::group
    IL_006b:  ldnull
    IL_006c:  ldftn      class LibGit2Sharp.Signature LibGit2Sharp.Core.Proxy::git_commit_author(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0072:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Signature>::.ctor(object,
                                                                                                                                                                 native int)
    IL_0077:  callvirt   instance class LibGit2Sharp.Core.ILazy`1<!!0> class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle>::AddLazy<class LibGit2Sharp.Signature>(class [System.Core]System.Func`2<!0,!!0>)
    IL_007c:  stfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Signature> LibGit2Sharp.Commit::lazyAuthor
    IL_0081:  ldarg.0
    IL_0082:  ldarg.0
    IL_0083:  ldfld      class LibGit2Sharp.Core.GitObjectLazyGroup LibGit2Sharp.Commit::group
    IL_0088:  ldnull
    IL_0089:  ldftn      class LibGit2Sharp.Signature LibGit2Sharp.Core.Proxy::git_commit_committer(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_008f:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Signature>::.ctor(object,
                                                                                                                                                                 native int)
    IL_0094:  callvirt   instance class LibGit2Sharp.Core.ILazy`1<!!0> class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle>::AddLazy<class LibGit2Sharp.Signature>(class [System.Core]System.Func`2<!0,!!0>)
    IL_0099:  stfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Signature> LibGit2Sharp.Commit::lazyCommitter
    IL_009e:  ldarg.0
    IL_009f:  ldarg.0
    IL_00a0:  ldfld      class LibGit2Sharp.Core.GitObjectLazyGroup LibGit2Sharp.Commit::group
    IL_00a5:  ldnull
    IL_00a6:  ldftn      string LibGit2Sharp.Core.Proxy::git_commit_message(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_00ac:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,string>::.ctor(object,
                                                                                                                                           native int)
    IL_00b1:  callvirt   instance class LibGit2Sharp.Core.ILazy`1<!!0> class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle>::AddLazy<string>(class [System.Core]System.Func`2<!0,!!0>)
    IL_00b6:  stfld      class LibGit2Sharp.Core.ILazy`1<string> LibGit2Sharp.Commit::lazyMessage
    IL_00bb:  ldarg.0
    IL_00bc:  ldarg.0
    IL_00bd:  ldfld      class LibGit2Sharp.Core.GitObjectLazyGroup LibGit2Sharp.Commit::group
    IL_00c2:  ldnull
    IL_00c3:  ldftn      string LibGit2Sharp.Commit::RetrieveEncodingOf(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_00c9:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,string>::.ctor(object,
                                                                                                                                           native int)
    IL_00ce:  callvirt   instance class LibGit2Sharp.Core.ILazy`1<!!0> class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle>::AddLazy<string>(class [System.Core]System.Func`2<!0,!!0>)
    IL_00d3:  stfld      class LibGit2Sharp.Core.ILazy`1<string> LibGit2Sharp.Commit::lazyEncoding
    IL_00d8:  ldarg.0
    IL_00d9:  ldarg.0
    IL_00da:  ldftn      instance string LibGit2Sharp.Commit::ExtractShortMessage()
    IL_00e0:  newobj     instance void class [System.Core]System.Func`1<string>::.ctor(object,
                                                                                       native int)
    IL_00e5:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<string>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_00ea:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<string> LibGit2Sharp.Commit::lazyShortMessage
    IL_00ef:  ldarg.0
    IL_00f0:  ldloc.1
    IL_00f1:  brtrue.s   IL_0100

    IL_00f3:  ldloc.2
    IL_00f4:  ldftn      instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note> LibGit2Sharp.Commit/'<>c__DisplayClass4'::'<.ctor>b__1'()
    IL_00fa:  newobj     instance void class [System.Core]System.Func`1<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note>>::.ctor(object,
                                                                                                                                                                  native int)
    IL_00ff:  stloc.1
    IL_0100:  ldloc.1
    IL_0101:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note>>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_0106:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note>> LibGit2Sharp.Commit::lazyNotes
    IL_010b:  ldarg.0
    IL_010c:  ldarg.1
    IL_010d:  ldloc.2
    IL_010e:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.Commit/'<>c__DisplayClass4'::id
    IL_0113:  newobj     instance void LibGit2Sharp.Commit/ParentsCollection::.ctor(class LibGit2Sharp.Repository,
                                                                                    class LibGit2Sharp.ObjectId)
    IL_0118:  stfld      class LibGit2Sharp.Commit/ParentsCollection LibGit2Sharp.Commit::parents
    IL_011d:  ret
  } // end of method Commit::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.TreeEntry 
          get_Item(string relativePath) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.Tree LibGit2Sharp.Commit::get_Tree()
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance class LibGit2Sharp.TreeEntry LibGit2Sharp.Tree::get_Item(string)
    IL_000c:  ret
  } // end of method Commit::get_Item

  .method public hidebysig newslot specialname virtual 
          instance string  get_Message() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<string> LibGit2Sharp.Commit::lazyMessage
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<string>::get_Value()
    IL_000b:  ret
  } // end of method Commit::get_Message

  .method public hidebysig newslot specialname virtual 
          instance string  get_MessageShort() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<string> LibGit2Sharp.Commit::lazyShortMessage
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<string>::get_Value()
    IL_000b:  ret
  } // end of method Commit::get_MessageShort

  .method public hidebysig newslot specialname virtual 
          instance string  get_Encoding() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<string> LibGit2Sharp.Commit::lazyEncoding
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<string>::get_Value()
    IL_000b:  ret
  } // end of method Commit::get_Encoding

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Signature 
          get_Author() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Signature> LibGit2Sharp.Commit::lazyAuthor
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Signature>::get_Value()
    IL_000b:  ret
  } // end of method Commit::get_Author

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Signature 
          get_Committer() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Signature> LibGit2Sharp.Commit::lazyCommitter
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Signature>::get_Value()
    IL_000b:  ret
  } // end of method Commit::get_Committer

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Tree 
          get_Tree() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Tree> LibGit2Sharp.Commit::lazyTree
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Tree>::get_Value()
    IL_000b:  ret
  } // end of method Commit::get_Tree

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> 
          get_Parents() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Commit/ParentsCollection LibGit2Sharp.Commit::parents
    IL_0006:  ret
  } // end of method Commit::get_Parents

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note> 
          get_Notes() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note>> LibGit2Sharp.Commit::lazyNotes
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note>>::get_Value()
    IL_000b:  ret
  } // end of method Commit::get_Notes

  .method private hidebysig instance string 
          ExtractShortMessage() cil managed
  {
    // Code size       41 (0x29)
    .maxstack  4
    .locals init (char[] V_0)
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Commit::get_Message()
    IL_0006:  brtrue.s   IL_000e

    IL_0008:  ldsfld     string [mscorlib]System.String::Empty
    IL_000d:  ret

    IL_000e:  ldarg.0
    IL_000f:  callvirt   instance string LibGit2Sharp.Commit::get_Message()
    IL_0014:  ldc.i4.1
    IL_0015:  newarr     [mscorlib]System.Char
    IL_001a:  stloc.0
    IL_001b:  ldloc.0
    IL_001c:  ldc.i4.0
    IL_001d:  ldc.i4.s   10
    IL_001f:  stelem.i2
    IL_0020:  ldloc.0
    IL_0021:  callvirt   instance string[] [mscorlib]System.String::Split(char[])
    IL_0026:  ldc.i4.0
    IL_0027:  ldelem.ref
    IL_0028:  ret
  } // end of method Commit::ExtractShortMessage

  .method private hidebysig instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note> 
          RetrieveNotesOfCommit(class LibGit2Sharp.ObjectId oid) cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.GitObject::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.NoteCollection LibGit2Sharp.Repository::get_Notes()
    IL_000b:  ldarg.1
    IL_000c:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note> LibGit2Sharp.NoteCollection::get_Item(class LibGit2Sharp.ObjectId)
    IL_0011:  ret
  } // end of method Commit::RetrieveNotesOfCommit

  .method private hidebysig static string 
          RetrieveEncodingOf(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj) cil managed
  {
    // Code size       18 (0x12)
    .maxstack  2
    .locals init (string V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.Proxy::git_commit_message_encoding(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  dup
    IL_0009:  brtrue.s   IL_0011

    IL_000b:  pop
    IL_000c:  ldstr      "UTF-8"
    IL_0011:  ret
  } // end of method Commit::RetrieveEncodingOf

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       48 (0x30)
    .maxstack  6
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "{0} {1}"
    IL_000a:  ldc.i4.2
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0019:  ldc.i4.7
    IL_001a:  callvirt   instance string LibGit2Sharp.ObjectId::ToString(int32)
    IL_001f:  stelem.ref
    IL_0020:  ldloc.0
    IL_0021:  ldc.i4.1
    IL_0022:  ldarg.0
    IL_0023:  callvirt   instance string LibGit2Sharp.Commit::get_MessageShort()
    IL_0028:  stelem.ref
    IL_0029:  ldloc.0
    IL_002a:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_002f:  ret
  } // end of method Commit::get_DebuggerDisplay

  .method private hidebysig instance class LibGit2Sharp.Tree 
          '<.ctor>b__0'(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.GitObject::repo
    IL_0006:  ldarg.1
    IL_0007:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_commit_tree_oid(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_000c:  ldnull
    IL_000d:  newobj     instance void LibGit2Sharp.Tree::.ctor(class LibGit2Sharp.Repository,
                                                                class LibGit2Sharp.ObjectId,
                                                                class LibGit2Sharp.Core.FilePath)
    IL_0012:  ret
  } // end of method Commit::'<.ctor>b__0'

  .property instance class LibGit2Sharp.TreeEntry
          Item(string)
  {
    .get instance class LibGit2Sharp.TreeEntry LibGit2Sharp.Commit::get_Item(string)
  } // end of property Commit::Item
  .property instance string Message()
  {
    .get instance string LibGit2Sharp.Commit::get_Message()
  } // end of property Commit::Message
  .property instance string MessageShort()
  {
    .get instance string LibGit2Sharp.Commit::get_MessageShort()
  } // end of property Commit::MessageShort
  .property instance string Encoding()
  {
    .get instance string LibGit2Sharp.Commit::get_Encoding()
  } // end of property Commit::Encoding
  .property instance class LibGit2Sharp.Signature
          Author()
  {
    .get instance class LibGit2Sharp.Signature LibGit2Sharp.Commit::get_Author()
  } // end of property Commit::Author
  .property instance class LibGit2Sharp.Signature
          Committer()
  {
    .get instance class LibGit2Sharp.Signature LibGit2Sharp.Commit::get_Committer()
  } // end of property Commit::Committer
  .property instance class LibGit2Sharp.Tree
          Tree()
  {
    .get instance class LibGit2Sharp.Tree LibGit2Sharp.Commit::get_Tree()
  } // end of property Commit::Tree
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>
          Parents()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> LibGit2Sharp.Commit::get_Parents()
  } // end of property Commit::Parents
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note>
          Notes()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note> LibGit2Sharp.Commit::get_Notes()
  } // end of property Commit::Notes
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.Commit::get_DebuggerDisplay()
  } // end of property Commit::DebuggerDisplay
} // end of class LibGit2Sharp.Commit

.class interface public abstract auto ansi LibGit2Sharp.ICommitLog
       implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,
                  [mscorlib]System.Collections.IEnumerable
{
  .method public hidebysig newslot specialname abstract virtual 
          instance valuetype LibGit2Sharp.CommitSortStrategies 
          get_SortedBy() cil managed
  {
  } // end of method ICommitLog::get_SortedBy

  .property instance valuetype LibGit2Sharp.CommitSortStrategies
          SortedBy()
  {
    .get instance valuetype LibGit2Sharp.CommitSortStrategies LibGit2Sharp.ICommitLog::get_SortedBy()
  } // end of property ICommitLog::SortedBy
} // end of class LibGit2Sharp.ICommitLog

.class interface public abstract auto ansi LibGit2Sharp.IQueryableCommitLog
       implements LibGit2Sharp.ICommitLog,
                  class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,
                  [mscorlib]System.Collections.IEnumerable
{
  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.ICommitLog 
          QueryBy(class LibGit2Sharp.Filter 'filter') cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 5A 54 68 69 73 20 6D 65 74 68 6F 64 20 77   // ..ZThis method w
                                                                                69 6C 6C 20 62 65 20 72 65 6D 6F 76 65 64 20 69   // ill be removed i
                                                                                6E 20 74 68 65 20 6E 65 78 74 20 72 65 6C 65 61   // n the next relea
                                                                                73 65 2E 20 50 6C 65 61 73 65 20 75 73 65 20 51   // se. Please use Q
                                                                                75 65 72 79 42 79 28 43 6F 6D 6D 69 74 46 69 6C   // ueryBy(CommitFil
                                                                                74 65 72 29 20 69 6E 73 74 65 61 64 2E 00 00 )    // ter) instead...
  } // end of method IQueryableCommitLog::QueryBy

  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.ICommitLog 
          QueryBy(class LibGit2Sharp.CommitFilter 'filter') cil managed
  {
  } // end of method IQueryableCommitLog::QueryBy

  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.Commit 
          FindCommonAncestor(class LibGit2Sharp.Commit first,
                             class LibGit2Sharp.Commit second) cil managed
  {
  } // end of method IQueryableCommitLog::FindCommonAncestor

  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.Commit 
          FindCommonAncestor(class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> commits) cil managed
  {
  } // end of method IQueryableCommitLog::FindCommonAncestor

} // end of class LibGit2Sharp.IQueryableCommitLog

.class public auto ansi beforefieldinit LibGit2Sharp.CommitLog
       extends [mscorlib]System.Object
       implements LibGit2Sharp.IQueryableCommitLog,
                  LibGit2Sharp.ICommitLog,
                  class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,
                  [mscorlib]System.Collections.IEnumerable
{
  .class auto ansi nested private beforefieldinit CommitEnumerator
         extends [mscorlib]System.Object
         implements class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Commit>,
                    [mscorlib]System.IDisposable,
                    [mscorlib]System.Collections.IEnumerator
  {
    .class auto ansi sealed nested private HidePushSignature
           extends [mscorlib]System.MulticastDelegate
    {
      .method public hidebysig specialname rtspecialname 
              instance void  .ctor(object 'object',
                                   native int 'method') runtime managed
      {
      } // end of method HidePushSignature::.ctor

      .method public hidebysig newslot virtual 
              instance void  Invoke(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle handle,
                                    class LibGit2Sharp.ObjectId id) runtime managed
      {
      } // end of method HidePushSignature::Invoke

      .method public hidebysig newslot virtual 
              instance class [mscorlib]System.IAsyncResult 
              BeginInvoke(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle handle,
                          class LibGit2Sharp.ObjectId id,
                          class [mscorlib]System.AsyncCallback callback,
                          object 'object') runtime managed
      {
      } // end of method HidePushSignature::BeginInvoke

      .method public hidebysig newslot virtual 
              instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
      {
      } // end of method HidePushSignature::EndInvoke

    } // end of class HidePushSignature

    .class auto ansi sealed nested private beforefieldinit '<RetrieveCommitOids>d__2'
           extends [mscorlib]System.Object
           implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.ObjectId>,
                      [mscorlib]System.Collections.IEnumerable,
                      class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ObjectId>,
                      [mscorlib]System.Collections.IEnumerator,
                      [mscorlib]System.IDisposable
    {
      .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
      .field private class LibGit2Sharp.ObjectId '<>2__current'
      .field private int32 '<>1__state'
      .field private int32 '<>l__initialThreadId'
      .field public class LibGit2Sharp.CommitLog/CommitEnumerator '<>4__this'
      .field public object identifier
      .field public object '<>3__identifier'
      .field public class LibGit2Sharp.Branch '<branch>5__3'
      .field public class [mscorlib]System.Collections.IEnumerable '<enumerable>5__4'
      .field public object '<entry>5__5'
      .field public class LibGit2Sharp.ObjectId '<oid>5__6'
      .field public class [mscorlib]System.Collections.IEnumerator '<>7__wrap7'
      .field public class [mscorlib]System.IDisposable '<>7__wrap8'
      .field public class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ObjectId> '<>7__wrapa'
      .method private hidebysig newslot virtual final 
              instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ObjectId> 
              'System.Collections.Generic.IEnumerable<LibGit2Sharp.ObjectId>.GetEnumerator'() cil managed
      {
        .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
        .override  method instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.ObjectId>::GetEnumerator()
        // Code size       72 (0x48)
        .maxstack  2
        .locals init (class LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2' V_0)
        IL_0000:  call       class [mscorlib]System.Threading.Thread [mscorlib]System.Threading.Thread::get_CurrentThread()
        IL_0005:  callvirt   instance int32 [mscorlib]System.Threading.Thread::get_ManagedThreadId()
        IL_000a:  ldarg.0
        IL_000b:  ldfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>l__initialThreadId'
        IL_0010:  bne.un.s   IL_0027

        IL_0012:  ldarg.0
        IL_0013:  ldfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
        IL_0018:  ldc.i4.s   -2
        IL_001a:  bne.un.s   IL_0027

        IL_001c:  ldarg.0
        IL_001d:  ldc.i4.0
        IL_001e:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
        IL_0023:  ldarg.0
        IL_0024:  stloc.0
        IL_0025:  br.s       IL_003a

        IL_0027:  ldc.i4.0
        IL_0028:  newobj     instance void LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::.ctor(int32)
        IL_002d:  stloc.0
        IL_002e:  ldloc.0
        IL_002f:  ldarg.0
        IL_0030:  ldfld      class LibGit2Sharp.CommitLog/CommitEnumerator LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>4__this'
        IL_0035:  stfld      class LibGit2Sharp.CommitLog/CommitEnumerator LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>4__this'
        IL_003a:  ldloc.0
        IL_003b:  ldarg.0
        IL_003c:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>3__identifier'
        IL_0041:  stfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
        IL_0046:  ldloc.0
        IL_0047:  ret
      } // end of method '<RetrieveCommitOids>d__2'::'System.Collections.Generic.IEnumerable<LibGit2Sharp.ObjectId>.GetEnumerator'

      .method private hidebysig newslot virtual final 
              instance class [mscorlib]System.Collections.IEnumerator 
              System.Collections.IEnumerable.GetEnumerator() cil managed
      {
        .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
        .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
        // Code size       7 (0x7)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  call       instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'System.Collections.Generic.IEnumerable<LibGit2Sharp.ObjectId>.GetEnumerator'()
        IL_0006:  ret
      } // end of method '<RetrieveCommitOids>d__2'::System.Collections.IEnumerable.GetEnumerator

      .method private hidebysig newslot virtual final 
              instance bool  MoveNext() cil managed
      {
        .override [mscorlib]System.Collections.IEnumerator::MoveNext
        // Code size       940 (0x3ac)
        .maxstack  5
        .locals init (bool V_0,
                 int32 V_1,
                 object[] V_2)
        .try
        {
          IL_0000:  ldarg.0
          IL_0001:  ldfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_0006:  stloc.1
          IL_0007:  ldloc.1
          IL_0008:  switch     ( 
                                IL_0042,
                                IL_0080,
                                IL_00c8,
                                IL_0105,
                                IL_0157,
                                IL_01a9,
                                IL_020b,
                                IL_0256,
                                IL_029e,
                                IL_039f,
                                IL_039f,
                                IL_0346)
          IL_003d:  br         IL_039f

          IL_0042:  ldarg.0
          IL_0043:  ldc.i4.m1
          IL_0044:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_0049:  ldarg.0
          IL_004a:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_004f:  isinst     [mscorlib]System.String
          IL_0054:  brfalse.s  IL_008c

          IL_0056:  ldarg.0
          IL_0057:  ldarg.0
          IL_0058:  ldfld      class LibGit2Sharp.CommitLog/CommitEnumerator LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>4__this'
          IL_005d:  ldarg.0
          IL_005e:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_0063:  isinst     [mscorlib]System.String
          IL_0068:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator::DereferenceToCommit(string)
          IL_006d:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>2__current'
          IL_0072:  ldarg.0
          IL_0073:  ldc.i4.1
          IL_0074:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_0079:  ldc.i4.1
          IL_007a:  stloc.0
          IL_007b:  leave      IL_03aa

          IL_0080:  ldarg.0
          IL_0081:  ldc.i4.m1
          IL_0082:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_0087:  br         IL_039f

          IL_008c:  ldarg.0
          IL_008d:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_0092:  isinst     LibGit2Sharp.ObjectId
          IL_0097:  brfalse.s  IL_00d4

          IL_0099:  ldarg.0
          IL_009a:  ldarg.0
          IL_009b:  ldfld      class LibGit2Sharp.CommitLog/CommitEnumerator LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>4__this'
          IL_00a0:  ldarg.0
          IL_00a1:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_00a6:  castclass  LibGit2Sharp.ObjectId
          IL_00ab:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
          IL_00b0:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator::DereferenceToCommit(string)
          IL_00b5:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>2__current'
          IL_00ba:  ldarg.0
          IL_00bb:  ldc.i4.2
          IL_00bc:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_00c1:  ldc.i4.1
          IL_00c2:  stloc.0
          IL_00c3:  leave      IL_03aa

          IL_00c8:  ldarg.0
          IL_00c9:  ldc.i4.m1
          IL_00ca:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_00cf:  br         IL_039f

          IL_00d4:  ldarg.0
          IL_00d5:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_00da:  isinst     LibGit2Sharp.Commit
          IL_00df:  brfalse.s  IL_0111

          IL_00e1:  ldarg.0
          IL_00e2:  ldarg.0
          IL_00e3:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_00e8:  castclass  LibGit2Sharp.Commit
          IL_00ed:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
          IL_00f2:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>2__current'
          IL_00f7:  ldarg.0
          IL_00f8:  ldc.i4.3
          IL_00f9:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_00fe:  ldc.i4.1
          IL_00ff:  stloc.0
          IL_0100:  leave      IL_03aa

          IL_0105:  ldarg.0
          IL_0106:  ldc.i4.m1
          IL_0107:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_010c:  br         IL_039f

          IL_0111:  ldarg.0
          IL_0112:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_0117:  isinst     LibGit2Sharp.TagAnnotation
          IL_011c:  brfalse.s  IL_0163

          IL_011e:  ldarg.0
          IL_011f:  ldarg.0
          IL_0120:  ldfld      class LibGit2Sharp.CommitLog/CommitEnumerator LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>4__this'
          IL_0125:  ldarg.0
          IL_0126:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_012b:  castclass  LibGit2Sharp.TagAnnotation
          IL_0130:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.TagAnnotation::get_Target()
          IL_0135:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
          IL_013a:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
          IL_013f:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator::DereferenceToCommit(string)
          IL_0144:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>2__current'
          IL_0149:  ldarg.0
          IL_014a:  ldc.i4.4
          IL_014b:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_0150:  ldc.i4.1
          IL_0151:  stloc.0
          IL_0152:  leave      IL_03aa

          IL_0157:  ldarg.0
          IL_0158:  ldc.i4.m1
          IL_0159:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_015e:  br         IL_039f

          IL_0163:  ldarg.0
          IL_0164:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_0169:  isinst     LibGit2Sharp.Tag
          IL_016e:  brfalse.s  IL_01b5

          IL_0170:  ldarg.0
          IL_0171:  ldarg.0
          IL_0172:  ldfld      class LibGit2Sharp.CommitLog/CommitEnumerator LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>4__this'
          IL_0177:  ldarg.0
          IL_0178:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_017d:  castclass  LibGit2Sharp.Tag
          IL_0182:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.Tag::get_Target()
          IL_0187:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
          IL_018c:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
          IL_0191:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator::DereferenceToCommit(string)
          IL_0196:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>2__current'
          IL_019b:  ldarg.0
          IL_019c:  ldc.i4.5
          IL_019d:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_01a2:  ldc.i4.1
          IL_01a3:  stloc.0
          IL_01a4:  leave      IL_03aa

          IL_01a9:  ldarg.0
          IL_01aa:  ldc.i4.m1
          IL_01ab:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_01b0:  br         IL_039f

          IL_01b5:  ldarg.0
          IL_01b6:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_01bb:  isinst     LibGit2Sharp.Branch
          IL_01c0:  brfalse    IL_0262

          IL_01c5:  ldarg.0
          IL_01c6:  ldarg.0
          IL_01c7:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_01cc:  castclass  LibGit2Sharp.Branch
          IL_01d1:  stfld      class LibGit2Sharp.Branch LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<branch>5__3'
          IL_01d6:  ldarg.0
          IL_01d7:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<branch>5__3'
          IL_01dc:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
          IL_01e1:  ldnull
          IL_01e2:  call       bool LibGit2Sharp.GitObject::op_Equality(class LibGit2Sharp.GitObject,
                                                                        class LibGit2Sharp.GitObject)
          IL_01e7:  brfalse.s  IL_0217

          IL_01e9:  ldarg.0
          IL_01ea:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<branch>5__3'
          IL_01ef:  callvirt   instance bool LibGit2Sharp.Branch::get_IsCurrentRepositoryHead()
          IL_01f4:  brfalse.s  IL_0217

          IL_01f6:  ldarg.0
          IL_01f7:  ldnull
          IL_01f8:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>2__current'
          IL_01fd:  ldarg.0
          IL_01fe:  ldc.i4.6
          IL_01ff:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_0204:  ldc.i4.1
          IL_0205:  stloc.0
          IL_0206:  leave      IL_03aa

          IL_020b:  ldarg.0
          IL_020c:  ldc.i4.m1
          IL_020d:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_0212:  br         IL_039f

          IL_0217:  ldarg.0
          IL_0218:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<branch>5__3'
          IL_021d:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
          IL_0222:  ldarg.0
          IL_0223:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<branch>5__3'
          IL_0228:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
          IL_022d:  call       void LibGit2Sharp.Core.Ensure::GitObjectIsNotNull(class LibGit2Sharp.GitObject,
                                                                                 string)
          IL_0232:  ldarg.0
          IL_0233:  ldarg.0
          IL_0234:  ldfld      class LibGit2Sharp.Branch LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<branch>5__3'
          IL_0239:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
          IL_023e:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
          IL_0243:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>2__current'
          IL_0248:  ldarg.0
          IL_0249:  ldc.i4.7
          IL_024a:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_024f:  ldc.i4.1
          IL_0250:  stloc.0
          IL_0251:  leave      IL_03aa

          IL_0256:  ldarg.0
          IL_0257:  ldc.i4.m1
          IL_0258:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_025d:  br         IL_039f

          IL_0262:  ldarg.0
          IL_0263:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_0268:  isinst     LibGit2Sharp.Reference
          IL_026d:  brfalse.s  IL_02aa

          IL_026f:  ldarg.0
          IL_0270:  ldarg.0
          IL_0271:  ldfld      class LibGit2Sharp.CommitLog/CommitEnumerator LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>4__this'
          IL_0276:  ldarg.0
          IL_0277:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_027c:  castclass  LibGit2Sharp.Reference
          IL_0281:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
          IL_0286:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator::DereferenceToCommit(string)
          IL_028b:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>2__current'
          IL_0290:  ldarg.0
          IL_0291:  ldc.i4.8
          IL_0292:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_0297:  ldc.i4.1
          IL_0298:  stloc.0
          IL_0299:  leave      IL_03aa

          IL_029e:  ldarg.0
          IL_029f:  ldc.i4.m1
          IL_02a0:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_02a5:  br         IL_039f

          IL_02aa:  ldarg.0
          IL_02ab:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_02b0:  isinst     [mscorlib]System.Collections.IEnumerable
          IL_02b5:  brfalse    IL_0379

          IL_02ba:  ldarg.0
          IL_02bb:  ldarg.0
          IL_02bc:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_02c1:  castclass  [mscorlib]System.Collections.IEnumerable
          IL_02c6:  stfld      class [mscorlib]System.Collections.IEnumerable LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<enumerable>5__4'
          IL_02cb:  ldarg.0
          IL_02cc:  ldarg.0
          IL_02cd:  ldfld      class [mscorlib]System.Collections.IEnumerable LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<enumerable>5__4'
          IL_02d2:  callvirt   instance class [mscorlib]System.Collections.IEnumerator [mscorlib]System.Collections.IEnumerable::GetEnumerator()
          IL_02d7:  stfld      class [mscorlib]System.Collections.IEnumerator LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>7__wrap7'
          IL_02dc:  ldarg.0
          IL_02dd:  ldc.i4.s   9
          IL_02df:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_02e4:  br.s       IL_0361

          IL_02e6:  ldarg.0
          IL_02e7:  ldarg.0
          IL_02e8:  ldfld      class [mscorlib]System.Collections.IEnumerator LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>7__wrap7'
          IL_02ed:  callvirt   instance object [mscorlib]System.Collections.IEnumerator::get_Current()
          IL_02f2:  stfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<entry>5__5'
          IL_02f7:  ldarg.0
          IL_02f8:  ldarg.0
          IL_02f9:  ldfld      class LibGit2Sharp.CommitLog/CommitEnumerator LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>4__this'
          IL_02fe:  ldarg.0
          IL_02ff:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<entry>5__5'
          IL_0304:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.CommitLog/CommitEnumerator::RetrieveCommitOids(object)
          IL_0309:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.ObjectId>::GetEnumerator()
          IL_030e:  stfld      class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>7__wrapa'
          IL_0313:  ldarg.0
          IL_0314:  ldc.i4.s   10
          IL_0316:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_031b:  br.s       IL_034e

          IL_031d:  ldarg.0
          IL_031e:  ldarg.0
          IL_031f:  ldfld      class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>7__wrapa'
          IL_0324:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ObjectId>::get_Current()
          IL_0329:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<oid>5__6'
          IL_032e:  ldarg.0
          IL_032f:  ldarg.0
          IL_0330:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<oid>5__6'
          IL_0335:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>2__current'
          IL_033a:  ldarg.0
          IL_033b:  ldc.i4.s   11
          IL_033d:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_0342:  ldc.i4.1
          IL_0343:  stloc.0
          IL_0344:  leave.s    IL_03aa

          IL_0346:  ldarg.0
          IL_0347:  ldc.i4.s   10
          IL_0349:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_034e:  ldarg.0
          IL_034f:  ldfld      class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>7__wrapa'
          IL_0354:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
          IL_0359:  brtrue.s   IL_031d

          IL_035b:  ldarg.0
          IL_035c:  call       instance void LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>m__Finallyb'()
          IL_0361:  ldarg.0
          IL_0362:  ldfld      class [mscorlib]System.Collections.IEnumerator LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>7__wrap7'
          IL_0367:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
          IL_036c:  brtrue     IL_02e6

          IL_0371:  ldarg.0
          IL_0372:  call       instance void LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>m__Finally9'()
          IL_0377:  br.s       IL_039f

          IL_0379:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
          IL_037e:  ldstr      "Unexpected kind of identifier '{0}'."
          IL_0383:  ldc.i4.1
          IL_0384:  newarr     [mscorlib]System.Object
          IL_0389:  stloc.2
          IL_038a:  ldloc.2
          IL_038b:  ldc.i4.0
          IL_038c:  ldarg.0
          IL_038d:  ldfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::identifier
          IL_0392:  stelem.ref
          IL_0393:  ldloc.2
          IL_0394:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                      string,
                                                                      object[])
          IL_0399:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
          IL_039e:  throw

          IL_039f:  ldc.i4.0
          IL_03a0:  stloc.0
          IL_03a1:  leave.s    IL_03aa

        }  // end .try
        fault
        {
          IL_03a3:  ldarg.0
          IL_03a4:  call       instance void LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::System.IDisposable.Dispose()
          IL_03a9:  endfinally
        }  // end handler
        IL_03aa:  ldloc.0
        IL_03ab:  ret
      } // end of method '<RetrieveCommitOids>d__2'::MoveNext

      .method private hidebysig newslot specialname virtual final 
              instance class LibGit2Sharp.ObjectId 
              'System.Collections.Generic.IEnumerator<LibGit2Sharp.ObjectId>.get_Current'() cil managed
      {
        .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
        .override  method instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ObjectId>::get_Current()
        // Code size       7 (0x7)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>2__current'
        IL_0006:  ret
      } // end of method '<RetrieveCommitOids>d__2'::'System.Collections.Generic.IEnumerator<LibGit2Sharp.ObjectId>.get_Current'

      .method private hidebysig newslot virtual final 
              instance void  System.Collections.IEnumerator.Reset() cil managed
      {
        .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
        .override [mscorlib]System.Collections.IEnumerator::Reset
        // Code size       6 (0x6)
        .maxstack  8
        IL_0000:  newobj     instance void [mscorlib]System.NotSupportedException::.ctor()
        IL_0005:  throw
      } // end of method '<RetrieveCommitOids>d__2'::System.Collections.IEnumerator.Reset

      .method private hidebysig newslot virtual final 
              instance void  System.IDisposable.Dispose() cil managed
      {
        .override [mscorlib]System.IDisposable::Dispose
        // Code size       74 (0x4a)
        .maxstack  2
        .locals init (int32 V_0,
                 int32 V_1)
        IL_0000:  ldarg.0
        IL_0001:  ldfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
        IL_0006:  stloc.0
        IL_0007:  ldloc.0
        IL_0008:  ldc.i4.s   9
        IL_000a:  sub
        IL_000b:  switch     ( 
                              IL_001d,
                              IL_001d,
                              IL_001d)
        IL_001c:  ret

        .try
        {
          IL_001d:  ldarg.0
          IL_001e:  ldfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
          IL_0023:  stloc.1
          IL_0024:  ldloc.1
          IL_0025:  ldc.i4.s   10
          IL_0027:  sub
          IL_0028:  switch     ( 
                                IL_0037,
                                IL_0037)
          IL_0035:  br.s       IL_0040

          .try
          {
            IL_0037:  leave.s    IL_0040

          }  // end .try
          finally
          {
            IL_0039:  ldarg.0
            IL_003a:  call       instance void LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>m__Finallyb'()
            IL_003f:  endfinally
          }  // end handler
          IL_0040:  leave.s    IL_0049

        }  // end .try
        finally
        {
          IL_0042:  ldarg.0
          IL_0043:  call       instance void LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>m__Finally9'()
          IL_0048:  endfinally
        }  // end handler
        IL_0049:  ret
      } // end of method '<RetrieveCommitOids>d__2'::System.IDisposable.Dispose

      .method private hidebysig newslot specialname virtual final 
              instance object  System.Collections.IEnumerator.get_Current() cil managed
      {
        .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
        .override [mscorlib]System.Collections.IEnumerator::get_Current
        // Code size       7 (0x7)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>2__current'
        IL_0006:  ret
      } // end of method '<RetrieveCommitOids>d__2'::System.Collections.IEnumerator.get_Current

      .method public hidebysig specialname rtspecialname 
              instance void  .ctor(int32 '<>1__state') cil managed
      {
        .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
        // Code size       30 (0x1e)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
        IL_0006:  ldarg.0
        IL_0007:  ldarg.1
        IL_0008:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
        IL_000d:  ldarg.0
        IL_000e:  call       class [mscorlib]System.Threading.Thread [mscorlib]System.Threading.Thread::get_CurrentThread()
        IL_0013:  callvirt   instance int32 [mscorlib]System.Threading.Thread::get_ManagedThreadId()
        IL_0018:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>l__initialThreadId'
        IL_001d:  ret
      } // end of method '<RetrieveCommitOids>d__2'::.ctor

      .method private hidebysig instance void 
              '<>m__Finally9'() cil managed
      {
        // Code size       44 (0x2c)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  ldc.i4.m1
        IL_0002:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
        IL_0007:  ldarg.0
        IL_0008:  ldarg.0
        IL_0009:  ldfld      class [mscorlib]System.Collections.IEnumerator LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>7__wrap7'
        IL_000e:  isinst     [mscorlib]System.IDisposable
        IL_0013:  stfld      class [mscorlib]System.IDisposable LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>7__wrap8'
        IL_0018:  ldarg.0
        IL_0019:  ldfld      class [mscorlib]System.IDisposable LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>7__wrap8'
        IL_001e:  brfalse.s  IL_002b

        IL_0020:  ldarg.0
        IL_0021:  ldfld      class [mscorlib]System.IDisposable LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>7__wrap8'
        IL_0026:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_002b:  ret
      } // end of method '<RetrieveCommitOids>d__2'::'<>m__Finally9'

      .method private hidebysig instance void 
              '<>m__Finallyb'() cil managed
      {
        // Code size       28 (0x1c)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  ldc.i4.s   9
        IL_0003:  stfld      int32 LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>1__state'
        IL_0008:  ldarg.0
        IL_0009:  ldfld      class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>7__wrapa'
        IL_000e:  brfalse.s  IL_001b

        IL_0010:  ldarg.0
        IL_0011:  ldfld      class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>7__wrapa'
        IL_0016:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_001b:  ret
      } // end of method '<RetrieveCommitOids>d__2'::'<>m__Finallyb'

      .property instance class LibGit2Sharp.ObjectId
              'System.Collections.Generic.IEnumerator<LibGit2Sharp.ObjectId>.Current'()
      {
        .get instance class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'System.Collections.Generic.IEnumerator<LibGit2Sharp.ObjectId>.get_Current'()
      } // end of property '<RetrieveCommitOids>d__2'::'System.Collections.Generic.IEnumerator<LibGit2Sharp.ObjectId>.Current'
      .property instance object System.Collections.IEnumerator.Current()
      {
        .get instance object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::System.Collections.IEnumerator.get_Current()
      } // end of property '<RetrieveCommitOids>d__2'::System.Collections.IEnumerator.Current
    } // end of class '<RetrieveCommitOids>d__2'

    .field private initonly class LibGit2Sharp.Repository repo
    .field private initonly class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle handle
    .field private class LibGit2Sharp.ObjectId currentOid
    .field private static class [System.Core]System.Func`2<class LibGit2Sharp.ObjectId,bool> 'CS$<>9__CachedAnonymousMethodDelegate1'
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(class LibGit2Sharp.Repository repo,
                                 class LibGit2Sharp.CommitFilter 'filter') cil managed
    {
      // Code size       80 (0x50)
      .maxstack  2
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.CommitLog/CommitEnumerator::repo
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
      IL_0014:  call       class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle LibGit2Sharp.Core.Proxy::git_revwalk_new(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_0019:  stfld      class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle LibGit2Sharp.CommitLog/CommitEnumerator::handle
      IL_001e:  ldarg.1
      IL_001f:  ldarg.0
      IL_0020:  ldfld      class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle LibGit2Sharp.CommitLog/CommitEnumerator::handle
      IL_0025:  callvirt   instance !!0 LibGit2Sharp.Repository::RegisterForCleanup<class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle>(!!0)
      IL_002a:  pop
      IL_002b:  ldarg.0
      IL_002c:  ldarg.2
      IL_002d:  callvirt   instance valuetype LibGit2Sharp.CommitSortStrategies LibGit2Sharp.CommitFilter::get_SortBy()
      IL_0032:  call       instance void LibGit2Sharp.CommitLog/CommitEnumerator::Sort(valuetype LibGit2Sharp.CommitSortStrategies)
      IL_0037:  ldarg.0
      IL_0038:  ldarg.2
      IL_0039:  callvirt   instance class [mscorlib]System.Collections.Generic.IList`1<object> LibGit2Sharp.CommitFilter::get_SinceList()
      IL_003e:  call       instance void LibGit2Sharp.CommitLog/CommitEnumerator::Push(class [mscorlib]System.Collections.Generic.IList`1<object>)
      IL_0043:  ldarg.0
      IL_0044:  ldarg.2
      IL_0045:  callvirt   instance class [mscorlib]System.Collections.Generic.IList`1<object> LibGit2Sharp.CommitFilter::get_UntilList()
      IL_004a:  call       instance void LibGit2Sharp.CommitLog/CommitEnumerator::Hide(class [mscorlib]System.Collections.Generic.IList`1<object>)
      IL_004f:  ret
    } // end of method CommitEnumerator::.ctor

    .method public hidebysig newslot specialname virtual final 
            instance class LibGit2Sharp.Commit 
            get_Current() cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.CommitLog/CommitEnumerator::repo
      IL_0006:  ldarg.0
      IL_0007:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator::currentOid
      IL_000c:  call       !!0 LibGit2Sharp.RepositoryExtensions::Lookup<class LibGit2Sharp.Commit>(class LibGit2Sharp.IRepository,
                                                                                                    class LibGit2Sharp.ObjectId)
      IL_0011:  ret
    } // end of method CommitEnumerator::get_Current

    .method private hidebysig newslot specialname virtual final 
            instance object  System.Collections.IEnumerator.get_Current() cil managed
    {
      .override [mscorlib]System.Collections.IEnumerator::get_Current
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance class LibGit2Sharp.Commit LibGit2Sharp.CommitLog/CommitEnumerator::get_Current()
      IL_0006:  ret
    } // end of method CommitEnumerator::System.Collections.IEnumerator.get_Current

    .method public hidebysig newslot virtual final 
            instance bool  MoveNext() cil managed
    {
      // Code size       32 (0x20)
      .maxstack  2
      .locals init (class LibGit2Sharp.ObjectId V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle LibGit2Sharp.CommitLog/CommitEnumerator::handle
      IL_0006:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_revwalk_next(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldnull
      IL_000e:  call       bool LibGit2Sharp.ObjectId::op_Equality(class LibGit2Sharp.ObjectId,
                                                                   class LibGit2Sharp.ObjectId)
      IL_0013:  brfalse.s  IL_0017

      IL_0015:  ldc.i4.0
      IL_0016:  ret

      IL_0017:  ldarg.0
      IL_0018:  ldloc.0
      IL_0019:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.CommitLog/CommitEnumerator::currentOid
      IL_001e:  ldc.i4.1
      IL_001f:  ret
    } // end of method CommitEnumerator::MoveNext

    .method public hidebysig newslot virtual final 
            instance void  Reset() cil managed
    {
      // Code size       12 (0xc)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle LibGit2Sharp.CommitLog/CommitEnumerator::handle
      IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_revwalk_reset(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle)
      IL_000b:  ret
    } // end of method CommitEnumerator::Reset

    .method public hidebysig newslot virtual final 
            instance void  Dispose() cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.1
      IL_0002:  call       instance void LibGit2Sharp.CommitLog/CommitEnumerator::Dispose(bool)
      IL_0007:  ldarg.0
      IL_0008:  call       void [mscorlib]System.GC::SuppressFinalize(object)
      IL_000d:  ret
    } // end of method CommitEnumerator::Dispose

    .method private hidebysig instance void 
            Dispose(bool disposing) cil managed
    {
      // Code size       12 (0xc)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle LibGit2Sharp.CommitLog/CommitEnumerator::handle
      IL_0006:  call       void LibGit2Sharp.Core.Handles.SafeHandleExtensions::SafeDispose(class LibGit2Sharp.Core.Handles.SafeHandleBase)
      IL_000b:  ret
    } // end of method CommitEnumerator::Dispose

    .method private hidebysig instance void 
            InternalHidePush(class [mscorlib]System.Collections.Generic.IList`1<object> identifier,
                             class LibGit2Sharp.CommitLog/CommitEnumerator/HidePushSignature hidePush) cil managed
    {
      // Code size       92 (0x5c)
      .maxstack  4
      .locals init (class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.ObjectId> V_0,
               class LibGit2Sharp.ObjectId V_1,
               class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ObjectId> V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.CommitLog/CommitEnumerator::RetrieveCommitOids(object)
      IL_0007:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.ObjectId,bool> LibGit2Sharp.CommitLog/CommitEnumerator::'CS$<>9__CachedAnonymousMethodDelegate1'
      IL_000c:  brtrue.s   IL_001f

      IL_000e:  ldnull
      IL_000f:  ldftn      bool LibGit2Sharp.CommitLog/CommitEnumerator::'<InternalHidePush>b__0'(class LibGit2Sharp.ObjectId)
      IL_0015:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.ObjectId,bool>::.ctor(object,
                                                                                                                   native int)
      IL_001a:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.ObjectId,bool> LibGit2Sharp.CommitLog/CommitEnumerator::'CS$<>9__CachedAnonymousMethodDelegate1'
      IL_001f:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.ObjectId,bool> LibGit2Sharp.CommitLog/CommitEnumerator::'CS$<>9__CachedAnonymousMethodDelegate1'
      IL_0024:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> [System.Core]System.Linq.Enumerable::TakeWhile<class LibGit2Sharp.ObjectId>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                     class [System.Core]System.Func`2<!!0,bool>)
      IL_0029:  stloc.0
      IL_002a:  ldloc.0
      IL_002b:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.ObjectId>::GetEnumerator()
      IL_0030:  stloc.2
      .try
      {
        IL_0031:  br.s       IL_0047

        IL_0033:  ldloc.2
        IL_0034:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ObjectId>::get_Current()
        IL_0039:  stloc.1
        IL_003a:  ldarg.2
        IL_003b:  ldarg.0
        IL_003c:  ldfld      class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle LibGit2Sharp.CommitLog/CommitEnumerator::handle
        IL_0041:  ldloc.1
        IL_0042:  callvirt   instance void LibGit2Sharp.CommitLog/CommitEnumerator/HidePushSignature::Invoke(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle,
                                                                                                             class LibGit2Sharp.ObjectId)
        IL_0047:  ldloc.2
        IL_0048:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
        IL_004d:  brtrue.s   IL_0033

        IL_004f:  leave.s    IL_005b

      }  // end .try
      finally
      {
        IL_0051:  ldloc.2
        IL_0052:  brfalse.s  IL_005a

        IL_0054:  ldloc.2
        IL_0055:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_005a:  endfinally
      }  // end handler
      IL_005b:  ret
    } // end of method CommitEnumerator::InternalHidePush

    .method private hidebysig instance void 
            Push(class [mscorlib]System.Collections.Generic.IList`1<object> identifier) cil managed
    {
      // Code size       20 (0x14)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldnull
      IL_0003:  ldftn      void LibGit2Sharp.Core.Proxy::git_revwalk_push(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle,
                                                                          class LibGit2Sharp.ObjectId)
      IL_0009:  newobj     instance void LibGit2Sharp.CommitLog/CommitEnumerator/HidePushSignature::.ctor(object,
                                                                                                          native int)
      IL_000e:  call       instance void LibGit2Sharp.CommitLog/CommitEnumerator::InternalHidePush(class [mscorlib]System.Collections.Generic.IList`1<object>,
                                                                                                   class LibGit2Sharp.CommitLog/CommitEnumerator/HidePushSignature)
      IL_0013:  ret
    } // end of method CommitEnumerator::Push

    .method private hidebysig instance void 
            Hide(class [mscorlib]System.Collections.Generic.IList`1<object> identifier) cil managed
    {
      // Code size       24 (0x18)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brtrue.s   IL_0004

      IL_0003:  ret

      IL_0004:  ldarg.0
      IL_0005:  ldarg.1
      IL_0006:  ldnull
      IL_0007:  ldftn      void LibGit2Sharp.Core.Proxy::git_revwalk_hide(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle,
                                                                          class LibGit2Sharp.ObjectId)
      IL_000d:  newobj     instance void LibGit2Sharp.CommitLog/CommitEnumerator/HidePushSignature::.ctor(object,
                                                                                                          native int)
      IL_0012:  call       instance void LibGit2Sharp.CommitLog/CommitEnumerator::InternalHidePush(class [mscorlib]System.Collections.Generic.IList`1<object>,
                                                                                                   class LibGit2Sharp.CommitLog/CommitEnumerator/HidePushSignature)
      IL_0017:  ret
    } // end of method CommitEnumerator::Hide

    .method private hidebysig instance void 
            Sort(valuetype LibGit2Sharp.CommitSortStrategies options) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle LibGit2Sharp.CommitLog/CommitEnumerator::handle
      IL_0006:  ldarg.1
      IL_0007:  call       void LibGit2Sharp.Core.Proxy::git_revwalk_sorting(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle,
                                                                             valuetype LibGit2Sharp.CommitSortStrategies)
      IL_000c:  ret
    } // end of method CommitEnumerator::Sort

    .method private hidebysig instance class LibGit2Sharp.ObjectId 
            DereferenceToCommit(string identifier) cil managed
    {
      // Code size       49 (0x31)
      .maxstack  4
      .locals init (valuetype LibGit2Sharp.Core.LookUpOptions V_0,
               class LibGit2Sharp.GitObject V_1)
      IL_0000:  ldc.i4.2
      IL_0001:  stloc.0
      IL_0002:  ldarg.0
      IL_0003:  ldarg.1
      IL_0004:  call       instance bool LibGit2Sharp.CommitLog/CommitEnumerator::AllowOrphanReference(string)
      IL_0009:  brtrue.s   IL_000f

      IL_000b:  ldloc.0
      IL_000c:  ldc.i4.1
      IL_000d:  or
      IL_000e:  stloc.0
      IL_000f:  ldarg.0
      IL_0010:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.CommitLog/CommitEnumerator::repo
      IL_0015:  ldarg.1
      IL_0016:  ldc.i4.s   -2
      IL_0018:  ldloc.0
      IL_0019:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.Repository::Lookup(string,
                                                                                                 valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                                 valuetype LibGit2Sharp.Core.LookUpOptions)
      IL_001e:  stloc.1
      IL_001f:  ldloc.1
      IL_0020:  ldnull
      IL_0021:  call       bool LibGit2Sharp.GitObject::op_Inequality(class LibGit2Sharp.GitObject,
                                                                      class LibGit2Sharp.GitObject)
      IL_0026:  brtrue.s   IL_002a

      IL_0028:  ldnull
      IL_0029:  ret

      IL_002a:  ldloc.1
      IL_002b:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
      IL_0030:  ret
    } // end of method CommitEnumerator::DereferenceToCommit

    .method private hidebysig instance bool 
            AllowOrphanReference(string identifier) cil managed
    {
      // Code size       40 (0x28)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldstr      "HEAD"
      IL_0006:  ldc.i4.4
      IL_0007:  call       bool [mscorlib]System.String::Equals(string,
                                                                string,
                                                                valuetype [mscorlib]System.StringComparison)
      IL_000c:  brtrue.s   IL_0026

      IL_000e:  ldarg.1
      IL_000f:  ldarg.0
      IL_0010:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.CommitLog/CommitEnumerator::repo
      IL_0015:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::get_Head()
      IL_001a:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
      IL_001f:  ldc.i4.4
      IL_0020:  call       bool [mscorlib]System.String::Equals(string,
                                                                string,
                                                                valuetype [mscorlib]System.StringComparison)
      IL_0025:  ret

      IL_0026:  ldc.i4.1
      IL_0027:  ret
    } // end of method CommitEnumerator::AllowOrphanReference

    .method private hidebysig instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.ObjectId> 
            RetrieveCommitOids(object identifier) cil managed
    {
      // Code size       24 (0x18)
      .maxstack  2
      .locals init (class LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2' V_0)
      IL_0000:  ldc.i4.s   -2
      IL_0002:  newobj     instance void LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::.ctor(int32)
      IL_0007:  stloc.0
      IL_0008:  ldloc.0
      IL_0009:  ldarg.0
      IL_000a:  stfld      class LibGit2Sharp.CommitLog/CommitEnumerator LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>4__this'
      IL_000f:  ldloc.0
      IL_0010:  ldarg.1
      IL_0011:  stfld      object LibGit2Sharp.CommitLog/CommitEnumerator/'<RetrieveCommitOids>d__2'::'<>3__identifier'
      IL_0016:  ldloc.0
      IL_0017:  ret
    } // end of method CommitEnumerator::RetrieveCommitOids

    .method private hidebysig static bool 
            '<InternalHidePush>b__0'(class LibGit2Sharp.ObjectId o) cil managed
    {
      .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldnull
      IL_0002:  call       bool LibGit2Sharp.ObjectId::op_Inequality(class LibGit2Sharp.ObjectId,
                                                                     class LibGit2Sharp.ObjectId)
      IL_0007:  ret
    } // end of method CommitEnumerator::'<InternalHidePush>b__0'

    .property instance class LibGit2Sharp.Commit
            Current()
    {
      .get instance class LibGit2Sharp.Commit LibGit2Sharp.CommitLog/CommitEnumerator::get_Current()
    } // end of property CommitEnumerator::Current
    .property instance object System.Collections.IEnumerator.Current()
    {
      .get instance object LibGit2Sharp.CommitLog/CommitEnumerator::System.Collections.IEnumerator.get_Current()
    } // end of property CommitEnumerator::System.Collections.IEnumerator.Current
  } // end of class CommitEnumerator

  .field private initonly class LibGit2Sharp.Repository repo
  .field private initonly class LibGit2Sharp.CommitFilter queryFilter
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method CommitLog::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  newobj     instance void LibGit2Sharp.CommitFilter::.ctor()
    IL_0007:  call       instance void LibGit2Sharp.CommitLog::.ctor(class LibGit2Sharp.Repository,
                                                                     class LibGit2Sharp.CommitFilter)
    IL_000c:  ret
  } // end of method CommitLog::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.CommitFilter queryFilter) cil managed
  {
    // Code size       21 (0x15)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.CommitLog::repo
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  stfld      class LibGit2Sharp.CommitFilter LibGit2Sharp.CommitLog::queryFilter
    IL_0014:  ret
  } // end of method CommitLog::.ctor

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.CommitSortStrategies 
          get_SortedBy() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.CommitFilter LibGit2Sharp.CommitLog::queryFilter
    IL_0006:  callvirt   instance valuetype LibGit2Sharp.CommitSortStrategies LibGit2Sharp.CommitFilter::get_SortBy()
    IL_000b:  ret
  } // end of method CommitLog::get_SortedBy

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Commit> 
          GetEnumerator() cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.CommitLog::repo
    IL_0006:  ldarg.0
    IL_0007:  ldfld      class LibGit2Sharp.CommitFilter LibGit2Sharp.CommitLog::queryFilter
    IL_000c:  newobj     instance void LibGit2Sharp.CommitLog/CommitEnumerator::.ctor(class LibGit2Sharp.Repository,
                                                                                      class LibGit2Sharp.CommitFilter)
    IL_0011:  ret
  } // end of method CommitLog::GetEnumerator

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Commit> LibGit2Sharp.CommitLog::GetEnumerator()
    IL_0006:  ret
  } // end of method CommitLog::System.Collections.IEnumerable.GetEnumerator

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.ICommitLog 
          QueryBy(class LibGit2Sharp.CommitFilter 'filter') cil managed
  {
    // Code size       61 (0x3d)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "filter"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.1
    IL_000c:  callvirt   instance object LibGit2Sharp.CommitFilter::get_Since()
    IL_0011:  ldstr      "filter.Since"
    IL_0016:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_001b:  ldarg.1
    IL_001c:  callvirt   instance object LibGit2Sharp.CommitFilter::get_Since()
    IL_0021:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0026:  ldstr      "filter.Since"
    IL_002b:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0030:  ldarg.0
    IL_0031:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.CommitLog::repo
    IL_0036:  ldarg.1
    IL_0037:  newobj     instance void LibGit2Sharp.CommitLog::.ctor(class LibGit2Sharp.Repository,
                                                                     class LibGit2Sharp.CommitFilter)
    IL_003c:  ret
  } // end of method CommitLog::QueryBy

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.ICommitLog 
          QueryBy(class LibGit2Sharp.Filter 'filter') cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 5A 54 68 69 73 20 6D 65 74 68 6F 64 20 77   // ..ZThis method w
                                                                                69 6C 6C 20 62 65 20 72 65 6D 6F 76 65 64 20 69   // ill be removed i
                                                                                6E 20 74 68 65 20 6E 65 78 74 20 72 65 6C 65 61   // n the next relea
                                                                                73 65 2E 20 50 6C 65 61 73 65 20 75 73 65 20 51   // se. Please use Q
                                                                                75 65 72 79 42 79 28 43 6F 6D 6D 69 74 46 69 6C   // ueryBy(CommitFil
                                                                                74 65 72 29 20 69 6E 73 74 65 61 64 2E 00 00 )    // ter) instead...
    // Code size       66 (0x42)
    .maxstack  3
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "filter"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.1
    IL_000c:  callvirt   instance object LibGit2Sharp.Filter::get_Since()
    IL_0011:  ldstr      "filter.Since"
    IL_0016:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_001b:  ldarg.1
    IL_001c:  callvirt   instance object LibGit2Sharp.Filter::get_Since()
    IL_0021:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0026:  ldstr      "filter.Since"
    IL_002b:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0030:  ldarg.0
    IL_0031:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.CommitLog::repo
    IL_0036:  ldarg.1
    IL_0037:  callvirt   instance class LibGit2Sharp.CommitFilter LibGit2Sharp.Filter::ToCommitFilter()
    IL_003c:  newobj     instance void LibGit2Sharp.CommitLog::.ctor(class LibGit2Sharp.Repository,
                                                                     class LibGit2Sharp.CommitFilter)
    IL_0041:  ret
  } // end of method CommitLog::QueryBy

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Commit 
          FindCommonAncestor(class LibGit2Sharp.Commit first,
                             class LibGit2Sharp.Commit second) cil managed
  {
    // Code size       65 (0x41)
    .maxstack  3
    .locals init (class LibGit2Sharp.ObjectId V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "first"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "second"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.0
    IL_0017:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.CommitLog::repo
    IL_001c:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0021:  ldarg.1
    IL_0022:  ldarg.2
    IL_0023:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_merge_base(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                             class LibGit2Sharp.Commit,
                                                                                             class LibGit2Sharp.Commit)
    IL_0028:  stloc.0
    IL_0029:  ldloc.0
    IL_002a:  ldnull
    IL_002b:  call       bool LibGit2Sharp.ObjectId::op_Equality(class LibGit2Sharp.ObjectId,
                                                                 class LibGit2Sharp.ObjectId)
    IL_0030:  brtrue.s   IL_003f

    IL_0032:  ldarg.0
    IL_0033:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.CommitLog::repo
    IL_0038:  ldloc.0
    IL_0039:  call       !!0 LibGit2Sharp.RepositoryExtensions::Lookup<class LibGit2Sharp.Commit>(class LibGit2Sharp.IRepository,
                                                                                                  class LibGit2Sharp.ObjectId)
    IL_003e:  ret

    IL_003f:  ldnull
    IL_0040:  ret
  } // end of method CommitLog::FindCommonAncestor

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Commit 
          FindCommonAncestor(class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> commits) cil managed
  {
    // Code size       145 (0x91)
    .maxstack  3
    .locals init (class LibGit2Sharp.Commit V_0,
             int32 V_1,
             class LibGit2Sharp.Commit V_2,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Commit> V_3)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "commits"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldnull
    IL_000c:  stloc.0
    IL_000d:  ldc.i4.0
    IL_000e:  stloc.1
    IL_000f:  ldarg.1
    IL_0010:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>::GetEnumerator()
    IL_0015:  stloc.3
    .try
    {
      IL_0016:  br.s       IL_0067

      IL_0018:  ldloc.3
      IL_0019:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Commit>::get_Current()
      IL_001e:  stloc.2
      IL_001f:  ldloc.2
      IL_0020:  ldnull
      IL_0021:  call       bool LibGit2Sharp.GitObject::op_Equality(class LibGit2Sharp.GitObject,
                                                                    class LibGit2Sharp.GitObject)
      IL_0026:  brfalse.s  IL_0049

      IL_0028:  ldstr      "Enumerable contains null at position: "
      IL_002d:  ldloca.s   V_1
      IL_002f:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_0034:  call       instance string [mscorlib]System.Int32::ToString(class [mscorlib]System.IFormatProvider)
      IL_0039:  call       string [mscorlib]System.String::Concat(string,
                                                                  string)
      IL_003e:  ldstr      "commits"
      IL_0043:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string,
                                                                                   string)
      IL_0048:  throw

      IL_0049:  ldloc.1
      IL_004a:  ldc.i4.1
      IL_004b:  add
      IL_004c:  stloc.1
      IL_004d:  ldloc.1
      IL_004e:  ldc.i4.1
      IL_004f:  bne.un.s   IL_0055

      IL_0051:  ldloc.2
      IL_0052:  stloc.0
      IL_0053:  br.s       IL_0067

      IL_0055:  ldarg.0
      IL_0056:  ldloc.0
      IL_0057:  ldloc.2
      IL_0058:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.CommitLog::FindCommonAncestor(class LibGit2Sharp.Commit,
                                                                                                         class LibGit2Sharp.Commit)
      IL_005d:  stloc.0
      IL_005e:  ldloc.0
      IL_005f:  ldnull
      IL_0060:  call       bool LibGit2Sharp.GitObject::op_Equality(class LibGit2Sharp.GitObject,
                                                                    class LibGit2Sharp.GitObject)
      IL_0065:  brtrue.s   IL_006f

      IL_0067:  ldloc.3
      IL_0068:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_006d:  brtrue.s   IL_0018

      IL_006f:  leave.s    IL_007b

    }  // end .try
    finally
    {
      IL_0071:  ldloc.3
      IL_0072:  brfalse.s  IL_007a

      IL_0074:  ldloc.3
      IL_0075:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_007a:  endfinally
    }  // end handler
    IL_007b:  ldloc.1
    IL_007c:  ldc.i4.2
    IL_007d:  bge.s      IL_008f

    IL_007f:  ldstr      "The enumerable must contains at least two commits."
    IL_0084:  ldstr      "commits"
    IL_0089:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string,
                                                                                 string)
    IL_008e:  throw

    IL_008f:  ldloc.0
    IL_0090:  ret
  } // end of method CommitLog::FindCommonAncestor

  .property instance valuetype LibGit2Sharp.CommitSortStrategies
          SortedBy()
  {
    .get instance valuetype LibGit2Sharp.CommitSortStrategies LibGit2Sharp.CommitLog::get_SortedBy()
  } // end of property CommitLog::SortedBy
} // end of class LibGit2Sharp.CommitLog

.class public auto ansi beforefieldinit LibGit2Sharp.Configuration
       extends [mscorlib]System.Object
       implements [mscorlib]System.IDisposable,
                  class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.ConfigurationEntry`1<string>>,
                  [mscorlib]System.Collections.IEnumerable
{
  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass1`1'<T>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class [System.Core]System.Action`3<class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,string,!T> setter
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass1`1'::.ctor

    .method public hidebysig instance void 
            '<GetUpdater>b__0'(string key,
                               object val,
                               class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle handle) cil managed
    {
      // Code size       20 (0x14)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class [System.Core]System.Action`3<class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,string,!0> class LibGit2Sharp.Configuration/'<>c__DisplayClass1`1'<!T>::setter
      IL_0006:  ldarg.3
      IL_0007:  ldarg.1
      IL_0008:  ldarg.2
      IL_0009:  unbox.any  !T
      IL_000e:  callvirt   instance void class [System.Core]System.Action`3<class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,string,!T>::Invoke(!0,
                                                                                                                                                       !1,
                                                                                                                                                       !2)
      IL_0013:  ret
    } // end of method '<>c__DisplayClass1`1'::'<GetUpdater>b__0'

  } // end of class '<>c__DisplayClass1`1'

  .field private initonly class LibGit2Sharp.Core.FilePath globalConfigPath
  .field private initonly class LibGit2Sharp.Core.FilePath xdgConfigPath
  .field private initonly class LibGit2Sharp.Core.FilePath systemConfigPath
  .field private initonly class LibGit2Sharp.Repository repository
  .field private class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle configHandle
  .field private static initonly class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle>> configurationTypedUpdater
  .field private static class [System.Core]System.Func`2<native int,class LibGit2Sharp.ConfigurationEntry`1<string>> 'CS$<>9__CachedAnonymousMethodDelegate4'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method Configuration::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repository,
                               string globalConfigurationFileLocation,
                               string xdgConfigurationFileLocation,
                               string systemConfigurationFileLocation) cil managed
  {
    // Code size       84 (0x54)
    .maxstack  3
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Configuration::repository
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  dup
    IL_0010:  brtrue.s   IL_0018

    IL_0012:  pop
    IL_0013:  call       string LibGit2Sharp.Core.Proxy::git_config_find_global()
    IL_0018:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_001d:  stfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.Configuration::globalConfigPath
    IL_0022:  ldarg.0
    IL_0023:  ldarg.3
    IL_0024:  dup
    IL_0025:  brtrue.s   IL_002d

    IL_0027:  pop
    IL_0028:  call       string LibGit2Sharp.Core.Proxy::git_config_find_xdg()
    IL_002d:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0032:  stfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.Configuration::xdgConfigPath
    IL_0037:  ldarg.0
    IL_0038:  ldarg.s    systemConfigurationFileLocation
    IL_003a:  dup
    IL_003b:  brtrue.s   IL_0043

    IL_003d:  pop
    IL_003e:  call       string LibGit2Sharp.Core.Proxy::git_config_find_system()
    IL_0043:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0048:  stfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.Configuration::systemConfigPath
    IL_004d:  ldarg.0
    IL_004e:  call       instance void LibGit2Sharp.Configuration::Init()
    IL_0053:  ret
  } // end of method Configuration::.ctor

  .method private hidebysig instance void 
          Init() cil managed
  {
    // Code size       165 (0xa5)
    .maxstack  3
    .locals init (string V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Core.Proxy::git_config_new()
    IL_0006:  stfld      class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Configuration::configHandle
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Configuration::repository
    IL_0011:  brfalse.s  IL_0056

    IL_0013:  ldarg.0
    IL_0014:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Configuration::repository
    IL_0019:  callvirt   instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_001e:  callvirt   instance string LibGit2Sharp.RepositoryInformation::get_Path()
    IL_0023:  ldstr      "config"
    IL_0028:  call       string [mscorlib]System.IO.Path::Combine(string,
                                                                  string)
    IL_002d:  stloc.0
    IL_002e:  ldarg.0
    IL_002f:  ldfld      class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Configuration::configHandle
    IL_0034:  ldloc.0
    IL_0035:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_003a:  ldc.i4.4
    IL_003b:  call       void LibGit2Sharp.Core.Proxy::git_config_add_file_ondisk(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                  class LibGit2Sharp.Core.FilePath,
                                                                                  valuetype LibGit2Sharp.ConfigurationLevel)
    IL_0040:  ldarg.0
    IL_0041:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Configuration::repository
    IL_0046:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_004b:  ldarg.0
    IL_004c:  ldfld      class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Configuration::configHandle
    IL_0051:  call       void LibGit2Sharp.Core.Proxy::git_repository_set_config(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                 class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle)
    IL_0056:  ldarg.0
    IL_0057:  ldfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.Configuration::globalConfigPath
    IL_005c:  brfalse.s  IL_0070

    IL_005e:  ldarg.0
    IL_005f:  ldfld      class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Configuration::configHandle
    IL_0064:  ldarg.0
    IL_0065:  ldfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.Configuration::globalConfigPath
    IL_006a:  ldc.i4.3
    IL_006b:  call       void LibGit2Sharp.Core.Proxy::git_config_add_file_ondisk(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                  class LibGit2Sharp.Core.FilePath,
                                                                                  valuetype LibGit2Sharp.ConfigurationLevel)
    IL_0070:  ldarg.0
    IL_0071:  ldfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.Configuration::xdgConfigPath
    IL_0076:  brfalse.s  IL_008a

    IL_0078:  ldarg.0
    IL_0079:  ldfld      class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Configuration::configHandle
    IL_007e:  ldarg.0
    IL_007f:  ldfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.Configuration::xdgConfigPath
    IL_0084:  ldc.i4.2
    IL_0085:  call       void LibGit2Sharp.Core.Proxy::git_config_add_file_ondisk(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                  class LibGit2Sharp.Core.FilePath,
                                                                                  valuetype LibGit2Sharp.ConfigurationLevel)
    IL_008a:  ldarg.0
    IL_008b:  ldfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.Configuration::systemConfigPath
    IL_0090:  brfalse.s  IL_00a4

    IL_0092:  ldarg.0
    IL_0093:  ldfld      class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Configuration::configHandle
    IL_0098:  ldarg.0
    IL_0099:  ldfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.Configuration::systemConfigPath
    IL_009e:  ldc.i4.1
    IL_009f:  call       void LibGit2Sharp.Core.Proxy::git_config_add_file_ondisk(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                  class LibGit2Sharp.Core.FilePath,
                                                                                  valuetype LibGit2Sharp.ConfigurationLevel)
    IL_00a4:  ret
  } // end of method Configuration::Init

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor([opt] string globalConfigurationFileLocation,
                               [opt] string xdgConfigurationFileLocation,
                               [opt] string systemConfigurationFileLocation) cil managed
  {
    .param [1] = nullref
    .param [2] = nullref
    .param [3] = nullref
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  ldarg.3
    IL_0005:  call       instance void LibGit2Sharp.Configuration::.ctor(class LibGit2Sharp.Repository,
                                                                         string,
                                                                         string,
                                                                         string)
    IL_000a:  ret
  } // end of method Configuration::.ctor

  .method public hidebysig newslot virtual 
          instance bool  HasConfig(valuetype LibGit2Sharp.ConfigurationLevel level) cil managed
  {
    // Code size       31 (0x1f)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle V_0,
             bool V_1)
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.0
    IL_0003:  call       instance class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Configuration::RetrieveConfigurationHandle(valuetype LibGit2Sharp.ConfigurationLevel,
                                                                                                                                                  bool)
    IL_0008:  stloc.0
    .try
    {
      IL_0009:  ldloc.0
      IL_000a:  ldnull
      IL_000b:  ceq
      IL_000d:  ldc.i4.0
      IL_000e:  ceq
      IL_0010:  stloc.1
      IL_0011:  leave.s    IL_001d

    }  // end .try
    finally
    {
      IL_0013:  ldloc.0
      IL_0014:  brfalse.s  IL_001c

      IL_0016:  ldloc.0
      IL_0017:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_001c:  endfinally
    }  // end handler
    IL_001d:  ldloc.1
    IL_001e:  ret
  } // end of method Configuration::HasConfig

  .method public hidebysig newslot virtual final 
          instance void  Dispose() cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.1
    IL_0002:  callvirt   instance void LibGit2Sharp.Configuration::Dispose(bool)
    IL_0007:  ldarg.0
    IL_0008:  call       void [mscorlib]System.GC::SuppressFinalize(object)
    IL_000d:  ret
  } // end of method Configuration::Dispose

  .method public hidebysig newslot virtual 
          instance void  Unset(string key,
                               [opt] valuetype LibGit2Sharp.ConfigurationLevel level) cil managed
  {
    .param [2] = int32(0x00000004)
    // Code size       41 (0x29)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "key"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldarg.2
    IL_000d:  ldc.i4.1
    IL_000e:  call       instance class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Configuration::RetrieveConfigurationHandle(valuetype LibGit2Sharp.ConfigurationLevel,
                                                                                                                                                  bool)
    IL_0013:  stloc.0
    .try
    {
      IL_0014:  ldloc.0
      IL_0015:  ldarg.1
      IL_0016:  call       bool LibGit2Sharp.Core.Proxy::git_config_delete(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                           string)
      IL_001b:  pop
      IL_001c:  leave.s    IL_0028

    }  // end .try
    finally
    {
      IL_001e:  ldloc.0
      IL_001f:  brfalse.s  IL_0027

      IL_0021:  ldloc.0
      IL_0022:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0027:  endfinally
    }  // end handler
    IL_0028:  ret
  } // end of method Configuration::Unset

  .method family hidebysig newslot virtual 
          instance void  Dispose(bool disposing) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Configuration::configHandle
    IL_0006:  call       void LibGit2Sharp.Core.Handles.SafeHandleExtensions::SafeDispose(class LibGit2Sharp.Core.Handles.SafeHandleBase)
    IL_000b:  ret
  } // end of method Configuration::Dispose

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.ConfigurationEntry`1<!!T> 
          Get<T>(string key) cil managed
  {
    // Code size       24 (0x18)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "key"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Configuration::configHandle
    IL_0011:  ldarg.1
    IL_0012:  call       class LibGit2Sharp.ConfigurationEntry`1<!!0> LibGit2Sharp.Core.Proxy::git_config_get_entry<!!0>(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                                                         string)
    IL_0017:  ret
  } // end of method Configuration::Get

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.ConfigurationEntry`1<!!T> 
          Get<T>(string key,
                 valuetype LibGit2Sharp.ConfigurationLevel level) cil managed
  {
    // Code size       49 (0x31)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle V_0,
             class LibGit2Sharp.ConfigurationEntry`1<!!T> V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "key"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldarg.2
    IL_000d:  ldc.i4.0
    IL_000e:  call       instance class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Configuration::RetrieveConfigurationHandle(valuetype LibGit2Sharp.ConfigurationLevel,
                                                                                                                                                  bool)
    IL_0013:  stloc.0
    .try
    {
      IL_0014:  ldloc.0
      IL_0015:  brtrue.s   IL_001b

      IL_0017:  ldnull
      IL_0018:  stloc.1
      IL_0019:  leave.s    IL_002f

      IL_001b:  ldloc.0
      IL_001c:  ldarg.1
      IL_001d:  call       class LibGit2Sharp.ConfigurationEntry`1<!!0> LibGit2Sharp.Core.Proxy::git_config_get_entry<!!0>(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                                                           string)
      IL_0022:  stloc.1
      IL_0023:  leave.s    IL_002f

    }  // end .try
    finally
    {
      IL_0025:  ldloc.0
      IL_0026:  brfalse.s  IL_002e

      IL_0028:  ldloc.0
      IL_0029:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002e:  endfinally
    }  // end handler
    IL_002f:  ldloc.1
    IL_0030:  ret
  } // end of method Configuration::Get

  .method public hidebysig newslot virtual 
          instance void  Set<T>(string key,
                                !!T 'value',
                                [opt] valuetype LibGit2Sharp.ConfigurationLevel level) cil managed
  {
    .param [3] = int32(0x00000004)
    // Code size       135 (0x87)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle V_0,
             object[] V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "key"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldarg.3
    IL_000d:  ldc.i4.1
    IL_000e:  call       instance class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Configuration::RetrieveConfigurationHandle(valuetype LibGit2Sharp.ConfigurationLevel,
                                                                                                                                                  bool)
    IL_0013:  stloc.0
    .try
    {
      IL_0014:  ldsfld     class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle>> LibGit2Sharp.Configuration::configurationTypedUpdater
      IL_0019:  ldtoken    !!T
      IL_001e:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
      IL_0023:  callvirt   instance bool class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle>>::ContainsKey(!0)
      IL_0028:  brtrue.s   IL_0059

      IL_002a:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_002f:  ldstr      "Generic Argument of type '{0}' is not supported."
      IL_0034:  ldc.i4.1
      IL_0035:  newarr     [mscorlib]System.Object
      IL_003a:  stloc.1
      IL_003b:  ldloc.1
      IL_003c:  ldc.i4.0
      IL_003d:  ldtoken    !!T
      IL_0042:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
      IL_0047:  callvirt   instance string [mscorlib]System.Type::get_FullName()
      IL_004c:  stelem.ref
      IL_004d:  ldloc.1
      IL_004e:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                  string,
                                                                  object[])
      IL_0053:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
      IL_0058:  throw

      IL_0059:  ldsfld     class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle>> LibGit2Sharp.Configuration::configurationTypedUpdater
      IL_005e:  ldtoken    !!T
      IL_0063:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
      IL_0068:  callvirt   instance !1 class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle>>::get_Item(!0)
      IL_006d:  ldarg.1
      IL_006e:  ldarg.2
      IL_006f:  box        !!T
      IL_0074:  ldloc.0
      IL_0075:  callvirt   instance void class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle>::Invoke(!0,
                                                                                                                                                           !1,
                                                                                                                                                           !2)
      IL_007a:  leave.s    IL_0086

    }  // end .try
    finally
    {
      IL_007c:  ldloc.0
      IL_007d:  brfalse.s  IL_0085

      IL_007f:  ldloc.0
      IL_0080:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0085:  endfinally
    }  // end handler
    IL_0086:  ret
  } // end of method Configuration::Set

  .method private hidebysig instance class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle 
          RetrieveConfigurationHandle(valuetype LibGit2Sharp.ConfigurationLevel level,
                                      bool throwIfStoreHasNotBeenFound) cil managed
  {
    // Code size       84 (0x54)
    .maxstack  6
    .locals init (class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle V_0,
             object[] V_1)
    IL_0000:  ldnull
    IL_0001:  stloc.0
    IL_0002:  ldarg.0
    IL_0003:  ldfld      class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Configuration::configHandle
    IL_0008:  brfalse.s  IL_0017

    IL_000a:  ldarg.0
    IL_000b:  ldfld      class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Configuration::configHandle
    IL_0010:  ldarg.1
    IL_0011:  call       class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Core.Proxy::git_config_open_level(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                                                                valuetype LibGit2Sharp.ConfigurationLevel)
    IL_0016:  stloc.0
    IL_0017:  ldloc.0
    IL_0018:  brtrue.s   IL_0052

    IL_001a:  ldarg.2
    IL_001b:  brfalse.s  IL_0052

    IL_001d:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0022:  ldstr      "No {0} configuration file has been found."
    IL_0027:  ldc.i4.1
    IL_0028:  newarr     [mscorlib]System.Object
    IL_002d:  stloc.1
    IL_002e:  ldloc.1
    IL_002f:  ldc.i4.0
    IL_0030:  ldtoken    LibGit2Sharp.ConfigurationLevel
    IL_0035:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_003a:  ldarg.1
    IL_003b:  box        LibGit2Sharp.ConfigurationLevel
    IL_0040:  call       string [mscorlib]System.Enum::GetName(class [mscorlib]System.Type,
                                                               object)
    IL_0045:  stelem.ref
    IL_0046:  ldloc.1
    IL_0047:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_004c:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0051:  throw

    IL_0052:  ldloc.0
    IL_0053:  ret
  } // end of method Configuration::RetrieveConfigurationHandle

  .method private hidebysig static class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle> 
          GetUpdater<T>(class [System.Core]System.Action`3<class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,string,!!T> setter) cil managed
  {
    // Code size       26 (0x1a)
    .maxstack  3
    .locals init (class LibGit2Sharp.Configuration/'<>c__DisplayClass1`1'<!!T> V_0)
    IL_0000:  newobj     instance void class LibGit2Sharp.Configuration/'<>c__DisplayClass1`1'<!!T>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class [System.Core]System.Action`3<class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,string,!0> class LibGit2Sharp.Configuration/'<>c__DisplayClass1`1'<!!T>::setter
    IL_000d:  ldloc.0
    IL_000e:  ldftn      instance void class LibGit2Sharp.Configuration/'<>c__DisplayClass1`1'<!!T>::'<GetUpdater>b__0'(string,
                                                                                                                        object,
                                                                                                                        class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle)
    IL_0014:  newobj     instance void class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle>::.ctor(object,
                                                                                                                                                        native int)
    IL_0019:  ret
  } // end of method Configuration::GetUpdater

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.ConfigurationEntry`1<string>> 
          'System.Collections.Generic.IEnumerable<LibGit2Sharp.ConfigurationEntry<System.String>>.GetEnumerator'() cil managed
  {
    .override  method instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.ConfigurationEntry`1<string>>::GetEnumerator()
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.ConfigurationEntry`1<string>> LibGit2Sharp.Configuration::BuildConfigEntries()
    IL_0006:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.ConfigurationEntry`1<string>>::GetEnumerator()
    IL_000b:  ret
  } // end of method Configuration::'System.Collections.Generic.IEnumerable<LibGit2Sharp.ConfigurationEntry<System.String>>.GetEnumerator'

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.ConfigurationEntry`1<string>>::GetEnumerator()
    IL_0006:  ret
  } // end of method Configuration::System.Collections.IEnumerable.GetEnumerator

  .method private hidebysig instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.ConfigurationEntry`1<string>> 
          BuildConfigEntries() cil managed
  {
    // Code size       41 (0x29)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle LibGit2Sharp.Configuration::configHandle
    IL_0006:  ldsfld     class [System.Core]System.Func`2<native int,class LibGit2Sharp.ConfigurationEntry`1<string>> LibGit2Sharp.Configuration::'CS$<>9__CachedAnonymousMethodDelegate4'
    IL_000b:  brtrue.s   IL_001e

    IL_000d:  ldnull
    IL_000e:  ldftn      class LibGit2Sharp.ConfigurationEntry`1<string> LibGit2Sharp.Configuration::'<BuildConfigEntries>b__3'(native int)
    IL_0014:  newobj     instance void class [System.Core]System.Func`2<native int,class LibGit2Sharp.ConfigurationEntry`1<string>>::.ctor(object,
                                                                                                                                           native int)
    IL_0019:  stsfld     class [System.Core]System.Func`2<native int,class LibGit2Sharp.ConfigurationEntry`1<string>> LibGit2Sharp.Configuration::'CS$<>9__CachedAnonymousMethodDelegate4'
    IL_001e:  ldsfld     class [System.Core]System.Func`2<native int,class LibGit2Sharp.ConfigurationEntry`1<string>> LibGit2Sharp.Configuration::'CS$<>9__CachedAnonymousMethodDelegate4'
    IL_0023:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!0> LibGit2Sharp.Core.Proxy::git_config_foreach<class LibGit2Sharp.ConfigurationEntry`1<string>>(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                                                                                                                    class [System.Core]System.Func`2<native int,!!0>)
    IL_0028:  ret
  } // end of method Configuration::BuildConfigEntries

  .method assembly hidebysig instance class LibGit2Sharp.Signature 
          BuildSignatureFromGlobalConfiguration(valuetype [mscorlib]System.DateTimeOffset now,
                                                bool shouldThrowIfNotFound) cil managed
  {
    // Code size       98 (0x62)
    .maxstack  4
    .locals init (class LibGit2Sharp.ConfigurationEntry`1<string> V_0,
             class LibGit2Sharp.ConfigurationEntry`1<string> V_1)
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "user.name"
    IL_0006:  callvirt   instance class LibGit2Sharp.ConfigurationEntry`1<!!0> LibGit2Sharp.Configuration::Get<string>(string)
    IL_000b:  stloc.0
    IL_000c:  ldarg.0
    IL_000d:  ldstr      "user.email"
    IL_0012:  callvirt   instance class LibGit2Sharp.ConfigurationEntry`1<!!0> LibGit2Sharp.Configuration::Get<string>(string)
    IL_0017:  stloc.1
    IL_0018:  ldarg.2
    IL_0019:  brfalse.s  IL_002c

    IL_001b:  ldloc.0
    IL_001c:  brfalse.s  IL_0021

    IL_001e:  ldloc.1
    IL_001f:  brtrue.s   IL_002c

    IL_0021:  ldstr      "Can not find Name or Email setting of the current "
    + "user in Git configuration."
    IL_0026:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_002b:  throw

    IL_002c:  ldloc.0
    IL_002d:  brtrue.s   IL_0036

    IL_002f:  ldstr      "unknown"
    IL_0034:  br.s       IL_003c

    IL_0036:  ldloc.0
    IL_0037:  callvirt   instance !0 class LibGit2Sharp.ConfigurationEntry`1<string>::get_Value()
    IL_003c:  ldloc.1
    IL_003d:  brtrue.s   IL_0055

    IL_003f:  ldstr      "{0}@{1}"
    IL_0044:  call       string [mscorlib]System.Environment::get_UserName()
    IL_0049:  call       string [mscorlib]System.Environment::get_UserDomainName()
    IL_004e:  call       string [mscorlib]System.String::Format(string,
                                                                object,
                                                                object)
    IL_0053:  br.s       IL_005b

    IL_0055:  ldloc.1
    IL_0056:  callvirt   instance !0 class LibGit2Sharp.ConfigurationEntry`1<string>::get_Value()
    IL_005b:  ldarg.1
    IL_005c:  newobj     instance void LibGit2Sharp.Signature::.ctor(string,
                                                                     string,
                                                                     valuetype [mscorlib]System.DateTimeOffset)
    IL_0061:  ret
  } // end of method Configuration::BuildSignatureFromGlobalConfiguration

  .method private hidebysig static class LibGit2Sharp.ConfigurationEntry`1<string> 
          '<BuildConfigEntries>b__3'(native int entryPtr) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       59 (0x3b)
    .maxstack  4
    .locals init (valuetype LibGit2Sharp.Core.GitConfigEntry V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldtoken    LibGit2Sharp.Core.GitConfigEntry
    IL_0006:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_000b:  call       object [mscorlib]System.Runtime.InteropServices.Marshal::PtrToStructure(native int,
                                                                                                 class [mscorlib]System.Type)
    IL_0010:  unbox.any  LibGit2Sharp.Core.GitConfigEntry
    IL_0015:  stloc.0
    IL_0016:  ldloca.s   V_0
    IL_0018:  ldfld      native int LibGit2Sharp.Core.GitConfigEntry::namePtr
    IL_001d:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
    IL_0022:  ldloca.s   V_0
    IL_0024:  ldfld      native int LibGit2Sharp.Core.GitConfigEntry::valuePtr
    IL_0029:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
    IL_002e:  ldloca.s   V_0
    IL_0030:  ldfld      uint32 LibGit2Sharp.Core.GitConfigEntry::level
    IL_0035:  newobj     instance void class LibGit2Sharp.ConfigurationEntry`1<string>::.ctor(string,
                                                                                              !0,
                                                                                              valuetype LibGit2Sharp.ConfigurationLevel)
    IL_003a:  ret
  } // end of method Configuration::'<BuildConfigEntries>b__3'

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       145 (0x91)
    .maxstack  5
    .locals init (class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle>> V_0)
    IL_0000:  newobj     instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle>>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldtoken    [mscorlib]System.Int32
    IL_000c:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0011:  ldnull
    IL_0012:  ldftn      void LibGit2Sharp.Core.Proxy::git_config_set_int32(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                            string,
                                                                            int32)
    IL_0018:  newobj     instance void class [System.Core]System.Action`3<class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,string,int32>::.ctor(object,
                                                                                                                                                       native int)
    IL_001d:  call       class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle> LibGit2Sharp.Configuration::GetUpdater<int32>(class [System.Core]System.Action`3<class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,string,!!0>)
    IL_0022:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle>>::Add(!0,
                                                                                                                                                                                                                                           !1)
    IL_0027:  ldloc.0
    IL_0028:  ldtoken    [mscorlib]System.Int64
    IL_002d:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0032:  ldnull
    IL_0033:  ldftn      void LibGit2Sharp.Core.Proxy::git_config_set_int64(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                            string,
                                                                            int64)
    IL_0039:  newobj     instance void class [System.Core]System.Action`3<class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,string,int64>::.ctor(object,
                                                                                                                                                       native int)
    IL_003e:  call       class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle> LibGit2Sharp.Configuration::GetUpdater<int64>(class [System.Core]System.Action`3<class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,string,!!0>)
    IL_0043:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle>>::Add(!0,
                                                                                                                                                                                                                                           !1)
    IL_0048:  ldloc.0
    IL_0049:  ldtoken    [mscorlib]System.Boolean
    IL_004e:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0053:  ldnull
    IL_0054:  ldftn      void LibGit2Sharp.Core.Proxy::git_config_set_bool(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                           string,
                                                                           bool)
    IL_005a:  newobj     instance void class [System.Core]System.Action`3<class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,string,bool>::.ctor(object,
                                                                                                                                                      native int)
    IL_005f:  call       class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle> LibGit2Sharp.Configuration::GetUpdater<bool>(class [System.Core]System.Action`3<class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,string,!!0>)
    IL_0064:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle>>::Add(!0,
                                                                                                                                                                                                                                           !1)
    IL_0069:  ldloc.0
    IL_006a:  ldtoken    [mscorlib]System.String
    IL_006f:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0074:  ldnull
    IL_0075:  ldftn      void LibGit2Sharp.Core.Proxy::git_config_set_string(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                             string,
                                                                             string)
    IL_007b:  newobj     instance void class [System.Core]System.Action`3<class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,string,string>::.ctor(object,
                                                                                                                                                        native int)
    IL_0080:  call       class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle> LibGit2Sharp.Configuration::GetUpdater<string>(class [System.Core]System.Action`3<class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,string,!!0>)
    IL_0085:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle>>::Add(!0,
                                                                                                                                                                                                                                           !1)
    IL_008a:  ldloc.0
    IL_008b:  stsfld     class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,class [System.Core]System.Action`3<string,object,class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle>> LibGit2Sharp.Configuration::configurationTypedUpdater
    IL_0090:  ret
  } // end of method Configuration::.cctor

} // end of class LibGit2Sharp.Configuration

.class public auto ansi beforefieldinit LibGit2Sharp.ConfigurationEntry`1<T>
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field private string '<Key>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private !T '<Value>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private valuetype LibGit2Sharp.ConfigurationLevel '<Level>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig newslot specialname virtual 
          instance string  get_Key() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string class LibGit2Sharp.ConfigurationEntry`1<!T>::'<Key>k__BackingField'
    IL_0006:  ret
  } // end of method ConfigurationEntry`1::get_Key

  .method private hidebysig specialname instance void 
          set_Key(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string class LibGit2Sharp.ConfigurationEntry`1<!T>::'<Key>k__BackingField'
    IL_0007:  ret
  } // end of method ConfigurationEntry`1::set_Key

  .method public hidebysig newslot specialname virtual 
          instance !T  get_Value() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      !0 class LibGit2Sharp.ConfigurationEntry`1<!T>::'<Value>k__BackingField'
    IL_0006:  ret
  } // end of method ConfigurationEntry`1::get_Value

  .method private hidebysig specialname instance void 
          set_Value(!T 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      !0 class LibGit2Sharp.ConfigurationEntry`1<!T>::'<Value>k__BackingField'
    IL_0007:  ret
  } // end of method ConfigurationEntry`1::set_Value

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.ConfigurationLevel 
          get_Level() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.ConfigurationLevel class LibGit2Sharp.ConfigurationEntry`1<!T>::'<Level>k__BackingField'
    IL_0006:  ret
  } // end of method ConfigurationEntry`1::get_Level

  .method private hidebysig specialname instance void 
          set_Level(valuetype LibGit2Sharp.ConfigurationLevel 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      valuetype LibGit2Sharp.ConfigurationLevel class LibGit2Sharp.ConfigurationEntry`1<!T>::'<Level>k__BackingField'
    IL_0007:  ret
  } // end of method ConfigurationEntry`1::set_Level

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ConfigurationEntry`1::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string key,
                               !T 'value',
                               valuetype LibGit2Sharp.ConfigurationLevel level) cil managed
  {
    // Code size       28 (0x1c)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void class LibGit2Sharp.ConfigurationEntry`1<!T>::set_Key(string)
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  call       instance void class LibGit2Sharp.ConfigurationEntry`1<!T>::set_Value(!0)
    IL_0014:  ldarg.0
    IL_0015:  ldarg.3
    IL_0016:  call       instance void class LibGit2Sharp.ConfigurationEntry`1<!T>::set_Level(valuetype LibGit2Sharp.ConfigurationLevel)
    IL_001b:  ret
  } // end of method ConfigurationEntry`1::.ctor

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       47 (0x2f)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "{0} = \"{1}\""
    IL_000a:  ldc.i4.2
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance string class LibGit2Sharp.ConfigurationEntry`1<!T>::get_Key()
    IL_0019:  stelem.ref
    IL_001a:  ldloc.0
    IL_001b:  ldc.i4.1
    IL_001c:  ldarg.0
    IL_001d:  callvirt   instance !0 class LibGit2Sharp.ConfigurationEntry`1<!T>::get_Value()
    IL_0022:  box        !T
    IL_0027:  stelem.ref
    IL_0028:  ldloc.0
    IL_0029:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_002e:  ret
  } // end of method ConfigurationEntry`1::get_DebuggerDisplay

  .property instance string Key()
  {
    .get instance string LibGit2Sharp.ConfigurationEntry`1::get_Key()
    .set instance void LibGit2Sharp.ConfigurationEntry`1::set_Key(string)
  } // end of property ConfigurationEntry`1::Key
  .property instance !T Value()
  {
    .get instance !T LibGit2Sharp.ConfigurationEntry`1::get_Value()
    .set instance void LibGit2Sharp.ConfigurationEntry`1::set_Value(!T)
  } // end of property ConfigurationEntry`1::Value
  .property instance valuetype LibGit2Sharp.ConfigurationLevel
          Level()
  {
    .get instance valuetype LibGit2Sharp.ConfigurationLevel LibGit2Sharp.ConfigurationEntry`1::get_Level()
    .set instance void LibGit2Sharp.ConfigurationEntry`1::set_Level(valuetype LibGit2Sharp.ConfigurationLevel)
  } // end of property ConfigurationEntry`1::Level
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.ConfigurationEntry`1::get_DebuggerDisplay()
  } // end of property ConfigurationEntry`1::DebuggerDisplay
} // end of class LibGit2Sharp.ConfigurationEntry`1

.class public abstract auto ansi sealed beforefieldinit LibGit2Sharp.ConfigurationExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static class LibGit2Sharp.ConfigurationEntry`1<!!T> 
          Get<T>(class LibGit2Sharp.Configuration config,
                 string[] keyParts) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       29 (0x1d)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "keyParts"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  ldstr      "."
    IL_0011:  ldarg.1
    IL_0012:  call       string [mscorlib]System.String::Join(string,
                                                              string[])
    IL_0017:  callvirt   instance class LibGit2Sharp.ConfigurationEntry`1<!!0> LibGit2Sharp.Configuration::Get<!!0>(string)
    IL_001c:  ret
  } // end of method ConfigurationExtensions::Get

  .method public hidebysig static class LibGit2Sharp.ConfigurationEntry`1<!!T> 
          Get<T>(class LibGit2Sharp.Configuration config,
                 string firstKeyPart,
                 string secondKeyPart,
                 string thirdKeyPart) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       60 (0x3c)
    .maxstack  4
    .locals init (string[] V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "firstKeyPart"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "secondKeyPart"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0016:  ldarg.3
    IL_0017:  ldstr      "secondKeyPart"
    IL_001c:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0021:  ldarg.0
    IL_0022:  ldc.i4.3
    IL_0023:  newarr     [mscorlib]System.String
    IL_0028:  stloc.0
    IL_0029:  ldloc.0
    IL_002a:  ldc.i4.0
    IL_002b:  ldarg.1
    IL_002c:  stelem.ref
    IL_002d:  ldloc.0
    IL_002e:  ldc.i4.1
    IL_002f:  ldarg.2
    IL_0030:  stelem.ref
    IL_0031:  ldloc.0
    IL_0032:  ldc.i4.2
    IL_0033:  ldarg.3
    IL_0034:  stelem.ref
    IL_0035:  ldloc.0
    IL_0036:  call       class LibGit2Sharp.ConfigurationEntry`1<!!0> LibGit2Sharp.ConfigurationExtensions::Get<!!0>(class LibGit2Sharp.Configuration,
                                                                                                                     string[])
    IL_003b:  ret
  } // end of method ConfigurationExtensions::Get

} // end of class LibGit2Sharp.ConfigurationExtensions

.class public auto ansi beforefieldinit LibGit2Sharp.ContentChanges
       extends LibGit2Sharp.Changes
{
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Changes::.ctor()
    IL_0006:  ret
  } // end of method ContentChanges::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.Blob oldBlob,
                               class LibGit2Sharp.Blob newBlob,
                               class LibGit2Sharp.Core.GitDiffOptions options) cil managed
  {
    // Code size       92 (0x5c)
    .maxstack  9
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Changes::.ctor()
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000c:  ldarg.2
    IL_000d:  ldnull
    IL_000e:  call       bool LibGit2Sharp.GitObject::op_Inequality(class LibGit2Sharp.GitObject,
                                                                    class LibGit2Sharp.GitObject)
    IL_0013:  brtrue.s   IL_0018

    IL_0015:  ldnull
    IL_0016:  br.s       IL_001e

    IL_0018:  ldarg.2
    IL_0019:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_001e:  ldarg.3
    IL_001f:  ldnull
    IL_0020:  call       bool LibGit2Sharp.GitObject::op_Inequality(class LibGit2Sharp.GitObject,
                                                                    class LibGit2Sharp.GitObject)
    IL_0025:  brtrue.s   IL_002a

    IL_0027:  ldnull
    IL_0028:  br.s       IL_0030

    IL_002a:  ldarg.3
    IL_002b:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0030:  ldarg.s    options
    IL_0032:  ldarg.0
    IL_0033:  ldftn      instance int32 LibGit2Sharp.ContentChanges::FileCallback(class LibGit2Sharp.Core.GitDiffDelta,
                                                                                  float32,
                                                                                  native int)
    IL_0039:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_diff_file_cb::.ctor(object,
                                                                                               native int)
    IL_003e:  ldarg.0
    IL_003f:  ldftn      instance int32 LibGit2Sharp.ContentChanges::HunkCallback(class LibGit2Sharp.Core.GitDiffDelta,
                                                                                  class LibGit2Sharp.Core.GitDiffRange,
                                                                                  native int,
                                                                                  native uint,
                                                                                  native int)
    IL_0045:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_diff_hunk_cb::.ctor(object,
                                                                                               native int)
    IL_004a:  ldarg.0
    IL_004b:  ldftn      instance int32 LibGit2Sharp.ContentChanges::LineCallback(class LibGit2Sharp.Core.GitDiffDelta,
                                                                                  class LibGit2Sharp.Core.GitDiffRange,
                                                                                  valuetype LibGit2Sharp.Core.GitDiffLineOrigin,
                                                                                  native int,
                                                                                  native uint,
                                                                                  native int)
    IL_0051:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_diff_data_cb::.ctor(object,
                                                                                               native int)
    IL_0056:  call       void LibGit2Sharp.Core.Proxy::git_diff_blobs(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                      class LibGit2Sharp.ObjectId,
                                                                      class LibGit2Sharp.ObjectId,
                                                                      class LibGit2Sharp.Core.GitDiffOptions,
                                                                      class LibGit2Sharp.Core.NativeMethods/git_diff_file_cb,
                                                                      class LibGit2Sharp.Core.NativeMethods/git_diff_hunk_cb,
                                                                      class LibGit2Sharp.Core.NativeMethods/git_diff_data_cb)
    IL_005b:  ret
  } // end of method ContentChanges::.ctor

  .method private hidebysig instance int32 
          FileCallback(class LibGit2Sharp.Core.GitDiffDelta delta,
                       float32 progress,
                       native int payload) cil managed
  {
    // Code size       35 (0x23)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool LibGit2Sharp.Core.GitDiffExtensions::IsBinary(class LibGit2Sharp.Core.GitDiffDelta)
    IL_0007:  callvirt   instance void LibGit2Sharp.Changes::set_IsBinaryComparison(bool)
    IL_000c:  ldarg.0
    IL_000d:  callvirt   instance bool LibGit2Sharp.Changes::get_IsBinaryComparison()
    IL_0012:  brtrue.s   IL_0016

    IL_0014:  ldc.i4.0
    IL_0015:  ret

    IL_0016:  ldarg.0
    IL_0017:  ldstr      "Binary content differ\n"
    IL_001c:  call       instance void LibGit2Sharp.Changes::AppendToPatch(string)
    IL_0021:  ldc.i4.0
    IL_0022:  ret
  } // end of method ContentChanges::FileCallback

  .method private hidebysig instance int32 
          HunkCallback(class LibGit2Sharp.Core.GitDiffDelta delta,
                       class LibGit2Sharp.Core.GitDiffRange range,
                       native int header,
                       native uint headerlen,
                       native int payload) cil managed
  {
    // Code size       23 (0x17)
    .maxstack  2
    .locals init (string V_0)
    IL_0000:  ldarg.3
    IL_0001:  ldarg.s    headerlen
    IL_0003:  call       uint32 [mscorlib]System.UIntPtr::op_Explicit(native uint)
    IL_0008:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int,
                                                                            int32)
    IL_000d:  stloc.0
    IL_000e:  ldarg.0
    IL_000f:  ldloc.0
    IL_0010:  call       instance void LibGit2Sharp.Changes::AppendToPatch(string)
    IL_0015:  ldc.i4.0
    IL_0016:  ret
  } // end of method ContentChanges::HunkCallback

  .method private hidebysig instance int32 
          LineCallback(class LibGit2Sharp.Core.GitDiffDelta delta,
                       class LibGit2Sharp.Core.GitDiffRange range,
                       valuetype LibGit2Sharp.Core.GitDiffLineOrigin lineorigin,
                       native int content,
                       native uint contentlen,
                       native int payload) cil managed
  {
    // Code size       176 (0xb0)
    .maxstack  4
    .locals init (string V_0,
             string V_1,
             valuetype LibGit2Sharp.Core.GitDiffLineOrigin V_2,
             uint8[] V_3,
             uint8[] V_4,
             uint8[] V_5)
    IL_0000:  ldarg.s    content
    IL_0002:  ldarg.s    contentlen
    IL_0004:  call       uint32 [mscorlib]System.UIntPtr::op_Explicit(native uint)
    IL_0009:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int,
                                                                            int32)
    IL_000e:  stloc.0
    IL_000f:  ldarg.3
    IL_0010:  stloc.2
    IL_0011:  ldloc.2
    IL_0012:  ldc.i4.s   32
    IL_0014:  beq.s      IL_007e

    IL_0016:  ldloc.2
    IL_0017:  ldc.i4.s   43
    IL_0019:  sub
    IL_001a:  switch     ( 
                          IL_002d,
                          IL_009a,
                          IL_0054)
    IL_002b:  br.s       IL_009a

    IL_002d:  ldarg.0
    IL_002e:  dup
    IL_002f:  callvirt   instance int32 LibGit2Sharp.Changes::get_LinesAdded()
    IL_0034:  ldc.i4.1
    IL_0035:  add
    IL_0036:  callvirt   instance void LibGit2Sharp.Changes::set_LinesAdded(int32)
    IL_003b:  call       class [mscorlib]System.Text.Encoding [mscorlib]System.Text.Encoding::get_ASCII()
    IL_0040:  ldc.i4.1
    IL_0041:  newarr     [mscorlib]System.Byte
    IL_0046:  stloc.3
    IL_0047:  ldloc.3
    IL_0048:  ldc.i4.0
    IL_0049:  ldarg.3
    IL_004a:  stelem.i1
    IL_004b:  ldloc.3
    IL_004c:  callvirt   instance string [mscorlib]System.Text.Encoding::GetString(uint8[])
    IL_0051:  stloc.1
    IL_0052:  br.s       IL_00a0

    IL_0054:  ldarg.0
    IL_0055:  dup
    IL_0056:  callvirt   instance int32 LibGit2Sharp.Changes::get_LinesDeleted()
    IL_005b:  ldc.i4.1
    IL_005c:  add
    IL_005d:  callvirt   instance void LibGit2Sharp.Changes::set_LinesDeleted(int32)
    IL_0062:  call       class [mscorlib]System.Text.Encoding [mscorlib]System.Text.Encoding::get_ASCII()
    IL_0067:  ldc.i4.1
    IL_0068:  newarr     [mscorlib]System.Byte
    IL_006d:  stloc.s    V_4
    IL_006f:  ldloc.s    V_4
    IL_0071:  ldc.i4.0
    IL_0072:  ldarg.3
    IL_0073:  stelem.i1
    IL_0074:  ldloc.s    V_4
    IL_0076:  callvirt   instance string [mscorlib]System.Text.Encoding::GetString(uint8[])
    IL_007b:  stloc.1
    IL_007c:  br.s       IL_00a0

    IL_007e:  call       class [mscorlib]System.Text.Encoding [mscorlib]System.Text.Encoding::get_ASCII()
    IL_0083:  ldc.i4.1
    IL_0084:  newarr     [mscorlib]System.Byte
    IL_0089:  stloc.s    V_5
    IL_008b:  ldloc.s    V_5
    IL_008d:  ldc.i4.0
    IL_008e:  ldarg.3
    IL_008f:  stelem.i1
    IL_0090:  ldloc.s    V_5
    IL_0092:  callvirt   instance string [mscorlib]System.Text.Encoding::GetString(uint8[])
    IL_0097:  stloc.1
    IL_0098:  br.s       IL_00a0

    IL_009a:  ldsfld     string [mscorlib]System.String::Empty
    IL_009f:  stloc.1
    IL_00a0:  ldarg.0
    IL_00a1:  ldloc.1
    IL_00a2:  call       instance void LibGit2Sharp.Changes::AppendToPatch(string)
    IL_00a7:  ldarg.0
    IL_00a8:  ldloc.0
    IL_00a9:  call       instance void LibGit2Sharp.Changes::AppendToPatch(string)
    IL_00ae:  ldc.i4.0
    IL_00af:  ret
  } // end of method ContentChanges::LineCallback

} // end of class LibGit2Sharp.ContentChanges

.class public auto ansi serializable beforefieldinit LibGit2Sharp.InvalidSpecificationException
       extends LibGit2Sharp.LibGit2SharpException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor()
    IL_0006:  ret
  } // end of method InvalidSpecificationException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0007:  ret
  } // end of method InvalidSpecificationException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               class [mscorlib]System.Exception innerException) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 class [mscorlib]System.Exception)
    IL_0008:  ret
  } // end of method InvalidSpecificationException::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                               valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo,
                                                                                 valuetype [mscorlib]System.Runtime.Serialization.StreamingContext)
    IL_0008:  ret
  } // end of method InvalidSpecificationException::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               valuetype LibGit2Sharp.Core.GitErrorCode code,
                               valuetype LibGit2Sharp.Core.GitErrorCategory category) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_0009:  ret
  } // end of method InvalidSpecificationException::.ctor

} // end of class LibGit2Sharp.InvalidSpecificationException

.class private abstract auto ansi sealed beforefieldinit LibGit2Sharp.Core.Compat.EnumExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static bool  HasFlag<T>(class [mscorlib]System.Enum enumInstance,
                                                   !!T entry) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       32 (0x20)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  unbox.any  [mscorlib]System.Int32
    IL_0006:  ldarg.1
    IL_0007:  box        !!T
    IL_000c:  unbox.any  [mscorlib]System.Int32
    IL_0011:  and
    IL_0012:  ldarg.1
    IL_0013:  box        !!T
    IL_0018:  unbox.any  [mscorlib]System.Int32
    IL_001d:  ceq
    IL_001f:  ret
  } // end of method EnumExtensions::HasFlag

} // end of class LibGit2Sharp.Core.Compat.EnumExtensions

.class private auto ansi sealed LibGit2Sharp.Core.CheckoutStrategy
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.Core.CheckoutStrategy GIT_CHECKOUT_NONE = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.Core.CheckoutStrategy GIT_CHECKOUT_SAFE = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.Core.CheckoutStrategy GIT_CHECKOUT_SAFE_CREATE = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.Core.CheckoutStrategy GIT_CHECKOUT_FORCE = int32(0x00000004)
  .field public static literal valuetype LibGit2Sharp.Core.CheckoutStrategy GIT_CHECKOUT_ALLOW_CONFLICTS = int32(0x00000010)
  .field public static literal valuetype LibGit2Sharp.Core.CheckoutStrategy GIT_CHECKOUT_REMOVE_UNTRACKED = int32(0x00000020)
  .field public static literal valuetype LibGit2Sharp.Core.CheckoutStrategy GIT_CHECKOUT_REMOVE_IGNORED = int32(0x00000040)
  .field public static literal valuetype LibGit2Sharp.Core.CheckoutStrategy GIT_CHECKOUT_UPDATE_ONLY = int32(0x00000080)
  .field public static literal valuetype LibGit2Sharp.Core.CheckoutStrategy GIT_CHECKOUT_DONT_UPDATE_INDEX = int32(0x00000100)
  .field public static literal valuetype LibGit2Sharp.Core.CheckoutStrategy GIT_CHECKOUT_NO_REFRESH = int32(0x00000200)
  .field public static literal valuetype LibGit2Sharp.Core.CheckoutStrategy GIT_CHECKOUT_SKIP_UNMERGED = int32(0x00000400)
  .field public static literal valuetype LibGit2Sharp.Core.CheckoutStrategy GIT_CHECKOUT_USE_OURS = int32(0x00000800)
  .field public static literal valuetype LibGit2Sharp.Core.CheckoutStrategy GIT_CHECKOUT_USE_THEIRS = int32(0x00001000)
  .field public static literal valuetype LibGit2Sharp.Core.CheckoutStrategy GIT_CHECKOUT_UPDATE_SUBMODULES = int32(0x00010000)
  .field public static literal valuetype LibGit2Sharp.Core.CheckoutStrategy GIT_CHECKOUT_UPDATE_SUBMODULES_IF_CHANGED = int32(0x00020000)
} // end of class LibGit2Sharp.Core.CheckoutStrategy

.class private auto ansi sealed LibGit2Sharp.Core.checkout_notify_cb
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method checkout_notify_cb::.ctor

  .method public hidebysig newslot virtual 
          instance int32  Invoke(valuetype LibGit2Sharp.CheckoutNotifyFlags why,
                                 native int path,
                                 native int baseline,
                                 native int target,
                                 native int workdir,
                                 native int payload) runtime managed
  {
  } // end of method checkout_notify_cb::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(valuetype LibGit2Sharp.CheckoutNotifyFlags why,
                      native int path,
                      native int baseline,
                      native int target,
                      native int workdir,
                      native int payload,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method checkout_notify_cb::BeginInvoke

  .method public hidebysig newslot virtual 
          instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method checkout_notify_cb::EndInvoke

} // end of class LibGit2Sharp.Core.checkout_notify_cb

.class private auto ansi sealed LibGit2Sharp.Core.progress_cb
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method progress_cb::.ctor

  .method public hidebysig newslot virtual 
          instance void  Invoke(native int strPtr,
                                native uint completed_steps,
                                native uint total_steps,
                                native int payload) runtime managed
  {
  } // end of method progress_cb::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(native int strPtr,
                      native uint completed_steps,
                      native uint total_steps,
                      native int payload,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method progress_cb::BeginInvoke

  .method public hidebysig newslot virtual 
          instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method progress_cb::EndInvoke

} // end of class LibGit2Sharp.Core.progress_cb

.class private sequential ansi sealed beforefieldinit LibGit2Sharp.Core.GitCheckoutOpts
       extends [mscorlib]System.ValueType
       implements [mscorlib]System.IDisposable
{
  .field public uint32 version
  .field public valuetype LibGit2Sharp.Core.CheckoutStrategy checkout_strategy
  .field public int32 DisableFilters
  .field public uint32 DirMode
  .field public uint32 FileMode
  .field public int32 FileOpenFlags
  .field public valuetype LibGit2Sharp.CheckoutNotifyFlags notify_flags
  .field public class LibGit2Sharp.Core.checkout_notify_cb notify_cb
  .field public native int notify_payload
  .field public class LibGit2Sharp.Core.progress_cb progress_cb
  .field public native int progress_payload
  .field public class LibGit2Sharp.Core.GitStrArrayIn paths
  .field public native int baseline
  .field public native int target_directory
  .method public hidebysig newslot virtual final 
          instance void  Dispose() cil managed
  {
    // Code size       21 (0x15)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.GitStrArrayIn LibGit2Sharp.Core.GitCheckoutOpts::paths
    IL_0006:  brtrue.s   IL_0009

    IL_0008:  ret

    IL_0009:  ldarg.0
    IL_000a:  ldfld      class LibGit2Sharp.Core.GitStrArrayIn LibGit2Sharp.Core.GitCheckoutOpts::paths
    IL_000f:  callvirt   instance void LibGit2Sharp.Core.GitStrArrayIn::Dispose()
    IL_0014:  ret
  } // end of method GitCheckoutOpts::Dispose

} // end of class LibGit2Sharp.Core.GitCheckoutOpts

.class private sequential ansi beforefieldinit LibGit2Sharp.Core.GitCloneOptions
       extends [mscorlib]System.Object
{
  .field public uint32 Version
  .field public valuetype LibGit2Sharp.Core.GitCheckoutOpts CheckoutOpts
  .field public int32 Bare
  .field public class LibGit2Sharp.Core.NativeMethods/git_transfer_progress_callback TransferProgressCallback
  .field public native int TransferProgressPayload
  .field public native int RemoteName
  .field public native int PushUrl
  .field public native int FetchSpec
  .field public native int PushSpec
  .field public class LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb CredAcquireCallback
  .field public native int CredAcquirePayload
  .field public native int Transport
  .field public valuetype LibGit2Sharp.Core.GitRemoteCallbacks RemoteCallbacks
  .field public int32 RemoteAutotag
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.1
    IL_0002:  stfld      uint32 LibGit2Sharp.Core.GitCloneOptions::Version
    IL_0007:  ldarg.0
    IL_0008:  call       instance void [mscorlib]System.Object::.ctor()
    IL_000d:  ret
  } // end of method GitCloneOptions::.ctor

} // end of class LibGit2Sharp.Core.GitCloneOptions

.class private sequential ansi sealed beforefieldinit LibGit2Sharp.Core.GitConfigEntry
       extends [mscorlib]System.ValueType
{
  .field public native int namePtr
  .field public native int valuePtr
  .field public uint32 level
} // end of class LibGit2Sharp.Core.GitConfigEntry

.class private auto ansi beforefieldinit LibGit2Sharp.Core.GitObjectLazyGroup
       extends class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle>
{
  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass1`1'<TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Repository repo
    .field public class LibGit2Sharp.ObjectId id
    .field public class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,!TResult> resultSelector
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass1`1'::.ctor

    .method public hidebysig instance !TResult 
            '<Singleton>b__0'() cil managed
    {
      // Code size       56 (0x38)
      .maxstack  4
      .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
               !TResult V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.ObjectId class LibGit2Sharp.Core.GitObjectLazyGroup/'<>c__DisplayClass1`1'<!TResult>::id
      IL_0006:  ldarg.0
      IL_0007:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.Core.GitObjectLazyGroup/'<>c__DisplayClass1`1'<!TResult>::repo
      IL_000c:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
      IL_0011:  ldc.i4.0
      IL_0012:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    bool)
      IL_0017:  stloc.0
      .try
      {
        IL_0018:  ldarg.0
        IL_0019:  ldfld      class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,!0> class LibGit2Sharp.Core.GitObjectLazyGroup/'<>c__DisplayClass1`1'<!TResult>::resultSelector
        IL_001e:  ldloc.0
        IL_001f:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
        IL_0024:  callvirt   instance !1 class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,!TResult>::Invoke(!0)
        IL_0029:  stloc.1
        IL_002a:  leave.s    IL_0036

      }  // end .try
      finally
      {
        IL_002c:  ldloc.0
        IL_002d:  brfalse.s  IL_0035

        IL_002f:  ldloc.0
        IL_0030:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0035:  endfinally
      }  // end handler
      IL_0036:  ldloc.1
      IL_0037:  ret
    } // end of method '<>c__DisplayClass1`1'::'<Singleton>b__0'

  } // end of class '<>c__DisplayClass1`1'

  .field private initonly class LibGit2Sharp.ObjectId id
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.ObjectId id) cil managed
  {
    // Code size       15 (0xf)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle>::.ctor(class LibGit2Sharp.Repository)
    IL_0007:  ldarg.0
    IL_0008:  ldarg.2
    IL_0009:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitObjectLazyGroup::id
    IL_000e:  ret
  } // end of method GitObjectLazyGroup::.ctor

  .method family hidebysig virtual instance void 
          EvaluateInternal(class [mscorlib]System.Action`1<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle> evaluator) cil managed
  {
    // Code size       49 (0x31)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitObjectLazyGroup::id
    IL_0006:  ldarg.0
    IL_0007:  ldfld      class LibGit2Sharp.Repository class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle>::repo
    IL_000c:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0011:  ldc.i4.0
    IL_0012:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                  class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                  bool)
    IL_0017:  stloc.0
    .try
    {
      IL_0018:  ldarg.1
      IL_0019:  ldloc.0
      IL_001a:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
      IL_001f:  callvirt   instance void class [mscorlib]System.Action`1<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle>::Invoke(!0)
      IL_0024:  leave.s    IL_0030

    }  // end .try
    finally
    {
      IL_0026:  ldloc.0
      IL_0027:  brfalse.s  IL_002f

      IL_0029:  ldloc.0
      IL_002a:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002f:  endfinally
    }  // end handler
    IL_0030:  ret
  } // end of method GitObjectLazyGroup::EvaluateInternal

  .method public hidebysig static class LibGit2Sharp.Core.ILazy`1<!!TResult> 
          Singleton<TResult>(class LibGit2Sharp.Repository repo,
                             class LibGit2Sharp.ObjectId id,
                             class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,!!TResult> resultSelector) cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.GitObjectLazyGroup/'<>c__DisplayClass1`1'<!!TResult> V_0,
             class LibGit2Sharp.Core.ILazy`1<!!TResult> V_1)
    IL_0000:  newobj     instance void class LibGit2Sharp.Core.GitObjectLazyGroup/'<>c__DisplayClass1`1'<!!TResult>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Repository class LibGit2Sharp.Core.GitObjectLazyGroup/'<>c__DisplayClass1`1'<!!TResult>::repo
    IL_000d:  ldloc.0
    IL_000e:  ldarg.1
    IL_000f:  stfld      class LibGit2Sharp.ObjectId class LibGit2Sharp.Core.GitObjectLazyGroup/'<>c__DisplayClass1`1'<!!TResult>::id
    IL_0014:  ldloc.0
    IL_0015:  ldarg.2
    IL_0016:  stfld      class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,!0> class LibGit2Sharp.Core.GitObjectLazyGroup/'<>c__DisplayClass1`1'<!!TResult>::resultSelector
    IL_001b:  ldloc.0
    IL_001c:  ldftn      instance !0 class LibGit2Sharp.Core.GitObjectLazyGroup/'<>c__DisplayClass1`1'<!!TResult>::'<Singleton>b__0'()
    IL_0022:  newobj     instance void class [System.Core]System.Func`1<!!TResult>::.ctor(object,
                                                                                          native int)
    IL_0027:  call       class LibGit2Sharp.Core.ILazy`1<!!0> class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle>::Singleton<!!0>(class [System.Core]System.Func`1<!!0>)
    IL_002c:  ret
  } // end of method GitObjectLazyGroup::Singleton

} // end of class LibGit2Sharp.Core.GitObjectLazyGroup

.class private sequential ansi sealed beforefieldinit LibGit2Sharp.Core.GitTransferProgress
       extends [mscorlib]System.ValueType
{
  .field public uint32 total_objects
  .field public uint32 indexed_objects
  .field public uint32 received_objects
  .field public native uint received_bytes
} // end of class LibGit2Sharp.Core.GitTransferProgress

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.GitObjectSafeHandle
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_object_free(native int)
    IL_000b:  ldc.i4.1
    IL_000c:  ret
  } // end of method GitObjectSafeHandle::ReleaseHandleImpl

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method GitObjectSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.GitObjectSafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.NullGitObjectSafeHandle
       extends LibGit2Sharp.Core.Handles.GitObjectSafeHandle
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.GitObjectSafeHandle::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_000c:  stfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0011:  ret
  } // end of method NullGitObjectSafeHandle::.ctor

  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  ldc.i4.1
    IL_0001:  ret
  } // end of method NullGitObjectSafeHandle::ReleaseHandleImpl

} // end of class LibGit2Sharp.Core.Handles.NullGitObjectSafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.IndexSafeHandle
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_index_free(native int)
    IL_000b:  ldc.i4.1
    IL_000c:  ret
  } // end of method IndexSafeHandle::ReleaseHandleImpl

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method IndexSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.IndexSafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.NullIndexSafeHandle
       extends LibGit2Sharp.Core.Handles.IndexSafeHandle
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.IndexSafeHandle::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_000c:  stfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0011:  ret
  } // end of method NullIndexSafeHandle::.ctor

  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  ldc.i4.1
    IL_0001:  ret
  } // end of method NullIndexSafeHandle::ReleaseHandleImpl

} // end of class LibGit2Sharp.Core.Handles.NullIndexSafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.GitConfigEntryHandle
       extends LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase
{
  .method public hidebysig instance valuetype LibGit2Sharp.Core.GitConfigEntry 
          MarshalAsGitConfigEntry() cil managed
  {
    // Code size       27 (0x1b)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  ldtoken    LibGit2Sharp.Core.GitConfigEntry
    IL_000b:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0010:  call       object [mscorlib]System.Runtime.InteropServices.Marshal::PtrToStructure(native int,
                                                                                                 class [mscorlib]System.Type)
    IL_0015:  unbox.any  LibGit2Sharp.Core.GitConfigEntry
    IL_001a:  ret
  } // end of method GitConfigEntryHandle::MarshalAsGitConfigEntry

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method GitConfigEntryHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.GitConfigEntryHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Proxy
       extends [mscorlib]System.Object
{
  .class auto ansi sealed nested public Func`6<T1,T2,T3,T4,
                                               T5,TResult>
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method Func`6::.ctor

    .method public hidebysig newslot virtual 
            instance !TResult  Invoke(!T1 arg1,
                                      !T2 arg2,
                                      !T3 arg3,
                                      !T4 arg4,
                                      !T5 arg5) runtime managed
    {
    } // end of method Func`6::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(!T1 arg1,
                        !T2 arg2,
                        !T3 arg3,
                        !T4 arg4,
                        !T5 arg5,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method Func`6::BeginInvoke

    .method public hidebysig newslot virtual 
            instance !TResult  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method Func`6::EndInvoke

  } // end of class Func`6

  .class abstract auto ansi sealed nested private beforefieldinit Libgit2UnsafeHelper
         extends [mscorlib]System.Object
  {
    .method public hidebysig static class [mscorlib]System.Collections.Generic.IList`1<string> 
            BuildListOf(valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray strArray) cil managed
    {
      // Code size       92 (0x5c)
      .maxstack  3
      .locals init (valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray* V_0,
               int32 V_1,
               class [mscorlib]System.Collections.Generic.List`1<string> V_2,
               uint32 V_3,
               string V_4,
               class [mscorlib]System.Collections.Generic.IList`1<string> V_5)
      .try
      {
        IL_0000:  ldarga.s   strArray
        IL_0002:  conv.u
        IL_0003:  stloc.0
        IL_0004:  ldloc.0
        IL_0005:  ldfld      native uint LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray::size
        IL_000a:  call       uint32 [mscorlib]System.UIntPtr::op_Explicit(native uint)
        IL_000f:  stloc.1
        IL_0010:  ldloc.1
        IL_0011:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor(int32)
        IL_0016:  stloc.2
        IL_0017:  ldc.i4.0
        IL_0018:  stloc.3
        IL_0019:  br.s       IL_0046

        IL_001b:  ldloc.0
        IL_001c:  ldfld      int8** LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray::strings
        IL_0021:  ldloc.3
        IL_0022:  conv.u8
        IL_0023:  sizeof     int8*
        IL_0029:  conv.i8
        IL_002a:  mul
        IL_002b:  conv.i
        IL_002c:  add
        IL_002d:  ldind.i
        IL_002e:  call       native int [mscorlib]System.IntPtr::op_Explicit(void*)
        IL_0033:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
        IL_0038:  stloc.s    V_4
        IL_003a:  ldloc.2
        IL_003b:  ldloc.s    V_4
        IL_003d:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<string>::Add(!0)
        IL_0042:  ldloc.3
        IL_0043:  ldc.i4.1
        IL_0044:  add
        IL_0045:  stloc.3
        IL_0046:  ldloc.3
        IL_0047:  conv.u8
        IL_0048:  ldloc.1
        IL_0049:  conv.i8
        IL_004a:  blt.s      IL_001b

        IL_004c:  ldloc.2
        IL_004d:  stloc.s    V_5
        IL_004f:  leave.s    IL_0059

      }  // end .try
      finally
      {
        IL_0051:  ldarga.s   strArray
        IL_0053:  call       void LibGit2Sharp.Core.UnSafeNativeMethods::git_strarray_free(valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray&)
        IL_0058:  endfinally
      }  // end handler
      IL_0059:  ldloc.s    V_5
      IL_005b:  ret
    } // end of method Libgit2UnsafeHelper::BuildListOf

  } // end of class Libgit2UnsafeHelper

  .class auto ansi nested private beforefieldinit DisposableThreadAffinityWrapper
         extends [mscorlib]System.Object
         implements [mscorlib]System.IDisposable
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       12 (0xc)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  call       void [mscorlib]System.Threading.Thread::BeginThreadAffinity()
      IL_000b:  ret
    } // end of method DisposableThreadAffinityWrapper::.ctor

    .method public hidebysig newslot virtual final 
            instance void  Dispose() cil managed
    {
      // Code size       6 (0x6)
      .maxstack  8
      IL_0000:  call       void [mscorlib]System.Threading.Thread::EndThreadAffinity()
      IL_0005:  ret
    } // end of method DisposableThreadAffinityWrapper::Dispose

  } // end of class DisposableThreadAffinityWrapper

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass2`1'<TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass4'<TResult>
           extends [mscorlib]System.Object
    {
      .field public class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2`1'<!TResult> 'CS$<>8__locals3'
      .field public class [System.Core]System.Func`4<native int,valuetype LibGit2Sharp.Core.GitBranchType,native int,int32> c
      .method public hidebysig specialname rtspecialname 
              instance void  .ctor() cil managed
      {
        // Code size       7 (0x7)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
        IL_0006:  ret
      } // end of method '<>c__DisplayClass4'::.ctor

      .method public hidebysig instance int32 
              '<git_branch_foreach>b__1'(native int x,
                                         valuetype LibGit2Sharp.Core.GitBranchType y,
                                         native int p) cil managed
      {
        // Code size       15 (0xf)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  ldfld      class [System.Core]System.Func`4<native int,valuetype LibGit2Sharp.Core.GitBranchType,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2`1'/'<>c__DisplayClass4'<!TResult>::c
        IL_0006:  ldarg.1
        IL_0007:  ldarg.2
        IL_0008:  ldarg.3
        IL_0009:  callvirt   instance !3 class [System.Core]System.Func`4<native int,valuetype LibGit2Sharp.Core.GitBranchType,native int,int32>::Invoke(!0,
                                                                                                                                                         !1,
                                                                                                                                                         !2)
        IL_000e:  ret
      } // end of method '<>c__DisplayClass4'::'<git_branch_foreach>b__1'

    } // end of class '<>c__DisplayClass4'

    .field public class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo
    .field public valuetype LibGit2Sharp.Core.GitBranchType branch_type
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass2`1'::.ctor

    .method public hidebysig instance int32 
            '<git_branch_foreach>b__0'(class [System.Core]System.Func`4<native int,valuetype LibGit2Sharp.Core.GitBranchType,native int,int32> c) cil managed
    {
      // Code size       55 (0x37)
      .maxstack  5
      .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2`1'/'<>c__DisplayClass4'<!TResult> V_0)
      IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2`1'/'<>c__DisplayClass4'<!TResult>::.ctor()
      IL_0005:  stloc.0
      IL_0006:  ldloc.0
      IL_0007:  ldarg.0
      IL_0008:  stfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2`1'<!0> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2`1'/'<>c__DisplayClass4'<!TResult>::'CS$<>8__locals3'
      IL_000d:  ldloc.0
      IL_000e:  ldarg.1
      IL_000f:  stfld      class [System.Core]System.Func`4<native int,valuetype LibGit2Sharp.Core.GitBranchType,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2`1'/'<>c__DisplayClass4'<!TResult>::c
      IL_0014:  ldarg.0
      IL_0015:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2`1'<!TResult>::repo
      IL_001a:  ldarg.0
      IL_001b:  ldfld      valuetype LibGit2Sharp.Core.GitBranchType class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2`1'<!TResult>::branch_type
      IL_0020:  ldloc.0
      IL_0021:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2`1'/'<>c__DisplayClass4'<!TResult>::'<git_branch_foreach>b__1'(native int,
                                                                                                                                                          valuetype LibGit2Sharp.Core.GitBranchType,
                                                                                                                                                          native int)
      IL_0027:  newobj     instance void LibGit2Sharp.Core.NativeMethods/branch_foreach_callback::.ctor(object,
                                                                                                        native int)
      IL_002c:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_0031:  call       int32 LibGit2Sharp.Core.NativeMethods::git_branch_foreach(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                     valuetype LibGit2Sharp.Core.GitBranchType,
                                                                                     class LibGit2Sharp.Core.NativeMethods/branch_foreach_callback,
                                                                                     native int)
      IL_0036:  ret
    } // end of method '<>c__DisplayClass2`1'::'<git_branch_foreach>b__0'

  } // end of class '<>c__DisplayClass2`1'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass8`1'<TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClassa'<TResult>
           extends [mscorlib]System.Object
    {
      .field public class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass8`1'<!TResult> 'CS$<>8__locals9'
      .field public class [System.Core]System.Func`3<native int,native int,int32> c
      .method public hidebysig specialname rtspecialname 
              instance void  .ctor() cil managed
      {
        // Code size       7 (0x7)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
        IL_0006:  ret
      } // end of method '<>c__DisplayClassa'::.ctor

      .method public hidebysig instance int32 
              '<git_config_foreach>b__7'(native int e,
                                         native int p) cil managed
      {
        // Code size       14 (0xe)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  ldfld      class [System.Core]System.Func`3<native int,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass8`1'/'<>c__DisplayClassa'<!TResult>::c
        IL_0006:  ldarg.1
        IL_0007:  ldarg.2
        IL_0008:  callvirt   instance !2 class [System.Core]System.Func`3<native int,native int,int32>::Invoke(!0,
                                                                                                               !1)
        IL_000d:  ret
      } // end of method '<>c__DisplayClassa'::'<git_config_foreach>b__7'

    } // end of class '<>c__DisplayClassa'

    .field public class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle config
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass8`1'::.ctor

    .method public hidebysig instance int32 
            '<git_config_foreach>b__6'(class [System.Core]System.Func`3<native int,native int,int32> c) cil managed
    {
      // Code size       49 (0x31)
      .maxstack  4
      .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass8`1'/'<>c__DisplayClassa'<!TResult> V_0)
      IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass8`1'/'<>c__DisplayClassa'<!TResult>::.ctor()
      IL_0005:  stloc.0
      IL_0006:  ldloc.0
      IL_0007:  ldarg.0
      IL_0008:  stfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass8`1'<!0> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass8`1'/'<>c__DisplayClassa'<!TResult>::'CS$<>8__locals9'
      IL_000d:  ldloc.0
      IL_000e:  ldarg.1
      IL_000f:  stfld      class [System.Core]System.Func`3<native int,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass8`1'/'<>c__DisplayClassa'<!TResult>::c
      IL_0014:  ldarg.0
      IL_0015:  ldfld      class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass8`1'<!TResult>::config
      IL_001a:  ldloc.0
      IL_001b:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass8`1'/'<>c__DisplayClassa'<!TResult>::'<git_config_foreach>b__7'(native int,
                                                                                                                                                          native int)
      IL_0021:  newobj     instance void LibGit2Sharp.Core.NativeMethods/config_foreach_callback::.ctor(object,
                                                                                                        native int)
      IL_0026:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_002b:  call       int32 LibGit2Sharp.Core.NativeMethods::git_config_foreach(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                     class LibGit2Sharp.Core.NativeMethods/config_foreach_callback,
                                                                                     native int)
      IL_0030:  ret
    } // end of method '<>c__DisplayClass8`1'::'<git_config_foreach>b__6'

  } // end of class '<>c__DisplayClass8`1'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClasse`1'<TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass10'<TResult>
           extends [mscorlib]System.Object
    {
      .field public class LibGit2Sharp.Core.Proxy/'<>c__DisplayClasse`1'<!TResult> 'CS$<>8__localsf'
      .field public class [System.Core]System.Func`4<valuetype LibGit2Sharp.Core.GitOid,valuetype LibGit2Sharp.Core.GitOid,native int,int32> c
      .method public hidebysig specialname rtspecialname 
              instance void  .ctor() cil managed
      {
        // Code size       7 (0x7)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
        IL_0006:  ret
      } // end of method '<>c__DisplayClass10'::.ctor

      .method public hidebysig instance int32 
              '<git_note_foreach>b__d'(valuetype LibGit2Sharp.Core.GitOid& x,
                                       valuetype LibGit2Sharp.Core.GitOid& y,
                                       native int p) cil managed
      {
        // Code size       25 (0x19)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  ldfld      class [System.Core]System.Func`4<valuetype LibGit2Sharp.Core.GitOid,valuetype LibGit2Sharp.Core.GitOid,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClasse`1'/'<>c__DisplayClass10'<!TResult>::c
        IL_0006:  ldarg.1
        IL_0007:  ldobj      LibGit2Sharp.Core.GitOid
        IL_000c:  ldarg.2
        IL_000d:  ldobj      LibGit2Sharp.Core.GitOid
        IL_0012:  ldarg.3
        IL_0013:  callvirt   instance !3 class [System.Core]System.Func`4<valuetype LibGit2Sharp.Core.GitOid,valuetype LibGit2Sharp.Core.GitOid,native int,int32>::Invoke(!0,
                                                                                                                                                                          !1,
                                                                                                                                                                          !2)
        IL_0018:  ret
      } // end of method '<>c__DisplayClass10'::'<git_note_foreach>b__d'

    } // end of class '<>c__DisplayClass10'

    .field public class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo
    .field public string notes_ref
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClasse`1'::.ctor

    .method public hidebysig instance int32 
            '<git_note_foreach>b__c'(class [System.Core]System.Func`4<valuetype LibGit2Sharp.Core.GitOid,valuetype LibGit2Sharp.Core.GitOid,native int,int32> c) cil managed
    {
      // Code size       55 (0x37)
      .maxstack  5
      .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClasse`1'/'<>c__DisplayClass10'<!TResult> V_0)
      IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClasse`1'/'<>c__DisplayClass10'<!TResult>::.ctor()
      IL_0005:  stloc.0
      IL_0006:  ldloc.0
      IL_0007:  ldarg.0
      IL_0008:  stfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClasse`1'<!0> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClasse`1'/'<>c__DisplayClass10'<!TResult>::'CS$<>8__localsf'
      IL_000d:  ldloc.0
      IL_000e:  ldarg.1
      IL_000f:  stfld      class [System.Core]System.Func`4<valuetype LibGit2Sharp.Core.GitOid,valuetype LibGit2Sharp.Core.GitOid,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClasse`1'/'<>c__DisplayClass10'<!TResult>::c
      IL_0014:  ldarg.0
      IL_0015:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClasse`1'<!TResult>::repo
      IL_001a:  ldarg.0
      IL_001b:  ldfld      string class LibGit2Sharp.Core.Proxy/'<>c__DisplayClasse`1'<!TResult>::notes_ref
      IL_0020:  ldloc.0
      IL_0021:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClasse`1'/'<>c__DisplayClass10'<!TResult>::'<git_note_foreach>b__d'(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                                                                                         valuetype LibGit2Sharp.Core.GitOid&,
                                                                                                                                                         native int)
      IL_0027:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_note_foreach_cb::.ctor(object,
                                                                                                    native int)
      IL_002c:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_0031:  call       int32 LibGit2Sharp.Core.NativeMethods::git_note_foreach(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                   string,
                                                                                   class LibGit2Sharp.Core.NativeMethods/git_note_foreach_cb,
                                                                                   native int)
      IL_0036:  ret
    } // end of method '<>c__DisplayClasse`1'::'<git_note_foreach>b__c'

  } // end of class '<>c__DisplayClasse`1'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass14`1'<TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass16'<TResult>
           extends [mscorlib]System.Object
    {
      .field public class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass14`1'<!TResult> 'CS$<>8__locals15'
      .field public class [System.Core]System.Func`3<native int,native int,int32> c
      .method public hidebysig specialname rtspecialname 
              instance void  .ctor() cil managed
      {
        // Code size       7 (0x7)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
        IL_0006:  ret
      } // end of method '<>c__DisplayClass16'::.ctor

      .method public hidebysig instance int32 
              '<git_reference_foreach_glob>b__13'(native int x,
                                                  native int p) cil managed
      {
        // Code size       14 (0xe)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  ldfld      class [System.Core]System.Func`3<native int,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass14`1'/'<>c__DisplayClass16'<!TResult>::c
        IL_0006:  ldarg.1
        IL_0007:  ldarg.2
        IL_0008:  callvirt   instance !2 class [System.Core]System.Func`3<native int,native int,int32>::Invoke(!0,
                                                                                                               !1)
        IL_000d:  ret
      } // end of method '<>c__DisplayClass16'::'<git_reference_foreach_glob>b__13'

    } // end of class '<>c__DisplayClass16'

    .field public class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo
    .field public string glob
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass14`1'::.ctor

    .method public hidebysig instance int32 
            '<git_reference_foreach_glob>b__12'(class [System.Core]System.Func`3<native int,native int,int32> c) cil managed
    {
      // Code size       55 (0x37)
      .maxstack  5
      .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass14`1'/'<>c__DisplayClass16'<!TResult> V_0)
      IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass14`1'/'<>c__DisplayClass16'<!TResult>::.ctor()
      IL_0005:  stloc.0
      IL_0006:  ldloc.0
      IL_0007:  ldarg.0
      IL_0008:  stfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass14`1'<!0> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass14`1'/'<>c__DisplayClass16'<!TResult>::'CS$<>8__locals15'
      IL_000d:  ldloc.0
      IL_000e:  ldarg.1
      IL_000f:  stfld      class [System.Core]System.Func`3<native int,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass14`1'/'<>c__DisplayClass16'<!TResult>::c
      IL_0014:  ldarg.0
      IL_0015:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass14`1'<!TResult>::repo
      IL_001a:  ldarg.0
      IL_001b:  ldfld      string class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass14`1'<!TResult>::glob
      IL_0020:  ldloc.0
      IL_0021:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass14`1'/'<>c__DisplayClass16'<!TResult>::'<git_reference_foreach_glob>b__13'(native int,
                                                                                                                                                                     native int)
      IL_0027:  newobj     instance void LibGit2Sharp.Core.NativeMethods/ref_glob_callback::.ctor(object,
                                                                                                  native int)
      IL_002c:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_0031:  call       int32 LibGit2Sharp.Core.NativeMethods::git_reference_foreach_glob(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                             string,
                                                                                             class LibGit2Sharp.Core.NativeMethods/ref_glob_callback,
                                                                                             native int)
      IL_0036:  ret
    } // end of method '<>c__DisplayClass14`1'::'<git_reference_foreach_glob>b__12'

  } // end of class '<>c__DisplayClass14`1'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass19'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Core.FilePath start_path
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass19'::.ctor

    .method public hidebysig instance int32 
            '<git_repository_discover>b__18'(uint8[] buffer,
                                             native uint bufSize) cil managed
    {
      // Code size       16 (0x10)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.2
      IL_0002:  ldarg.0
      IL_0003:  ldfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.Proxy/'<>c__DisplayClass19'::start_path
      IL_0008:  ldc.i4.0
      IL_0009:  ldnull
      IL_000a:  call       int32 LibGit2Sharp.Core.NativeMethods::git_repository_discover(uint8[],
                                                                                          native uint,
                                                                                          class LibGit2Sharp.Core.FilePath,
                                                                                          bool,
                                                                                          class LibGit2Sharp.Core.FilePath)
      IL_000f:  ret
    } // end of method '<>c__DisplayClass19'::'<git_repository_discover>b__18'

  } // end of class '<>c__DisplayClass19'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass1d`1'<TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass1f'<TResult>
           extends [mscorlib]System.Object
    {
      .field public class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass1d`1'<!TResult> 'CS$<>8__locals1e'
      .field public class LibGit2Sharp.Core.Proxy/Func`6<string,string,valuetype LibGit2Sharp.Core.GitOid,bool,native int,int32> c
      .method public hidebysig specialname rtspecialname 
              instance void  .ctor() cil managed
      {
        // Code size       7 (0x7)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
        IL_0006:  ret
      } // end of method '<>c__DisplayClass1f'::.ctor

      .method public hidebysig instance int32 
              '<git_repository_fetchhead_foreach>b__1c'(native int w,
                                                        native int x,
                                                        valuetype LibGit2Sharp.Core.GitOid& y,
                                                        bool z,
                                                        native int p) cil managed
      {
        // Code size       34 (0x22)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  ldfld      class LibGit2Sharp.Core.Proxy/Func`6<string,string,valuetype LibGit2Sharp.Core.GitOid,bool,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass1d`1'/'<>c__DisplayClass1f'<!TResult>::c
        IL_0006:  ldarg.1
        IL_0007:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
        IL_000c:  ldarg.2
        IL_000d:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
        IL_0012:  ldarg.3
        IL_0013:  ldobj      LibGit2Sharp.Core.GitOid
        IL_0018:  ldarg.s    z
        IL_001a:  ldarg.s    p
        IL_001c:  callvirt   instance !5 class LibGit2Sharp.Core.Proxy/Func`6<string,string,valuetype LibGit2Sharp.Core.GitOid,bool,native int,int32>::Invoke(!0,
                                                                                                                                                              !1,
                                                                                                                                                              !2,
                                                                                                                                                              !3,
                                                                                                                                                              !4)
        IL_0021:  ret
      } // end of method '<>c__DisplayClass1f'::'<git_repository_fetchhead_foreach>b__1c'

    } // end of class '<>c__DisplayClass1f'

    .field public class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass1d`1'::.ctor

    .method public hidebysig instance int32 
            '<git_repository_fetchhead_foreach>b__1b'(class LibGit2Sharp.Core.Proxy/Func`6<string,string,valuetype LibGit2Sharp.Core.GitOid,bool,native int,int32> c) cil managed
    {
      // Code size       49 (0x31)
      .maxstack  4
      .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass1d`1'/'<>c__DisplayClass1f'<!TResult> V_0)
      IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass1d`1'/'<>c__DisplayClass1f'<!TResult>::.ctor()
      IL_0005:  stloc.0
      IL_0006:  ldloc.0
      IL_0007:  ldarg.0
      IL_0008:  stfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass1d`1'<!0> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass1d`1'/'<>c__DisplayClass1f'<!TResult>::'CS$<>8__locals1e'
      IL_000d:  ldloc.0
      IL_000e:  ldarg.1
      IL_000f:  stfld      class LibGit2Sharp.Core.Proxy/Func`6<string,string,valuetype LibGit2Sharp.Core.GitOid,bool,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass1d`1'/'<>c__DisplayClass1f'<!TResult>::c
      IL_0014:  ldarg.0
      IL_0015:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass1d`1'<!TResult>::repo
      IL_001a:  ldloc.0
      IL_001b:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass1d`1'/'<>c__DisplayClass1f'<!TResult>::'<git_repository_fetchhead_foreach>b__1c'(native int,
                                                                                                                                                                           native int,
                                                                                                                                                                           valuetype LibGit2Sharp.Core.GitOid&,
                                                                                                                                                                           bool,
                                                                                                                                                                           native int)
      IL_0021:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_repository_fetchhead_foreach_cb::.ctor(object,
                                                                                                                    native int)
      IL_0026:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_002b:  call       int32 LibGit2Sharp.Core.NativeMethods::git_repository_fetchhead_foreach(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                   class LibGit2Sharp.Core.NativeMethods/git_repository_fetchhead_foreach_cb,
                                                                                                   native int)
      IL_0030:  ret
    } // end of method '<>c__DisplayClass1d`1'::'<git_repository_fetchhead_foreach>b__1b'

  } // end of class '<>c__DisplayClass1d`1'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass23`1'<TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass25'<TResult>
           extends [mscorlib]System.Object
    {
      .field public class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass23`1'<!TResult> 'CS$<>8__locals24'
      .field public class [System.Core]System.Func`3<valuetype LibGit2Sharp.Core.GitOid,native int,int32> c
      .method public hidebysig specialname rtspecialname 
              instance void  .ctor() cil managed
      {
        // Code size       7 (0x7)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
        IL_0006:  ret
      } // end of method '<>c__DisplayClass25'::.ctor

      .method public hidebysig instance int32 
              '<git_repository_mergehead_foreach>b__22'(valuetype LibGit2Sharp.Core.GitOid& x,
                                                        native int p) cil managed
      {
        // Code size       19 (0x13)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  ldfld      class [System.Core]System.Func`3<valuetype LibGit2Sharp.Core.GitOid,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass23`1'/'<>c__DisplayClass25'<!TResult>::c
        IL_0006:  ldarg.1
        IL_0007:  ldobj      LibGit2Sharp.Core.GitOid
        IL_000c:  ldarg.2
        IL_000d:  callvirt   instance !2 class [System.Core]System.Func`3<valuetype LibGit2Sharp.Core.GitOid,native int,int32>::Invoke(!0,
                                                                                                                                       !1)
        IL_0012:  ret
      } // end of method '<>c__DisplayClass25'::'<git_repository_mergehead_foreach>b__22'

    } // end of class '<>c__DisplayClass25'

    .field public class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass23`1'::.ctor

    .method public hidebysig instance int32 
            '<git_repository_mergehead_foreach>b__21'(class [System.Core]System.Func`3<valuetype LibGit2Sharp.Core.GitOid,native int,int32> c) cil managed
    {
      // Code size       49 (0x31)
      .maxstack  4
      .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass23`1'/'<>c__DisplayClass25'<!TResult> V_0)
      IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass23`1'/'<>c__DisplayClass25'<!TResult>::.ctor()
      IL_0005:  stloc.0
      IL_0006:  ldloc.0
      IL_0007:  ldarg.0
      IL_0008:  stfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass23`1'<!0> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass23`1'/'<>c__DisplayClass25'<!TResult>::'CS$<>8__locals24'
      IL_000d:  ldloc.0
      IL_000e:  ldarg.1
      IL_000f:  stfld      class [System.Core]System.Func`3<valuetype LibGit2Sharp.Core.GitOid,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass23`1'/'<>c__DisplayClass25'<!TResult>::c
      IL_0014:  ldarg.0
      IL_0015:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass23`1'<!TResult>::repo
      IL_001a:  ldloc.0
      IL_001b:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass23`1'/'<>c__DisplayClass25'<!TResult>::'<git_repository_mergehead_foreach>b__22'(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                                                                                                           native int)
      IL_0021:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_repository_mergehead_foreach_cb::.ctor(object,
                                                                                                                    native int)
      IL_0026:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_002b:  call       int32 LibGit2Sharp.Core.NativeMethods::git_repository_mergehead_foreach(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                   class LibGit2Sharp.Core.NativeMethods/git_repository_mergehead_foreach_cb,
                                                                                                   native int)
      IL_0030:  ret
    } // end of method '<>c__DisplayClass23`1'::'<git_repository_mergehead_foreach>b__21'

  } // end of class '<>c__DisplayClass23`1'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass29`1'<TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass2b'<TResult>
           extends [mscorlib]System.Object
    {
      .field public class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass29`1'<!TResult> 'CS$<>8__locals2a'
      .field public class [System.Core]System.Func`5<int32,native int,valuetype LibGit2Sharp.Core.GitOid,native int,int32> c
      .method public hidebysig specialname rtspecialname 
              instance void  .ctor() cil managed
      {
        // Code size       7 (0x7)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
        IL_0006:  ret
      } // end of method '<>c__DisplayClass2b'::.ctor

      .method public hidebysig instance int32 
              '<git_stash_foreach>b__28'(native uint i,
                                         native int m,
                                         valuetype LibGit2Sharp.Core.GitOid& x,
                                         native int p) cil managed
      {
        // Code size       27 (0x1b)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  ldfld      class [System.Core]System.Func`5<int32,native int,valuetype LibGit2Sharp.Core.GitOid,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass29`1'/'<>c__DisplayClass2b'<!TResult>::c
        IL_0006:  ldarg.1
        IL_0007:  call       uint32 [mscorlib]System.UIntPtr::op_Explicit(native uint)
        IL_000c:  ldarg.2
        IL_000d:  ldarg.3
        IL_000e:  ldobj      LibGit2Sharp.Core.GitOid
        IL_0013:  ldarg.s    p
        IL_0015:  callvirt   instance !4 class [System.Core]System.Func`5<int32,native int,valuetype LibGit2Sharp.Core.GitOid,native int,int32>::Invoke(!0,
                                                                                                                                                        !1,
                                                                                                                                                        !2,
                                                                                                                                                        !3)
        IL_001a:  ret
      } // end of method '<>c__DisplayClass2b'::'<git_stash_foreach>b__28'

    } // end of class '<>c__DisplayClass2b'

    .field public class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass29`1'::.ctor

    .method public hidebysig instance int32 
            '<git_stash_foreach>b__27'(class [System.Core]System.Func`5<int32,native int,valuetype LibGit2Sharp.Core.GitOid,native int,int32> c) cil managed
    {
      // Code size       49 (0x31)
      .maxstack  4
      .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass29`1'/'<>c__DisplayClass2b'<!TResult> V_0)
      IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass29`1'/'<>c__DisplayClass2b'<!TResult>::.ctor()
      IL_0005:  stloc.0
      IL_0006:  ldloc.0
      IL_0007:  ldarg.0
      IL_0008:  stfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass29`1'<!0> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass29`1'/'<>c__DisplayClass2b'<!TResult>::'CS$<>8__locals2a'
      IL_000d:  ldloc.0
      IL_000e:  ldarg.1
      IL_000f:  stfld      class [System.Core]System.Func`5<int32,native int,valuetype LibGit2Sharp.Core.GitOid,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass29`1'/'<>c__DisplayClass2b'<!TResult>::c
      IL_0014:  ldarg.0
      IL_0015:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass29`1'<!TResult>::repo
      IL_001a:  ldloc.0
      IL_001b:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass29`1'/'<>c__DisplayClass2b'<!TResult>::'<git_stash_foreach>b__28'(native uint,
                                                                                                                                                            native int,
                                                                                                                                                            valuetype LibGit2Sharp.Core.GitOid&,
                                                                                                                                                            native int)
      IL_0021:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_stash_cb::.ctor(object,
                                                                                             native int)
      IL_0026:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_002b:  call       int32 LibGit2Sharp.Core.NativeMethods::git_stash_foreach(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    class LibGit2Sharp.Core.NativeMethods/git_stash_cb,
                                                                                    native int)
      IL_0030:  ret
    } // end of method '<>c__DisplayClass29`1'::'<git_stash_foreach>b__27'

  } // end of class '<>c__DisplayClass29`1'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass2f`1'<TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass31'<TResult>
           extends [mscorlib]System.Object
    {
      .field public class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2f`1'<!TResult> 'CS$<>8__locals30'
      .field public class [System.Core]System.Func`4<native int,uint32,native int,int32> c
      .method public hidebysig specialname rtspecialname 
              instance void  .ctor() cil managed
      {
        // Code size       7 (0x7)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
        IL_0006:  ret
      } // end of method '<>c__DisplayClass31'::.ctor

      .method public hidebysig instance int32 
              '<git_status_foreach>b__2e'(native int x,
                                          uint32 y,
                                          native int p) cil managed
      {
        // Code size       15 (0xf)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  ldfld      class [System.Core]System.Func`4<native int,uint32,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2f`1'/'<>c__DisplayClass31'<!TResult>::c
        IL_0006:  ldarg.1
        IL_0007:  ldarg.2
        IL_0008:  ldarg.3
        IL_0009:  callvirt   instance !3 class [System.Core]System.Func`4<native int,uint32,native int,int32>::Invoke(!0,
                                                                                                                      !1,
                                                                                                                      !2)
        IL_000e:  ret
      } // end of method '<>c__DisplayClass31'::'<git_status_foreach>b__2e'

    } // end of class '<>c__DisplayClass31'

    .field public class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass2f`1'::.ctor

    .method public hidebysig instance int32 
            '<git_status_foreach>b__2d'(class [System.Core]System.Func`4<native int,uint32,native int,int32> c) cil managed
    {
      // Code size       49 (0x31)
      .maxstack  4
      .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2f`1'/'<>c__DisplayClass31'<!TResult> V_0)
      IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2f`1'/'<>c__DisplayClass31'<!TResult>::.ctor()
      IL_0005:  stloc.0
      IL_0006:  ldloc.0
      IL_0007:  ldarg.0
      IL_0008:  stfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2f`1'<!0> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2f`1'/'<>c__DisplayClass31'<!TResult>::'CS$<>8__locals30'
      IL_000d:  ldloc.0
      IL_000e:  ldarg.1
      IL_000f:  stfld      class [System.Core]System.Func`4<native int,uint32,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2f`1'/'<>c__DisplayClass31'<!TResult>::c
      IL_0014:  ldarg.0
      IL_0015:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2f`1'<!TResult>::repo
      IL_001a:  ldloc.0
      IL_001b:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2f`1'/'<>c__DisplayClass31'<!TResult>::'<git_status_foreach>b__2e'(native int,
                                                                                                                                                             uint32,
                                                                                                                                                             native int)
      IL_0021:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_status_cb::.ctor(object,
                                                                                              native int)
      IL_0026:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_002b:  call       int32 LibGit2Sharp.Core.NativeMethods::git_status_foreach(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                     class LibGit2Sharp.Core.NativeMethods/git_status_cb,
                                                                                     native int)
      IL_0030:  ret
    } // end of method '<>c__DisplayClass2f`1'::'<git_status_foreach>b__2d'

  } // end of class '<>c__DisplayClass2f`1'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass35`1'<TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass37'<TResult>
           extends [mscorlib]System.Object
    {
      .field public class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass35`1'<!TResult> 'CS$<>8__locals36'
      .field public class [System.Core]System.Func`4<native int,native int,native int,int32> c
      .method public hidebysig specialname rtspecialname 
              instance void  .ctor() cil managed
      {
        // Code size       7 (0x7)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
        IL_0006:  ret
      } // end of method '<>c__DisplayClass37'::.ctor

      .method public hidebysig instance int32 
              '<git_submodule_foreach>b__34'(native int x,
                                             native int y,
                                             native int p) cil managed
      {
        // Code size       15 (0xf)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  ldfld      class [System.Core]System.Func`4<native int,native int,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass35`1'/'<>c__DisplayClass37'<!TResult>::c
        IL_0006:  ldarg.1
        IL_0007:  ldarg.2
        IL_0008:  ldarg.3
        IL_0009:  callvirt   instance !3 class [System.Core]System.Func`4<native int,native int,native int,int32>::Invoke(!0,
                                                                                                                          !1,
                                                                                                                          !2)
        IL_000e:  ret
      } // end of method '<>c__DisplayClass37'::'<git_submodule_foreach>b__34'

    } // end of class '<>c__DisplayClass37'

    .field public class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass35`1'::.ctor

    .method public hidebysig instance int32 
            '<git_submodule_foreach>b__33'(class [System.Core]System.Func`4<native int,native int,native int,int32> c) cil managed
    {
      // Code size       49 (0x31)
      .maxstack  4
      .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass35`1'/'<>c__DisplayClass37'<!TResult> V_0)
      IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass35`1'/'<>c__DisplayClass37'<!TResult>::.ctor()
      IL_0005:  stloc.0
      IL_0006:  ldloc.0
      IL_0007:  ldarg.0
      IL_0008:  stfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass35`1'<!0> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass35`1'/'<>c__DisplayClass37'<!TResult>::'CS$<>8__locals36'
      IL_000d:  ldloc.0
      IL_000e:  ldarg.1
      IL_000f:  stfld      class [System.Core]System.Func`4<native int,native int,native int,int32> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass35`1'/'<>c__DisplayClass37'<!TResult>::c
      IL_0014:  ldarg.0
      IL_0015:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass35`1'<!TResult>::repo
      IL_001a:  ldloc.0
      IL_001b:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass35`1'/'<>c__DisplayClass37'<!TResult>::'<git_submodule_foreach>b__34'(native int,
                                                                                                                                                                native int,
                                                                                                                                                                native int)
      IL_0021:  newobj     instance void LibGit2Sharp.Core.NativeMethods/submodule_callback::.ctor(object,
                                                                                                   native int)
      IL_0026:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_002b:  call       int32 LibGit2Sharp.Core.NativeMethods::git_submodule_foreach(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                        class LibGit2Sharp.Core.NativeMethods/submodule_callback,
                                                                                        native int)
      IL_0030:  ret
    } // end of method '<>c__DisplayClass35`1'::'<git_submodule_foreach>b__33'

  } // end of class '<>c__DisplayClass35`1'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass3a`2'<T,TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class [System.Core]System.Func`2<!T,!TResult> resultSelector
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass3a`2'::.ctor

  } // end of class '<>c__DisplayClass3a`2'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass3c`2'<T,TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3a`2'<!T,!TResult> 'CS$<>8__locals3b'
    .field public class [mscorlib]System.Collections.Generic.List`1<!TResult> result
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass3c`2'::.ctor

    .method public hidebysig instance int32 
            '<git_foreach>b__39'(!T x,
                                 native int payload) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<!1> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3c`2'<!T,!TResult>::result
      IL_0006:  ldarg.0
      IL_0007:  ldfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3a`2'<!0,!1> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3c`2'<!T,!TResult>::'CS$<>8__locals3b'
      IL_000c:  ldfld      class [System.Core]System.Func`2<!0,!1> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3a`2'<!T,!TResult>::resultSelector
      IL_0011:  ldarg.1
      IL_0012:  callvirt   instance !1 class [System.Core]System.Func`2<!T,!TResult>::Invoke(!0)
      IL_0017:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<!TResult>::Add(!0)
      IL_001c:  ldc.i4.0
      IL_001d:  ret
    } // end of method '<>c__DisplayClass3c`2'::'<git_foreach>b__39'

  } // end of class '<>c__DisplayClass3c`2'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass3f`3'<T1,T2,TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class [System.Core]System.Func`3<!T1,!T2,!TResult> resultSelector
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass3f`3'::.ctor

  } // end of class '<>c__DisplayClass3f`3'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass41`3'<T1,T2,TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3f`3'<!T1,!T2,!TResult> 'CS$<>8__locals40'
    .field public class [mscorlib]System.Collections.Generic.List`1<!TResult> result
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass41`3'::.ctor

    .method public hidebysig instance int32 
            '<git_foreach>b__3e'(!T1 x,
                                 !T2 y,
                                 native int payload) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<!2> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass41`3'<!T1,!T2,!TResult>::result
      IL_0006:  ldarg.0
      IL_0007:  ldfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3f`3'<!0,!1,!2> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass41`3'<!T1,!T2,!TResult>::'CS$<>8__locals40'
      IL_000c:  ldfld      class [System.Core]System.Func`3<!0,!1,!2> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3f`3'<!T1,!T2,!TResult>::resultSelector
      IL_0011:  ldarg.1
      IL_0012:  ldarg.2
      IL_0013:  callvirt   instance !2 class [System.Core]System.Func`3<!T1,!T2,!TResult>::Invoke(!0,
                                                                                                  !1)
      IL_0018:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<!TResult>::Add(!0)
      IL_001d:  ldc.i4.0
      IL_001e:  ret
    } // end of method '<>c__DisplayClass41`3'::'<git_foreach>b__3e'

  } // end of class '<>c__DisplayClass41`3'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass44`4'<T1,T2,T3,TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class [System.Core]System.Func`4<!T1,!T2,!T3,!TResult> resultSelector
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass44`4'::.ctor

  } // end of class '<>c__DisplayClass44`4'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass46`4'<T1,T2,T3,TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass44`4'<!T1,!T2,!T3,!TResult> 'CS$<>8__locals45'
    .field public class [mscorlib]System.Collections.Generic.List`1<!TResult> result
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass46`4'::.ctor

    .method public hidebysig instance int32 
            '<git_foreach>b__43'(!T1 w,
                                 !T2 x,
                                 !T3 y,
                                 native int payload) cil managed
    {
      // Code size       32 (0x20)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<!3> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass46`4'<!T1,!T2,!T3,!TResult>::result
      IL_0006:  ldarg.0
      IL_0007:  ldfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass44`4'<!0,!1,!2,!3> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass46`4'<!T1,!T2,!T3,!TResult>::'CS$<>8__locals45'
      IL_000c:  ldfld      class [System.Core]System.Func`4<!0,!1,!2,!3> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass44`4'<!T1,!T2,!T3,!TResult>::resultSelector
      IL_0011:  ldarg.1
      IL_0012:  ldarg.2
      IL_0013:  ldarg.3
      IL_0014:  callvirt   instance !3 class [System.Core]System.Func`4<!T1,!T2,!T3,!TResult>::Invoke(!0,
                                                                                                      !1,
                                                                                                      !2)
      IL_0019:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<!TResult>::Add(!0)
      IL_001e:  ldc.i4.0
      IL_001f:  ret
    } // end of method '<>c__DisplayClass46`4'::'<git_foreach>b__43'

  } // end of class '<>c__DisplayClass46`4'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass49`5'<T1,T2,T3,T4,
                                                                                 TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class [System.Core]System.Func`5<!T1,!T2,!T3,!T4,!TResult> resultSelector
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass49`5'::.ctor

  } // end of class '<>c__DisplayClass49`5'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass4b`5'<T1,T2,T3,T4,
                                                                                 TResult>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass49`5'<!T1,!T2,!T3,!T4,!TResult> 'CS$<>8__locals4a'
    .field public class [mscorlib]System.Collections.Generic.List`1<!TResult> result
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass4b`5'::.ctor

    .method public hidebysig instance int32 
            '<git_foreach>b__48'(!T1 w,
                                 !T2 x,
                                 !T3 y,
                                 !T4 z,
                                 native int payload) cil managed
    {
      // Code size       34 (0x22)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<!4> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass4b`5'<!T1,!T2,!T3,!T4,!TResult>::result
      IL_0006:  ldarg.0
      IL_0007:  ldfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass49`5'<!0,!1,!2,!3,!4> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass4b`5'<!T1,!T2,!T3,!T4,!TResult>::'CS$<>8__locals4a'
      IL_000c:  ldfld      class [System.Core]System.Func`5<!0,!1,!2,!3,!4> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass49`5'<!T1,!T2,!T3,!T4,!TResult>::resultSelector
      IL_0011:  ldarg.1
      IL_0012:  ldarg.2
      IL_0013:  ldarg.3
      IL_0014:  ldarg.s    z
      IL_0016:  callvirt   instance !4 class [System.Core]System.Func`5<!T1,!T2,!T3,!T4,!TResult>::Invoke(!0,
                                                                                                          !1,
                                                                                                          !2,
                                                                                                          !3)
      IL_001b:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<!TResult>::Add(!0)
      IL_0020:  ldc.i4.0
      IL_0021:  ret
    } // end of method '<>c__DisplayClass4b`5'::'<git_foreach>b__48'

  } // end of class '<>c__DisplayClass4b`5'

  .field private static class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> ThreadAffinity
  .field private static initonly class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,class [System.Core]System.Func`2<string,object>> configurationParser
  .field private static class [System.Core]System.Func`2<string,object> 'CS$<>9__CachedAnonymousMethodDelegate52'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<string,object> 'CS$<>9__CachedAnonymousMethodDelegate53'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<string,object> 'CS$<>9__CachedAnonymousMethodDelegate54'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<string,object> 'CS$<>9__CachedAnonymousMethodDelegate55'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static void  giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory error_class,
                                                       class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       27 (0x1b)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  isinst     [mscorlib]System.OutOfMemoryException
    IL_0006:  brfalse.s  IL_000e

    IL_0008:  call       void LibGit2Sharp.Core.NativeMethods::giterr_set_oom()
    IL_000d:  ret

    IL_000e:  ldarg.0
    IL_000f:  ldarg.1
    IL_0010:  callvirt   instance string [mscorlib]System.Exception::get_Message()
    IL_0015:  call       void LibGit2Sharp.Core.NativeMethods::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                              string)
    IL_001a:  ret
  } // end of method Proxy::giterr_set_str

  .method public hidebysig static void  giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory error_class,
                                                       string errorString) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       void LibGit2Sharp.Core.NativeMethods::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                              string)
    IL_0007:  ret
  } // end of method Proxy::giterr_set_str

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_blob_create_fromchunks(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                     class LibGit2Sharp.Core.FilePath hintpath,
                                     class LibGit2Sharp.Core.NativeMethods/source_callback fileCallback) cil managed
  {
    // Code size       62 (0x3e)
    .maxstack  5
    .locals init (valuetype LibGit2Sharp.Core.GitOid V_0,
             int32 V_1,
             class LibGit2Sharp.ObjectId V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  initobj    LibGit2Sharp.Core.GitOid
      IL_0013:  ldloca.s   V_0
      IL_0015:  ldarg.0
      IL_0016:  ldarg.1
      IL_0017:  ldarg.2
      IL_0018:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_001d:  call       int32 LibGit2Sharp.Core.NativeMethods::git_blob_create_fromchunks(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                             class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                             class LibGit2Sharp.Core.FilePath,
                                                                                             class LibGit2Sharp.Core.NativeMethods/source_callback,
                                                                                             native int)
      IL_0022:  stloc.1
      IL_0023:  ldloc.1
      IL_0024:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0029:  ldloc.0
      IL_002a:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
      IL_002f:  stloc.2
      IL_0030:  leave.s    IL_003c

    }  // end .try
    finally
    {
      IL_0032:  ldloc.3
      IL_0033:  brfalse.s  IL_003b

      IL_0035:  ldloc.3
      IL_0036:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_003b:  endfinally
    }  // end handler
    IL_003c:  ldloc.2
    IL_003d:  ret
  } // end of method Proxy::git_blob_create_fromchunks

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_blob_create_fromdisk(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                   class LibGit2Sharp.Core.FilePath path) cil managed
  {
    // Code size       56 (0x38)
    .maxstack  3
    .locals init (valuetype LibGit2Sharp.Core.GitOid V_0,
             int32 V_1,
             class LibGit2Sharp.ObjectId V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  initobj    LibGit2Sharp.Core.GitOid
      IL_0013:  ldloca.s   V_0
      IL_0015:  ldarg.0
      IL_0016:  ldarg.1
      IL_0017:  call       int32 LibGit2Sharp.Core.NativeMethods::git_blob_create_fromdisk(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                           class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                           class LibGit2Sharp.Core.FilePath)
      IL_001c:  stloc.1
      IL_001d:  ldloc.1
      IL_001e:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0023:  ldloc.0
      IL_0024:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
      IL_0029:  stloc.2
      IL_002a:  leave.s    IL_0036

    }  // end .try
    finally
    {
      IL_002c:  ldloc.3
      IL_002d:  brfalse.s  IL_0035

      IL_002f:  ldloc.3
      IL_0030:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0035:  endfinally
    }  // end handler
    IL_0036:  ldloc.2
    IL_0037:  ret
  } // end of method Proxy::git_blob_create_fromdisk

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_blob_create_fromfile(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                   class LibGit2Sharp.Core.FilePath path) cil managed
  {
    // Code size       56 (0x38)
    .maxstack  3
    .locals init (valuetype LibGit2Sharp.Core.GitOid V_0,
             int32 V_1,
             class LibGit2Sharp.ObjectId V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  initobj    LibGit2Sharp.Core.GitOid
      IL_0013:  ldloca.s   V_0
      IL_0015:  ldarg.0
      IL_0016:  ldarg.1
      IL_0017:  call       int32 LibGit2Sharp.Core.NativeMethods::git_blob_create_fromworkdir(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                              class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                              class LibGit2Sharp.Core.FilePath)
      IL_001c:  stloc.1
      IL_001d:  ldloc.1
      IL_001e:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0023:  ldloc.0
      IL_0024:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
      IL_0029:  stloc.2
      IL_002a:  leave.s    IL_0036

    }  // end .try
    finally
    {
      IL_002c:  ldloc.3
      IL_002d:  brfalse.s  IL_0035

      IL_002f:  ldloc.3
      IL_0030:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0035:  endfinally
    }  // end handler
    IL_0036:  ldloc.2
    IL_0037:  ret
  } // end of method Proxy::git_blob_create_fromfile

  .method public hidebysig static uint8[] 
          git_blob_rawcontent(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                              class LibGit2Sharp.ObjectId id,
                              int32 size) cil managed
  {
    // Code size       51 (0x33)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
             uint8[] V_1,
             uint8[] V_2)
    IL_0000:  ldarg.1
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                  class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                  bool)
    IL_0008:  stloc.0
    .try
    {
      IL_0009:  ldarg.2
      IL_000a:  newarr     [mscorlib]System.Byte
      IL_000f:  stloc.1
      IL_0010:  ldloc.0
      IL_0011:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
      IL_0016:  call       native int LibGit2Sharp.Core.NativeMethods::git_blob_rawcontent(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
      IL_001b:  ldloc.1
      IL_001c:  ldc.i4.0
      IL_001d:  ldarg.2
      IL_001e:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::Copy(native int,
                                                                                       uint8[],
                                                                                       int32,
                                                                                       int32)
      IL_0023:  ldloc.1
      IL_0024:  stloc.2
      IL_0025:  leave.s    IL_0031

    }  // end .try
    finally
    {
      IL_0027:  ldloc.0
      IL_0028:  brfalse.s  IL_0030

      IL_002a:  ldloc.0
      IL_002b:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0030:  endfinally
    }  // end handler
    IL_0031:  ldloc.2
    IL_0032:  ret
  } // end of method Proxy::git_blob_rawcontent

  .method public hidebysig static class [mscorlib]System.IO.UnmanagedMemoryStream 
          git_blob_rawcontent_stream(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                     class LibGit2Sharp.ObjectId id,
                                     int64 size) cil managed
  {
    // Code size       21 (0x15)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldarg.0
    IL_0002:  ldnull
    IL_0003:  ldftn      native int LibGit2Sharp.Core.NativeMethods::git_blob_rawcontent(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0009:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,native int>::.ctor(object,
                                                                                                                                               native int)
    IL_000e:  ldarg.2
    IL_000f:  newobj     instance void LibGit2Sharp.Core.RawContentStream::.ctor(class LibGit2Sharp.ObjectId,
                                                                                 class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                 class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,native int>,
                                                                                 int64)
    IL_0014:  ret
  } // end of method Proxy::git_blob_rawcontent_stream

  .method public hidebysig static int64  git_blob_rawsize(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       int64 LibGit2Sharp.Core.NativeMethods::git_blob_rawsize(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_blob_rawsize

  .method public hidebysig static bool  git_blob_is_binary(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj) cil managed
  {
    // Code size       18 (0x12)
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       int32 LibGit2Sharp.Core.NativeMethods::git_blob_is_binary(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  call       void LibGit2Sharp.Core.Ensure::BooleanResult(int32)
    IL_000d:  ldloc.0
    IL_000e:  ldc.i4.1
    IL_000f:  ceq
    IL_0011:  ret
  } // end of method Proxy::git_blob_is_binary

  .method public hidebysig static class LibGit2Sharp.Core.Handles.ReferenceSafeHandle 
          git_branch_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                            string branch_name,
                            class LibGit2Sharp.ObjectId targetId,
                            bool force) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_1,
             int32 V_2,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldarg.2
      IL_000d:  ldarg.0
      IL_000e:  ldc.i4.0
      IL_000f:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    bool)
      IL_0014:  stloc.0
      .try
      {
        IL_0015:  ldloca.s   V_1
        IL_0017:  ldarg.0
        IL_0018:  ldarg.1
        IL_0019:  ldloc.0
        IL_001a:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
        IL_001f:  ldarg.3
        IL_0020:  call       int32 LibGit2Sharp.Core.NativeMethods::git_branch_create(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle&,
                                                                                      class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                      string,
                                                                                      class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                      bool)
        IL_0025:  stloc.2
        IL_0026:  ldloc.2
        IL_0027:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
        IL_002c:  ldloc.1
        IL_002d:  stloc.3
        IL_002e:  leave.s    IL_0046

      }  // end .try
      finally
      {
        IL_0030:  ldloc.0
        IL_0031:  brfalse.s  IL_0039

        IL_0033:  ldloc.0
        IL_0034:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0039:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_003a:  ldloc.s    V_4
      IL_003c:  brfalse.s  IL_0045

      IL_003e:  ldloc.s    V_4
      IL_0040:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0045:  endfinally
    }  // end handler
    IL_0046:  ldloc.3
    IL_0047:  ret
  } // end of method Proxy::git_branch_create

  .method public hidebysig static void  git_branch_delete(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed
  {
    // Code size       43 (0x2b)
    .maxstack  1
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  call       int32 LibGit2Sharp.Core.NativeMethods::git_branch_delete(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
      IL_0011:  stloc.0
      IL_0012:  ldarg.0
      IL_0013:  callvirt   instance void [mscorlib]System.Runtime.InteropServices.SafeHandle::SetHandleAsInvalid()
      IL_0018:  ldloc.0
      IL_0019:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001e:  leave.s    IL_002a

    }  // end .try
    finally
    {
      IL_0020:  ldloc.1
      IL_0021:  brfalse.s  IL_0029

      IL_0023:  ldloc.1
      IL_0024:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0029:  endfinally
    }  // end handler
    IL_002a:  ret
  } // end of method Proxy::git_branch_delete

  .method public hidebysig static class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> 
          git_branch_foreach<TResult>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                      valuetype LibGit2Sharp.Core.GitBranchType branch_type,
                                      class [System.Core]System.Func`3<native int,valuetype LibGit2Sharp.Core.GitBranchType,!!TResult> resultSelector) cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2`1'<!!TResult> V_0)
    IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2`1'<!!TResult>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2`1'<!!TResult>::repo
    IL_000d:  ldloc.0
    IL_000e:  ldarg.1
    IL_000f:  stfld      valuetype LibGit2Sharp.Core.GitBranchType class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2`1'<!!TResult>::branch_type
    IL_0014:  ldarg.2
    IL_0015:  ldloc.0
    IL_0016:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2`1'<!!TResult>::'<git_branch_foreach>b__0'(class [System.Core]System.Func`4<native int,valuetype LibGit2Sharp.Core.GitBranchType,native int,int32>)
    IL_001c:  newobj     instance void class [System.Core]System.Func`2<class [System.Core]System.Func`4<native int,valuetype LibGit2Sharp.Core.GitBranchType,native int,int32>,int32>::.ctor(object,
                                                                                                                                                                                              native int)
    IL_0021:  ldc.i4.0
    IL_0022:  newarr     LibGit2Sharp.Core.GitErrorCode
    IL_0027:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!2> LibGit2Sharp.Core.Proxy::git_foreach<native int,valuetype LibGit2Sharp.Core.GitBranchType,!!0>(class [System.Core]System.Func`3<!!0,!!1,!!2>,
                                                                                                                                                                                      class [System.Core]System.Func`2<class [System.Core]System.Func`4<!!0,!!1,native int,int32>,int32>,
                                                                                                                                                                                      valuetype LibGit2Sharp.Core.GitErrorCode[])
    IL_002c:  ret
  } // end of method Proxy::git_branch_foreach

  .method public hidebysig static class LibGit2Sharp.Core.Handles.ReferenceSafeHandle 
          git_branch_move(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference,
                          string new_branch_name,
                          bool force) cil managed
  {
    // Code size       44 (0x2c)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  ldarg.2
      IL_0010:  call       int32 LibGit2Sharp.Core.NativeMethods::git_branch_move(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle&,
                                                                                  class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                  string,
                                                                                  bool)
      IL_0015:  stloc.1
      IL_0016:  ldloc.1
      IL_0017:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001c:  ldloc.0
      IL_001d:  stloc.2
      IL_001e:  leave.s    IL_002a

    }  // end .try
    finally
    {
      IL_0020:  ldloc.3
      IL_0021:  brfalse.s  IL_0029

      IL_0023:  ldloc.3
      IL_0024:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0029:  endfinally
    }  // end handler
    IL_002a:  ldloc.2
    IL_002b:  ret
  } // end of method Proxy::git_branch_move

  .method public hidebysig static string 
          git_branch_remote_name(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                 string canonical_branch_name) cil managed
  {
    // Code size       95 (0x5f)
    .maxstack  4
    .locals init (int32 V_0,
             uint8[] V_1,
             int32 V_2,
             string V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldnull
      IL_000d:  ldsfld     native uint [mscorlib]System.UIntPtr::Zero
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       int32 LibGit2Sharp.Core.NativeMethods::git_branch_remote_name(uint8[],
                                                                                         native uint,
                                                                                         class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                         string)
      IL_0019:  stloc.0
      IL_001a:  ldloc.0
      IL_001b:  call       void LibGit2Sharp.Core.Ensure::Int32Result(int32)
      IL_0020:  ldloc.0
      IL_0021:  newarr     [mscorlib]System.Byte
      IL_0026:  stloc.1
      IL_0027:  ldloc.1
      IL_0028:  ldloc.1
      IL_0029:  ldlen
      IL_002a:  conv.i4
      IL_002b:  conv.i8
      IL_002c:  call       native uint [mscorlib]System.UIntPtr::op_Explicit(uint64)
      IL_0031:  ldarg.0
      IL_0032:  ldarg.1
      IL_0033:  call       int32 LibGit2Sharp.Core.NativeMethods::git_branch_remote_name(uint8[],
                                                                                         native uint,
                                                                                         class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                         string)
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  call       void LibGit2Sharp.Core.Ensure::Int32Result(int32)
      IL_003f:  ldloc.1
      IL_0040:  call       string LibGit2Sharp.Core.Utf8Marshaler::Utf8FromBuffer(uint8[])
      IL_0045:  dup
      IL_0046:  brtrue.s   IL_004e

      IL_0048:  pop
      IL_0049:  ldsfld     string [mscorlib]System.String::Empty
      IL_004e:  stloc.3
      IL_004f:  leave.s    IL_005d

    }  // end .try
    finally
    {
      IL_0051:  ldloc.s    V_4
      IL_0053:  brfalse.s  IL_005c

      IL_0055:  ldloc.s    V_4
      IL_0057:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_005c:  endfinally
    }  // end handler
    IL_005d:  ldloc.3
    IL_005e:  ret
  } // end of method Proxy::git_branch_remote_name

  .method public hidebysig static string 
          git_branch_upstream_name(class LibGit2Sharp.Core.Handles.RepositorySafeHandle handle,
                                   string canonicalReferenceName) cil managed
  {
    // Code size       95 (0x5f)
    .maxstack  4
    .locals init (int32 V_0,
             uint8[] V_1,
             int32 V_2,
             string V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldnull
      IL_000d:  ldsfld     native uint [mscorlib]System.UIntPtr::Zero
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       int32 LibGit2Sharp.Core.NativeMethods::git_branch_upstream_name(uint8[],
                                                                                           native uint,
                                                                                           class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                           string)
      IL_0019:  stloc.0
      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.s   -3
      IL_001d:  bne.un.s   IL_0023

      IL_001f:  ldnull
      IL_0020:  stloc.3
      IL_0021:  leave.s    IL_005d

      IL_0023:  ldloc.0
      IL_0024:  call       void LibGit2Sharp.Core.Ensure::Int32Result(int32)
      IL_0029:  ldloc.0
      IL_002a:  newarr     [mscorlib]System.Byte
      IL_002f:  stloc.1
      IL_0030:  ldloc.1
      IL_0031:  ldloc.1
      IL_0032:  ldlen
      IL_0033:  conv.i4
      IL_0034:  conv.i8
      IL_0035:  call       native uint [mscorlib]System.UIntPtr::op_Explicit(uint64)
      IL_003a:  ldarg.0
      IL_003b:  ldarg.1
      IL_003c:  call       int32 LibGit2Sharp.Core.NativeMethods::git_branch_upstream_name(uint8[],
                                                                                           native uint,
                                                                                           class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                           string)
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  call       void LibGit2Sharp.Core.Ensure::Int32Result(int32)
      IL_0048:  ldloc.1
      IL_0049:  call       string LibGit2Sharp.Core.Utf8Marshaler::Utf8FromBuffer(uint8[])
      IL_004e:  stloc.3
      IL_004f:  leave.s    IL_005d

    }  // end .try
    finally
    {
      IL_0051:  ldloc.s    V_4
      IL_0053:  brfalse.s  IL_005c

      IL_0055:  ldloc.s    V_4
      IL_0057:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_005c:  endfinally
    }  // end handler
    IL_005d:  ldloc.3
    IL_005e:  ret
  } // end of method Proxy::git_branch_upstream_name

  .method public hidebysig static void  git_checkout_tree(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                          class LibGit2Sharp.ObjectId treeId,
                                                          valuetype LibGit2Sharp.Core.GitCheckoutOpts& opts) cil managed
  {
    // Code size       65 (0x41)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
             int32 V_1,
             class [mscorlib]System.IDisposable V_2)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.2
    .try
    {
      IL_000b:  ldarg.1
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.0
      IL_000e:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    bool)
      IL_0013:  stloc.0
      .try
      {
        IL_0014:  ldarg.0
        IL_0015:  ldloc.0
        IL_0016:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
        IL_001b:  ldarg.2
        IL_001c:  call       int32 LibGit2Sharp.Core.NativeMethods::git_checkout_tree(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                      class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                      valuetype LibGit2Sharp.Core.GitCheckoutOpts&)
        IL_0021:  stloc.1
        IL_0022:  ldloc.1
        IL_0023:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
        IL_0028:  leave.s    IL_0034

      }  // end .try
      finally
      {
        IL_002a:  ldloc.0
        IL_002b:  brfalse.s  IL_0033

        IL_002d:  ldloc.0
        IL_002e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0033:  endfinally
      }  // end handler
      IL_0034:  leave.s    IL_0040

    }  // end .try
    finally
    {
      IL_0036:  ldloc.2
      IL_0037:  brfalse.s  IL_003f

      IL_0039:  ldloc.2
      IL_003a:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_003f:  endfinally
    }  // end handler
    IL_0040:  ret
  } // end of method Proxy::git_checkout_tree

  .method public hidebysig static void  git_checkout_index(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                           class LibGit2Sharp.Core.Handles.GitObjectSafeHandle treeish,
                                                           valuetype LibGit2Sharp.Core.GitCheckoutOpts& opts) cil managed
  {
    // Code size       39 (0x27)
    .maxstack  3
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  ldarg.2
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_checkout_index(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                     class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                     valuetype LibGit2Sharp.Core.GitCheckoutOpts&)
      IL_0013:  stloc.0
      IL_0014:  ldloc.0
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  leave.s    IL_0026

    }  // end .try
    finally
    {
      IL_001c:  ldloc.1
      IL_001d:  brfalse.s  IL_0025

      IL_001f:  ldloc.1
      IL_0020:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0025:  endfinally
    }  // end handler
    IL_0026:  ret
  } // end of method Proxy::git_checkout_index

  .method public hidebysig static class LibGit2Sharp.Core.Handles.RepositorySafeHandle 
          git_clone(string url,
                    string workdir,
                    class LibGit2Sharp.Core.GitCloneOptions opts) cil managed
  {
    // Code size       49 (0x31)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Handles.RepositorySafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.RepositorySafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
      IL_0014:  ldarg.2
      IL_0015:  call       int32 LibGit2Sharp.Core.NativeMethods::git_clone(class LibGit2Sharp.Core.Handles.RepositorySafeHandle&,
                                                                            string,
                                                                            class LibGit2Sharp.Core.FilePath,
                                                                            class LibGit2Sharp.Core.GitCloneOptions)
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0021:  ldloc.0
      IL_0022:  stloc.2
      IL_0023:  leave.s    IL_002f

    }  // end .try
    finally
    {
      IL_0025:  ldloc.3
      IL_0026:  brfalse.s  IL_002e

      IL_0028:  ldloc.3
      IL_0029:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002e:  endfinally
    }  // end handler
    IL_002f:  ldloc.2
    IL_0030:  ret
  } // end of method Proxy::git_clone

  .method public hidebysig static class LibGit2Sharp.Signature 
          git_commit_author(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       native int LibGit2Sharp.Core.NativeMethods::git_commit_author(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  newobj     instance void LibGit2Sharp.Signature::.ctor(native int)
    IL_000b:  ret
  } // end of method Proxy::git_commit_author

  .method public hidebysig static class LibGit2Sharp.Signature 
          git_commit_committer(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       native int LibGit2Sharp.Core.NativeMethods::git_commit_committer(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  newobj     instance void LibGit2Sharp.Signature::.ctor(native int)
    IL_000b:  ret
  } // end of method Proxy::git_commit_committer

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_commit_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                            string referenceName,
                            class LibGit2Sharp.Signature author,
                            class LibGit2Sharp.Signature committer,
                            string prettifiedMessage,
                            class LibGit2Sharp.Tree tree,
                            valuetype LibGit2Sharp.Core.GitOid[] parentIds) cil managed
  {
    // Code size       140 (0x8c)
    .maxstack  10
    .locals init (class LibGit2Sharp.Core.Handles.SignatureSafeHandle V_0,
             class LibGit2Sharp.Core.Handles.SignatureSafeHandle V_1,
             class LibGit2Sharp.Core.ArrayMarshaler`1<valuetype LibGit2Sharp.Core.GitOid> V_2,
             valuetype LibGit2Sharp.Core.GitOid V_3,
             valuetype LibGit2Sharp.Core.GitOid V_4,
             int32 V_5,
             class LibGit2Sharp.ObjectId V_6,
             class [mscorlib]System.IDisposable V_7)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_7
    .try
    {
      IL_000c:  ldarg.2
      IL_000d:  callvirt   instance class LibGit2Sharp.Core.Handles.SignatureSafeHandle LibGit2Sharp.Signature::BuildHandle()
      IL_0012:  stloc.0
      .try
      {
        IL_0013:  ldarg.3
        IL_0014:  callvirt   instance class LibGit2Sharp.Core.Handles.SignatureSafeHandle LibGit2Sharp.Signature::BuildHandle()
        IL_0019:  stloc.1
        .try
        {
          IL_001a:  ldarg.s    parentIds
          IL_001c:  newobj     instance void class LibGit2Sharp.Core.ArrayMarshaler`1<valuetype LibGit2Sharp.Core.GitOid>::.ctor(!0[])
          IL_0021:  stloc.2
          .try
          {
            IL_0022:  ldarg.s    tree
            IL_0024:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
            IL_0029:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
            IL_002e:  stloc.s    V_4
            IL_0030:  ldloca.s   V_3
            IL_0032:  ldarg.0
            IL_0033:  ldarg.1
            IL_0034:  ldloc.0
            IL_0035:  ldloc.1
            IL_0036:  ldnull
            IL_0037:  ldarg.s    prettifiedMessage
            IL_0039:  ldloca.s   V_4
            IL_003b:  ldloc.2
            IL_003c:  callvirt   instance int32 class LibGit2Sharp.Core.ArrayMarshaler`1<valuetype LibGit2Sharp.Core.GitOid>::get_Count()
            IL_0041:  ldloc.2
            IL_0042:  callvirt   instance native int[] class LibGit2Sharp.Core.ArrayMarshaler`1<valuetype LibGit2Sharp.Core.GitOid>::ToArray()
            IL_0047:  call       int32 LibGit2Sharp.Core.NativeMethods::git_commit_create_from_oids(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                    string,
                                                                                                    class LibGit2Sharp.Core.Handles.SignatureSafeHandle,
                                                                                                    class LibGit2Sharp.Core.Handles.SignatureSafeHandle,
                                                                                                    string,
                                                                                                    string,
                                                                                                    valuetype LibGit2Sharp.Core.GitOid&,
                                                                                                    int32,
                                                                                                    native int[])
            IL_004c:  stloc.s    V_5
            IL_004e:  ldloc.s    V_5
            IL_0050:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
            IL_0055:  ldloc.3
            IL_0056:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
            IL_005b:  stloc.s    V_6
            IL_005d:  leave.s    IL_0089

          }  // end .try
          finally
          {
            IL_005f:  ldloc.2
            IL_0060:  brfalse.s  IL_0068

            IL_0062:  ldloc.2
            IL_0063:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
            IL_0068:  endfinally
          }  // end handler
        }  // end .try
        finally
        {
          IL_0069:  ldloc.1
          IL_006a:  brfalse.s  IL_0072

          IL_006c:  ldloc.1
          IL_006d:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          IL_0072:  endfinally
        }  // end handler
      }  // end .try
      finally
      {
        IL_0073:  ldloc.0
        IL_0074:  brfalse.s  IL_007c

        IL_0076:  ldloc.0
        IL_0077:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_007c:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_007d:  ldloc.s    V_7
      IL_007f:  brfalse.s  IL_0088

      IL_0081:  ldloc.s    V_7
      IL_0083:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0088:  endfinally
    }  // end handler
    IL_0089:  ldloc.s    V_6
    IL_008b:  ret
  } // end of method Proxy::git_commit_create

  .method public hidebysig static string 
          git_commit_message(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.NativeMethods::git_commit_message(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_commit_message

  .method public hidebysig static string 
          git_commit_message_encoding(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.NativeMethods::git_commit_message_encoding(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_commit_message_encoding

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_commit_parent_oid(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj,
                                uint32 i) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       class LibGit2Sharp.Core.Handles.OidSafeHandle LibGit2Sharp.Core.NativeMethods::git_commit_parent_id(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                                                             uint32)
    IL_0007:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Handles.OidSafeHandle::MarshalAsObjectId()
    IL_000c:  ret
  } // end of method Proxy::git_commit_parent_oid

  .method public hidebysig static int32  git_commit_parentcount(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                                class LibGit2Sharp.ObjectId id) cil managed
  {
    // Code size       30 (0x1e)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
             int32 V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                  class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                  bool)
    IL_0008:  stloc.0
    .try
    {
      IL_0009:  ldloc.0
      IL_000a:  call       int32 LibGit2Sharp.Core.Proxy::git_commit_parentcount(class LibGit2Sharp.Core.ObjectSafeWrapper)
      IL_000f:  stloc.1
      IL_0010:  leave.s    IL_001c

    }  // end .try
    finally
    {
      IL_0012:  ldloc.0
      IL_0013:  brfalse.s  IL_001b

      IL_0015:  ldloc.0
      IL_0016:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_001b:  endfinally
    }  // end handler
    IL_001c:  ldloc.1
    IL_001d:  ret
  } // end of method Proxy::git_commit_parentcount

  .method public hidebysig static int32  git_commit_parentcount(class LibGit2Sharp.Core.ObjectSafeWrapper obj) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
    IL_0006:  call       uint32 LibGit2Sharp.Core.NativeMethods::git_commit_parentcount(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_000b:  ret
  } // end of method Proxy::git_commit_parentcount

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_commit_tree_oid(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.Core.Handles.OidSafeHandle LibGit2Sharp.Core.NativeMethods::git_commit_tree_id(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Handles.OidSafeHandle::MarshalAsObjectId()
    IL_000b:  ret
  } // end of method Proxy::git_commit_tree_oid

  .method public hidebysig static void  git_config_add_file_ondisk(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle config,
                                                                   class LibGit2Sharp.Core.FilePath path,
                                                                   valuetype LibGit2Sharp.ConfigurationLevel level) cil managed
  {
    // Code size       40 (0x28)
    .maxstack  4
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  ldarg.2
      IL_000e:  ldc.i4.1
      IL_000f:  call       int32 LibGit2Sharp.Core.NativeMethods::git_config_add_file_ondisk(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                             class LibGit2Sharp.Core.FilePath,
                                                                                             uint32,
                                                                                             bool)
      IL_0014:  stloc.0
      IL_0015:  ldloc.0
      IL_0016:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001b:  leave.s    IL_0027

    }  // end .try
    finally
    {
      IL_001d:  ldloc.1
      IL_001e:  brfalse.s  IL_0026

      IL_0020:  ldloc.1
      IL_0021:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0026:  endfinally
    }  // end handler
    IL_0027:  ret
  } // end of method Proxy::git_config_add_file_ondisk

  .method public hidebysig static bool  git_config_delete(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle config,
                                                          string name) cil managed
  {
    // Code size       50 (0x32)
    .maxstack  2
    .locals init (int32 V_0,
             bool V_1,
             class [mscorlib]System.IDisposable V_2)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.2
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  call       int32 LibGit2Sharp.Core.NativeMethods::git_config_delete_entry(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                          string)
      IL_0012:  stloc.0
      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.s   -3
      IL_0016:  bne.un.s   IL_001c

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  leave.s    IL_0030

      IL_001c:  ldloc.0
      IL_001d:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0022:  ldc.i4.1
      IL_0023:  stloc.1
      IL_0024:  leave.s    IL_0030

    }  // end .try
    finally
    {
      IL_0026:  ldloc.2
      IL_0027:  brfalse.s  IL_002f

      IL_0029:  ldloc.2
      IL_002a:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002f:  endfinally
    }  // end handler
    IL_0030:  ldloc.1
    IL_0031:  ret
  } // end of method Proxy::git_config_delete

  .method public hidebysig static string 
          git_config_find_global() cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldnull
    IL_0001:  ldftn      int32 LibGit2Sharp.Core.NativeMethods::git_config_find_global(uint8[],
                                                                                       native uint)
    IL_0007:  newobj     instance void class [System.Core]System.Func`3<uint8[],native uint,int32>::.ctor(object,
                                                                                                          native int)
    IL_000c:  call       string LibGit2Sharp.Core.Proxy::ConvertPath(class [System.Core]System.Func`3<uint8[],native uint,int32>)
    IL_0011:  ret
  } // end of method Proxy::git_config_find_global

  .method public hidebysig static string 
          git_config_find_system() cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldnull
    IL_0001:  ldftn      int32 LibGit2Sharp.Core.NativeMethods::git_config_find_system(uint8[],
                                                                                       native uint)
    IL_0007:  newobj     instance void class [System.Core]System.Func`3<uint8[],native uint,int32>::.ctor(object,
                                                                                                          native int)
    IL_000c:  call       string LibGit2Sharp.Core.Proxy::ConvertPath(class [System.Core]System.Func`3<uint8[],native uint,int32>)
    IL_0011:  ret
  } // end of method Proxy::git_config_find_system

  .method public hidebysig static string 
          git_config_find_xdg() cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldnull
    IL_0001:  ldftn      int32 LibGit2Sharp.Core.NativeMethods::git_config_find_xdg(uint8[],
                                                                                    native uint)
    IL_0007:  newobj     instance void class [System.Core]System.Func`3<uint8[],native uint,int32>::.ctor(object,
                                                                                                          native int)
    IL_000c:  call       string LibGit2Sharp.Core.Proxy::ConvertPath(class [System.Core]System.Func`3<uint8[],native uint,int32>)
    IL_0011:  ret
  } // end of method Proxy::git_config_find_xdg

  .method public hidebysig static void  git_config_free(native int config) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_config_free(native int)
    IL_0006:  ret
  } // end of method Proxy::git_config_free

  .method public hidebysig static class LibGit2Sharp.ConfigurationEntry`1<!!T> 
          git_config_get_entry<T>(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle config,
                                  string key) cil managed
  {
    // Code size       199 (0xc7)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Handles.GitConfigEntryHandle V_0,
             int32 V_1,
             valuetype LibGit2Sharp.Core.GitConfigEntry V_2,
             class LibGit2Sharp.ConfigurationEntry`1<!!T> V_3,
             object[] V_4,
             class [mscorlib]System.IDisposable V_5)
    IL_0000:  ldsfld     class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,class [System.Core]System.Func`2<string,object>> LibGit2Sharp.Core.Proxy::configurationParser
    IL_0005:  ldtoken    !!T
    IL_000a:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_000f:  callvirt   instance bool class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,class [System.Core]System.Func`2<string,object>>::ContainsKey(!0)
    IL_0014:  brtrue.s   IL_0048

    IL_0016:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_001b:  ldstr      "Generic Argument of type '{0}' is not supported."
    IL_0020:  ldc.i4.1
    IL_0021:  newarr     [mscorlib]System.Object
    IL_0026:  stloc.s    V_4
    IL_0028:  ldloc.s    V_4
    IL_002a:  ldc.i4.0
    IL_002b:  ldtoken    !!T
    IL_0030:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0035:  callvirt   instance string [mscorlib]System.Type::get_FullName()
    IL_003a:  stelem.ref
    IL_003b:  ldloc.s    V_4
    IL_003d:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0042:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0047:  throw

    IL_0048:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_004d:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_0052:  stloc.s    V_5
    .try
    {
      IL_0054:  ldloca.s   V_0
      IL_0056:  ldarg.0
      IL_0057:  ldarg.1
      IL_0058:  call       int32 LibGit2Sharp.Core.NativeMethods::git_config_get_entry(class LibGit2Sharp.Core.Handles.GitConfigEntryHandle&,
                                                                                       class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                       string)
      IL_005d:  stloc.1
      IL_005e:  ldloc.1
      IL_005f:  ldc.i4.s   -3
      IL_0061:  bne.un.s   IL_0067

      IL_0063:  ldnull
      IL_0064:  stloc.3
      IL_0065:  leave.s    IL_00c5

      IL_0067:  ldloc.1
      IL_0068:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_006d:  leave.s    IL_007b

    }  // end .try
    finally
    {
      IL_006f:  ldloc.s    V_5
      IL_0071:  brfalse.s  IL_007a

      IL_0073:  ldloc.s    V_5
      IL_0075:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_007a:  endfinally
    }  // end handler
    IL_007b:  ldloc.0
    IL_007c:  callvirt   instance valuetype LibGit2Sharp.Core.GitConfigEntry LibGit2Sharp.Core.Handles.GitConfigEntryHandle::MarshalAsGitConfigEntry()
    IL_0081:  stloc.2
    IL_0082:  ldloca.s   V_2
    IL_0084:  ldfld      native int LibGit2Sharp.Core.GitConfigEntry::namePtr
    IL_0089:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
    IL_008e:  ldsfld     class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,class [System.Core]System.Func`2<string,object>> LibGit2Sharp.Core.Proxy::configurationParser
    IL_0093:  ldtoken    !!T
    IL_0098:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_009d:  callvirt   instance !1 class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,class [System.Core]System.Func`2<string,object>>::get_Item(!0)
    IL_00a2:  ldloca.s   V_2
    IL_00a4:  ldfld      native int LibGit2Sharp.Core.GitConfigEntry::valuePtr
    IL_00a9:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
    IL_00ae:  callvirt   instance !1 class [System.Core]System.Func`2<string,object>::Invoke(!0)
    IL_00b3:  unbox.any  !!T
    IL_00b8:  ldloca.s   V_2
    IL_00ba:  ldfld      uint32 LibGit2Sharp.Core.GitConfigEntry::level
    IL_00bf:  newobj     instance void class LibGit2Sharp.ConfigurationEntry`1<!!T>::.ctor(string,
                                                                                           !0,
                                                                                           valuetype LibGit2Sharp.ConfigurationLevel)
    IL_00c4:  ret

    IL_00c5:  ldloc.3
    IL_00c6:  ret
  } // end of method Proxy::git_config_get_entry

  .method public hidebysig static class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle 
          git_config_new() cil managed
  {
    // Code size       41 (0x29)
    .maxstack  1
    .locals init (class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  call       int32 LibGit2Sharp.Core.NativeMethods::git_config_new(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle&)
      IL_0012:  stloc.1
      IL_0013:  ldloc.1
      IL_0014:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0019:  ldloc.0
      IL_001a:  stloc.2
      IL_001b:  leave.s    IL_0027

    }  // end .try
    finally
    {
      IL_001d:  ldloc.3
      IL_001e:  brfalse.s  IL_0026

      IL_0020:  ldloc.3
      IL_0021:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0026:  endfinally
    }  // end handler
    IL_0027:  ldloc.2
    IL_0028:  ret
  } // end of method Proxy::git_config_new

  .method public hidebysig static class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle 
          git_config_open_level(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle parent,
                                valuetype LibGit2Sharp.ConfigurationLevel level) cil managed
  {
    // Code size       52 (0x34)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  call       int32 LibGit2Sharp.Core.NativeMethods::git_config_open_level(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle&,
                                                                                        class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                        uint32)
      IL_0014:  stloc.1
      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.s   -3
      IL_0018:  bne.un.s   IL_001e

      IL_001a:  ldnull
      IL_001b:  stloc.2
      IL_001c:  leave.s    IL_0032

      IL_001e:  ldloc.1
      IL_001f:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0024:  ldloc.0
      IL_0025:  stloc.2
      IL_0026:  leave.s    IL_0032

    }  // end .try
    finally
    {
      IL_0028:  ldloc.3
      IL_0029:  brfalse.s  IL_0031

      IL_002b:  ldloc.3
      IL_002c:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0031:  endfinally
    }  // end handler
    IL_0032:  ldloc.2
    IL_0033:  ret
  } // end of method Proxy::git_config_open_level

  .method public hidebysig static bool  git_config_parse_bool(string 'value') cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  2
    .locals init (bool V_0,
             int32 V_1,
             bool V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_config_parse_bool(bool&,
                                                                                        string)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  ldloc.0
      IL_001b:  stloc.2
      IL_001c:  leave.s    IL_0028

    }  // end .try
    finally
    {
      IL_001e:  ldloc.3
      IL_001f:  brfalse.s  IL_0027

      IL_0021:  ldloc.3
      IL_0022:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0027:  endfinally
    }  // end handler
    IL_0028:  ldloc.2
    IL_0029:  ret
  } // end of method Proxy::git_config_parse_bool

  .method public hidebysig static int32  git_config_parse_int32(string 'value') cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  2
    .locals init (int32 V_0,
             int32 V_1,
             int32 V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_config_parse_int32(int32&,
                                                                                         string)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  ldloc.0
      IL_001b:  stloc.2
      IL_001c:  leave.s    IL_0028

    }  // end .try
    finally
    {
      IL_001e:  ldloc.3
      IL_001f:  brfalse.s  IL_0027

      IL_0021:  ldloc.3
      IL_0022:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0027:  endfinally
    }  // end handler
    IL_0028:  ldloc.2
    IL_0029:  ret
  } // end of method Proxy::git_config_parse_int32

  .method public hidebysig static int64  git_config_parse_int64(string 'value') cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  2
    .locals init (int64 V_0,
             int32 V_1,
             int64 V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_config_parse_int64(int64&,
                                                                                         string)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  ldloc.0
      IL_001b:  stloc.2
      IL_001c:  leave.s    IL_0028

    }  // end .try
    finally
    {
      IL_001e:  ldloc.3
      IL_001f:  brfalse.s  IL_0027

      IL_0021:  ldloc.3
      IL_0022:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0027:  endfinally
    }  // end handler
    IL_0028:  ldloc.2
    IL_0029:  ret
  } // end of method Proxy::git_config_parse_int64

  .method public hidebysig static void  git_config_set_bool(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle config,
                                                            string name,
                                                            bool 'value') cil managed
  {
    // Code size       39 (0x27)
    .maxstack  3
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  ldarg.2
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_config_set_bool(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                      string,
                                                                                      bool)
      IL_0013:  stloc.0
      IL_0014:  ldloc.0
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  leave.s    IL_0026

    }  // end .try
    finally
    {
      IL_001c:  ldloc.1
      IL_001d:  brfalse.s  IL_0025

      IL_001f:  ldloc.1
      IL_0020:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0025:  endfinally
    }  // end handler
    IL_0026:  ret
  } // end of method Proxy::git_config_set_bool

  .method public hidebysig static void  git_config_set_int32(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle config,
                                                             string name,
                                                             int32 'value') cil managed
  {
    // Code size       39 (0x27)
    .maxstack  3
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  ldarg.2
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_config_set_int32(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                       string,
                                                                                       int32)
      IL_0013:  stloc.0
      IL_0014:  ldloc.0
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  leave.s    IL_0026

    }  // end .try
    finally
    {
      IL_001c:  ldloc.1
      IL_001d:  brfalse.s  IL_0025

      IL_001f:  ldloc.1
      IL_0020:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0025:  endfinally
    }  // end handler
    IL_0026:  ret
  } // end of method Proxy::git_config_set_int32

  .method public hidebysig static void  git_config_set_int64(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle config,
                                                             string name,
                                                             int64 'value') cil managed
  {
    // Code size       39 (0x27)
    .maxstack  3
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  ldarg.2
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_config_set_int64(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                       string,
                                                                                       int64)
      IL_0013:  stloc.0
      IL_0014:  ldloc.0
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  leave.s    IL_0026

    }  // end .try
    finally
    {
      IL_001c:  ldloc.1
      IL_001d:  brfalse.s  IL_0025

      IL_001f:  ldloc.1
      IL_0020:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0025:  endfinally
    }  // end handler
    IL_0026:  ret
  } // end of method Proxy::git_config_set_int64

  .method public hidebysig static void  git_config_set_string(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle config,
                                                              string name,
                                                              string 'value') cil managed
  {
    // Code size       39 (0x27)
    .maxstack  3
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  ldarg.2
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_config_set_string(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle,
                                                                                        string,
                                                                                        string)
      IL_0013:  stloc.0
      IL_0014:  ldloc.0
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  leave.s    IL_0026

    }  // end .try
    finally
    {
      IL_001c:  ldloc.1
      IL_001d:  brfalse.s  IL_0025

      IL_001f:  ldloc.1
      IL_0020:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0025:  endfinally
    }  // end handler
    IL_0026:  ret
  } // end of method Proxy::git_config_set_string

  .method public hidebysig static class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> 
          git_config_foreach<TResult>(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle config,
                                      class [System.Core]System.Func`2<native int,!!TResult> resultSelector) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass8`1'<!!TResult> V_0)
    IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass8`1'<!!TResult>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass8`1'<!!TResult>::config
    IL_000d:  ldarg.1
    IL_000e:  ldloc.0
    IL_000f:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass8`1'<!!TResult>::'<git_config_foreach>b__6'(class [System.Core]System.Func`3<native int,native int,int32>)
    IL_0015:  newobj     instance void class [System.Core]System.Func`2<class [System.Core]System.Func`3<native int,native int,int32>,int32>::.ctor(object,
                                                                                                                                                    native int)
    IL_001a:  ldc.i4.0
    IL_001b:  newarr     LibGit2Sharp.Core.GitErrorCode
    IL_0020:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!1> LibGit2Sharp.Core.Proxy::git_foreach<native int,!!0>(class [System.Core]System.Func`2<!!0,!!1>,
                                                                                                                                            class [System.Core]System.Func`2<class [System.Core]System.Func`3<!!0,native int,int32>,int32>,
                                                                                                                                            valuetype LibGit2Sharp.Core.GitErrorCode[])
    IL_0025:  ret
  } // end of method Proxy::git_config_foreach

  .method public hidebysig static void  git_diff_blobs(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                       class LibGit2Sharp.ObjectId oldBlob,
                                                       class LibGit2Sharp.ObjectId newBlob,
                                                       class LibGit2Sharp.Core.GitDiffOptions options,
                                                       class LibGit2Sharp.Core.NativeMethods/git_diff_file_cb fileCallback,
                                                       class LibGit2Sharp.Core.NativeMethods/git_diff_hunk_cb hunkCallback,
                                                       class LibGit2Sharp.Core.NativeMethods/git_diff_data_cb lineCallback) cil managed
  {
    // Code size       104 (0x68)
    .maxstack  9
    .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
             class LibGit2Sharp.Core.ObjectSafeWrapper V_1,
             int32 V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldarg.1
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.1
      IL_000e:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    bool)
      IL_0013:  stloc.0
      .try
      {
        IL_0014:  ldarg.2
        IL_0015:  ldarg.0
        IL_0016:  ldc.i4.1
        IL_0017:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                      class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                      bool)
        IL_001c:  stloc.1
        .try
        {
          IL_001d:  ldloc.0
          IL_001e:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
          IL_0023:  ldnull
          IL_0024:  ldloc.1
          IL_0025:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
          IL_002a:  ldnull
          IL_002b:  ldarg.3
          IL_002c:  ldarg.s    fileCallback
          IL_002e:  ldarg.s    hunkCallback
          IL_0030:  ldarg.s    lineCallback
          IL_0032:  ldsfld     native int [mscorlib]System.IntPtr::Zero
          IL_0037:  call       int32 LibGit2Sharp.Core.NativeMethods::git_diff_blobs(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                     class LibGit2Sharp.Core.FilePath,
                                                                                     class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                     class LibGit2Sharp.Core.FilePath,
                                                                                     class LibGit2Sharp.Core.GitDiffOptions,
                                                                                     class LibGit2Sharp.Core.NativeMethods/git_diff_file_cb,
                                                                                     class LibGit2Sharp.Core.NativeMethods/git_diff_hunk_cb,
                                                                                     class LibGit2Sharp.Core.NativeMethods/git_diff_data_cb,
                                                                                     native int)
          IL_003c:  stloc.2
          IL_003d:  ldloc.2
          IL_003e:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
          IL_0043:  leave.s    IL_004f

        }  // end .try
        finally
        {
          IL_0045:  ldloc.1
          IL_0046:  brfalse.s  IL_004e

          IL_0048:  ldloc.1
          IL_0049:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          IL_004e:  endfinally
        }  // end handler
        IL_004f:  leave.s    IL_005b

      }  // end .try
      finally
      {
        IL_0051:  ldloc.0
        IL_0052:  brfalse.s  IL_005a

        IL_0054:  ldloc.0
        IL_0055:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_005a:  endfinally
      }  // end handler
      IL_005b:  leave.s    IL_0067

    }  // end .try
    finally
    {
      IL_005d:  ldloc.3
      IL_005e:  brfalse.s  IL_0066

      IL_0060:  ldloc.3
      IL_0061:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0066:  endfinally
    }  // end handler
    IL_0067:  ret
  } // end of method Proxy::git_diff_blobs

  .method public hidebysig static void  git_diff_foreach(class LibGit2Sharp.Core.Handles.DiffListSafeHandle diff,
                                                         class LibGit2Sharp.Core.NativeMethods/git_diff_file_cb fileCallback,
                                                         class LibGit2Sharp.Core.NativeMethods/git_diff_hunk_cb hunkCallback,
                                                         class LibGit2Sharp.Core.NativeMethods/git_diff_data_cb dataCallback) cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  5
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  ldarg.2
      IL_000e:  ldarg.3
      IL_000f:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_0014:  call       int32 LibGit2Sharp.Core.NativeMethods::git_diff_foreach(class LibGit2Sharp.Core.Handles.DiffListSafeHandle,
                                                                                   class LibGit2Sharp.Core.NativeMethods/git_diff_file_cb,
                                                                                   class LibGit2Sharp.Core.NativeMethods/git_diff_hunk_cb,
                                                                                   class LibGit2Sharp.Core.NativeMethods/git_diff_data_cb,
                                                                                   native int)
      IL_0019:  stloc.0
      IL_001a:  ldloc.0
      IL_001b:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0020:  leave.s    IL_002c

    }  // end .try
    finally
    {
      IL_0022:  ldloc.1
      IL_0023:  brfalse.s  IL_002b

      IL_0025:  ldloc.1
      IL_0026:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002b:  endfinally
    }  // end handler
    IL_002c:  ret
  } // end of method Proxy::git_diff_foreach

  .method public hidebysig static class LibGit2Sharp.Core.Handles.DiffListSafeHandle 
          git_diff_tree_to_index(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                 class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                                 class LibGit2Sharp.ObjectId oldTree,
                                 class LibGit2Sharp.Core.GitDiffOptions options) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
             class LibGit2Sharp.Core.Handles.DiffListSafeHandle V_1,
             int32 V_2,
             class LibGit2Sharp.Core.Handles.DiffListSafeHandle V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldarg.2
      IL_000d:  ldarg.0
      IL_000e:  ldc.i4.1
      IL_000f:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    bool)
      IL_0014:  stloc.0
      .try
      {
        IL_0015:  ldloca.s   V_1
        IL_0017:  ldarg.0
        IL_0018:  ldloc.0
        IL_0019:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
        IL_001e:  ldarg.1
        IL_001f:  ldarg.3
        IL_0020:  call       int32 LibGit2Sharp.Core.NativeMethods::git_diff_tree_to_index(class LibGit2Sharp.Core.Handles.DiffListSafeHandle&,
                                                                                           class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                           class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                           class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                                           class LibGit2Sharp.Core.GitDiffOptions)
        IL_0025:  stloc.2
        IL_0026:  ldloc.2
        IL_0027:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
        IL_002c:  ldloc.1
        IL_002d:  stloc.3
        IL_002e:  leave.s    IL_0046

      }  // end .try
      finally
      {
        IL_0030:  ldloc.0
        IL_0031:  brfalse.s  IL_0039

        IL_0033:  ldloc.0
        IL_0034:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0039:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_003a:  ldloc.s    V_4
      IL_003c:  brfalse.s  IL_0045

      IL_003e:  ldloc.s    V_4
      IL_0040:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0045:  endfinally
    }  // end handler
    IL_0046:  ldloc.3
    IL_0047:  ret
  } // end of method Proxy::git_diff_tree_to_index

  .method public hidebysig static void  git_diff_list_free(native int diff) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_diff_list_free(native int)
    IL_0006:  ret
  } // end of method Proxy::git_diff_list_free

  .method public hidebysig static void  git_diff_merge(class LibGit2Sharp.Core.Handles.DiffListSafeHandle onto,
                                                       class LibGit2Sharp.Core.Handles.DiffListSafeHandle from) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  2
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  call       int32 LibGit2Sharp.Core.NativeMethods::git_diff_merge(class LibGit2Sharp.Core.Handles.DiffListSafeHandle,
                                                                                 class LibGit2Sharp.Core.Handles.DiffListSafeHandle)
      IL_0012:  stloc.0
      IL_0013:  ldloc.0
      IL_0014:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0019:  leave.s    IL_0025

    }  // end .try
    finally
    {
      IL_001b:  ldloc.1
      IL_001c:  brfalse.s  IL_0024

      IL_001e:  ldloc.1
      IL_001f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0024:  endfinally
    }  // end handler
    IL_0025:  ret
  } // end of method Proxy::git_diff_merge

  .method public hidebysig static void  git_diff_print_patch(class LibGit2Sharp.Core.Handles.DiffListSafeHandle diff,
                                                             class LibGit2Sharp.Core.NativeMethods/git_diff_data_cb printCallback) cil managed
  {
    // Code size       43 (0x2b)
    .maxstack  3
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_0012:  call       int32 LibGit2Sharp.Core.NativeMethods::git_diff_print_patch(class LibGit2Sharp.Core.Handles.DiffListSafeHandle,
                                                                                       class LibGit2Sharp.Core.NativeMethods/git_diff_data_cb,
                                                                                       native int)
      IL_0017:  stloc.0
      IL_0018:  ldloc.0
      IL_0019:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001e:  leave.s    IL_002a

    }  // end .try
    finally
    {
      IL_0020:  ldloc.1
      IL_0021:  brfalse.s  IL_0029

      IL_0023:  ldloc.1
      IL_0024:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0029:  endfinally
    }  // end handler
    IL_002a:  ret
  } // end of method Proxy::git_diff_print_patch

  .method public hidebysig static class LibGit2Sharp.Core.Handles.DiffListSafeHandle 
          git_diff_tree_to_tree(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                class LibGit2Sharp.ObjectId oldTree,
                                class LibGit2Sharp.ObjectId newTree,
                                class LibGit2Sharp.Core.GitDiffOptions options) cil managed
  {
    // Code size       98 (0x62)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
             class LibGit2Sharp.Core.ObjectSafeWrapper V_1,
             class LibGit2Sharp.Core.Handles.DiffListSafeHandle V_2,
             int32 V_3,
             class LibGit2Sharp.Core.Handles.DiffListSafeHandle V_4,
             class [mscorlib]System.IDisposable V_5)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_5
    .try
    {
      IL_000c:  ldarg.1
      IL_000d:  ldarg.0
      IL_000e:  ldc.i4.1
      IL_000f:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    bool)
      IL_0014:  stloc.0
      .try
      {
        IL_0015:  ldarg.2
        IL_0016:  ldarg.0
        IL_0017:  ldc.i4.1
        IL_0018:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                      class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                      bool)
        IL_001d:  stloc.1
        .try
        {
          IL_001e:  ldloca.s   V_2
          IL_0020:  ldarg.0
          IL_0021:  ldloc.0
          IL_0022:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
          IL_0027:  ldloc.1
          IL_0028:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
          IL_002d:  ldarg.3
          IL_002e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_diff_tree_to_tree(class LibGit2Sharp.Core.Handles.DiffListSafeHandle&,
                                                                                            class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                            class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                            class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                            class LibGit2Sharp.Core.GitDiffOptions)
          IL_0033:  stloc.3
          IL_0034:  ldloc.3
          IL_0035:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
          IL_003a:  ldloc.2
          IL_003b:  stloc.s    V_4
          IL_003d:  leave.s    IL_005f

        }  // end .try
        finally
        {
          IL_003f:  ldloc.1
          IL_0040:  brfalse.s  IL_0048

          IL_0042:  ldloc.1
          IL_0043:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          IL_0048:  endfinally
        }  // end handler
      }  // end .try
      finally
      {
        IL_0049:  ldloc.0
        IL_004a:  brfalse.s  IL_0052

        IL_004c:  ldloc.0
        IL_004d:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0052:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_0053:  ldloc.s    V_5
      IL_0055:  brfalse.s  IL_005e

      IL_0057:  ldloc.s    V_5
      IL_0059:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_005e:  endfinally
    }  // end handler
    IL_005f:  ldloc.s    V_4
    IL_0061:  ret
  } // end of method Proxy::git_diff_tree_to_tree

  .method public hidebysig static class LibGit2Sharp.Core.Handles.DiffListSafeHandle 
          git_diff_index_to_workdir(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                    class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                                    class LibGit2Sharp.Core.GitDiffOptions options) cil managed
  {
    // Code size       44 (0x2c)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Handles.DiffListSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.DiffListSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  ldarg.2
      IL_0010:  call       int32 LibGit2Sharp.Core.NativeMethods::git_diff_index_to_workdir(class LibGit2Sharp.Core.Handles.DiffListSafeHandle&,
                                                                                            class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                            class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                                            class LibGit2Sharp.Core.GitDiffOptions)
      IL_0015:  stloc.1
      IL_0016:  ldloc.1
      IL_0017:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001c:  ldloc.0
      IL_001d:  stloc.2
      IL_001e:  leave.s    IL_002a

    }  // end .try
    finally
    {
      IL_0020:  ldloc.3
      IL_0021:  brfalse.s  IL_0029

      IL_0023:  ldloc.3
      IL_0024:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0029:  endfinally
    }  // end handler
    IL_002a:  ldloc.2
    IL_002b:  ret
  } // end of method Proxy::git_diff_index_to_workdir

  .method public hidebysig static class LibGit2Sharp.Core.Handles.DiffListSafeHandle 
          git_diff_tree_to_workdir(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                   class LibGit2Sharp.ObjectId oldTree,
                                   class LibGit2Sharp.Core.GitDiffOptions options) cil managed
  {
    // Code size       71 (0x47)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
             class LibGit2Sharp.Core.Handles.DiffListSafeHandle V_1,
             int32 V_2,
             class LibGit2Sharp.Core.Handles.DiffListSafeHandle V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldarg.1
      IL_000d:  ldarg.0
      IL_000e:  ldc.i4.1
      IL_000f:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    bool)
      IL_0014:  stloc.0
      .try
      {
        IL_0015:  ldloca.s   V_1
        IL_0017:  ldarg.0
        IL_0018:  ldloc.0
        IL_0019:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
        IL_001e:  ldarg.2
        IL_001f:  call       int32 LibGit2Sharp.Core.NativeMethods::git_diff_tree_to_workdir(class LibGit2Sharp.Core.Handles.DiffListSafeHandle&,
                                                                                             class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                             class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                             class LibGit2Sharp.Core.GitDiffOptions)
        IL_0024:  stloc.2
        IL_0025:  ldloc.2
        IL_0026:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
        IL_002b:  ldloc.1
        IL_002c:  stloc.3
        IL_002d:  leave.s    IL_0045

      }  // end .try
      finally
      {
        IL_002f:  ldloc.0
        IL_0030:  brfalse.s  IL_0038

        IL_0032:  ldloc.0
        IL_0033:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0038:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_0039:  ldloc.s    V_4
      IL_003b:  brfalse.s  IL_0044

      IL_003d:  ldloc.s    V_4
      IL_003f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0044:  endfinally
    }  // end handler
    IL_0045:  ldloc.3
    IL_0046:  ret
  } // end of method Proxy::git_diff_tree_to_workdir

  .method public hidebysig static class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>> 
          git_graph_ahead_behind(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                 class LibGit2Sharp.Commit first,
                                 class LibGit2Sharp.Commit second) cil managed
  {
    // Code size       149 (0x95)
    .maxstack  5
    .locals init (valuetype LibGit2Sharp.Core.GitOid V_0,
             valuetype LibGit2Sharp.Core.GitOid V_1,
             native uint V_2,
             native uint V_3,
             int32 V_4,
             class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>> V_5,
             valuetype [mscorlib]System.Nullable`1<int32> V_6,
             valuetype [mscorlib]System.Nullable`1<int32> V_7,
             class [mscorlib]System.IDisposable V_8)
    IL_0000:  ldarg.1
    IL_0001:  ldnull
    IL_0002:  call       bool LibGit2Sharp.GitObject::op_Equality(class LibGit2Sharp.GitObject,
                                                                  class LibGit2Sharp.GitObject)
    IL_0007:  brtrue.s   IL_0012

    IL_0009:  ldarg.2
    IL_000a:  ldnull
    IL_000b:  call       bool LibGit2Sharp.GitObject::op_Equality(class LibGit2Sharp.GitObject,
                                                                  class LibGit2Sharp.GitObject)
    IL_0010:  brfalse.s  IL_002c

    IL_0012:  ldloca.s   V_6
    IL_0014:  initobj    valuetype [mscorlib]System.Nullable`1<int32>
    IL_001a:  ldloc.s    V_6
    IL_001c:  ldloca.s   V_7
    IL_001e:  initobj    valuetype [mscorlib]System.Nullable`1<int32>
    IL_0024:  ldloc.s    V_7
    IL_0026:  newobj     instance void class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>>::.ctor(!0,
                                                                                                                                                                                !1)
    IL_002b:  ret

    IL_002c:  ldarg.1
    IL_002d:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0032:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
    IL_0037:  stloc.0
    IL_0038:  ldarg.2
    IL_0039:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_003e:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
    IL_0043:  stloc.1
    IL_0044:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0049:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_004e:  stloc.s    V_8
    .try
    {
      IL_0050:  ldloca.s   V_2
      IL_0052:  ldloca.s   V_3
      IL_0054:  ldarg.0
      IL_0055:  ldloca.s   V_0
      IL_0057:  ldloca.s   V_1
      IL_0059:  call       int32 LibGit2Sharp.Core.NativeMethods::git_graph_ahead_behind(native uint&,
                                                                                         native uint&,
                                                                                         class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                         valuetype LibGit2Sharp.Core.GitOid&,
                                                                                         valuetype LibGit2Sharp.Core.GitOid&)
      IL_005e:  stloc.s    V_4
      IL_0060:  ldloc.s    V_4
      IL_0062:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0067:  ldloc.2
      IL_0068:  call       uint32 [mscorlib]System.UIntPtr::op_Explicit(native uint)
      IL_006d:  newobj     instance void valuetype [mscorlib]System.Nullable`1<int32>::.ctor(!0)
      IL_0072:  ldloc.3
      IL_0073:  call       uint32 [mscorlib]System.UIntPtr::op_Explicit(native uint)
      IL_0078:  newobj     instance void valuetype [mscorlib]System.Nullable`1<int32>::.ctor(!0)
      IL_007d:  newobj     instance void class LibGit2Sharp.Core.Compat.Tuple`2<valuetype [mscorlib]System.Nullable`1<int32>,valuetype [mscorlib]System.Nullable`1<int32>>::.ctor(!0,
                                                                                                                                                                                  !1)
      IL_0082:  stloc.s    V_5
      IL_0084:  leave.s    IL_0092

    }  // end .try
    finally
    {
      IL_0086:  ldloc.s    V_8
      IL_0088:  brfalse.s  IL_0091

      IL_008a:  ldloc.s    V_8
      IL_008c:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0091:  endfinally
    }  // end handler
    IL_0092:  ldloc.s    V_5
    IL_0094:  ret
  } // end of method Proxy::git_graph_ahead_behind

  .method public hidebysig static void  git_ignore_add_rule(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                            string rules) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  2
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  call       int32 LibGit2Sharp.Core.NativeMethods::git_ignore_add_rule(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                      string)
      IL_0012:  stloc.0
      IL_0013:  ldloc.0
      IL_0014:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0019:  leave.s    IL_0025

    }  // end .try
    finally
    {
      IL_001b:  ldloc.1
      IL_001c:  brfalse.s  IL_0024

      IL_001e:  ldloc.1
      IL_001f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0024:  endfinally
    }  // end handler
    IL_0025:  ret
  } // end of method Proxy::git_ignore_add_rule

  .method public hidebysig static void  git_ignore_clear_internal_rules(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  1
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  call       int32 LibGit2Sharp.Core.NativeMethods::git_ignore_clear_internal_rules(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_0011:  stloc.0
      IL_0012:  ldloc.0
      IL_0013:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0018:  leave.s    IL_0024

    }  // end .try
    finally
    {
      IL_001a:  ldloc.1
      IL_001b:  brfalse.s  IL_0023

      IL_001d:  ldloc.1
      IL_001e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0023:  endfinally
    }  // end handler
    IL_0024:  ret
  } // end of method Proxy::git_ignore_clear_internal_rules

  .method public hidebysig static bool  git_ignore_path_is_ignored(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                                   string path) cil managed
  {
    // Code size       54 (0x36)
    .maxstack  3
    .locals init (int32 V_0,
             int32 V_1,
             bool V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
      IL_0014:  call       int32 LibGit2Sharp.Core.NativeMethods::git_ignore_path_is_ignored(int32&,
                                                                                             class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                             class LibGit2Sharp.Core.FilePath)
      IL_0019:  stloc.1
      IL_001a:  ldloc.1
      IL_001b:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0020:  ldloc.0
      IL_0021:  ldc.i4.0
      IL_0022:  ceq
      IL_0024:  ldc.i4.0
      IL_0025:  ceq
      IL_0027:  stloc.2
      IL_0028:  leave.s    IL_0034

    }  // end .try
    finally
    {
      IL_002a:  ldloc.3
      IL_002b:  brfalse.s  IL_0033

      IL_002d:  ldloc.3
      IL_002e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0033:  endfinally
    }  // end handler
    IL_0034:  ldloc.2
    IL_0035:  ret
  } // end of method Proxy::git_ignore_path_is_ignored

  .method public hidebysig static void  git_index_add(class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                                                      class LibGit2Sharp.Core.GitIndexEntry entry) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  2
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  call       int32 LibGit2Sharp.Core.NativeMethods::git_index_add(class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                                class LibGit2Sharp.Core.GitIndexEntry)
      IL_0012:  stloc.0
      IL_0013:  ldloc.0
      IL_0014:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0019:  leave.s    IL_0025

    }  // end .try
    finally
    {
      IL_001b:  ldloc.1
      IL_001c:  brfalse.s  IL_0024

      IL_001e:  ldloc.1
      IL_001f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0024:  endfinally
    }  // end handler
    IL_0025:  ret
  } // end of method Proxy::git_index_add

  .method public hidebysig static void  git_index_add_bypath(class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                                                             class LibGit2Sharp.Core.FilePath path) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  2
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  call       int32 LibGit2Sharp.Core.NativeMethods::git_index_add_bypath(class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                                       class LibGit2Sharp.Core.FilePath)
      IL_0012:  stloc.0
      IL_0013:  ldloc.0
      IL_0014:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0019:  leave.s    IL_0025

    }  // end .try
    finally
    {
      IL_001b:  ldloc.1
      IL_001c:  brfalse.s  IL_0024

      IL_001e:  ldloc.1
      IL_001f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0024:  endfinally
    }  // end handler
    IL_0025:  ret
  } // end of method Proxy::git_index_add_bypath

  .method public hidebysig static class LibGit2Sharp.Conflict 
          git_index_conflict_get(class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                                 class LibGit2Sharp.Repository repo,
                                 class LibGit2Sharp.Core.FilePath path) cil managed
  {
    // Code size       54 (0x36)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle V_0,
             class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle V_1,
             class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle V_2,
             int32 V_3)
    IL_0000:  ldloca.s   V_0
    IL_0002:  ldloca.s   V_1
    IL_0004:  ldloca.s   V_2
    IL_0006:  ldarg.0
    IL_0007:  ldarg.2
    IL_0008:  call       int32 LibGit2Sharp.Core.NativeMethods::git_index_conflict_get(class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle&,
                                                                                       class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle&,
                                                                                       class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle&,
                                                                                       class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                                       class LibGit2Sharp.Core.FilePath)
    IL_000d:  stloc.3
    IL_000e:  ldloc.3
    IL_000f:  ldc.i4.s   -3
    IL_0011:  bne.un.s   IL_0015

    IL_0013:  ldnull
    IL_0014:  ret

    IL_0015:  ldloc.3
    IL_0016:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
    IL_001b:  ldarg.1
    IL_001c:  ldloc.0
    IL_001d:  call       class LibGit2Sharp.IndexEntry LibGit2Sharp.IndexEntry::BuildFromPtr(class LibGit2Sharp.Repository,
                                                                                             class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle)
    IL_0022:  ldarg.1
    IL_0023:  ldloc.1
    IL_0024:  call       class LibGit2Sharp.IndexEntry LibGit2Sharp.IndexEntry::BuildFromPtr(class LibGit2Sharp.Repository,
                                                                                             class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle)
    IL_0029:  ldarg.1
    IL_002a:  ldloc.2
    IL_002b:  call       class LibGit2Sharp.IndexEntry LibGit2Sharp.IndexEntry::BuildFromPtr(class LibGit2Sharp.Repository,
                                                                                             class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle)
    IL_0030:  newobj     instance void LibGit2Sharp.Conflict::.ctor(class LibGit2Sharp.IndexEntry,
                                                                    class LibGit2Sharp.IndexEntry,
                                                                    class LibGit2Sharp.IndexEntry)
    IL_0035:  ret
  } // end of method Proxy::git_index_conflict_get

  .method public hidebysig static int32  git_index_entrycount(class LibGit2Sharp.Core.Handles.IndexSafeHandle index) cil managed
  {
    // Code size       39 (0x27)
    .maxstack  2
    .locals init (native uint V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       native uint LibGit2Sharp.Core.NativeMethods::git_index_entrycount(class LibGit2Sharp.Core.Handles.IndexSafeHandle)
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  call       uint64 [mscorlib]System.UIntPtr::op_Explicit(native uint)
    IL_000d:  ldc.i4     0x7fffffff
    IL_0012:  conv.i8
    IL_0013:  ble.s      IL_0020

    IL_0015:  ldstr      "Index entry count exceeds size of int"
    IL_001a:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_001f:  throw

    IL_0020:  ldloc.0
    IL_0021:  call       uint32 [mscorlib]System.UIntPtr::op_Explicit(native uint)
    IL_0026:  ret
  } // end of method Proxy::git_index_entrycount

  .method public hidebysig static valuetype LibGit2Sharp.StageLevel 
          git_index_entry_stage(class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle index) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       int32 LibGit2Sharp.Core.NativeMethods::git_index_entry_stage(class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_index_entry_stage

  .method public hidebysig static void  git_index_free(native int index) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_index_free(native int)
    IL_0006:  ret
  } // end of method Proxy::git_index_free

  .method public hidebysig static class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle 
          git_index_get_byindex(class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                                native uint n) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle LibGit2Sharp.Core.NativeMethods::git_index_get_byindex(class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                                                                                     native uint)
    IL_0007:  ret
  } // end of method Proxy::git_index_get_byindex

  .method public hidebysig static class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle 
          git_index_get_bypath(class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                               class LibGit2Sharp.Core.FilePath path,
                               int32 stage) cil managed
  {
    // Code size       21 (0x15)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle LibGit2Sharp.Core.NativeMethods::git_index_get_bypath(class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                                                                                    class LibGit2Sharp.Core.FilePath,
                                                                                                                                    int32)
    IL_0008:  stloc.0
    IL_0009:  ldloc.0
    IL_000a:  callvirt   instance bool LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase::get_IsZero()
    IL_000f:  brtrue.s   IL_0013

    IL_0011:  ldloc.0
    IL_0012:  ret

    IL_0013:  ldnull
    IL_0014:  ret
  } // end of method Proxy::git_index_get_bypath

  .method public hidebysig static bool  git_index_has_conflicts(class LibGit2Sharp.Core.Handles.IndexSafeHandle index) cil managed
  {
    // Code size       21 (0x15)
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       int32 LibGit2Sharp.Core.NativeMethods::git_index_has_conflicts(class LibGit2Sharp.Core.Handles.IndexSafeHandle)
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  call       void LibGit2Sharp.Core.Ensure::BooleanResult(int32)
    IL_000d:  ldloc.0
    IL_000e:  ldc.i4.0
    IL_000f:  ceq
    IL_0011:  ldc.i4.0
    IL_0012:  ceq
    IL_0014:  ret
  } // end of method Proxy::git_index_has_conflicts

  .method public hidebysig static class LibGit2Sharp.Core.Handles.IndexSafeHandle 
          git_index_open(class LibGit2Sharp.Core.FilePath indexpath) cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.Handles.IndexSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.IndexSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_index_open(class LibGit2Sharp.Core.Handles.IndexSafeHandle&,
                                                                                 class LibGit2Sharp.Core.FilePath)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  ldloc.0
      IL_001b:  stloc.2
      IL_001c:  leave.s    IL_0028

    }  // end .try
    finally
    {
      IL_001e:  ldloc.3
      IL_001f:  brfalse.s  IL_0027

      IL_0021:  ldloc.3
      IL_0022:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0027:  endfinally
    }  // end handler
    IL_0028:  ldloc.2
    IL_0029:  ret
  } // end of method Proxy::git_index_open

  .method public hidebysig static void  git_index_remove_bypath(class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                                                                class LibGit2Sharp.Core.FilePath path) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  2
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  call       int32 LibGit2Sharp.Core.NativeMethods::git_index_remove_bypath(class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                                          class LibGit2Sharp.Core.FilePath)
      IL_0012:  stloc.0
      IL_0013:  ldloc.0
      IL_0014:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0019:  leave.s    IL_0025

    }  // end .try
    finally
    {
      IL_001b:  ldloc.1
      IL_001c:  brfalse.s  IL_0024

      IL_001e:  ldloc.1
      IL_001f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0024:  endfinally
    }  // end handler
    IL_0025:  ret
  } // end of method Proxy::git_index_remove_bypath

  .method public hidebysig static void  git_index_write(class LibGit2Sharp.Core.Handles.IndexSafeHandle index) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  1
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  call       int32 LibGit2Sharp.Core.NativeMethods::git_index_write(class LibGit2Sharp.Core.Handles.IndexSafeHandle)
      IL_0011:  stloc.0
      IL_0012:  ldloc.0
      IL_0013:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0018:  leave.s    IL_0024

    }  // end .try
    finally
    {
      IL_001a:  ldloc.1
      IL_001b:  brfalse.s  IL_0023

      IL_001d:  ldloc.1
      IL_001e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0023:  endfinally
    }  // end handler
    IL_0024:  ret
  } // end of method Proxy::git_index_write

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_tree_create_fromindex(class LibGit2Sharp.Index index) cil managed
  {
    // Code size       52 (0x34)
    .maxstack  2
    .locals init (valuetype LibGit2Sharp.Core.GitOid V_0,
             int32 V_1,
             class LibGit2Sharp.ObjectId V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  callvirt   instance class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::get_Handle()
      IL_0013:  call       int32 LibGit2Sharp.Core.NativeMethods::git_index_write_tree(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                       class LibGit2Sharp.Core.Handles.IndexSafeHandle)
      IL_0018:  stloc.1
      IL_0019:  ldloc.1
      IL_001a:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001f:  ldloc.0
      IL_0020:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
      IL_0025:  stloc.2
      IL_0026:  leave.s    IL_0032

    }  // end .try
    finally
    {
      IL_0028:  ldloc.3
      IL_0029:  brfalse.s  IL_0031

      IL_002b:  ldloc.3
      IL_002c:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0031:  endfinally
    }  // end handler
    IL_0032:  ldloc.2
    IL_0033:  ret
  } // end of method Proxy::git_tree_create_fromindex

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_merge_base(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                         class LibGit2Sharp.Commit first,
                         class LibGit2Sharp.Commit second) cil managed
  {
    // Code size       122 (0x7a)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
             class LibGit2Sharp.Core.ObjectSafeWrapper V_1,
             valuetype LibGit2Sharp.Core.GitOid V_2,
             int32 V_3,
             class LibGit2Sharp.ObjectId V_4,
             class [mscorlib]System.IDisposable V_5)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_5
    .try
    {
      IL_000c:  ldarg.1
      IL_000d:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
      IL_0012:  ldarg.0
      IL_0013:  ldc.i4.0
      IL_0014:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    bool)
      IL_0019:  stloc.0
      .try
      {
        IL_001a:  ldarg.2
        IL_001b:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
        IL_0020:  ldarg.0
        IL_0021:  ldc.i4.0
        IL_0022:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                      class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                      bool)
        IL_0027:  stloc.1
        .try
        {
          IL_0028:  ldloca.s   V_2
          IL_002a:  ldarg.0
          IL_002b:  ldloc.0
          IL_002c:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
          IL_0031:  ldloc.1
          IL_0032:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
          IL_0037:  call       int32 LibGit2Sharp.Core.NativeMethods::git_merge_base(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                     class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                     class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                     class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
          IL_003c:  stloc.3
          IL_003d:  ldloc.3
          IL_003e:  ldc.i4.s   -3
          IL_0040:  bne.un.s   IL_0047

          IL_0042:  ldnull
          IL_0043:  stloc.s    V_4
          IL_0045:  leave.s    IL_0077

          IL_0047:  ldloc.3
          IL_0048:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
          IL_004d:  ldloc.2
          IL_004e:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
          IL_0053:  stloc.s    V_4
          IL_0055:  leave.s    IL_0077

        }  // end .try
        finally
        {
          IL_0057:  ldloc.1
          IL_0058:  brfalse.s  IL_0060

          IL_005a:  ldloc.1
          IL_005b:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          IL_0060:  endfinally
        }  // end handler
      }  // end .try
      finally
      {
        IL_0061:  ldloc.0
        IL_0062:  brfalse.s  IL_006a

        IL_0064:  ldloc.0
        IL_0065:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_006a:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_006b:  ldloc.s    V_5
      IL_006d:  brfalse.s  IL_0076

      IL_006f:  ldloc.s    V_5
      IL_0071:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0076:  endfinally
    }  // end handler
    IL_0077:  ldloc.s    V_4
    IL_0079:  ret
  } // end of method Proxy::git_merge_base

  .method public hidebysig static string 
          git_message_prettify(string message) cil managed
  {
    // Code size       95 (0x5f)
    .maxstack  4
    .locals init (int32 V_0,
             uint8[] V_1,
             int32 V_2,
             string V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldnull
      IL_000d:  ldsfld     native uint [mscorlib]System.UIntPtr::Zero
      IL_0012:  ldarg.0
      IL_0013:  ldc.i4.0
      IL_0014:  call       int32 LibGit2Sharp.Core.NativeMethods::git_message_prettify(uint8[],
                                                                                       native uint,
                                                                                       string,
                                                                                       bool)
      IL_0019:  stloc.0
      IL_001a:  ldloc.0
      IL_001b:  call       void LibGit2Sharp.Core.Ensure::Int32Result(int32)
      IL_0020:  ldloc.0
      IL_0021:  newarr     [mscorlib]System.Byte
      IL_0026:  stloc.1
      IL_0027:  ldloc.1
      IL_0028:  ldloc.1
      IL_0029:  ldlen
      IL_002a:  conv.i4
      IL_002b:  conv.i8
      IL_002c:  call       native uint [mscorlib]System.UIntPtr::op_Explicit(uint64)
      IL_0031:  ldarg.0
      IL_0032:  ldc.i4.0
      IL_0033:  call       int32 LibGit2Sharp.Core.NativeMethods::git_message_prettify(uint8[],
                                                                                       native uint,
                                                                                       string,
                                                                                       bool)
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  call       void LibGit2Sharp.Core.Ensure::Int32Result(int32)
      IL_003f:  ldloc.1
      IL_0040:  call       string LibGit2Sharp.Core.Utf8Marshaler::Utf8FromBuffer(uint8[])
      IL_0045:  dup
      IL_0046:  brtrue.s   IL_004e

      IL_0048:  pop
      IL_0049:  ldsfld     string [mscorlib]System.String::Empty
      IL_004e:  stloc.3
      IL_004f:  leave.s    IL_005d

    }  // end .try
    finally
    {
      IL_0051:  ldloc.s    V_4
      IL_0053:  brfalse.s  IL_005c

      IL_0055:  ldloc.s    V_4
      IL_0057:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_005c:  endfinally
    }  // end handler
    IL_005d:  ldloc.3
    IL_005e:  ret
  } // end of method Proxy::git_message_prettify

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_note_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                          class LibGit2Sharp.Signature author,
                          class LibGit2Sharp.Signature committer,
                          string notes_ref,
                          class LibGit2Sharp.ObjectId targetId,
                          string note,
                          bool force) cil managed
  {
    // Code size       111 (0x6f)
    .maxstack  9
    .locals init (class LibGit2Sharp.Core.Handles.SignatureSafeHandle V_0,
             class LibGit2Sharp.Core.Handles.SignatureSafeHandle V_1,
             valuetype LibGit2Sharp.Core.GitOid V_2,
             valuetype LibGit2Sharp.Core.GitOid V_3,
             int32 V_4,
             class LibGit2Sharp.ObjectId V_5,
             class [mscorlib]System.IDisposable V_6)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_6
    .try
    {
      IL_000c:  ldarg.1
      IL_000d:  callvirt   instance class LibGit2Sharp.Core.Handles.SignatureSafeHandle LibGit2Sharp.Signature::BuildHandle()
      IL_0012:  stloc.0
      .try
      {
        IL_0013:  ldarg.2
        IL_0014:  callvirt   instance class LibGit2Sharp.Core.Handles.SignatureSafeHandle LibGit2Sharp.Signature::BuildHandle()
        IL_0019:  stloc.1
        .try
        {
          IL_001a:  ldarg.s    targetId
          IL_001c:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
          IL_0021:  stloc.3
          IL_0022:  ldloca.s   V_2
          IL_0024:  ldarg.0
          IL_0025:  ldloc.0
          IL_0026:  ldloc.1
          IL_0027:  ldarg.3
          IL_0028:  ldloca.s   V_3
          IL_002a:  ldarg.s    note
          IL_002c:  ldarg.s    force
          IL_002e:  brtrue.s   IL_0033

          IL_0030:  ldc.i4.0
          IL_0031:  br.s       IL_0034

          IL_0033:  ldc.i4.1
          IL_0034:  call       int32 LibGit2Sharp.Core.NativeMethods::git_note_create(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                      class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                      class LibGit2Sharp.Core.Handles.SignatureSafeHandle,
                                                                                      class LibGit2Sharp.Core.Handles.SignatureSafeHandle,
                                                                                      string,
                                                                                      valuetype LibGit2Sharp.Core.GitOid&,
                                                                                      string,
                                                                                      int32)
          IL_0039:  stloc.s    V_4
          IL_003b:  ldloc.s    V_4
          IL_003d:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
          IL_0042:  ldloc.2
          IL_0043:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
          IL_0048:  stloc.s    V_5
          IL_004a:  leave.s    IL_006c

        }  // end .try
        finally
        {
          IL_004c:  ldloc.1
          IL_004d:  brfalse.s  IL_0055

          IL_004f:  ldloc.1
          IL_0050:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          IL_0055:  endfinally
        }  // end handler
      }  // end .try
      finally
      {
        IL_0056:  ldloc.0
        IL_0057:  brfalse.s  IL_005f

        IL_0059:  ldloc.0
        IL_005a:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_005f:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_0060:  ldloc.s    V_6
      IL_0062:  brfalse.s  IL_006b

      IL_0064:  ldloc.s    V_6
      IL_0066:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_006b:  endfinally
    }  // end handler
    IL_006c:  ldloc.s    V_5
    IL_006e:  ret
  } // end of method Proxy::git_note_create

  .method public hidebysig static string 
          git_note_default_ref(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  2
    .locals init (string V_0,
             int32 V_1,
             string V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_note_default_ref(string&,
                                                                                       class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  ldloc.0
      IL_001b:  stloc.2
      IL_001c:  leave.s    IL_0028

    }  // end .try
    finally
    {
      IL_001e:  ldloc.3
      IL_001f:  brfalse.s  IL_0027

      IL_0021:  ldloc.3
      IL_0022:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0027:  endfinally
    }  // end handler
    IL_0028:  ldloc.2
    IL_0029:  ret
  } // end of method Proxy::git_note_default_ref

  .method public hidebysig static class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> 
          git_note_foreach<TResult>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                    string notes_ref,
                                    class [System.Core]System.Func`3<valuetype LibGit2Sharp.Core.GitOid,valuetype LibGit2Sharp.Core.GitOid,!!TResult> resultSelector) cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClasse`1'<!!TResult> V_0)
    IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClasse`1'<!!TResult>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClasse`1'<!!TResult>::repo
    IL_000d:  ldloc.0
    IL_000e:  ldarg.1
    IL_000f:  stfld      string class LibGit2Sharp.Core.Proxy/'<>c__DisplayClasse`1'<!!TResult>::notes_ref
    IL_0014:  ldarg.2
    IL_0015:  ldloc.0
    IL_0016:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClasse`1'<!!TResult>::'<git_note_foreach>b__c'(class [System.Core]System.Func`4<valuetype LibGit2Sharp.Core.GitOid,valuetype LibGit2Sharp.Core.GitOid,native int,int32>)
    IL_001c:  newobj     instance void class [System.Core]System.Func`2<class [System.Core]System.Func`4<valuetype LibGit2Sharp.Core.GitOid,valuetype LibGit2Sharp.Core.GitOid,native int,int32>,int32>::.ctor(object,
                                                                                                                                                                                                               native int)
    IL_0021:  ldc.i4.0
    IL_0022:  newarr     LibGit2Sharp.Core.GitErrorCode
    IL_0027:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!2> LibGit2Sharp.Core.Proxy::git_foreach<valuetype LibGit2Sharp.Core.GitOid,valuetype LibGit2Sharp.Core.GitOid,!!0>(class [System.Core]System.Func`3<!!0,!!1,!!2>,
                                                                                                                                                                                                       class [System.Core]System.Func`2<class [System.Core]System.Func`4<!!0,!!1,native int,int32>,int32>,
                                                                                                                                                                                                       valuetype LibGit2Sharp.Core.GitErrorCode[])
    IL_002c:  ret
  } // end of method Proxy::git_note_foreach

  .method public hidebysig static void  git_note_free(native int note) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_note_free(native int)
    IL_0006:  ret
  } // end of method Proxy::git_note_free

  .method public hidebysig static string 
          git_note_message(class LibGit2Sharp.Core.Handles.NoteSafeHandle note) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.NativeMethods::git_note_message(class LibGit2Sharp.Core.Handles.NoteSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_note_message

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_note_oid(class LibGit2Sharp.Core.Handles.NoteSafeHandle note) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.Core.Handles.OidSafeHandle LibGit2Sharp.Core.NativeMethods::git_note_oid(class LibGit2Sharp.Core.Handles.NoteSafeHandle)
    IL_0006:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Handles.OidSafeHandle::MarshalAsObjectId()
    IL_000b:  ret
  } // end of method Proxy::git_note_oid

  .method public hidebysig static class LibGit2Sharp.Core.Handles.NoteSafeHandle 
          git_note_read(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                        string notes_ref,
                        class LibGit2Sharp.ObjectId id) cil managed
  {
    // Code size       64 (0x40)
    .maxstack  4
    .locals init (valuetype LibGit2Sharp.Core.GitOid V_0,
             class LibGit2Sharp.Core.Handles.NoteSafeHandle V_1,
             int32 V_2,
             class LibGit2Sharp.Core.Handles.NoteSafeHandle V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldarg.2
      IL_000d:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
      IL_0012:  stloc.0
      IL_0013:  ldloca.s   V_1
      IL_0015:  ldarg.0
      IL_0016:  ldarg.1
      IL_0017:  ldloca.s   V_0
      IL_0019:  call       int32 LibGit2Sharp.Core.NativeMethods::git_note_read(class LibGit2Sharp.Core.Handles.NoteSafeHandle&,
                                                                                class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                string,
                                                                                valuetype LibGit2Sharp.Core.GitOid&)
      IL_001e:  stloc.2
      IL_001f:  ldloc.2
      IL_0020:  ldc.i4.s   -3
      IL_0022:  bne.un.s   IL_0028

      IL_0024:  ldnull
      IL_0025:  stloc.3
      IL_0026:  leave.s    IL_003e

      IL_0028:  ldloc.2
      IL_0029:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_002e:  ldloc.1
      IL_002f:  stloc.3
      IL_0030:  leave.s    IL_003e

    }  // end .try
    finally
    {
      IL_0032:  ldloc.s    V_4
      IL_0034:  brfalse.s  IL_003d

      IL_0036:  ldloc.s    V_4
      IL_0038:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_003d:  endfinally
    }  // end handler
    IL_003e:  ldloc.3
    IL_003f:  ret
  } // end of method Proxy::git_note_read

  .method public hidebysig static void  git_note_remove(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                        string notes_ref,
                                                        class LibGit2Sharp.Signature author,
                                                        class LibGit2Sharp.Signature committer,
                                                        class LibGit2Sharp.ObjectId targetId) cil managed
  {
    // Code size       98 (0x62)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Handles.SignatureSafeHandle V_0,
             class LibGit2Sharp.Core.Handles.SignatureSafeHandle V_1,
             valuetype LibGit2Sharp.Core.GitOid V_2,
             int32 V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldarg.2
      IL_000d:  callvirt   instance class LibGit2Sharp.Core.Handles.SignatureSafeHandle LibGit2Sharp.Signature::BuildHandle()
      IL_0012:  stloc.0
      .try
      {
        IL_0013:  ldarg.3
        IL_0014:  callvirt   instance class LibGit2Sharp.Core.Handles.SignatureSafeHandle LibGit2Sharp.Signature::BuildHandle()
        IL_0019:  stloc.1
        .try
        {
          IL_001a:  ldarg.s    targetId
          IL_001c:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
          IL_0021:  stloc.2
          IL_0022:  ldarg.0
          IL_0023:  ldarg.1
          IL_0024:  ldloc.0
          IL_0025:  ldloc.1
          IL_0026:  ldloca.s   V_2
          IL_0028:  call       int32 LibGit2Sharp.Core.NativeMethods::git_note_remove(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                      string,
                                                                                      class LibGit2Sharp.Core.Handles.SignatureSafeHandle,
                                                                                      class LibGit2Sharp.Core.Handles.SignatureSafeHandle,
                                                                                      valuetype LibGit2Sharp.Core.GitOid&)
          IL_002d:  stloc.3
          IL_002e:  ldloc.3
          IL_002f:  ldc.i4.s   -3
          IL_0031:  bne.un.s   IL_0035

          IL_0033:  leave.s    IL_0061

          IL_0035:  ldloc.3
          IL_0036:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
          IL_003b:  leave.s    IL_0047

        }  // end .try
        finally
        {
          IL_003d:  ldloc.1
          IL_003e:  brfalse.s  IL_0046

          IL_0040:  ldloc.1
          IL_0041:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          IL_0046:  endfinally
        }  // end handler
        IL_0047:  leave.s    IL_0053

      }  // end .try
      finally
      {
        IL_0049:  ldloc.0
        IL_004a:  brfalse.s  IL_0052

        IL_004c:  ldloc.0
        IL_004d:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0052:  endfinally
      }  // end handler
      IL_0053:  leave.s    IL_0061

    }  // end .try
    finally
    {
      IL_0055:  ldloc.s    V_4
      IL_0057:  brfalse.s  IL_0060

      IL_0059:  ldloc.s    V_4
      IL_005b:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0060:  endfinally
    }  // end handler
    IL_0061:  ret
  } // end of method Proxy::git_note_remove

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_object_id(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.Core.Handles.OidSafeHandle LibGit2Sharp.Core.NativeMethods::git_object_id(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Handles.OidSafeHandle::MarshalAsObjectId()
    IL_000b:  ret
  } // end of method Proxy::git_object_id

  .method public hidebysig static void  git_object_free(native int obj) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_object_free(native int)
    IL_0006:  ret
  } // end of method Proxy::git_object_free

  .method public hidebysig static class LibGit2Sharp.Core.Handles.GitObjectSafeHandle 
          git_object_lookup(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                            class LibGit2Sharp.ObjectId id,
                            valuetype LibGit2Sharp.Core.GitObjectType 'type') cil managed
  {
    // Code size       68 (0x44)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Handles.GitObjectSafeHandle V_0,
             valuetype LibGit2Sharp.Core.GitOid V_1,
             int32 V_2,
             class LibGit2Sharp.Core.Handles.GitObjectSafeHandle V_3,
             class [mscorlib]System.IDisposable V_4,
             int32 V_5)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldarg.1
      IL_000d:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
      IL_0012:  stloc.1
      IL_0013:  ldloca.s   V_0
      IL_0015:  ldarg.0
      IL_0016:  ldloca.s   V_1
      IL_0018:  ldarg.2
      IL_0019:  call       int32 LibGit2Sharp.Core.NativeMethods::git_object_lookup(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle&,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    valuetype LibGit2Sharp.Core.GitOid&,
                                                                                    valuetype LibGit2Sharp.Core.GitObjectType)
      IL_001e:  stloc.2
      IL_001f:  ldloc.2
      IL_0020:  stloc.s    V_5
      IL_0022:  ldloc.s    V_5
      IL_0024:  ldc.i4.s   -3
      IL_0026:  bne.un.s   IL_002c

      IL_0028:  ldnull
      IL_0029:  stloc.3
      IL_002a:  leave.s    IL_0042

      IL_002c:  ldloc.2
      IL_002d:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0032:  ldloc.0
      IL_0033:  stloc.3
      IL_0034:  leave.s    IL_0042

    }  // end .try
    finally
    {
      IL_0036:  ldloc.s    V_4
      IL_0038:  brfalse.s  IL_0041

      IL_003a:  ldloc.s    V_4
      IL_003c:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0041:  endfinally
    }  // end handler
    IL_0042:  ldloc.3
    IL_0043:  ret
  } // end of method Proxy::git_object_lookup

  .method public hidebysig static class LibGit2Sharp.Core.Handles.GitObjectSafeHandle 
          git_object_peel(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                          class LibGit2Sharp.ObjectId id,
                          valuetype LibGit2Sharp.Core.GitObjectType 'type',
                          bool throwsIfCanNotPeel) cil managed
  {
    // Code size       89 (0x59)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Handles.GitObjectSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.ObjectSafeWrapper V_2,
             class LibGit2Sharp.Core.Handles.GitObjectSafeHandle V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldarg.1
      IL_000d:  ldarg.0
      IL_000e:  ldc.i4.0
      IL_000f:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    bool)
      IL_0014:  stloc.2
      .try
      {
        IL_0015:  ldloca.s   V_0
        IL_0017:  ldloc.2
        IL_0018:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
        IL_001d:  ldarg.2
        IL_001e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_object_peel(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle&,
                                                                                    class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                    valuetype LibGit2Sharp.Core.GitObjectType)
        IL_0023:  stloc.1
        IL_0024:  leave.s    IL_0030

      }  // end .try
      finally
      {
        IL_0026:  ldloc.2
        IL_0027:  brfalse.s  IL_002f

        IL_0029:  ldloc.2
        IL_002a:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_002f:  endfinally
      }  // end handler
      IL_0030:  ldarg.3
      IL_0031:  brtrue.s   IL_0041

      IL_0033:  ldloc.1
      IL_0034:  ldc.i4.s   -3
      IL_0036:  beq.s      IL_003d

      IL_0038:  ldloc.1
      IL_0039:  ldc.i4.s   -5
      IL_003b:  bne.un.s   IL_0041

      IL_003d:  ldnull
      IL_003e:  stloc.3
      IL_003f:  leave.s    IL_0057

      IL_0041:  ldloc.1
      IL_0042:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0047:  ldloc.0
      IL_0048:  stloc.3
      IL_0049:  leave.s    IL_0057

    }  // end .try
    finally
    {
      IL_004b:  ldloc.s    V_4
      IL_004d:  brfalse.s  IL_0056

      IL_004f:  ldloc.s    V_4
      IL_0051:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0056:  endfinally
    }  // end handler
    IL_0057:  ldloc.3
    IL_0058:  ret
  } // end of method Proxy::git_object_peel

  .method public hidebysig static valuetype LibGit2Sharp.Core.GitObjectType 
          git_object_type(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       valuetype LibGit2Sharp.Core.GitObjectType LibGit2Sharp.Core.NativeMethods::git_object_type(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_object_type

  .method public hidebysig static void  git_odb_add_backend(class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle odb,
                                                            native int backend,
                                                            int32 priority) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       int32 LibGit2Sharp.Core.NativeMethods::git_odb_add_backend(class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle,
                                                                                    native int,
                                                                                    int32)
    IL_0008:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
    IL_000d:  ret
  } // end of method Proxy::git_odb_add_backend

  .method public hidebysig static native int 
          git_odb_backend_malloc(native int backend,
                                 native uint len) cil managed
  {
    // Code size       63 (0x3f)
    .maxstack  5
    .locals init (native int V_0,
             object[] V_1)
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       native int LibGit2Sharp.Core.NativeMethods::git_odb_backend_malloc(native int,
                                                                                            native uint)
    IL_0007:  stloc.0
    IL_0008:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_000d:  ldloc.0
    IL_000e:  call       bool [mscorlib]System.IntPtr::op_Equality(native int,
                                                                   native int)
    IL_0013:  brfalse.s  IL_003d

    IL_0015:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_001a:  ldstr      "Unable to allocate {0} bytes; out of memory"
    IL_001f:  ldc.i4.1
    IL_0020:  newarr     [mscorlib]System.Object
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  ldc.i4.0
    IL_0028:  ldarg.1
    IL_0029:  box        [mscorlib]System.UIntPtr
    IL_002e:  stelem.ref
    IL_002f:  ldloc.1
    IL_0030:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0035:  ldc.i4.m1
    IL_0036:  ldc.i4.0
    IL_0037:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_003c:  throw

    IL_003d:  ldloc.0
    IL_003e:  ret
  } // end of method Proxy::git_odb_backend_malloc

  .method public hidebysig static bool  git_odb_exists(class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle odb,
                                                       class LibGit2Sharp.ObjectId id) cil managed
  {
    // Code size       27 (0x1b)
    .maxstack  2
    .locals init (valuetype LibGit2Sharp.Core.GitOid V_0,
             int32 V_1)
    IL_0000:  ldarg.1
    IL_0001:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
    IL_0006:  stloc.0
    IL_0007:  ldarg.0
    IL_0008:  ldloca.s   V_0
    IL_000a:  call       int32 LibGit2Sharp.Core.NativeMethods::git_odb_exists(class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle,
                                                                               valuetype LibGit2Sharp.Core.GitOid&)
    IL_000f:  stloc.1
    IL_0010:  ldloc.1
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::BooleanResult(int32)
    IL_0016:  ldloc.1
    IL_0017:  ldc.i4.1
    IL_0018:  ceq
    IL_001a:  ret
  } // end of method Proxy::git_odb_exists

  .method public hidebysig static void  git_odb_free(native int odb) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_odb_free(native int)
    IL_0006:  ret
  } // end of method Proxy::git_odb_free

  .method public hidebysig static void  git_push_add_refspec(class LibGit2Sharp.Core.Handles.PushSafeHandle push,
                                                             string pushRefSpec) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  2
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  call       int32 LibGit2Sharp.Core.NativeMethods::git_push_add_refspec(class LibGit2Sharp.Core.Handles.PushSafeHandle,
                                                                                       string)
      IL_0012:  stloc.0
      IL_0013:  ldloc.0
      IL_0014:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0019:  leave.s    IL_0025

    }  // end .try
    finally
    {
      IL_001b:  ldloc.1
      IL_001c:  brfalse.s  IL_0024

      IL_001e:  ldloc.1
      IL_001f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0024:  endfinally
    }  // end handler
    IL_0025:  ret
  } // end of method Proxy::git_push_add_refspec

  .method public hidebysig static void  git_push_finish(class LibGit2Sharp.Core.Handles.PushSafeHandle push) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  1
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  call       int32 LibGit2Sharp.Core.NativeMethods::git_push_finish(class LibGit2Sharp.Core.Handles.PushSafeHandle)
      IL_0011:  stloc.0
      IL_0012:  ldloc.0
      IL_0013:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0018:  leave.s    IL_0024

    }  // end .try
    finally
    {
      IL_001a:  ldloc.1
      IL_001b:  brfalse.s  IL_0023

      IL_001d:  ldloc.1
      IL_001e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0023:  endfinally
    }  // end handler
    IL_0024:  ret
  } // end of method Proxy::git_push_finish

  .method public hidebysig static void  git_push_free(native int push) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_push_free(native int)
    IL_0006:  ret
  } // end of method Proxy::git_push_free

  .method public hidebysig static class LibGit2Sharp.Core.Handles.PushSafeHandle 
          git_push_new(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote) cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.Handles.PushSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.PushSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_push_new(class LibGit2Sharp.Core.Handles.PushSafeHandle&,
                                                                               class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  ldloc.0
      IL_001b:  stloc.2
      IL_001c:  leave.s    IL_0028

    }  // end .try
    finally
    {
      IL_001e:  ldloc.3
      IL_001f:  brfalse.s  IL_0027

      IL_0021:  ldloc.3
      IL_0022:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0027:  endfinally
    }  // end handler
    IL_0028:  ldloc.2
    IL_0029:  ret
  } // end of method Proxy::git_push_new

  .method public hidebysig static void  git_push_status_foreach(class LibGit2Sharp.Core.Handles.PushSafeHandle push,
                                                                class LibGit2Sharp.Core.NativeMethods/push_status_foreach_cb status_cb) cil managed
  {
    // Code size       43 (0x2b)
    .maxstack  3
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_0012:  call       int32 LibGit2Sharp.Core.NativeMethods::git_push_status_foreach(class LibGit2Sharp.Core.Handles.PushSafeHandle,
                                                                                          class LibGit2Sharp.Core.NativeMethods/push_status_foreach_cb,
                                                                                          native int)
      IL_0017:  stloc.0
      IL_0018:  ldloc.0
      IL_0019:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001e:  leave.s    IL_002a

    }  // end .try
    finally
    {
      IL_0020:  ldloc.1
      IL_0021:  brfalse.s  IL_0029

      IL_0023:  ldloc.1
      IL_0024:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0029:  endfinally
    }  // end handler
    IL_002a:  ret
  } // end of method Proxy::git_push_status_foreach

  .method public hidebysig static bool  git_push_unpack_ok(class LibGit2Sharp.Core.Handles.PushSafeHandle push) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       int32 LibGit2Sharp.Core.NativeMethods::git_push_unpack_ok(class LibGit2Sharp.Core.Handles.PushSafeHandle)
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldc.i4.1
    IL_0009:  ceq
    IL_000b:  ret
  } // end of method Proxy::git_push_unpack_ok

  .method public hidebysig static void  git_push_update_tips(class LibGit2Sharp.Core.Handles.PushSafeHandle push) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  1
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  call       int32 LibGit2Sharp.Core.NativeMethods::git_push_update_tips(class LibGit2Sharp.Core.Handles.PushSafeHandle)
      IL_0011:  stloc.0
      IL_0012:  ldloc.0
      IL_0013:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0018:  leave.s    IL_0024

    }  // end .try
    finally
    {
      IL_001a:  ldloc.1
      IL_001b:  brfalse.s  IL_0023

      IL_001d:  ldloc.1
      IL_001e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0023:  endfinally
    }  // end handler
    IL_0024:  ret
  } // end of method Proxy::git_push_update_tips

  .method public hidebysig static class LibGit2Sharp.Core.Handles.ReferenceSafeHandle 
          git_reference_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                               string name,
                               class LibGit2Sharp.ObjectId targetId,
                               bool allowOverwrite) cil managed
  {
    // Code size       56 (0x38)
    .maxstack  5
    .locals init (valuetype LibGit2Sharp.Core.GitOid V_0,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_1,
             int32 V_2,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldarg.2
      IL_000d:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
      IL_0012:  stloc.0
      IL_0013:  ldloca.s   V_1
      IL_0015:  ldarg.0
      IL_0016:  ldarg.1
      IL_0017:  ldloca.s   V_0
      IL_0019:  ldarg.3
      IL_001a:  call       int32 LibGit2Sharp.Core.NativeMethods::git_reference_create(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle&,
                                                                                       class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                       string,
                                                                                       valuetype LibGit2Sharp.Core.GitOid&,
                                                                                       bool)
      IL_001f:  stloc.2
      IL_0020:  ldloc.2
      IL_0021:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0026:  ldloc.1
      IL_0027:  stloc.3
      IL_0028:  leave.s    IL_0036

    }  // end .try
    finally
    {
      IL_002a:  ldloc.s    V_4
      IL_002c:  brfalse.s  IL_0035

      IL_002e:  ldloc.s    V_4
      IL_0030:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0035:  endfinally
    }  // end handler
    IL_0036:  ldloc.3
    IL_0037:  ret
  } // end of method Proxy::git_reference_create

  .method public hidebysig static class LibGit2Sharp.Core.Handles.ReferenceSafeHandle 
          git_reference_symbolic_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                        string name,
                                        string target,
                                        bool allowOverwrite) cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  ldarg.2
      IL_0010:  ldarg.3
      IL_0011:  call       int32 LibGit2Sharp.Core.NativeMethods::git_reference_symbolic_create(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle&,
                                                                                                class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                string,
                                                                                                string,
                                                                                                bool)
      IL_0016:  stloc.1
      IL_0017:  ldloc.1
      IL_0018:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001d:  ldloc.0
      IL_001e:  stloc.2
      IL_001f:  leave.s    IL_002b

    }  // end .try
    finally
    {
      IL_0021:  ldloc.3
      IL_0022:  brfalse.s  IL_002a

      IL_0024:  ldloc.3
      IL_0025:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002a:  endfinally
    }  // end handler
    IL_002b:  ldloc.2
    IL_002c:  ret
  } // end of method Proxy::git_reference_symbolic_create

  .method public hidebysig static void  git_reference_delete(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  1
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  call       int32 LibGit2Sharp.Core.NativeMethods::git_reference_delete(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
      IL_0011:  stloc.0
      IL_0012:  ldloc.0
      IL_0013:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0018:  leave.s    IL_0024

    }  // end .try
    finally
    {
      IL_001a:  ldloc.1
      IL_001b:  brfalse.s  IL_0023

      IL_001d:  ldloc.1
      IL_001e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0023:  endfinally
    }  // end handler
    IL_0024:  ret
  } // end of method Proxy::git_reference_delete

  .method public hidebysig static class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> 
          git_reference_foreach_glob<TResult>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                              string glob,
                                              class [System.Core]System.Func`2<native int,!!TResult> resultSelector) cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass14`1'<!!TResult> V_0)
    IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass14`1'<!!TResult>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass14`1'<!!TResult>::repo
    IL_000d:  ldloc.0
    IL_000e:  ldarg.1
    IL_000f:  stfld      string class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass14`1'<!!TResult>::glob
    IL_0014:  ldarg.2
    IL_0015:  ldloc.0
    IL_0016:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass14`1'<!!TResult>::'<git_reference_foreach_glob>b__12'(class [System.Core]System.Func`3<native int,native int,int32>)
    IL_001c:  newobj     instance void class [System.Core]System.Func`2<class [System.Core]System.Func`3<native int,native int,int32>,int32>::.ctor(object,
                                                                                                                                                    native int)
    IL_0021:  ldc.i4.0
    IL_0022:  newarr     LibGit2Sharp.Core.GitErrorCode
    IL_0027:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!1> LibGit2Sharp.Core.Proxy::git_foreach<native int,!!0>(class [System.Core]System.Func`2<!!0,!!1>,
                                                                                                                                            class [System.Core]System.Func`2<class [System.Core]System.Func`3<!!0,native int,int32>,int32>,
                                                                                                                                            valuetype LibGit2Sharp.Core.GitErrorCode[])
    IL_002c:  ret
  } // end of method Proxy::git_reference_foreach_glob

  .method public hidebysig static void  git_reference_free(native int reference) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_reference_free(native int)
    IL_0006:  ret
  } // end of method Proxy::git_reference_free

  .method public hidebysig static bool  git_reference_is_valid_name(string refname) cil managed
  {
    // Code size       18 (0x12)
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       int32 LibGit2Sharp.Core.NativeMethods::git_reference_is_valid_name(string)
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  call       void LibGit2Sharp.Core.Ensure::BooleanResult(int32)
    IL_000d:  ldloc.0
    IL_000e:  ldc.i4.1
    IL_000f:  ceq
    IL_0011:  ret
  } // end of method Proxy::git_reference_is_valid_name

  .method public hidebysig static class [mscorlib]System.Collections.Generic.IList`1<string> 
          git_reference_list(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       47 (0x2f)
    .maxstack  2
    .locals init (valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray V_0,
             int32 V_1,
             class [mscorlib]System.Collections.Generic.IList`1<string> V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.UnSafeNativeMethods::git_reference_list(valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray&,
                                                                                           class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  ldloc.0
      IL_001b:  call       class [mscorlib]System.Collections.Generic.IList`1<string> LibGit2Sharp.Core.Proxy/Libgit2UnsafeHelper::BuildListOf(valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray)
      IL_0020:  stloc.2
      IL_0021:  leave.s    IL_002d

    }  // end .try
    finally
    {
      IL_0023:  ldloc.3
      IL_0024:  brfalse.s  IL_002c

      IL_0026:  ldloc.3
      IL_0027:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002c:  endfinally
    }  // end handler
    IL_002d:  ldloc.2
    IL_002e:  ret
  } // end of method Proxy::git_reference_list

  .method public hidebysig static class LibGit2Sharp.Core.Handles.ReferenceSafeHandle 
          git_reference_lookup(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                               string name,
                               bool shouldThrowIfNotFound) cil managed
  {
    // Code size       55 (0x37)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  call       int32 LibGit2Sharp.Core.NativeMethods::git_reference_lookup(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle&,
                                                                                       class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                       string)
      IL_0014:  stloc.1
      IL_0015:  ldarg.2
      IL_0016:  brtrue.s   IL_0021

      IL_0018:  ldloc.1
      IL_0019:  ldc.i4.s   -3
      IL_001b:  bne.un.s   IL_0021

      IL_001d:  ldnull
      IL_001e:  stloc.2
      IL_001f:  leave.s    IL_0035

      IL_0021:  ldloc.1
      IL_0022:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0027:  ldloc.0
      IL_0028:  stloc.2
      IL_0029:  leave.s    IL_0035

    }  // end .try
    finally
    {
      IL_002b:  ldloc.3
      IL_002c:  brfalse.s  IL_0034

      IL_002e:  ldloc.3
      IL_002f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0034:  endfinally
    }  // end handler
    IL_0035:  ldloc.2
    IL_0036:  ret
  } // end of method Proxy::git_reference_lookup

  .method public hidebysig static string 
          git_reference_name(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.NativeMethods::git_reference_name(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_reference_name

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_reference_target(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.Core.Handles.OidSafeHandle LibGit2Sharp.Core.NativeMethods::git_reference_target(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
    IL_0006:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Handles.OidSafeHandle::MarshalAsObjectId()
    IL_000b:  ret
  } // end of method Proxy::git_reference_target

  .method public hidebysig static class LibGit2Sharp.Core.Handles.ReferenceSafeHandle 
          git_reference_rename(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference,
                               string newName,
                               bool allowOverwrite) cil managed
  {
    // Code size       44 (0x2c)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  ldarg.2
      IL_0010:  call       int32 LibGit2Sharp.Core.NativeMethods::git_reference_rename(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle&,
                                                                                       class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                       string,
                                                                                       bool)
      IL_0015:  stloc.1
      IL_0016:  ldloc.1
      IL_0017:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001c:  ldloc.0
      IL_001d:  stloc.2
      IL_001e:  leave.s    IL_002a

    }  // end .try
    finally
    {
      IL_0020:  ldloc.3
      IL_0021:  brfalse.s  IL_0029

      IL_0023:  ldloc.3
      IL_0024:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0029:  endfinally
    }  // end handler
    IL_002a:  ldloc.2
    IL_002b:  ret
  } // end of method Proxy::git_reference_rename

  .method public hidebysig static class LibGit2Sharp.Core.Handles.ReferenceSafeHandle 
          git_reference_resolve(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed
  {
    // Code size       51 (0x33)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_reference_resolve(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle&,
                                                                                        class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  ldc.i4.s   -3
      IL_0017:  bne.un.s   IL_001d

      IL_0019:  ldnull
      IL_001a:  stloc.2
      IL_001b:  leave.s    IL_0031

      IL_001d:  ldloc.1
      IL_001e:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0023:  ldloc.0
      IL_0024:  stloc.2
      IL_0025:  leave.s    IL_0031

    }  // end .try
    finally
    {
      IL_0027:  ldloc.3
      IL_0028:  brfalse.s  IL_0030

      IL_002a:  ldloc.3
      IL_002b:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0030:  endfinally
    }  // end handler
    IL_0031:  ldloc.2
    IL_0032:  ret
  } // end of method Proxy::git_reference_resolve

  .method public hidebysig static class LibGit2Sharp.Core.Handles.ReferenceSafeHandle 
          git_reference_set_target(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference,
                                   class LibGit2Sharp.ObjectId id) cil managed
  {
    // Code size       54 (0x36)
    .maxstack  3
    .locals init (valuetype LibGit2Sharp.Core.GitOid V_0,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_1,
             int32 V_2,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldarg.1
      IL_000d:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
      IL_0012:  stloc.0
      IL_0013:  ldloca.s   V_1
      IL_0015:  ldarg.0
      IL_0016:  ldloca.s   V_0
      IL_0018:  call       int32 LibGit2Sharp.Core.NativeMethods::git_reference_set_target(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle&,
                                                                                           class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                           valuetype LibGit2Sharp.Core.GitOid&)
      IL_001d:  stloc.2
      IL_001e:  ldloc.2
      IL_001f:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0024:  ldloc.1
      IL_0025:  stloc.3
      IL_0026:  leave.s    IL_0034

    }  // end .try
    finally
    {
      IL_0028:  ldloc.s    V_4
      IL_002a:  brfalse.s  IL_0033

      IL_002c:  ldloc.s    V_4
      IL_002e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0033:  endfinally
    }  // end handler
    IL_0034:  ldloc.3
    IL_0035:  ret
  } // end of method Proxy::git_reference_set_target

  .method public hidebysig static class LibGit2Sharp.Core.Handles.ReferenceSafeHandle 
          git_reference_symbolic_set_target(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference,
                                            string target) cil managed
  {
    // Code size       43 (0x2b)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  call       int32 LibGit2Sharp.Core.NativeMethods::git_reference_symbolic_set_target(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle&,
                                                                                                    class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                                    string)
      IL_0014:  stloc.1
      IL_0015:  ldloc.1
      IL_0016:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001b:  ldloc.0
      IL_001c:  stloc.2
      IL_001d:  leave.s    IL_0029

    }  // end .try
    finally
    {
      IL_001f:  ldloc.3
      IL_0020:  brfalse.s  IL_0028

      IL_0022:  ldloc.3
      IL_0023:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0028:  endfinally
    }  // end handler
    IL_0029:  ldloc.2
    IL_002a:  ret
  } // end of method Proxy::git_reference_symbolic_set_target

  .method public hidebysig static string 
          git_reference_symbolic_target(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.NativeMethods::git_reference_symbolic_target(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_reference_symbolic_target

  .method public hidebysig static valuetype LibGit2Sharp.Core.GitReferenceType 
          git_reference_type(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       valuetype LibGit2Sharp.Core.GitReferenceType LibGit2Sharp.Core.NativeMethods::git_reference_type(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_reference_type

  .method public hidebysig static void  git_reflog_free(native int reflog) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_reflog_free(native int)
    IL_0006:  ret
  } // end of method Proxy::git_reflog_free

  .method public hidebysig static class LibGit2Sharp.Core.Handles.ReflogSafeHandle 
          git_reflog_read(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.Handles.ReflogSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.ReflogSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_reflog_read(class LibGit2Sharp.Core.Handles.ReflogSafeHandle&,
                                                                                  class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  ldloc.0
      IL_001b:  stloc.2
      IL_001c:  leave.s    IL_0028

    }  // end .try
    finally
    {
      IL_001e:  ldloc.3
      IL_001f:  brfalse.s  IL_0027

      IL_0021:  ldloc.3
      IL_0022:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0027:  endfinally
    }  // end handler
    IL_0028:  ldloc.2
    IL_0029:  ret
  } // end of method Proxy::git_reflog_read

  .method public hidebysig static int32  git_reflog_entrycount(class LibGit2Sharp.Core.Handles.ReflogSafeHandle reflog) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       native uint LibGit2Sharp.Core.NativeMethods::git_reflog_entrycount(class LibGit2Sharp.Core.Handles.ReflogSafeHandle)
    IL_0006:  call       uint32 [mscorlib]System.UIntPtr::op_Explicit(native uint)
    IL_000b:  ret
  } // end of method Proxy::git_reflog_entrycount

  .method public hidebysig static class LibGit2Sharp.Core.Handles.ReflogEntrySafeHandle 
          git_reflog_entry_byindex(class LibGit2Sharp.Core.Handles.ReflogSafeHandle reflog,
                                   int32 idx) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  conv.i8
    IL_0003:  call       native uint [mscorlib]System.UIntPtr::op_Explicit(uint64)
    IL_0008:  call       class LibGit2Sharp.Core.Handles.ReflogEntrySafeHandle LibGit2Sharp.Core.NativeMethods::git_reflog_entry_byindex(class LibGit2Sharp.Core.Handles.ReflogSafeHandle,
                                                                                                                                         native uint)
    IL_000d:  ret
  } // end of method Proxy::git_reflog_entry_byindex

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_reflog_entry_id_old(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.Core.Handles.OidSafeHandle LibGit2Sharp.Core.NativeMethods::git_reflog_entry_id_old(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_0006:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Handles.OidSafeHandle::MarshalAsObjectId()
    IL_000b:  ret
  } // end of method Proxy::git_reflog_entry_id_old

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_reflog_entry_id_new(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.Core.Handles.OidSafeHandle LibGit2Sharp.Core.NativeMethods::git_reflog_entry_id_new(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_0006:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Handles.OidSafeHandle::MarshalAsObjectId()
    IL_000b:  ret
  } // end of method Proxy::git_reflog_entry_id_new

  .method public hidebysig static class LibGit2Sharp.Signature 
          git_reflog_entry_committer(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       native int LibGit2Sharp.Core.NativeMethods::git_reflog_entry_committer(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_0006:  newobj     instance void LibGit2Sharp.Signature::.ctor(native int)
    IL_000b:  ret
  } // end of method Proxy::git_reflog_entry_committer

  .method public hidebysig static string 
          git_reflog_entry_message(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.NativeMethods::git_reflog_entry_message(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_reflog_entry_message

  .method public hidebysig static void  git_reflog_append(class LibGit2Sharp.Core.Handles.ReflogSafeHandle reflog,
                                                          class LibGit2Sharp.ObjectId commit_id,
                                                          class LibGit2Sharp.Signature committer,
                                                          string message) cil managed
  {
    // Code size       80 (0x50)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Handles.SignatureSafeHandle V_0,
             valuetype LibGit2Sharp.Core.GitOid V_1,
             int32 V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldarg.2
      IL_000c:  callvirt   instance class LibGit2Sharp.Core.Handles.SignatureSafeHandle LibGit2Sharp.Signature::BuildHandle()
      IL_0011:  stloc.0
      .try
      {
        IL_0012:  ldarg.1
        IL_0013:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
        IL_0018:  stloc.1
        IL_0019:  ldarg.0
        IL_001a:  ldloca.s   V_1
        IL_001c:  ldloc.0
        IL_001d:  ldarg.3
        IL_001e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_reflog_append(class LibGit2Sharp.Core.Handles.ReflogSafeHandle,
                                                                                      valuetype LibGit2Sharp.Core.GitOid&,
                                                                                      class LibGit2Sharp.Core.Handles.SignatureSafeHandle,
                                                                                      string)
        IL_0023:  stloc.2
        IL_0024:  ldloc.2
        IL_0025:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
        IL_002a:  ldarg.0
        IL_002b:  call       int32 LibGit2Sharp.Core.NativeMethods::git_reflog_write(class LibGit2Sharp.Core.Handles.ReflogSafeHandle)
        IL_0030:  stloc.2
        IL_0031:  ldloc.2
        IL_0032:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
        IL_0037:  leave.s    IL_0043

      }  // end .try
      finally
      {
        IL_0039:  ldloc.0
        IL_003a:  brfalse.s  IL_0042

        IL_003c:  ldloc.0
        IL_003d:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0042:  endfinally
      }  // end handler
      IL_0043:  leave.s    IL_004f

    }  // end .try
    finally
    {
      IL_0045:  ldloc.3
      IL_0046:  brfalse.s  IL_004e

      IL_0048:  ldloc.3
      IL_0049:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_004e:  endfinally
    }  // end handler
    IL_004f:  ret
  } // end of method Proxy::git_reflog_append

  .method public hidebysig static string 
          git_refspec_rtransform(class LibGit2Sharp.Core.Handles.GitRefSpecHandle refSpecPtr,
                                 string name) cil managed
  {
    // Code size       76 (0x4c)
    .maxstack  4
    .locals init (uint8[] V_0,
             int32 V_1,
             string V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldc.i4     0x400
      IL_0010:  newarr     [mscorlib]System.Byte
      IL_0015:  stloc.0
      IL_0016:  ldloc.0
      IL_0017:  ldloc.0
      IL_0018:  ldlen
      IL_0019:  conv.i4
      IL_001a:  conv.i8
      IL_001b:  call       native uint [mscorlib]System.UIntPtr::op_Explicit(uint64)
      IL_0020:  ldarg.0
      IL_0021:  ldarg.1
      IL_0022:  call       int32 LibGit2Sharp.Core.NativeMethods::git_refspec_rtransform(uint8[],
                                                                                         native uint,
                                                                                         class LibGit2Sharp.Core.Handles.GitRefSpecHandle,
                                                                                         string)
      IL_0027:  stloc.1
      IL_0028:  ldloc.1
      IL_0029:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_002e:  ldloc.0
      IL_002f:  call       string LibGit2Sharp.Core.Utf8Marshaler::Utf8FromBuffer(uint8[])
      IL_0034:  dup
      IL_0035:  brtrue.s   IL_003d

      IL_0037:  pop
      IL_0038:  ldsfld     string [mscorlib]System.String::Empty
      IL_003d:  stloc.2
      IL_003e:  leave.s    IL_004a

    }  // end .try
    finally
    {
      IL_0040:  ldloc.3
      IL_0041:  brfalse.s  IL_0049

      IL_0043:  ldloc.3
      IL_0044:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0049:  endfinally
    }  // end handler
    IL_004a:  ldloc.2
    IL_004b:  ret
  } // end of method Proxy::git_refspec_rtransform

  .method public hidebysig static valuetype LibGit2Sharp.TagFetchMode 
          git_remote_autotag(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       int32 LibGit2Sharp.Core.NativeMethods::git_remote_autotag(class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_remote_autotag

  .method public hidebysig static class LibGit2Sharp.Core.Handles.RemoteSafeHandle 
          git_remote_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                            string name,
                            string url) cil managed
  {
    // Code size       44 (0x2c)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Handles.RemoteSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.RemoteSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  ldarg.2
      IL_0010:  call       int32 LibGit2Sharp.Core.NativeMethods::git_remote_create(class LibGit2Sharp.Core.Handles.RemoteSafeHandle&,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    string,
                                                                                    string)
      IL_0015:  stloc.1
      IL_0016:  ldloc.1
      IL_0017:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001c:  ldloc.0
      IL_001d:  stloc.2
      IL_001e:  leave.s    IL_002a

    }  // end .try
    finally
    {
      IL_0020:  ldloc.3
      IL_0021:  brfalse.s  IL_0029

      IL_0023:  ldloc.3
      IL_0024:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0029:  endfinally
    }  // end handler
    IL_002a:  ldloc.2
    IL_002b:  ret
  } // end of method Proxy::git_remote_create

  .method public hidebysig static void  git_remote_connect(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                                                           valuetype LibGit2Sharp.Core.GitDirection direction) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  2
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  call       int32 LibGit2Sharp.Core.NativeMethods::git_remote_connect(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                     valuetype LibGit2Sharp.Core.GitDirection)
      IL_0012:  stloc.0
      IL_0013:  ldloc.0
      IL_0014:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0019:  leave.s    IL_0025

    }  // end .try
    finally
    {
      IL_001b:  ldloc.1
      IL_001c:  brfalse.s  IL_0024

      IL_001e:  ldloc.1
      IL_001f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0024:  endfinally
    }  // end handler
    IL_0025:  ret
  } // end of method Proxy::git_remote_connect

  .method public hidebysig static void  git_remote_disconnect(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote) cil managed
  {
    // Code size       30 (0x1e)
    .maxstack  1
    .locals init (class [mscorlib]System.IDisposable V_0)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.0
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  call       void LibGit2Sharp.Core.NativeMethods::git_remote_disconnect(class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
      IL_0011:  leave.s    IL_001d

    }  // end .try
    finally
    {
      IL_0013:  ldloc.0
      IL_0014:  brfalse.s  IL_001c

      IL_0016:  ldloc.0
      IL_0017:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_001c:  endfinally
    }  // end handler
    IL_001d:  ret
  } // end of method Proxy::git_remote_disconnect

  .method public hidebysig static class LibGit2Sharp.Core.Handles.GitRefSpecHandle 
          git_remote_get_refspec(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                                 int32 n) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  conv.i8
    IL_0003:  call       native uint [mscorlib]System.UIntPtr::op_Explicit(uint64)
    IL_0008:  call       class LibGit2Sharp.Core.Handles.GitRefSpecHandle LibGit2Sharp.Core.NativeMethods::git_remote_get_refspec(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                                                                  native uint)
    IL_000d:  ret
  } // end of method Proxy::git_remote_get_refspec

  .method public hidebysig static void  git_remote_download(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                                                            class LibGit2Sharp.Handlers.TransferProgressHandler onTransferProgress) cil managed
  {
    // Code size       50 (0x32)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.NativeMethods/git_transfer_progress_callback V_0,
             int32 V_1,
             class [mscorlib]System.IDisposable V_2)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.2
    .try
    {
      IL_000b:  ldarg.1
      IL_000c:  call       class LibGit2Sharp.Core.NativeMethods/git_transfer_progress_callback LibGit2Sharp.TransferCallbacks::GenerateCallback(class LibGit2Sharp.Handlers.TransferProgressHandler)
      IL_0011:  stloc.0
      IL_0012:  ldarg.0
      IL_0013:  ldloc.0
      IL_0014:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_0019:  call       int32 LibGit2Sharp.Core.NativeMethods::git_remote_download(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                      class LibGit2Sharp.Core.NativeMethods/git_transfer_progress_callback,
                                                                                      native int)
      IL_001e:  stloc.1
      IL_001f:  ldloc.1
      IL_0020:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0025:  leave.s    IL_0031

    }  // end .try
    finally
    {
      IL_0027:  ldloc.2
      IL_0028:  brfalse.s  IL_0030

      IL_002a:  ldloc.2
      IL_002b:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0030:  endfinally
    }  // end handler
    IL_0031:  ret
  } // end of method Proxy::git_remote_download

  .method public hidebysig static void  git_remote_free(native int remote) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_remote_free(native int)
    IL_0006:  ret
  } // end of method Proxy::git_remote_free

  .method public hidebysig static bool  git_remote_is_valid_name(string refname) cil managed
  {
    // Code size       18 (0x12)
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       int32 LibGit2Sharp.Core.NativeMethods::git_remote_is_valid_name(string)
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  call       void LibGit2Sharp.Core.Ensure::BooleanResult(int32)
    IL_000d:  ldloc.0
    IL_000e:  ldc.i4.1
    IL_000f:  ceq
    IL_0011:  ret
  } // end of method Proxy::git_remote_is_valid_name

  .method public hidebysig static class [mscorlib]System.Collections.Generic.IList`1<string> 
          git_remote_list(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       47 (0x2f)
    .maxstack  2
    .locals init (valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray V_0,
             int32 V_1,
             class [mscorlib]System.Collections.Generic.IList`1<string> V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.UnSafeNativeMethods::git_remote_list(valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray&,
                                                                                        class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  ldloc.0
      IL_001b:  call       class [mscorlib]System.Collections.Generic.IList`1<string> LibGit2Sharp.Core.Proxy/Libgit2UnsafeHelper::BuildListOf(valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray)
      IL_0020:  stloc.2
      IL_0021:  leave.s    IL_002d

    }  // end .try
    finally
    {
      IL_0023:  ldloc.3
      IL_0024:  brfalse.s  IL_002c

      IL_0026:  ldloc.3
      IL_0027:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002c:  endfinally
    }  // end handler
    IL_002d:  ldloc.2
    IL_002e:  ret
  } // end of method Proxy::git_remote_list

  .method public hidebysig static void  git_remote_ls(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                                                      class LibGit2Sharp.Core.NativeMethods/git_headlist_cb headlist_cb) cil managed
  {
    // Code size       43 (0x2b)
    .maxstack  3
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_0012:  call       int32 LibGit2Sharp.Core.NativeMethods::git_remote_ls(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                class LibGit2Sharp.Core.NativeMethods/git_headlist_cb,
                                                                                native int)
      IL_0017:  stloc.0
      IL_0018:  ldloc.0
      IL_0019:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001e:  leave.s    IL_002a

    }  // end .try
    finally
    {
      IL_0020:  ldloc.1
      IL_0021:  brfalse.s  IL_0029

      IL_0023:  ldloc.1
      IL_0024:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0029:  endfinally
    }  // end handler
    IL_002a:  ret
  } // end of method Proxy::git_remote_ls

  .method public hidebysig static class LibGit2Sharp.Core.Handles.RemoteSafeHandle 
          git_remote_load(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                          string name,
                          bool throwsIfNotFound) cil managed
  {
    // Code size       55 (0x37)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.RemoteSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.RemoteSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  call       int32 LibGit2Sharp.Core.NativeMethods::git_remote_load(class LibGit2Sharp.Core.Handles.RemoteSafeHandle&,
                                                                                  class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                  string)
      IL_0014:  stloc.1
      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.s   -3
      IL_0018:  bne.un.s   IL_0021

      IL_001a:  ldarg.2
      IL_001b:  brtrue.s   IL_0021

      IL_001d:  ldnull
      IL_001e:  stloc.2
      IL_001f:  leave.s    IL_0035

      IL_0021:  ldloc.1
      IL_0022:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0027:  ldloc.0
      IL_0028:  stloc.2
      IL_0029:  leave.s    IL_0035

    }  // end .try
    finally
    {
      IL_002b:  ldloc.3
      IL_002c:  brfalse.s  IL_0034

      IL_002e:  ldloc.3
      IL_002f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0034:  endfinally
    }  // end handler
    IL_0035:  ldloc.2
    IL_0036:  ret
  } // end of method Proxy::git_remote_load

  .method public hidebysig static string 
          git_remote_name(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.NativeMethods::git_remote_name(class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_remote_name

  .method public hidebysig static void  git_remote_save(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  1
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  call       int32 LibGit2Sharp.Core.NativeMethods::git_remote_save(class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
      IL_0011:  stloc.0
      IL_0012:  ldloc.0
      IL_0013:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0018:  leave.s    IL_0024

    }  // end .try
    finally
    {
      IL_001a:  ldloc.1
      IL_001b:  brfalse.s  IL_0023

      IL_001d:  ldloc.1
      IL_001e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0023:  endfinally
    }  // end handler
    IL_0024:  ret
  } // end of method Proxy::git_remote_save

  .method public hidebysig static void  git_remote_set_autotag(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                                                               valuetype LibGit2Sharp.TagFetchMode 'value') cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       void LibGit2Sharp.Core.NativeMethods::git_remote_set_autotag(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                      valuetype LibGit2Sharp.TagFetchMode)
    IL_0007:  ret
  } // end of method Proxy::git_remote_set_autotag

  .method public hidebysig static void  git_remote_add_fetch(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                                                             string refspec) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  2
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  call       int32 LibGit2Sharp.Core.NativeMethods::git_remote_add_fetch(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                       string)
      IL_0012:  stloc.0
      IL_0013:  ldloc.0
      IL_0014:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0019:  leave.s    IL_0025

    }  // end .try
    finally
    {
      IL_001b:  ldloc.1
      IL_001c:  brfalse.s  IL_0024

      IL_001e:  ldloc.1
      IL_001f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0024:  endfinally
    }  // end handler
    IL_0025:  ret
  } // end of method Proxy::git_remote_add_fetch

  .method public hidebysig static void  git_remote_set_callbacks(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                                                                 valuetype LibGit2Sharp.Core.GitRemoteCallbacks& callbacks) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  2
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  call       int32 LibGit2Sharp.Core.NativeMethods::git_remote_set_callbacks(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                           valuetype LibGit2Sharp.Core.GitRemoteCallbacks&)
      IL_0012:  stloc.0
      IL_0013:  ldloc.0
      IL_0014:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0019:  leave.s    IL_0025

    }  // end .try
    finally
    {
      IL_001b:  ldloc.1
      IL_001c:  brfalse.s  IL_0024

      IL_001e:  ldloc.1
      IL_001f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0024:  endfinally
    }  // end handler
    IL_0025:  ret
  } // end of method Proxy::git_remote_set_callbacks

  .method public hidebysig static void  git_remote_set_cred_acquire_cb(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                                                                       class LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb cred_acquire_cb,
                                                                       native int payload) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       void LibGit2Sharp.Core.NativeMethods::git_remote_set_cred_acquire_cb(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                              class LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb,
                                                                                              native int)
    IL_0008:  ret
  } // end of method Proxy::git_remote_set_cred_acquire_cb

  .method public hidebysig static void  git_remote_update_tips(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  1
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  call       int32 LibGit2Sharp.Core.NativeMethods::git_remote_update_tips(class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
      IL_0011:  stloc.0
      IL_0012:  ldloc.0
      IL_0013:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0018:  leave.s    IL_0024

    }  // end .try
    finally
    {
      IL_001a:  ldloc.1
      IL_001b:  brfalse.s  IL_0023

      IL_001d:  ldloc.1
      IL_001e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0023:  endfinally
    }  // end handler
    IL_0024:  ret
  } // end of method Proxy::git_remote_update_tips

  .method public hidebysig static string 
          git_remote_url(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.NativeMethods::git_remote_url(class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_remote_url

  .method public hidebysig static class LibGit2Sharp.Core.FilePath 
          git_repository_discover(class LibGit2Sharp.Core.FilePath start_path) cil managed
  {
    // Code size       36 (0x24)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass19' V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.Core.Proxy/'<>c__DisplayClass19'::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.Proxy/'<>c__DisplayClass19'::start_path
    IL_000d:  ldloc.0
    IL_000e:  ldftn      instance int32 LibGit2Sharp.Core.Proxy/'<>c__DisplayClass19'::'<git_repository_discover>b__18'(uint8[],
                                                                                                                        native uint)
    IL_0014:  newobj     instance void class [System.Core]System.Func`3<uint8[],native uint,int32>::.ctor(object,
                                                                                                          native int)
    IL_0019:  call       string LibGit2Sharp.Core.Proxy::ConvertPath(class [System.Core]System.Func`3<uint8[],native uint,int32>)
    IL_001e:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0023:  ret
  } // end of method Proxy::git_repository_discover

  .method public hidebysig static bool  git_repository_head_detached(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  ldftn      int32 LibGit2Sharp.Core.NativeMethods::git_repository_head_detached(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0008:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.RepositorySafeHandle,int32>::.ctor(object,
                                                                                                                                           native int)
    IL_000d:  call       bool LibGit2Sharp.Core.Proxy::RepositoryStateChecker(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                              class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.RepositorySafeHandle,int32>)
    IL_0012:  ret
  } // end of method Proxy::git_repository_head_detached

  .method public hidebysig static class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> 
          git_repository_fetchhead_foreach<TResult>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                    class [System.Core]System.Func`5<string,string,valuetype LibGit2Sharp.Core.GitOid,bool,!!TResult> resultSelector) cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass1d`1'<!!TResult> V_0,
             valuetype LibGit2Sharp.Core.GitErrorCode[] V_1)
    IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass1d`1'<!!TResult>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass1d`1'<!!TResult>::repo
    IL_000d:  ldarg.1
    IL_000e:  ldloc.0
    IL_000f:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass1d`1'<!!TResult>::'<git_repository_fetchhead_foreach>b__1b'(class LibGit2Sharp.Core.Proxy/Func`6<string,string,valuetype LibGit2Sharp.Core.GitOid,bool,native int,int32>)
    IL_0015:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Proxy/Func`6<string,string,valuetype LibGit2Sharp.Core.GitOid,bool,native int,int32>,int32>::.ctor(object,
                                                                                                                                                                                                   native int)
    IL_001a:  ldc.i4.1
    IL_001b:  newarr     LibGit2Sharp.Core.GitErrorCode
    IL_0020:  stloc.1
    IL_0021:  ldloc.1
    IL_0022:  ldc.i4.0
    IL_0023:  ldc.i4.s   -3
    IL_0025:  stelem.i4
    IL_0026:  ldloc.1
    IL_0027:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!4> LibGit2Sharp.Core.Proxy::git_foreach<string,string,valuetype LibGit2Sharp.Core.GitOid,bool,!!0>(class [System.Core]System.Func`5<!!0,!!1,!!2,!!3,!!4>,
                                                                                                                                                                                       class [System.Core]System.Func`2<class LibGit2Sharp.Core.Proxy/Func`6<!!0,!!1,!!2,!!3,native int,int32>,int32>,
                                                                                                                                                                                       valuetype LibGit2Sharp.Core.GitErrorCode[])
    IL_002c:  ret
  } // end of method Proxy::git_repository_fetchhead_foreach

  .method public hidebysig static void  git_repository_free(native int repo) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_repository_free(native int)
    IL_0006:  ret
  } // end of method Proxy::git_repository_free

  .method public hidebysig static bool  git_repository_head_orphan(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  ldftn      int32 LibGit2Sharp.Core.NativeMethods::git_repository_head_orphan(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0008:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.RepositorySafeHandle,int32>::.ctor(object,
                                                                                                                                           native int)
    IL_000d:  call       bool LibGit2Sharp.Core.Proxy::RepositoryStateChecker(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                              class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.RepositorySafeHandle,int32>)
    IL_0012:  ret
  } // end of method Proxy::git_repository_head_orphan

  .method public hidebysig static class LibGit2Sharp.Core.Handles.IndexSafeHandle 
          git_repository_index(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.Handles.IndexSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.IndexSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_repository_index(class LibGit2Sharp.Core.Handles.IndexSafeHandle&,
                                                                                       class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  ldloc.0
      IL_001b:  stloc.2
      IL_001c:  leave.s    IL_0028

    }  // end .try
    finally
    {
      IL_001e:  ldloc.3
      IL_001f:  brfalse.s  IL_0027

      IL_0021:  ldloc.3
      IL_0022:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0027:  endfinally
    }  // end handler
    IL_0028:  ldloc.2
    IL_0029:  ret
  } // end of method Proxy::git_repository_index

  .method public hidebysig static class LibGit2Sharp.Core.Handles.RepositorySafeHandle 
          git_repository_init_ext(class LibGit2Sharp.Core.FilePath workdirPath,
                                  class LibGit2Sharp.Core.FilePath gitdirPath,
                                  bool isBare) cil managed
  {
    // Code size       64 (0x40)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.GitRepositoryInitOptions V_0,
             class LibGit2Sharp.Core.Handles.RepositorySafeHandle V_1,
             int32 V_2,
             class LibGit2Sharp.Core.Handles.RepositorySafeHandle V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldarg.0
      IL_000d:  ldarg.2
      IL_000e:  call       class LibGit2Sharp.Core.GitRepositoryInitOptions LibGit2Sharp.Core.GitRepositoryInitOptions::BuildFrom(class LibGit2Sharp.Core.FilePath,
                                                                                                                                  bool)
      IL_0013:  stloc.0
      .try
      {
        IL_0014:  ldloca.s   V_1
        IL_0016:  ldarg.1
        IL_0017:  ldloc.0
        IL_0018:  call       int32 LibGit2Sharp.Core.NativeMethods::git_repository_init_ext(class LibGit2Sharp.Core.Handles.RepositorySafeHandle&,
                                                                                            class LibGit2Sharp.Core.FilePath,
                                                                                            class LibGit2Sharp.Core.GitRepositoryInitOptions)
        IL_001d:  stloc.2
        IL_001e:  ldloc.2
        IL_001f:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
        IL_0024:  ldloc.1
        IL_0025:  stloc.3
        IL_0026:  leave.s    IL_003e

      }  // end .try
      finally
      {
        IL_0028:  ldloc.0
        IL_0029:  brfalse.s  IL_0031

        IL_002b:  ldloc.0
        IL_002c:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0031:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_0032:  ldloc.s    V_4
      IL_0034:  brfalse.s  IL_003d

      IL_0036:  ldloc.s    V_4
      IL_0038:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_003d:  endfinally
    }  // end handler
    IL_003e:  ldloc.3
    IL_003f:  ret
  } // end of method Proxy::git_repository_init_ext

  .method public hidebysig static bool  git_repository_is_bare(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  ldftn      int32 LibGit2Sharp.Core.NativeMethods::git_repository_is_bare(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0008:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.RepositorySafeHandle,int32>::.ctor(object,
                                                                                                                                           native int)
    IL_000d:  call       bool LibGit2Sharp.Core.Proxy::RepositoryStateChecker(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                              class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.RepositorySafeHandle,int32>)
    IL_0012:  ret
  } // end of method Proxy::git_repository_is_bare

  .method public hidebysig static bool  git_repository_is_empty(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  ldftn      int32 LibGit2Sharp.Core.NativeMethods::git_repository_is_empty(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0008:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.RepositorySafeHandle,int32>::.ctor(object,
                                                                                                                                           native int)
    IL_000d:  call       bool LibGit2Sharp.Core.Proxy::RepositoryStateChecker(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                              class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.RepositorySafeHandle,int32>)
    IL_0012:  ret
  } // end of method Proxy::git_repository_is_empty

  .method public hidebysig static bool  git_repository_is_shallow(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  ldftn      int32 LibGit2Sharp.Core.NativeMethods::git_repository_is_shallow(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0008:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.RepositorySafeHandle,int32>::.ctor(object,
                                                                                                                                           native int)
    IL_000d:  call       bool LibGit2Sharp.Core.Proxy::RepositoryStateChecker(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                              class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.RepositorySafeHandle,int32>)
    IL_0012:  ret
  } // end of method Proxy::git_repository_is_shallow

  .method public hidebysig static void  git_repository_merge_cleanup(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  1
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  call       int32 LibGit2Sharp.Core.NativeMethods::git_repository_merge_cleanup(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_0011:  stloc.0
      IL_0012:  ldloc.0
      IL_0013:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0018:  leave.s    IL_0024

    }  // end .try
    finally
    {
      IL_001a:  ldloc.1
      IL_001b:  brfalse.s  IL_0023

      IL_001d:  ldloc.1
      IL_001e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0023:  endfinally
    }  // end handler
    IL_0024:  ret
  } // end of method Proxy::git_repository_merge_cleanup

  .method public hidebysig static class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> 
          git_repository_mergehead_foreach<TResult>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                    class [System.Core]System.Func`2<valuetype LibGit2Sharp.Core.GitOid,!!TResult> resultSelector) cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass23`1'<!!TResult> V_0,
             valuetype LibGit2Sharp.Core.GitErrorCode[] V_1)
    IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass23`1'<!!TResult>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass23`1'<!!TResult>::repo
    IL_000d:  ldarg.1
    IL_000e:  ldloc.0
    IL_000f:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass23`1'<!!TResult>::'<git_repository_mergehead_foreach>b__21'(class [System.Core]System.Func`3<valuetype LibGit2Sharp.Core.GitOid,native int,int32>)
    IL_0015:  newobj     instance void class [System.Core]System.Func`2<class [System.Core]System.Func`3<valuetype LibGit2Sharp.Core.GitOid,native int,int32>,int32>::.ctor(object,
                                                                                                                                                                            native int)
    IL_001a:  ldc.i4.1
    IL_001b:  newarr     LibGit2Sharp.Core.GitErrorCode
    IL_0020:  stloc.1
    IL_0021:  ldloc.1
    IL_0022:  ldc.i4.0
    IL_0023:  ldc.i4.s   -3
    IL_0025:  stelem.i4
    IL_0026:  ldloc.1
    IL_0027:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!1> LibGit2Sharp.Core.Proxy::git_foreach<valuetype LibGit2Sharp.Core.GitOid,!!0>(class [System.Core]System.Func`2<!!0,!!1>,
                                                                                                                                                                    class [System.Core]System.Func`2<class [System.Core]System.Func`3<!!0,native int,int32>,int32>,
                                                                                                                                                                    valuetype LibGit2Sharp.Core.GitErrorCode[])
    IL_002c:  ret
  } // end of method Proxy::git_repository_mergehead_foreach

  .method public hidebysig static string 
          git_repository_message(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       101 (0x65)
    .maxstack  3
    .locals init (int32 V_0,
             uint8[] V_1,
             int32 V_2,
             string V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldnull
      IL_000d:  ldc.i4.0
      IL_000e:  call       native uint [mscorlib]System.UIntPtr::op_Explicit(uint32)
      IL_0013:  ldarg.0
      IL_0014:  call       int32 LibGit2Sharp.Core.NativeMethods::git_repository_message(uint8[],
                                                                                         native uint,
                                                                                         class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_0019:  stloc.0
      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.s   -3
      IL_001d:  bne.un.s   IL_0023

      IL_001f:  ldnull
      IL_0020:  stloc.3
      IL_0021:  leave.s    IL_0063

      IL_0023:  ldloc.0
      IL_0024:  call       void LibGit2Sharp.Core.Ensure::Int32Result(int32)
      IL_0029:  ldloc.0
      IL_002a:  newarr     [mscorlib]System.Byte
      IL_002f:  stloc.1
      IL_0030:  ldloc.1
      IL_0031:  ldloc.0
      IL_0032:  conv.i8
      IL_0033:  call       native uint [mscorlib]System.UIntPtr::op_Explicit(uint64)
      IL_0038:  ldarg.0
      IL_0039:  call       int32 LibGit2Sharp.Core.NativeMethods::git_repository_message(uint8[],
                                                                                         native uint,
                                                                                         class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_003e:  stloc.2
      IL_003f:  ldloc.2
      IL_0040:  ldloc.0
      IL_0041:  beq.s      IL_004e

      IL_0043:  ldstr      "Repository message file changed as we were reading"
      + " it"
      IL_0048:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
      IL_004d:  throw

      IL_004e:  ldloc.1
      IL_004f:  call       string LibGit2Sharp.Core.Utf8Marshaler::Utf8FromBuffer(uint8[])
      IL_0054:  stloc.3
      IL_0055:  leave.s    IL_0063

    }  // end .try
    finally
    {
      IL_0057:  ldloc.s    V_4
      IL_0059:  brfalse.s  IL_0062

      IL_005b:  ldloc.s    V_4
      IL_005d:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0062:  endfinally
    }  // end handler
    IL_0063:  ldloc.3
    IL_0064:  ret
  } // end of method Proxy::git_repository_message

  .method public hidebysig static class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle 
          git_repository_odb(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_repository_odb(class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle&,
                                                                                     class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  ldloc.0
      IL_001b:  stloc.2
      IL_001c:  leave.s    IL_0028

    }  // end .try
    finally
    {
      IL_001e:  ldloc.3
      IL_001f:  brfalse.s  IL_0027

      IL_0021:  ldloc.3
      IL_0022:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0027:  endfinally
    }  // end handler
    IL_0028:  ldloc.2
    IL_0029:  ret
  } // end of method Proxy::git_repository_odb

  .method public hidebysig static class LibGit2Sharp.Core.Handles.RepositorySafeHandle 
          git_repository_open(string path) cil managed
  {
    // Code size       88 (0x58)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Handles.RepositorySafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.RepositorySafeHandle V_2,
             class [mscorlib]System.IDisposable V_3,
             object[] V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
      IL_0013:  call       int32 LibGit2Sharp.Core.NativeMethods::git_repository_open(class LibGit2Sharp.Core.Handles.RepositorySafeHandle&,
                                                                                      class LibGit2Sharp.Core.FilePath)
      IL_0018:  stloc.1
      IL_0019:  ldloc.1
      IL_001a:  ldc.i4.s   -3
      IL_001c:  bne.un.s   IL_0042

      IL_001e:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_0023:  ldstr      "Path '{0}' doesn't point at a valid Git repository"
      + " or workdir."
      IL_0028:  ldc.i4.1
      IL_0029:  newarr     [mscorlib]System.Object
      IL_002e:  stloc.s    V_4
      IL_0030:  ldloc.s    V_4
      IL_0032:  ldc.i4.0
      IL_0033:  ldarg.0
      IL_0034:  stelem.ref
      IL_0035:  ldloc.s    V_4
      IL_0037:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                  string,
                                                                  object[])
      IL_003c:  newobj     instance void LibGit2Sharp.RepositoryNotFoundException::.ctor(string)
      IL_0041:  throw

      IL_0042:  ldloc.1
      IL_0043:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0048:  ldloc.0
      IL_0049:  stloc.2
      IL_004a:  leave.s    IL_0056

    }  // end .try
    finally
    {
      IL_004c:  ldloc.3
      IL_004d:  brfalse.s  IL_0055

      IL_004f:  ldloc.3
      IL_0050:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0055:  endfinally
    }  // end handler
    IL_0056:  ldloc.2
    IL_0057:  ret
  } // end of method Proxy::git_repository_open

  .method public hidebysig static void  git_repository_open_ext(string path,
                                                                valuetype LibGit2Sharp.Core.RepositoryOpenFlags 'flags',
                                                                string ceilingDirs) cil managed
  {
    // Code size       106 (0x6a)
    .maxstack  5
    .locals init (int32 V_0,
             class LibGit2Sharp.Core.Handles.NullRepositorySafeHandle V_1,
             class [mscorlib]System.IDisposable V_2,
             object[] V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.2
    .try
    {
      IL_000b:  newobj     instance void LibGit2Sharp.Core.Handles.NullRepositorySafeHandle::.ctor()
      IL_0010:  stloc.1
      .try
      {
        IL_0011:  ldloc.1
        IL_0012:  ldarg.0
        IL_0013:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
        IL_0018:  ldarg.1
        IL_0019:  ldarg.2
        IL_001a:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
        IL_001f:  call       int32 LibGit2Sharp.Core.NativeMethods::git_repository_open_ext(class LibGit2Sharp.Core.Handles.NullRepositorySafeHandle,
                                                                                            class LibGit2Sharp.Core.FilePath,
                                                                                            valuetype LibGit2Sharp.Core.RepositoryOpenFlags,
                                                                                            class LibGit2Sharp.Core.FilePath)
        IL_0024:  stloc.0
        IL_0025:  leave.s    IL_0031

      }  // end .try
      finally
      {
        IL_0027:  ldloc.1
        IL_0028:  brfalse.s  IL_0030

        IL_002a:  ldloc.1
        IL_002b:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0030:  endfinally
      }  // end handler
      IL_0031:  ldloc.0
      IL_0032:  ldc.i4.s   -3
      IL_0034:  bne.un.s   IL_0057

      IL_0036:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_003b:  ldstr      "Path '{0}' doesn't point at a valid Git repository"
      + " or workdir."
      IL_0040:  ldc.i4.1
      IL_0041:  newarr     [mscorlib]System.Object
      IL_0046:  stloc.3
      IL_0047:  ldloc.3
      IL_0048:  ldc.i4.0
      IL_0049:  ldarg.0
      IL_004a:  stelem.ref
      IL_004b:  ldloc.3
      IL_004c:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                  string,
                                                                  object[])
      IL_0051:  newobj     instance void LibGit2Sharp.RepositoryNotFoundException::.ctor(string)
      IL_0056:  throw

      IL_0057:  ldloc.0
      IL_0058:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_005d:  leave.s    IL_0069

    }  // end .try
    finally
    {
      IL_005f:  ldloc.2
      IL_0060:  brfalse.s  IL_0068

      IL_0062:  ldloc.2
      IL_0063:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0068:  endfinally
    }  // end handler
    IL_0069:  ret
  } // end of method Proxy::git_repository_open_ext

  .method public hidebysig static class LibGit2Sharp.Core.FilePath 
          git_repository_path(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.NativeMethods::git_repository_path(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_repository_path

  .method public hidebysig static void  git_repository_set_config(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                                  class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle config) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       void LibGit2Sharp.Core.NativeMethods::git_repository_set_config(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                         class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle)
    IL_0007:  ret
  } // end of method Proxy::git_repository_set_config

  .method public hidebysig static void  git_repository_set_index(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                                 class LibGit2Sharp.Core.Handles.IndexSafeHandle index) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       void LibGit2Sharp.Core.NativeMethods::git_repository_set_index(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                        class LibGit2Sharp.Core.Handles.IndexSafeHandle)
    IL_0007:  ret
  } // end of method Proxy::git_repository_set_index

  .method public hidebysig static void  git_repository_set_workdir(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                                   class LibGit2Sharp.Core.FilePath workdir) cil managed
  {
    // Code size       39 (0x27)
    .maxstack  3
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  ldc.i4.0
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_repository_set_workdir(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                             class LibGit2Sharp.Core.FilePath,
                                                                                             bool)
      IL_0013:  stloc.0
      IL_0014:  ldloc.0
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  leave.s    IL_0026

    }  // end .try
    finally
    {
      IL_001c:  ldloc.1
      IL_001d:  brfalse.s  IL_0025

      IL_001f:  ldloc.1
      IL_0020:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0025:  endfinally
    }  // end handler
    IL_0026:  ret
  } // end of method Proxy::git_repository_set_workdir

  .method public hidebysig static valuetype LibGit2Sharp.CurrentOperation 
          git_repository_state(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       40 (0x28)
    .maxstack  1
    .locals init (int32 V_0,
             valuetype LibGit2Sharp.CurrentOperation V_1,
             class [mscorlib]System.IDisposable V_2)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.2
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  call       int32 LibGit2Sharp.Core.NativeMethods::git_repository_state(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_0011:  stloc.0
      IL_0012:  ldloc.0
      IL_0013:  call       void LibGit2Sharp.Core.Ensure::Int32Result(int32)
      IL_0018:  ldloc.0
      IL_0019:  stloc.1
      IL_001a:  leave.s    IL_0026

    }  // end .try
    finally
    {
      IL_001c:  ldloc.2
      IL_001d:  brfalse.s  IL_0025

      IL_001f:  ldloc.2
      IL_0020:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0025:  endfinally
    }  // end handler
    IL_0026:  ldloc.1
    IL_0027:  ret
  } // end of method Proxy::git_repository_state

  .method public hidebysig static class LibGit2Sharp.Core.FilePath 
          git_repository_workdir(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.NativeMethods::git_repository_workdir(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_repository_workdir

  .method public hidebysig static void  git_reset(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                  class LibGit2Sharp.ObjectId committishId,
                                                  valuetype LibGit2Sharp.ResetOptions resetKind) cil managed
  {
    // Code size       65 (0x41)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
             int32 V_1,
             class [mscorlib]System.IDisposable V_2)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.2
    .try
    {
      IL_000b:  ldarg.1
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.0
      IL_000e:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    bool)
      IL_0013:  stloc.0
      .try
      {
        IL_0014:  ldarg.0
        IL_0015:  ldloc.0
        IL_0016:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
        IL_001b:  ldarg.2
        IL_001c:  call       int32 LibGit2Sharp.Core.NativeMethods::git_reset(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                              class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                              valuetype LibGit2Sharp.ResetOptions)
        IL_0021:  stloc.1
        IL_0022:  ldloc.1
        IL_0023:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
        IL_0028:  leave.s    IL_0034

      }  // end .try
      finally
      {
        IL_002a:  ldloc.0
        IL_002b:  brfalse.s  IL_0033

        IL_002d:  ldloc.0
        IL_002e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0033:  endfinally
      }  // end handler
      IL_0034:  leave.s    IL_0040

    }  // end .try
    finally
    {
      IL_0036:  ldloc.2
      IL_0037:  brfalse.s  IL_003f

      IL_0039:  ldloc.2
      IL_003a:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_003f:  endfinally
    }  // end handler
    IL_0040:  ret
  } // end of method Proxy::git_reset

  .method public hidebysig static class LibGit2Sharp.Core.Compat.Tuple`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle> 
          git_revparse_ext(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                           string objectish) cil managed
  {
    // Code size       121 (0x79)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Handles.GitObjectSafeHandle V_0,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_1,
             int32 V_2,
             class LibGit2Sharp.Core.Compat.Tuple`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle> V_3,
             class [mscorlib]System.IDisposable V_4,
             int32 V_5,
             object[] V_6)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldloca.s   V_0
      IL_000e:  ldloca.s   V_1
      IL_0010:  ldarg.0
      IL_0011:  ldarg.1
      IL_0012:  call       int32 LibGit2Sharp.Core.NativeMethods::git_revparse_ext(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle&,
                                                                                   class LibGit2Sharp.Core.Handles.ReferenceSafeHandle&,
                                                                                   class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                   string)
      IL_0017:  stloc.2
      IL_0018:  ldloc.2
      IL_0019:  stloc.s    V_5
      IL_001b:  ldloc.s    V_5
      IL_001d:  ldc.i4.s   -5
      IL_001f:  sub
      IL_0020:  switch     ( 
                            IL_0037,
                            IL_005b,
                            IL_0033)
      IL_0031:  br.s       IL_005b

      IL_0033:  ldnull
      IL_0034:  stloc.3
      IL_0035:  leave.s    IL_0077

      IL_0037:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_003c:  ldstr      "Provided abbreviated ObjectId '{0}' is too short."
      IL_0041:  ldc.i4.1
      IL_0042:  newarr     [mscorlib]System.Object
      IL_0047:  stloc.s    V_6
      IL_0049:  ldloc.s    V_6
      IL_004b:  ldc.i4.0
      IL_004c:  ldarg.1
      IL_004d:  stelem.ref
      IL_004e:  ldloc.s    V_6
      IL_0050:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                  string,
                                                                  object[])
      IL_0055:  newobj     instance void LibGit2Sharp.AmbiguousSpecificationException::.ctor(string)
      IL_005a:  throw

      IL_005b:  ldloc.2
      IL_005c:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0061:  ldloc.0
      IL_0062:  ldloc.1
      IL_0063:  newobj     instance void class LibGit2Sharp.Core.Compat.Tuple`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle>::.ctor(!0,
                                                                                                                                                                                                !1)
      IL_0068:  stloc.3
      IL_0069:  leave.s    IL_0077

    }  // end .try
    finally
    {
      IL_006b:  ldloc.s    V_4
      IL_006d:  brfalse.s  IL_0076

      IL_006f:  ldloc.s    V_4
      IL_0071:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0076:  endfinally
    }  // end handler
    IL_0077:  ldloc.3
    IL_0078:  ret
  } // end of method Proxy::git_revparse_ext

  .method public hidebysig static class LibGit2Sharp.Core.Handles.GitObjectSafeHandle 
          git_revparse_single(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                              string objectish) cil managed
  {
    // Code size       31 (0x1f)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.Compat.Tuple`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle> V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       class LibGit2Sharp.Core.Compat.Tuple`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle> LibGit2Sharp.Core.Proxy::git_revparse_ext(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                                                                                                   string)
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_000d

    IL_000b:  ldnull
    IL_000c:  ret

    IL_000d:  ldloc.0
    IL_000e:  callvirt   instance !1 class LibGit2Sharp.Core.Compat.Tuple`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle>::get_Item2()
    IL_0013:  callvirt   instance void [mscorlib]System.Runtime.InteropServices.SafeHandle::Dispose()
    IL_0018:  ldloc.0
    IL_0019:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle>::get_Item1()
    IL_001e:  ret
  } // end of method Proxy::git_revparse_single

  .method public hidebysig static void  git_revwalk_free(native int walker) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_revwalk_free(native int)
    IL_0006:  ret
  } // end of method Proxy::git_revwalk_free

  .method public hidebysig static void  git_revwalk_hide(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle walker,
                                                         class LibGit2Sharp.ObjectId commit_id) cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  2
    .locals init (valuetype LibGit2Sharp.Core.GitOid V_0,
             int32 V_1,
             class [mscorlib]System.IDisposable V_2)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.2
    .try
    {
      IL_000b:  ldarg.1
      IL_000c:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
      IL_0011:  stloc.0
      IL_0012:  ldarg.0
      IL_0013:  ldloca.s   V_0
      IL_0015:  call       int32 LibGit2Sharp.Core.NativeMethods::git_revwalk_hide(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle,
                                                                                   valuetype LibGit2Sharp.Core.GitOid&)
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0021:  leave.s    IL_002d

    }  // end .try
    finally
    {
      IL_0023:  ldloc.2
      IL_0024:  brfalse.s  IL_002c

      IL_0026:  ldloc.2
      IL_0027:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002c:  endfinally
    }  // end handler
    IL_002d:  ret
  } // end of method Proxy::git_revwalk_hide

  .method public hidebysig static class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle 
          git_revwalk_new(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_revwalk_new(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle&,
                                                                                  class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  ldloc.0
      IL_001b:  stloc.2
      IL_001c:  leave.s    IL_0028

    }  // end .try
    finally
    {
      IL_001e:  ldloc.3
      IL_001f:  brfalse.s  IL_0027

      IL_0021:  ldloc.3
      IL_0022:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0027:  endfinally
    }  // end handler
    IL_0028:  ldloc.2
    IL_0029:  ret
  } // end of method Proxy::git_revwalk_new

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_revwalk_next(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle walker) cil managed
  {
    // Code size       56 (0x38)
    .maxstack  2
    .locals init (valuetype LibGit2Sharp.Core.GitOid V_0,
             int32 V_1,
             class LibGit2Sharp.ObjectId V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_revwalk_next(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                   class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  ldc.i4.s   -31
      IL_0017:  bne.un.s   IL_001d

      IL_0019:  ldnull
      IL_001a:  stloc.2
      IL_001b:  leave.s    IL_0036

      IL_001d:  ldloc.1
      IL_001e:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0023:  ldloc.0
      IL_0024:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
      IL_0029:  stloc.2
      IL_002a:  leave.s    IL_0036

    }  // end .try
    finally
    {
      IL_002c:  ldloc.3
      IL_002d:  brfalse.s  IL_0035

      IL_002f:  ldloc.3
      IL_0030:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0035:  endfinally
    }  // end handler
    IL_0036:  ldloc.2
    IL_0037:  ret
  } // end of method Proxy::git_revwalk_next

  .method public hidebysig static void  git_revwalk_push(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle walker,
                                                         class LibGit2Sharp.ObjectId id) cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  2
    .locals init (valuetype LibGit2Sharp.Core.GitOid V_0,
             int32 V_1,
             class [mscorlib]System.IDisposable V_2)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.2
    .try
    {
      IL_000b:  ldarg.1
      IL_000c:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
      IL_0011:  stloc.0
      IL_0012:  ldarg.0
      IL_0013:  ldloca.s   V_0
      IL_0015:  call       int32 LibGit2Sharp.Core.NativeMethods::git_revwalk_push(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle,
                                                                                   valuetype LibGit2Sharp.Core.GitOid&)
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0021:  leave.s    IL_002d

    }  // end .try
    finally
    {
      IL_0023:  ldloc.2
      IL_0024:  brfalse.s  IL_002c

      IL_0026:  ldloc.2
      IL_0027:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002c:  endfinally
    }  // end handler
    IL_002d:  ret
  } // end of method Proxy::git_revwalk_push

  .method public hidebysig static void  git_revwalk_reset(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle walker) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_revwalk_reset(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_revwalk_reset

  .method public hidebysig static void  git_revwalk_sorting(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle walker,
                                                            valuetype LibGit2Sharp.CommitSortStrategies options) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       void LibGit2Sharp.Core.NativeMethods::git_revwalk_sorting(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle,
                                                                                   valuetype LibGit2Sharp.CommitSortStrategies)
    IL_0007:  ret
  } // end of method Proxy::git_revwalk_sorting

  .method public hidebysig static void  git_signature_free(native int signature) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_signature_free(native int)
    IL_0006:  ret
  } // end of method Proxy::git_signature_free

  .method public hidebysig static class LibGit2Sharp.Core.Handles.SignatureSafeHandle 
          git_signature_new(string name,
                            string email,
                            valuetype [mscorlib]System.DateTimeOffset when) cil managed
  {
    // Code size       67 (0x43)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Handles.SignatureSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.SignatureSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3,
             valuetype [mscorlib]System.TimeSpan V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  ldarg.2
      IL_0010:  call       int32 LibGit2Sharp.Core.Epoch::ToSecondsSinceEpoch(valuetype [mscorlib]System.DateTimeOffset)
      IL_0015:  conv.i8
      IL_0016:  ldarga.s   when
      IL_0018:  call       instance valuetype [mscorlib]System.TimeSpan [mscorlib]System.DateTimeOffset::get_Offset()
      IL_001d:  stloc.s    V_4
      IL_001f:  ldloca.s   V_4
      IL_0021:  call       instance float64 [mscorlib]System.TimeSpan::get_TotalMinutes()
      IL_0026:  conv.i4
      IL_0027:  call       int32 LibGit2Sharp.Core.NativeMethods::git_signature_new(class LibGit2Sharp.Core.Handles.SignatureSafeHandle&,
                                                                                    string,
                                                                                    string,
                                                                                    int64,
                                                                                    int32)
      IL_002c:  stloc.1
      IL_002d:  ldloc.1
      IL_002e:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0033:  ldloc.0
      IL_0034:  stloc.2
      IL_0035:  leave.s    IL_0041

    }  // end .try
    finally
    {
      IL_0037:  ldloc.3
      IL_0038:  brfalse.s  IL_0040

      IL_003a:  ldloc.3
      IL_003b:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0040:  endfinally
    }  // end handler
    IL_0041:  ldloc.2
    IL_0042:  ret
  } // end of method Proxy::git_signature_new

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_stash_save(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                         class LibGit2Sharp.Signature stasher,
                         string prettifiedMessage,
                         valuetype LibGit2Sharp.StashModifiers options) cil managed
  {
    // Code size       79 (0x4f)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Handles.SignatureSafeHandle V_0,
             valuetype LibGit2Sharp.Core.GitOid V_1,
             int32 V_2,
             class LibGit2Sharp.ObjectId V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldarg.1
      IL_000d:  callvirt   instance class LibGit2Sharp.Core.Handles.SignatureSafeHandle LibGit2Sharp.Signature::BuildHandle()
      IL_0012:  stloc.0
      .try
      {
        IL_0013:  ldloca.s   V_1
        IL_0015:  ldarg.0
        IL_0016:  ldloc.0
        IL_0017:  ldarg.2
        IL_0018:  ldarg.3
        IL_0019:  call       int32 LibGit2Sharp.Core.NativeMethods::git_stash_save(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                   class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                   class LibGit2Sharp.Core.Handles.SignatureSafeHandle,
                                                                                   string,
                                                                                   valuetype LibGit2Sharp.StashModifiers)
        IL_001e:  stloc.2
        IL_001f:  ldloc.2
        IL_0020:  ldc.i4.s   -3
        IL_0022:  bne.un.s   IL_0028

        IL_0024:  ldnull
        IL_0025:  stloc.3
        IL_0026:  leave.s    IL_004d

        IL_0028:  ldloc.2
        IL_0029:  call       void LibGit2Sharp.Core.Ensure::Int32Result(int32)
        IL_002e:  ldloc.1
        IL_002f:  newobj     instance void LibGit2Sharp.ObjectId::.ctor(valuetype LibGit2Sharp.Core.GitOid)
        IL_0034:  stloc.3
        IL_0035:  leave.s    IL_004d

      }  // end .try
      finally
      {
        IL_0037:  ldloc.0
        IL_0038:  brfalse.s  IL_0040

        IL_003a:  ldloc.0
        IL_003b:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0040:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_0041:  ldloc.s    V_4
      IL_0043:  brfalse.s  IL_004c

      IL_0045:  ldloc.s    V_4
      IL_0047:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_004c:  endfinally
    }  // end handler
    IL_004d:  ldloc.3
    IL_004e:  ret
  } // end of method Proxy::git_stash_save

  .method public hidebysig static class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> 
          git_stash_foreach<TResult>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                     class [System.Core]System.Func`4<int32,native int,valuetype LibGit2Sharp.Core.GitOid,!!TResult> resultSelector) cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass29`1'<!!TResult> V_0,
             valuetype LibGit2Sharp.Core.GitErrorCode[] V_1)
    IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass29`1'<!!TResult>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass29`1'<!!TResult>::repo
    IL_000d:  ldarg.1
    IL_000e:  ldloc.0
    IL_000f:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass29`1'<!!TResult>::'<git_stash_foreach>b__27'(class [System.Core]System.Func`5<int32,native int,valuetype LibGit2Sharp.Core.GitOid,native int,int32>)
    IL_0015:  newobj     instance void class [System.Core]System.Func`2<class [System.Core]System.Func`5<int32,native int,valuetype LibGit2Sharp.Core.GitOid,native int,int32>,int32>::.ctor(object,
                                                                                                                                                                                             native int)
    IL_001a:  ldc.i4.1
    IL_001b:  newarr     LibGit2Sharp.Core.GitErrorCode
    IL_0020:  stloc.1
    IL_0021:  ldloc.1
    IL_0022:  ldc.i4.0
    IL_0023:  ldc.i4.s   -3
    IL_0025:  stelem.i4
    IL_0026:  ldloc.1
    IL_0027:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!3> LibGit2Sharp.Core.Proxy::git_foreach<int32,native int,valuetype LibGit2Sharp.Core.GitOid,!!0>(class [System.Core]System.Func`4<!!0,!!1,!!2,!!3>,
                                                                                                                                                                                     class [System.Core]System.Func`2<class [System.Core]System.Func`5<!!0,!!1,!!2,native int,int32>,int32>,
                                                                                                                                                                                     valuetype LibGit2Sharp.Core.GitErrorCode[])
    IL_002c:  ret
  } // end of method Proxy::git_stash_foreach

  .method public hidebysig static void  git_stash_drop(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                       int32 index) cil managed
  {
    // Code size       44 (0x2c)
    .maxstack  2
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  conv.i8
      IL_000e:  call       native uint [mscorlib]System.UIntPtr::op_Explicit(uint64)
      IL_0013:  call       int32 LibGit2Sharp.Core.NativeMethods::git_stash_drop(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                 native uint)
      IL_0018:  stloc.0
      IL_0019:  ldloc.0
      IL_001a:  call       void LibGit2Sharp.Core.Ensure::BooleanResult(int32)
      IL_001f:  leave.s    IL_002b

    }  // end .try
    finally
    {
      IL_0021:  ldloc.1
      IL_0022:  brfalse.s  IL_002a

      IL_0024:  ldloc.1
      IL_0025:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002a:  endfinally
    }  // end handler
    IL_002b:  ret
  } // end of method Proxy::git_stash_drop

  .method public hidebysig static valuetype LibGit2Sharp.FileStatus 
          git_status_file(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                          class LibGit2Sharp.Core.FilePath path) cil managed
  {
    // Code size       114 (0x72)
    .maxstack  5
    .locals init (valuetype LibGit2Sharp.FileStatus V_0,
             int32 V_1,
             valuetype LibGit2Sharp.FileStatus V_2,
             class [mscorlib]System.IDisposable V_3,
             int32 V_4,
             object[] V_5)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  call       int32 LibGit2Sharp.Core.NativeMethods::git_status_file(valuetype LibGit2Sharp.FileStatus&,
                                                                                  class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                  class LibGit2Sharp.Core.FilePath)
      IL_0014:  stloc.1
      IL_0015:  ldloc.1
      IL_0016:  stloc.s    V_4
      IL_0018:  ldloc.s    V_4
      IL_001a:  ldc.i4.s   -5
      IL_001c:  sub
      IL_001d:  switch     ( 
                            IL_0038,
                            IL_005c,
                            IL_0030)
      IL_002e:  br.s       IL_005c

      IL_0030:  ldc.i4     0x80000000
      IL_0035:  stloc.2
      IL_0036:  leave.s    IL_0070

      IL_0038:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_003d:  ldstr      "More than one file matches the pathspec '{0}'. You"
      + " can either force a literal path evaluation (GIT_STATUS_OPT_DISABLE_PAT"
      + "HSPEC_MATCH), or use git_status_foreach()."
      IL_0042:  ldc.i4.1
      IL_0043:  newarr     [mscorlib]System.Object
      IL_0048:  stloc.s    V_5
      IL_004a:  ldloc.s    V_5
      IL_004c:  ldc.i4.0
      IL_004d:  ldarg.1
      IL_004e:  stelem.ref
      IL_004f:  ldloc.s    V_5
      IL_0051:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                  string,
                                                                  object[])
      IL_0056:  newobj     instance void LibGit2Sharp.AmbiguousSpecificationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldloc.1
      IL_005d:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0062:  ldloc.0
      IL_0063:  stloc.2
      IL_0064:  leave.s    IL_0070

    }  // end .try
    finally
    {
      IL_0066:  ldloc.3
      IL_0067:  brfalse.s  IL_006f

      IL_0069:  ldloc.3
      IL_006a:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_006f:  endfinally
    }  // end handler
    IL_0070:  ldloc.2
    IL_0071:  ret
  } // end of method Proxy::git_status_file

  .method public hidebysig static class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> 
          git_status_foreach<TResult>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                      class [System.Core]System.Func`3<native int,uint32,!!TResult> resultSelector) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2f`1'<!!TResult> V_0)
    IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2f`1'<!!TResult>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2f`1'<!!TResult>::repo
    IL_000d:  ldarg.1
    IL_000e:  ldloc.0
    IL_000f:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass2f`1'<!!TResult>::'<git_status_foreach>b__2d'(class [System.Core]System.Func`4<native int,uint32,native int,int32>)
    IL_0015:  newobj     instance void class [System.Core]System.Func`2<class [System.Core]System.Func`4<native int,uint32,native int,int32>,int32>::.ctor(object,
                                                                                                                                                           native int)
    IL_001a:  ldc.i4.0
    IL_001b:  newarr     LibGit2Sharp.Core.GitErrorCode
    IL_0020:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!2> LibGit2Sharp.Core.Proxy::git_foreach<native int,uint32,!!0>(class [System.Core]System.Func`3<!!0,!!1,!!2>,
                                                                                                                                                   class [System.Core]System.Func`2<class [System.Core]System.Func`4<!!0,!!1,native int,int32>,int32>,
                                                                                                                                                   valuetype LibGit2Sharp.Core.GitErrorCode[])
    IL_0025:  ret
  } // end of method Proxy::git_status_foreach

  .method public hidebysig static class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle 
          git_submodule_lookup(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                               string name) cil managed
  {
    // Code size       76 (0x4c)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3,
             int32 V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  call       int32 LibGit2Sharp.Core.NativeMethods::git_submodule_lookup(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle&,
                                                                                       class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                       string)
      IL_0014:  stloc.1
      IL_0015:  ldloc.1
      IL_0016:  stloc.s    V_4
      IL_0018:  ldloc.s    V_4
      IL_001a:  ldc.i4.s   -9
      IL_001c:  beq.s      IL_0032

      IL_001e:  ldloc.s    V_4
      IL_0020:  ldc.i4.s   -4
      IL_0022:  sub
      IL_0023:  switch     ( 
                            IL_0032,
                            IL_0032)
      IL_0030:  br.s       IL_0036

      IL_0032:  ldnull
      IL_0033:  stloc.2
      IL_0034:  leave.s    IL_004a

      IL_0036:  ldloc.1
      IL_0037:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_003c:  ldloc.0
      IL_003d:  stloc.2
      IL_003e:  leave.s    IL_004a

    }  // end .try
    finally
    {
      IL_0040:  ldloc.3
      IL_0041:  brfalse.s  IL_0049

      IL_0043:  ldloc.3
      IL_0044:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0049:  endfinally
    }  // end handler
    IL_004a:  ldloc.2
    IL_004b:  ret
  } // end of method Proxy::git_submodule_lookup

  .method public hidebysig static class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> 
          git_submodule_foreach<TResult>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                         class [System.Core]System.Func`3<native int,native int,!!TResult> resultSelector) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass35`1'<!!TResult> V_0)
    IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass35`1'<!!TResult>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass35`1'<!!TResult>::repo
    IL_000d:  ldarg.1
    IL_000e:  ldloc.0
    IL_000f:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass35`1'<!!TResult>::'<git_submodule_foreach>b__33'(class [System.Core]System.Func`4<native int,native int,native int,int32>)
    IL_0015:  newobj     instance void class [System.Core]System.Func`2<class [System.Core]System.Func`4<native int,native int,native int,int32>,int32>::.ctor(object,
                                                                                                                                                               native int)
    IL_001a:  ldc.i4.0
    IL_001b:  newarr     LibGit2Sharp.Core.GitErrorCode
    IL_0020:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!2> LibGit2Sharp.Core.Proxy::git_foreach<native int,native int,!!0>(class [System.Core]System.Func`3<!!0,!!1,!!2>,
                                                                                                                                                       class [System.Core]System.Func`2<class [System.Core]System.Func`4<!!0,!!1,native int,int32>,int32>,
                                                                                                                                                       valuetype LibGit2Sharp.Core.GitErrorCode[])
    IL_0025:  ret
  } // end of method Proxy::git_submodule_foreach

  .method public hidebysig static void  git_submodule_add_to_index(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule,
                                                                   bool write_index) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  2
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  call       int32 LibGit2Sharp.Core.NativeMethods::git_submodule_add_to_index(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle,
                                                                                             bool)
      IL_0012:  stloc.0
      IL_0013:  ldloc.0
      IL_0014:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0019:  leave.s    IL_0025

    }  // end .try
    finally
    {
      IL_001b:  ldloc.1
      IL_001c:  brfalse.s  IL_0024

      IL_001e:  ldloc.1
      IL_001f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0024:  endfinally
    }  // end handler
    IL_0025:  ret
  } // end of method Proxy::git_submodule_add_to_index

  .method public hidebysig static void  git_submodule_save(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  1
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  call       int32 LibGit2Sharp.Core.NativeMethods::git_submodule_save(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
      IL_0011:  stloc.0
      IL_0012:  ldloc.0
      IL_0013:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0018:  leave.s    IL_0024

    }  // end .try
    finally
    {
      IL_001a:  ldloc.1
      IL_001b:  brfalse.s  IL_0023

      IL_001d:  ldloc.1
      IL_001e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0023:  endfinally
    }  // end handler
    IL_0024:  ret
  } // end of method Proxy::git_submodule_save

  .method public hidebysig static string 
          git_submodule_path(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.NativeMethods::git_submodule_path(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_submodule_path

  .method public hidebysig static string 
          git_submodule_url(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.NativeMethods::git_submodule_url(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_submodule_url

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_submodule_index_id(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.Core.Handles.OidSafeHandle LibGit2Sharp.Core.NativeMethods::git_submodule_index_id(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_0006:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Handles.OidSafeHandle::MarshalAsObjectId()
    IL_000b:  ret
  } // end of method Proxy::git_submodule_index_id

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_submodule_head_id(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.Core.Handles.OidSafeHandle LibGit2Sharp.Core.NativeMethods::git_submodule_head_id(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_0006:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Handles.OidSafeHandle::MarshalAsObjectId()
    IL_000b:  ret
  } // end of method Proxy::git_submodule_head_id

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_submodule_wd_id(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.Core.Handles.OidSafeHandle LibGit2Sharp.Core.NativeMethods::git_submodule_wd_id(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_0006:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Handles.OidSafeHandle::MarshalAsObjectId()
    IL_000b:  ret
  } // end of method Proxy::git_submodule_wd_id

  .method public hidebysig static valuetype LibGit2Sharp.SubmoduleIgnore 
          git_submodule_ignore(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       valuetype LibGit2Sharp.SubmoduleIgnore LibGit2Sharp.Core.NativeMethods::git_submodule_ignore(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_submodule_ignore

  .method public hidebysig static valuetype LibGit2Sharp.SubmoduleUpdate 
          git_submodule_update(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       valuetype LibGit2Sharp.SubmoduleUpdate LibGit2Sharp.Core.NativeMethods::git_submodule_update(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_submodule_update

  .method public hidebysig static bool  git_submodule_fetch_recurse_submodules(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       bool LibGit2Sharp.Core.NativeMethods::git_submodule_fetch_recurse_submodules(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_submodule_fetch_recurse_submodules

  .method public hidebysig static void  git_submodule_reload(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  1
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  call       int32 LibGit2Sharp.Core.NativeMethods::git_submodule_reload(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
      IL_0011:  stloc.0
      IL_0012:  ldloc.0
      IL_0013:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0018:  leave.s    IL_0024

    }  // end .try
    finally
    {
      IL_001a:  ldloc.1
      IL_001b:  brfalse.s  IL_0023

      IL_001d:  ldloc.1
      IL_001e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0023:  endfinally
    }  // end handler
    IL_0024:  ret
  } // end of method Proxy::git_submodule_reload

  .method public hidebysig static valuetype LibGit2Sharp.SubmoduleStatus 
          git_submodule_status(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  2
    .locals init (valuetype LibGit2Sharp.SubmoduleStatus V_0,
             int32 V_1,
             valuetype LibGit2Sharp.SubmoduleStatus V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_submodule_status(valuetype LibGit2Sharp.SubmoduleStatus&,
                                                                                       class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  ldloc.0
      IL_001b:  stloc.2
      IL_001c:  leave.s    IL_0028

    }  // end .try
    finally
    {
      IL_001e:  ldloc.3
      IL_001f:  brfalse.s  IL_0027

      IL_0021:  ldloc.3
      IL_0022:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0027:  endfinally
    }  // end handler
    IL_0028:  ldloc.2
    IL_0029:  ret
  } // end of method Proxy::git_submodule_status

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_tag_annotation_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                    string name,
                                    class LibGit2Sharp.GitObject target,
                                    class LibGit2Sharp.Signature tagger,
                                    string message) cil managed
  {
    // Code size       103 (0x67)
    .maxstack  6
    .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
             class LibGit2Sharp.Core.Handles.SignatureSafeHandle V_1,
             valuetype LibGit2Sharp.Core.GitOid V_2,
             int32 V_3,
             class LibGit2Sharp.ObjectId V_4,
             class [mscorlib]System.IDisposable V_5)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_5
    .try
    {
      IL_000c:  ldarg.2
      IL_000d:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
      IL_0012:  ldarg.0
      IL_0013:  ldc.i4.0
      IL_0014:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    bool)
      IL_0019:  stloc.0
      .try
      {
        IL_001a:  ldarg.3
        IL_001b:  callvirt   instance class LibGit2Sharp.Core.Handles.SignatureSafeHandle LibGit2Sharp.Signature::BuildHandle()
        IL_0020:  stloc.1
        .try
        {
          IL_0021:  ldloca.s   V_2
          IL_0023:  ldarg.0
          IL_0024:  ldarg.1
          IL_0025:  ldloc.0
          IL_0026:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
          IL_002b:  ldloc.1
          IL_002c:  ldarg.s    message
          IL_002e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_tag_annotation_create(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                                class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                string,
                                                                                                class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                                class LibGit2Sharp.Core.Handles.SignatureSafeHandle,
                                                                                                string)
          IL_0033:  stloc.3
          IL_0034:  ldloc.3
          IL_0035:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
          IL_003a:  ldloc.2
          IL_003b:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
          IL_0040:  stloc.s    V_4
          IL_0042:  leave.s    IL_0064

        }  // end .try
        finally
        {
          IL_0044:  ldloc.1
          IL_0045:  brfalse.s  IL_004d

          IL_0047:  ldloc.1
          IL_0048:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          IL_004d:  endfinally
        }  // end handler
      }  // end .try
      finally
      {
        IL_004e:  ldloc.0
        IL_004f:  brfalse.s  IL_0057

        IL_0051:  ldloc.0
        IL_0052:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0057:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_0058:  ldloc.s    V_5
      IL_005a:  brfalse.s  IL_0063

      IL_005c:  ldloc.s    V_5
      IL_005e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0063:  endfinally
    }  // end handler
    IL_0064:  ldloc.s    V_4
    IL_0066:  ret
  } // end of method Proxy::git_tag_annotation_create

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_tag_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                         string name,
                         class LibGit2Sharp.GitObject target,
                         class LibGit2Sharp.Signature tagger,
                         string message,
                         bool allowOverwrite) cil managed
  {
    // Code size       105 (0x69)
    .maxstack  7
    .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
             class LibGit2Sharp.Core.Handles.SignatureSafeHandle V_1,
             valuetype LibGit2Sharp.Core.GitOid V_2,
             int32 V_3,
             class LibGit2Sharp.ObjectId V_4,
             class [mscorlib]System.IDisposable V_5)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_5
    .try
    {
      IL_000c:  ldarg.2
      IL_000d:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
      IL_0012:  ldarg.0
      IL_0013:  ldc.i4.0
      IL_0014:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    bool)
      IL_0019:  stloc.0
      .try
      {
        IL_001a:  ldarg.3
        IL_001b:  callvirt   instance class LibGit2Sharp.Core.Handles.SignatureSafeHandle LibGit2Sharp.Signature::BuildHandle()
        IL_0020:  stloc.1
        .try
        {
          IL_0021:  ldloca.s   V_2
          IL_0023:  ldarg.0
          IL_0024:  ldarg.1
          IL_0025:  ldloc.0
          IL_0026:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
          IL_002b:  ldloc.1
          IL_002c:  ldarg.s    message
          IL_002e:  ldarg.s    allowOverwrite
          IL_0030:  call       int32 LibGit2Sharp.Core.NativeMethods::git_tag_create(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                     class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                     string,
                                                                                     class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                     class LibGit2Sharp.Core.Handles.SignatureSafeHandle,
                                                                                     string,
                                                                                     bool)
          IL_0035:  stloc.3
          IL_0036:  ldloc.3
          IL_0037:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
          IL_003c:  ldloc.2
          IL_003d:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
          IL_0042:  stloc.s    V_4
          IL_0044:  leave.s    IL_0066

        }  // end .try
        finally
        {
          IL_0046:  ldloc.1
          IL_0047:  brfalse.s  IL_004f

          IL_0049:  ldloc.1
          IL_004a:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          IL_004f:  endfinally
        }  // end handler
      }  // end .try
      finally
      {
        IL_0050:  ldloc.0
        IL_0051:  brfalse.s  IL_0059

        IL_0053:  ldloc.0
        IL_0054:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0059:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_005a:  ldloc.s    V_5
      IL_005c:  brfalse.s  IL_0065

      IL_005e:  ldloc.s    V_5
      IL_0060:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0065:  endfinally
    }  // end handler
    IL_0066:  ldloc.s    V_4
    IL_0068:  ret
  } // end of method Proxy::git_tag_create

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_tag_create_lightweight(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                     string name,
                                     class LibGit2Sharp.GitObject target,
                                     bool allowOverwrite) cil managed
  {
    // Code size       82 (0x52)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
             valuetype LibGit2Sharp.Core.GitOid V_1,
             int32 V_2,
             class LibGit2Sharp.ObjectId V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldarg.2
      IL_000d:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
      IL_0012:  ldarg.0
      IL_0013:  ldc.i4.0
      IL_0014:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    bool)
      IL_0019:  stloc.0
      .try
      {
        IL_001a:  ldloca.s   V_1
        IL_001c:  ldarg.0
        IL_001d:  ldarg.1
        IL_001e:  ldloc.0
        IL_001f:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
        IL_0024:  ldarg.3
        IL_0025:  call       int32 LibGit2Sharp.Core.NativeMethods::git_tag_create_lightweight(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                               class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                               string,
                                                                                               class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                               bool)
        IL_002a:  stloc.2
        IL_002b:  ldloc.2
        IL_002c:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
        IL_0031:  ldloc.1
        IL_0032:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
        IL_0037:  stloc.3
        IL_0038:  leave.s    IL_0050

      }  // end .try
      finally
      {
        IL_003a:  ldloc.0
        IL_003b:  brfalse.s  IL_0043

        IL_003d:  ldloc.0
        IL_003e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0043:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_0044:  ldloc.s    V_4
      IL_0046:  brfalse.s  IL_004f

      IL_0048:  ldloc.s    V_4
      IL_004a:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_004f:  endfinally
    }  // end handler
    IL_0050:  ldloc.3
    IL_0051:  ret
  } // end of method Proxy::git_tag_create_lightweight

  .method public hidebysig static void  git_tag_delete(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                       string name) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  2
    .locals init (int32 V_0,
             class [mscorlib]System.IDisposable V_1)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.1
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldarg.1
      IL_000d:  call       int32 LibGit2Sharp.Core.NativeMethods::git_tag_delete(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                 string)
      IL_0012:  stloc.0
      IL_0013:  ldloc.0
      IL_0014:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0019:  leave.s    IL_0025

    }  // end .try
    finally
    {
      IL_001b:  ldloc.1
      IL_001c:  brfalse.s  IL_0024

      IL_001e:  ldloc.1
      IL_001f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0024:  endfinally
    }  // end handler
    IL_0025:  ret
  } // end of method Proxy::git_tag_delete

  .method public hidebysig static class [mscorlib]System.Collections.Generic.IList`1<string> 
          git_tag_list(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed
  {
    // Code size       47 (0x2f)
    .maxstack  2
    .locals init (valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray V_0,
             int32 V_1,
             class [mscorlib]System.Collections.Generic.IList`1<string> V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  call       int32 LibGit2Sharp.Core.UnSafeNativeMethods::git_tag_list(valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray&,
                                                                                     class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_0013:  stloc.1
      IL_0014:  ldloc.1
      IL_0015:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001a:  ldloc.0
      IL_001b:  call       class [mscorlib]System.Collections.Generic.IList`1<string> LibGit2Sharp.Core.Proxy/Libgit2UnsafeHelper::BuildListOf(valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray)
      IL_0020:  stloc.2
      IL_0021:  leave.s    IL_002d

    }  // end .try
    finally
    {
      IL_0023:  ldloc.3
      IL_0024:  brfalse.s  IL_002c

      IL_0026:  ldloc.3
      IL_0027:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002c:  endfinally
    }  // end handler
    IL_002d:  ldloc.2
    IL_002e:  ret
  } // end of method Proxy::git_tag_list

  .method public hidebysig static string 
          git_tag_message(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle tag) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.NativeMethods::git_tag_message(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_tag_message

  .method public hidebysig static string 
          git_tag_name(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle tag) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.NativeMethods::git_tag_name(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_tag_name

  .method public hidebysig static class LibGit2Sharp.Signature 
          git_tag_tagger(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle tag) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       native int LibGit2Sharp.Core.NativeMethods::git_tag_tagger(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  newobj     instance void LibGit2Sharp.Signature::.ctor(native int)
    IL_000b:  ret
  } // end of method Proxy::git_tag_tagger

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_tag_target_oid(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle tag) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.Core.Handles.OidSafeHandle LibGit2Sharp.Core.NativeMethods::git_tag_target_id(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Handles.OidSafeHandle::MarshalAsObjectId()
    IL_000b:  ret
  } // end of method Proxy::git_tag_target_oid

  .method public hidebysig static valuetype LibGit2Sharp.Core.GitObjectType 
          git_tag_target_type(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle tag) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       valuetype LibGit2Sharp.Core.GitObjectType LibGit2Sharp.Core.NativeMethods::git_tag_target_type(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_tag_target_type

  .method public hidebysig static valuetype LibGit2Sharp.Mode 
          git_tree_entry_attributes(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       uint32 LibGit2Sharp.Core.NativeMethods::git_tree_entry_filemode(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_tree_entry_attributes

  .method public hidebysig static class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle 
          git_tree_entry_byindex(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle tree,
                                 int64 idx) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       native uint [mscorlib]System.UIntPtr::op_Explicit(uint64)
    IL_0007:  call       class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle LibGit2Sharp.Core.NativeMethods::git_tree_entry_byindex(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                                                                     native uint)
    IL_000c:  ret
  } // end of method Proxy::git_tree_entry_byindex

  .method public hidebysig static class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle_Owned 
          git_tree_entry_bypath(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                class LibGit2Sharp.ObjectId id,
                                class LibGit2Sharp.Core.FilePath treeentry_path) cil managed
  {
    // Code size       79 (0x4f)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.ObjectSafeWrapper V_0,
             class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle_Owned V_1,
             int32 V_2,
             class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle_Owned V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.s    V_4
    .try
    {
      IL_000c:  ldarg.1
      IL_000d:  ldarg.0
      IL_000e:  ldc.i4.0
      IL_000f:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    bool)
      IL_0014:  stloc.0
      .try
      {
        IL_0015:  ldloca.s   V_1
        IL_0017:  ldloc.0
        IL_0018:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
        IL_001d:  ldarg.2
        IL_001e:  call       int32 LibGit2Sharp.Core.NativeMethods::git_tree_entry_bypath(class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle_Owned&,
                                                                                          class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                          class LibGit2Sharp.Core.FilePath)
        IL_0023:  stloc.2
        IL_0024:  ldloc.2
        IL_0025:  ldc.i4.s   -3
        IL_0027:  bne.un.s   IL_002d

        IL_0029:  ldnull
        IL_002a:  stloc.3
        IL_002b:  leave.s    IL_004d

        IL_002d:  ldloc.2
        IL_002e:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
        IL_0033:  ldloc.1
        IL_0034:  stloc.3
        IL_0035:  leave.s    IL_004d

      }  // end .try
      finally
      {
        IL_0037:  ldloc.0
        IL_0038:  brfalse.s  IL_0040

        IL_003a:  ldloc.0
        IL_003b:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0040:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_0041:  ldloc.s    V_4
      IL_0043:  brfalse.s  IL_004c

      IL_0045:  ldloc.s    V_4
      IL_0047:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_004c:  endfinally
    }  // end handler
    IL_004d:  ldloc.3
    IL_004e:  ret
  } // end of method Proxy::git_tree_entry_bypath

  .method public hidebysig static void  git_tree_entry_free(native int treeEntry) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_tree_entry_free(native int)
    IL_0006:  ret
  } // end of method Proxy::git_tree_entry_free

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_tree_entry_id(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.Core.Handles.OidSafeHandle LibGit2Sharp.Core.NativeMethods::git_tree_entry_id(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_0006:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Handles.OidSafeHandle::MarshalAsObjectId()
    IL_000b:  ret
  } // end of method Proxy::git_tree_entry_id

  .method public hidebysig static string 
          git_tree_entry_name(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.NativeMethods::git_tree_entry_name(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_tree_entry_name

  .method public hidebysig static valuetype LibGit2Sharp.Core.GitObjectType 
          git_tree_entry_type(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       valuetype LibGit2Sharp.Core.GitObjectType LibGit2Sharp.Core.NativeMethods::git_tree_entry_type(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_0006:  ret
  } // end of method Proxy::git_tree_entry_type

  .method public hidebysig static int32  git_tree_entrycount(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle tree) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       native uint LibGit2Sharp.Core.NativeMethods::git_tree_entrycount(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0006:  call       uint32 [mscorlib]System.UIntPtr::op_Explicit(native uint)
    IL_000b:  ret
  } // end of method Proxy::git_tree_entrycount

  .method public hidebysig static class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle 
          git_treebuilder_create() cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle V_0,
             int32 V_1,
             class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_0012:  call       int32 LibGit2Sharp.Core.NativeMethods::git_treebuilder_create(class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle&,
                                                                                         native int)
      IL_0017:  stloc.1
      IL_0018:  ldloc.1
      IL_0019:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001e:  ldloc.0
      IL_001f:  stloc.2
      IL_0020:  leave.s    IL_002c

    }  // end .try
    finally
    {
      IL_0022:  ldloc.3
      IL_0023:  brfalse.s  IL_002b

      IL_0025:  ldloc.3
      IL_0026:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002b:  endfinally
    }  // end handler
    IL_002c:  ldloc.2
    IL_002d:  ret
  } // end of method Proxy::git_treebuilder_create

  .method public hidebysig static void  git_treebuilder_free(native int bld) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       void LibGit2Sharp.Core.NativeMethods::git_treebuilder_free(native int)
    IL_0006:  ret
  } // end of method Proxy::git_treebuilder_free

  .method public hidebysig static void  git_treebuilder_insert(class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle builder,
                                                               string treeentry_name,
                                                               class LibGit2Sharp.TreeEntryDefinition treeEntryDefinition) cil managed
  {
    // Code size       63 (0x3f)
    .maxstack  5
    .locals init (valuetype LibGit2Sharp.Core.GitOid V_0,
             int32 V_1,
             class [mscorlib]System.IDisposable V_2)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.2
    .try
    {
      IL_000b:  ldarg.2
      IL_000c:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntryDefinition::get_TargetId()
      IL_0011:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
      IL_0016:  stloc.0
      IL_0017:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_001c:  ldarg.0
      IL_001d:  ldarg.1
      IL_001e:  ldloca.s   V_0
      IL_0020:  ldarg.2
      IL_0021:  callvirt   instance valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntryDefinition::get_Mode()
      IL_0026:  call       int32 LibGit2Sharp.Core.NativeMethods::git_treebuilder_insert(native int,
                                                                                         class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle,
                                                                                         string,
                                                                                         valuetype LibGit2Sharp.Core.GitOid&,
                                                                                         uint32)
      IL_002b:  stloc.1
      IL_002c:  ldloc.1
      IL_002d:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0032:  leave.s    IL_003e

    }  // end .try
    finally
    {
      IL_0034:  ldloc.2
      IL_0035:  brfalse.s  IL_003d

      IL_0037:  ldloc.2
      IL_0038:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_003d:  endfinally
    }  // end handler
    IL_003e:  ret
  } // end of method Proxy::git_treebuilder_insert

  .method public hidebysig static class LibGit2Sharp.ObjectId 
          git_treebuilder_write(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle bld) cil managed
  {
    // Code size       48 (0x30)
    .maxstack  3
    .locals init (valuetype LibGit2Sharp.Core.GitOid V_0,
             int32 V_1,
             class LibGit2Sharp.ObjectId V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldloca.s   V_0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.1
      IL_000f:  call       int32 LibGit2Sharp.Core.NativeMethods::git_treebuilder_write(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                        class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                        class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle)
      IL_0014:  stloc.1
      IL_0015:  ldloc.1
      IL_0016:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_001b:  ldloc.0
      IL_001c:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
      IL_0021:  stloc.2
      IL_0022:  leave.s    IL_002e

    }  // end .try
    finally
    {
      IL_0024:  ldloc.3
      IL_0025:  brfalse.s  IL_002d

      IL_0027:  ldloc.3
      IL_0028:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002d:  endfinally
    }  // end handler
    IL_002e:  ldloc.2
    IL_002f:  ret
  } // end of method Proxy::git_treebuilder_write

  .method private hidebysig static class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> 
          git_foreach<T,TResult>(class [System.Core]System.Func`2<!!T,!!TResult> resultSelector,
                                 class [System.Core]System.Func`2<class [System.Core]System.Func`3<!!T,native int,int32>,int32> iterator,
                                 valuetype LibGit2Sharp.Core.GitErrorCode[] ignoredErrorCodes) cil managed
  {
    .param [3]
    .custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       118 (0x76)
    .maxstack  4
    .locals init (int32 V_0,
             class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3c`2'<!!T,!!TResult> V_1,
             class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3a`2'<!!T,!!TResult> V_2,
             class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3a`2'<!!T,!!TResult>::.ctor()
    IL_0005:  stloc.2
    IL_0006:  ldloc.2
    IL_0007:  ldarg.0
    IL_0008:  stfld      class [System.Core]System.Func`2<!0,!1> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3a`2'<!!T,!!TResult>::resultSelector
    IL_000d:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0012:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_0017:  stloc.s    V_4
    .try
    {
      IL_0019:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3c`2'<!!T,!!TResult>::.ctor()
      IL_001e:  stloc.1
      IL_001f:  ldloc.1
      IL_0020:  ldloc.2
      IL_0021:  stfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3a`2'<!0,!1> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3c`2'<!!T,!!TResult>::'CS$<>8__locals3b'
      IL_0026:  ldloc.1
      IL_0027:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<!!TResult>::.ctor()
      IL_002c:  stfld      class [mscorlib]System.Collections.Generic.List`1<!1> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3c`2'<!!T,!!TResult>::result
      IL_0031:  ldarg.1
      IL_0032:  ldloc.1
      IL_0033:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3c`2'<!!T,!!TResult>::'<git_foreach>b__39'(!0,
                                                                                                                                     native int)
      IL_0039:  newobj     instance void class [System.Core]System.Func`3<!!T,native int,int32>::.ctor(object,
                                                                                                       native int)
      IL_003e:  callvirt   instance !1 class [System.Core]System.Func`2<class [System.Core]System.Func`3<!!T,native int,int32>,int32>::Invoke(!0)
      IL_0043:  stloc.0
      IL_0044:  ldarg.2
      IL_0045:  brfalse.s  IL_0059

      IL_0047:  ldarg.2
      IL_0048:  ldloc.0
      IL_0049:  call       bool [System.Core]System.Linq.Enumerable::Contains<valuetype LibGit2Sharp.Core.GitErrorCode>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                        !!0)
      IL_004e:  brfalse.s  IL_0059

      IL_0050:  ldc.i4.0
      IL_0051:  newarr     !!TResult
      IL_0056:  stloc.3
      IL_0057:  leave.s    IL_0074

      IL_0059:  ldloc.0
      IL_005a:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_005f:  ldloc.1
      IL_0060:  ldfld      class [mscorlib]System.Collections.Generic.List`1<!1> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3c`2'<!!T,!!TResult>::result
      IL_0065:  stloc.3
      IL_0066:  leave.s    IL_0074

    }  // end .try
    finally
    {
      IL_0068:  ldloc.s    V_4
      IL_006a:  brfalse.s  IL_0073

      IL_006c:  ldloc.s    V_4
      IL_006e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0073:  endfinally
    }  // end handler
    IL_0074:  ldloc.3
    IL_0075:  ret
  } // end of method Proxy::git_foreach

  .method private hidebysig static class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> 
          git_foreach<T1,T2,TResult>(class [System.Core]System.Func`3<!!T1,!!T2,!!TResult> resultSelector,
                                     class [System.Core]System.Func`2<class [System.Core]System.Func`4<!!T1,!!T2,native int,int32>,int32> iterator,
                                     valuetype LibGit2Sharp.Core.GitErrorCode[] ignoredErrorCodes) cil managed
  {
    .param [3]
    .custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       118 (0x76)
    .maxstack  4
    .locals init (int32 V_0,
             class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass41`3'<!!T1,!!T2,!!TResult> V_1,
             class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3f`3'<!!T1,!!T2,!!TResult> V_2,
             class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3f`3'<!!T1,!!T2,!!TResult>::.ctor()
    IL_0005:  stloc.2
    IL_0006:  ldloc.2
    IL_0007:  ldarg.0
    IL_0008:  stfld      class [System.Core]System.Func`3<!0,!1,!2> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3f`3'<!!T1,!!T2,!!TResult>::resultSelector
    IL_000d:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0012:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_0017:  stloc.s    V_4
    .try
    {
      IL_0019:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass41`3'<!!T1,!!T2,!!TResult>::.ctor()
      IL_001e:  stloc.1
      IL_001f:  ldloc.1
      IL_0020:  ldloc.2
      IL_0021:  stfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass3f`3'<!0,!1,!2> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass41`3'<!!T1,!!T2,!!TResult>::'CS$<>8__locals40'
      IL_0026:  ldloc.1
      IL_0027:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<!!TResult>::.ctor()
      IL_002c:  stfld      class [mscorlib]System.Collections.Generic.List`1<!2> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass41`3'<!!T1,!!T2,!!TResult>::result
      IL_0031:  ldarg.1
      IL_0032:  ldloc.1
      IL_0033:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass41`3'<!!T1,!!T2,!!TResult>::'<git_foreach>b__3e'(!0,
                                                                                                                                           !1,
                                                                                                                                           native int)
      IL_0039:  newobj     instance void class [System.Core]System.Func`4<!!T1,!!T2,native int,int32>::.ctor(object,
                                                                                                             native int)
      IL_003e:  callvirt   instance !1 class [System.Core]System.Func`2<class [System.Core]System.Func`4<!!T1,!!T2,native int,int32>,int32>::Invoke(!0)
      IL_0043:  stloc.0
      IL_0044:  ldarg.2
      IL_0045:  brfalse.s  IL_0059

      IL_0047:  ldarg.2
      IL_0048:  ldloc.0
      IL_0049:  call       bool [System.Core]System.Linq.Enumerable::Contains<valuetype LibGit2Sharp.Core.GitErrorCode>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                        !!0)
      IL_004e:  brfalse.s  IL_0059

      IL_0050:  ldc.i4.0
      IL_0051:  newarr     !!TResult
      IL_0056:  stloc.3
      IL_0057:  leave.s    IL_0074

      IL_0059:  ldloc.0
      IL_005a:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_005f:  ldloc.1
      IL_0060:  ldfld      class [mscorlib]System.Collections.Generic.List`1<!2> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass41`3'<!!T1,!!T2,!!TResult>::result
      IL_0065:  stloc.3
      IL_0066:  leave.s    IL_0074

    }  // end .try
    finally
    {
      IL_0068:  ldloc.s    V_4
      IL_006a:  brfalse.s  IL_0073

      IL_006c:  ldloc.s    V_4
      IL_006e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0073:  endfinally
    }  // end handler
    IL_0074:  ldloc.3
    IL_0075:  ret
  } // end of method Proxy::git_foreach

  .method private hidebysig static class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> 
          git_foreach<T1,T2,T3,TResult>(class [System.Core]System.Func`4<!!T1,!!T2,!!T3,!!TResult> resultSelector,
                                        class [System.Core]System.Func`2<class [System.Core]System.Func`5<!!T1,!!T2,!!T3,native int,int32>,int32> iterator,
                                        valuetype LibGit2Sharp.Core.GitErrorCode[] ignoredErrorCodes) cil managed
  {
    .param [3]
    .custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       118 (0x76)
    .maxstack  4
    .locals init (int32 V_0,
             class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass46`4'<!!T1,!!T2,!!T3,!!TResult> V_1,
             class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass44`4'<!!T1,!!T2,!!T3,!!TResult> V_2,
             class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass44`4'<!!T1,!!T2,!!T3,!!TResult>::.ctor()
    IL_0005:  stloc.2
    IL_0006:  ldloc.2
    IL_0007:  ldarg.0
    IL_0008:  stfld      class [System.Core]System.Func`4<!0,!1,!2,!3> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass44`4'<!!T1,!!T2,!!T3,!!TResult>::resultSelector
    IL_000d:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0012:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_0017:  stloc.s    V_4
    .try
    {
      IL_0019:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass46`4'<!!T1,!!T2,!!T3,!!TResult>::.ctor()
      IL_001e:  stloc.1
      IL_001f:  ldloc.1
      IL_0020:  ldloc.2
      IL_0021:  stfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass44`4'<!0,!1,!2,!3> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass46`4'<!!T1,!!T2,!!T3,!!TResult>::'CS$<>8__locals45'
      IL_0026:  ldloc.1
      IL_0027:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<!!TResult>::.ctor()
      IL_002c:  stfld      class [mscorlib]System.Collections.Generic.List`1<!3> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass46`4'<!!T1,!!T2,!!T3,!!TResult>::result
      IL_0031:  ldarg.1
      IL_0032:  ldloc.1
      IL_0033:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass46`4'<!!T1,!!T2,!!T3,!!TResult>::'<git_foreach>b__43'(!0,
                                                                                                                                                !1,
                                                                                                                                                !2,
                                                                                                                                                native int)
      IL_0039:  newobj     instance void class [System.Core]System.Func`5<!!T1,!!T2,!!T3,native int,int32>::.ctor(object,
                                                                                                                  native int)
      IL_003e:  callvirt   instance !1 class [System.Core]System.Func`2<class [System.Core]System.Func`5<!!T1,!!T2,!!T3,native int,int32>,int32>::Invoke(!0)
      IL_0043:  stloc.0
      IL_0044:  ldarg.2
      IL_0045:  brfalse.s  IL_0059

      IL_0047:  ldarg.2
      IL_0048:  ldloc.0
      IL_0049:  call       bool [System.Core]System.Linq.Enumerable::Contains<valuetype LibGit2Sharp.Core.GitErrorCode>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                        !!0)
      IL_004e:  brfalse.s  IL_0059

      IL_0050:  ldc.i4.0
      IL_0051:  newarr     !!TResult
      IL_0056:  stloc.3
      IL_0057:  leave.s    IL_0074

      IL_0059:  ldloc.0
      IL_005a:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_005f:  ldloc.1
      IL_0060:  ldfld      class [mscorlib]System.Collections.Generic.List`1<!3> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass46`4'<!!T1,!!T2,!!T3,!!TResult>::result
      IL_0065:  stloc.3
      IL_0066:  leave.s    IL_0074

    }  // end .try
    finally
    {
      IL_0068:  ldloc.s    V_4
      IL_006a:  brfalse.s  IL_0073

      IL_006c:  ldloc.s    V_4
      IL_006e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0073:  endfinally
    }  // end handler
    IL_0074:  ldloc.3
    IL_0075:  ret
  } // end of method Proxy::git_foreach

  .method private hidebysig static class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> 
          git_foreach<T1,T2,T3,T4,TResult>(class [System.Core]System.Func`5<!!T1,!!T2,!!T3,!!T4,!!TResult> resultSelector,
                                           class [System.Core]System.Func`2<class LibGit2Sharp.Core.Proxy/Func`6<!!T1,!!T2,!!T3,!!T4,native int,int32>,int32> iterator,
                                           valuetype LibGit2Sharp.Core.GitErrorCode[] ignoredErrorCodes) cil managed
  {
    .param [3]
    .custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       118 (0x76)
    .maxstack  4
    .locals init (int32 V_0,
             class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass4b`5'<!!T1,!!T2,!!T3,!!T4,!!TResult> V_1,
             class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass49`5'<!!T1,!!T2,!!T3,!!T4,!!TResult> V_2,
             class [mscorlib]System.Collections.Generic.ICollection`1<!!TResult> V_3,
             class [mscorlib]System.IDisposable V_4)
    IL_0000:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass49`5'<!!T1,!!T2,!!T3,!!T4,!!TResult>::.ctor()
    IL_0005:  stloc.2
    IL_0006:  ldloc.2
    IL_0007:  ldarg.0
    IL_0008:  stfld      class [System.Core]System.Func`5<!0,!1,!2,!3,!4> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass49`5'<!!T1,!!T2,!!T3,!!T4,!!TResult>::resultSelector
    IL_000d:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0012:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_0017:  stloc.s    V_4
    .try
    {
      IL_0019:  newobj     instance void class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass4b`5'<!!T1,!!T2,!!T3,!!T4,!!TResult>::.ctor()
      IL_001e:  stloc.1
      IL_001f:  ldloc.1
      IL_0020:  ldloc.2
      IL_0021:  stfld      class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass49`5'<!0,!1,!2,!3,!4> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass4b`5'<!!T1,!!T2,!!T3,!!T4,!!TResult>::'CS$<>8__locals4a'
      IL_0026:  ldloc.1
      IL_0027:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<!!TResult>::.ctor()
      IL_002c:  stfld      class [mscorlib]System.Collections.Generic.List`1<!4> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass4b`5'<!!T1,!!T2,!!T3,!!T4,!!TResult>::result
      IL_0031:  ldarg.1
      IL_0032:  ldloc.1
      IL_0033:  ldftn      instance int32 class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass4b`5'<!!T1,!!T2,!!T3,!!T4,!!TResult>::'<git_foreach>b__48'(!0,
                                                                                                                                                     !1,
                                                                                                                                                     !2,
                                                                                                                                                     !3,
                                                                                                                                                     native int)
      IL_0039:  newobj     instance void class LibGit2Sharp.Core.Proxy/Func`6<!!T1,!!T2,!!T3,!!T4,native int,int32>::.ctor(object,
                                                                                                                           native int)
      IL_003e:  callvirt   instance !1 class [System.Core]System.Func`2<class LibGit2Sharp.Core.Proxy/Func`6<!!T1,!!T2,!!T3,!!T4,native int,int32>,int32>::Invoke(!0)
      IL_0043:  stloc.0
      IL_0044:  ldarg.2
      IL_0045:  brfalse.s  IL_0059

      IL_0047:  ldarg.2
      IL_0048:  ldloc.0
      IL_0049:  call       bool [System.Core]System.Linq.Enumerable::Contains<valuetype LibGit2Sharp.Core.GitErrorCode>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                        !!0)
      IL_004e:  brfalse.s  IL_0059

      IL_0050:  ldc.i4.0
      IL_0051:  newarr     !!TResult
      IL_0056:  stloc.3
      IL_0057:  leave.s    IL_0074

      IL_0059:  ldloc.0
      IL_005a:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_005f:  ldloc.1
      IL_0060:  ldfld      class [mscorlib]System.Collections.Generic.List`1<!4> class LibGit2Sharp.Core.Proxy/'<>c__DisplayClass4b`5'<!!T1,!!T2,!!T3,!!T4,!!TResult>::result
      IL_0065:  stloc.3
      IL_0066:  leave.s    IL_0074

    }  // end .try
    finally
    {
      IL_0068:  ldloc.s    V_4
      IL_006a:  brfalse.s  IL_0073

      IL_006c:  ldloc.s    V_4
      IL_006e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0073:  endfinally
    }  // end handler
    IL_0074:  ldloc.3
    IL_0075:  ret
  } // end of method Proxy::git_foreach

  .method private hidebysig static bool  RepositoryStateChecker(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                                class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.RepositorySafeHandle,int32> checker) cil managed
  {
    // Code size       44 (0x2c)
    .maxstack  2
    .locals init (int32 V_0,
             bool V_1,
             class [mscorlib]System.IDisposable V_2)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.2
    .try
    {
      IL_000b:  ldarg.1
      IL_000c:  ldarg.0
      IL_000d:  callvirt   instance !1 class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.RepositorySafeHandle,int32>::Invoke(!0)
      IL_0012:  stloc.0
      IL_0013:  ldloc.0
      IL_0014:  call       void LibGit2Sharp.Core.Ensure::BooleanResult(int32)
      IL_0019:  ldloc.0
      IL_001a:  ldc.i4.1
      IL_001b:  ceq
      IL_001d:  stloc.1
      IL_001e:  leave.s    IL_002a

    }  // end .try
    finally
    {
      IL_0020:  ldloc.2
      IL_0021:  brfalse.s  IL_0029

      IL_0023:  ldloc.2
      IL_0024:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0029:  endfinally
    }  // end handler
    IL_002a:  ldloc.1
    IL_002b:  ret
  } // end of method Proxy::RepositoryStateChecker

  .method private hidebysig static string 
          ConvertPath(class [System.Core]System.Func`3<uint8[],native uint,int32> pathRetriever) cil managed
  {
    // Code size       77 (0x4d)
    .maxstack  3
    .locals init (uint8[] V_0,
             int32 V_1,
             string V_2,
             class [mscorlib]System.IDisposable V_3)
    IL_0000:  ldsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0005:  callvirt   instance !0 class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::Invoke()
    IL_000a:  stloc.3
    .try
    {
      IL_000b:  ldc.i4     0x1000
      IL_0010:  conv.u
      IL_0011:  newarr     [mscorlib]System.Byte
      IL_0016:  stloc.0
      IL_0017:  ldarg.0
      IL_0018:  ldloc.0
      IL_0019:  ldc.i4     0x1000
      IL_001e:  call       native uint [mscorlib]System.UIntPtr::op_Explicit(uint32)
      IL_0023:  callvirt   instance !2 class [System.Core]System.Func`3<uint8[],native uint,int32>::Invoke(!0,
                                                                                                           !1)
      IL_0028:  stloc.1
      IL_0029:  ldloc.1
      IL_002a:  ldc.i4.s   -3
      IL_002c:  bne.un.s   IL_0032

      IL_002e:  ldnull
      IL_002f:  stloc.2
      IL_0030:  leave.s    IL_004b

      IL_0032:  ldloc.1
      IL_0033:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0038:  ldloc.0
      IL_0039:  call       string LibGit2Sharp.Core.Utf8Marshaler::Utf8FromBuffer(uint8[])
      IL_003e:  stloc.2
      IL_003f:  leave.s    IL_004b

    }  // end .try
    finally
    {
      IL_0041:  ldloc.3
      IL_0042:  brfalse.s  IL_004a

      IL_0044:  ldloc.3
      IL_0045:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_004a:  endfinally
    }  // end handler
    IL_004b:  ldloc.2
    IL_004c:  ret
  } // end of method Proxy::ConvertPath

  .method assembly hidebysig static void 
          EnableThreadAffinity() cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldnull
    IL_0001:  ldftn      class [mscorlib]System.IDisposable LibGit2Sharp.Core.Proxy::WithThreadAffinity()
    IL_0007:  newobj     instance void class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::.ctor(object,
                                                                                                                   native int)
    IL_000c:  stsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0011:  ret
  } // end of method Proxy::EnableThreadAffinity

  .method private hidebysig static class [mscorlib]System.IDisposable 
          WithoutThreadAffinity() cil managed
  {
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  ldnull
    IL_0001:  ret
  } // end of method Proxy::WithoutThreadAffinity

  .method private hidebysig static class [mscorlib]System.IDisposable 
          WithThreadAffinity() cil managed
  {
    // Code size       6 (0x6)
    .maxstack  8
    IL_0000:  newobj     instance void LibGit2Sharp.Core.Proxy/DisposableThreadAffinityWrapper::.ctor()
    IL_0005:  ret
  } // end of method Proxy::WithThreadAffinity

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method Proxy::.ctor

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       210 (0xd2)
    .maxstack  5
    .locals init (class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,class [System.Core]System.Func`2<string,object>> V_0)
    IL_0000:  ldnull
    IL_0001:  ldftn      class [mscorlib]System.IDisposable LibGit2Sharp.Core.Proxy::WithoutThreadAffinity()
    IL_0007:  newobj     instance void class [System.Core]System.Func`1<class [mscorlib]System.IDisposable>::.ctor(object,
                                                                                                                   native int)
    IL_000c:  stsfld     class [System.Core]System.Func`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Core.Proxy::ThreadAffinity
    IL_0011:  newobj     instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,class [System.Core]System.Func`2<string,object>>::.ctor()
    IL_0016:  stloc.0
    IL_0017:  ldloc.0
    IL_0018:  ldtoken    [mscorlib]System.Int32
    IL_001d:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0022:  ldsfld     class [System.Core]System.Func`2<string,object> LibGit2Sharp.Core.Proxy::'CS$<>9__CachedAnonymousMethodDelegate52'
    IL_0027:  brtrue.s   IL_003a

    IL_0029:  ldnull
    IL_002a:  ldftn      object LibGit2Sharp.Core.Proxy::'<.cctor>b__4e'(string)
    IL_0030:  newobj     instance void class [System.Core]System.Func`2<string,object>::.ctor(object,
                                                                                              native int)
    IL_0035:  stsfld     class [System.Core]System.Func`2<string,object> LibGit2Sharp.Core.Proxy::'CS$<>9__CachedAnonymousMethodDelegate52'
    IL_003a:  ldsfld     class [System.Core]System.Func`2<string,object> LibGit2Sharp.Core.Proxy::'CS$<>9__CachedAnonymousMethodDelegate52'
    IL_003f:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,class [System.Core]System.Func`2<string,object>>::Add(!0,
                                                                                                                                                                                 !1)
    IL_0044:  ldloc.0
    IL_0045:  ldtoken    [mscorlib]System.Int64
    IL_004a:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_004f:  ldsfld     class [System.Core]System.Func`2<string,object> LibGit2Sharp.Core.Proxy::'CS$<>9__CachedAnonymousMethodDelegate53'
    IL_0054:  brtrue.s   IL_0067

    IL_0056:  ldnull
    IL_0057:  ldftn      object LibGit2Sharp.Core.Proxy::'<.cctor>b__4f'(string)
    IL_005d:  newobj     instance void class [System.Core]System.Func`2<string,object>::.ctor(object,
                                                                                              native int)
    IL_0062:  stsfld     class [System.Core]System.Func`2<string,object> LibGit2Sharp.Core.Proxy::'CS$<>9__CachedAnonymousMethodDelegate53'
    IL_0067:  ldsfld     class [System.Core]System.Func`2<string,object> LibGit2Sharp.Core.Proxy::'CS$<>9__CachedAnonymousMethodDelegate53'
    IL_006c:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,class [System.Core]System.Func`2<string,object>>::Add(!0,
                                                                                                                                                                                 !1)
    IL_0071:  ldloc.0
    IL_0072:  ldtoken    [mscorlib]System.Boolean
    IL_0077:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_007c:  ldsfld     class [System.Core]System.Func`2<string,object> LibGit2Sharp.Core.Proxy::'CS$<>9__CachedAnonymousMethodDelegate54'
    IL_0081:  brtrue.s   IL_0094

    IL_0083:  ldnull
    IL_0084:  ldftn      object LibGit2Sharp.Core.Proxy::'<.cctor>b__50'(string)
    IL_008a:  newobj     instance void class [System.Core]System.Func`2<string,object>::.ctor(object,
                                                                                              native int)
    IL_008f:  stsfld     class [System.Core]System.Func`2<string,object> LibGit2Sharp.Core.Proxy::'CS$<>9__CachedAnonymousMethodDelegate54'
    IL_0094:  ldsfld     class [System.Core]System.Func`2<string,object> LibGit2Sharp.Core.Proxy::'CS$<>9__CachedAnonymousMethodDelegate54'
    IL_0099:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,class [System.Core]System.Func`2<string,object>>::Add(!0,
                                                                                                                                                                                 !1)
    IL_009e:  ldloc.0
    IL_009f:  ldtoken    [mscorlib]System.String
    IL_00a4:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_00a9:  ldsfld     class [System.Core]System.Func`2<string,object> LibGit2Sharp.Core.Proxy::'CS$<>9__CachedAnonymousMethodDelegate55'
    IL_00ae:  brtrue.s   IL_00c1

    IL_00b0:  ldnull
    IL_00b1:  ldftn      object LibGit2Sharp.Core.Proxy::'<.cctor>b__51'(string)
    IL_00b7:  newobj     instance void class [System.Core]System.Func`2<string,object>::.ctor(object,
                                                                                              native int)
    IL_00bc:  stsfld     class [System.Core]System.Func`2<string,object> LibGit2Sharp.Core.Proxy::'CS$<>9__CachedAnonymousMethodDelegate55'
    IL_00c1:  ldsfld     class [System.Core]System.Func`2<string,object> LibGit2Sharp.Core.Proxy::'CS$<>9__CachedAnonymousMethodDelegate55'
    IL_00c6:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class [mscorlib]System.Type,class [System.Core]System.Func`2<string,object>>::Add(!0,
                                                                                                                                                                                 !1)
    IL_00cb:  ldloc.0
    IL_00cc:  stsfld     class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,class [System.Core]System.Func`2<string,object>> LibGit2Sharp.Core.Proxy::configurationParser
    IL_00d1:  ret
  } // end of method Proxy::.cctor

  .method private hidebysig static object 
          '<.cctor>b__4e'(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       int32 LibGit2Sharp.Core.Proxy::git_config_parse_int32(string)
    IL_0006:  box        [mscorlib]System.Int32
    IL_000b:  ret
  } // end of method Proxy::'<.cctor>b__4e'

  .method private hidebysig static object 
          '<.cctor>b__4f'(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       int64 LibGit2Sharp.Core.Proxy::git_config_parse_int64(string)
    IL_0006:  box        [mscorlib]System.Int64
    IL_000b:  ret
  } // end of method Proxy::'<.cctor>b__4f'

  .method private hidebysig static object 
          '<.cctor>b__50'(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       bool LibGit2Sharp.Core.Proxy::git_config_parse_bool(string)
    IL_0006:  box        [mscorlib]System.Boolean
    IL_000b:  ret
  } // end of method Proxy::'<.cctor>b__50'

  .method private hidebysig static object 
          '<.cctor>b__51'(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ret
  } // end of method Proxy::'<.cctor>b__51'

} // end of class LibGit2Sharp.Core.Proxy

.class public auto ansi beforefieldinit LibGit2Sharp.Credentials
       extends [mscorlib]System.Object
{
  .field private string '<Username>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private string '<Password>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig specialname instance string 
          get_Username() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Credentials::'<Username>k__BackingField'
    IL_0006:  ret
  } // end of method Credentials::get_Username

  .method public hidebysig specialname instance void 
          set_Username(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.Credentials::'<Username>k__BackingField'
    IL_0007:  ret
  } // end of method Credentials::set_Username

  .method public hidebysig specialname instance string 
          get_Password() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Credentials::'<Password>k__BackingField'
    IL_0006:  ret
  } // end of method Credentials::get_Password

  .method public hidebysig specialname instance void 
          set_Password(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.Credentials::'<Password>k__BackingField'
    IL_0007:  ret
  } // end of method Credentials::set_Password

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method Credentials::.ctor

  .property instance string Username()
  {
    .set instance void LibGit2Sharp.Credentials::set_Username(string)
    .get instance string LibGit2Sharp.Credentials::get_Username()
  } // end of property Credentials::Username
  .property instance string Password()
  {
    .set instance void LibGit2Sharp.Credentials::set_Password(string)
    .get instance string LibGit2Sharp.Credentials::get_Password()
  } // end of property Credentials::Password
} // end of class LibGit2Sharp.Credentials

.class public auto ansi sealed LibGit2Sharp.DiffTargets
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.DiffTargets Index = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.DiffTargets WorkingDirectory = int32(0x00000002)
} // end of class LibGit2Sharp.DiffTargets

.class public auto ansi beforefieldinit LibGit2Sharp.FetchHead
       extends class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.GitObject>
{
  .field private string '<RemoteCanonicalName>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private string '<Url>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private bool '<ForMerge>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> 'CS$<>9__CachedAnonymousMethodDelegate1'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.GitObject>::.ctor()
    IL_0006:  ret
  } // end of method FetchHead::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               string remoteCanonicalName,
                               string url,
                               class LibGit2Sharp.ObjectId targetId,
                               bool forMerge,
                               int32 index) cil managed
  {
    // Code size       100 (0x64)
    .maxstack  7
    .locals init (object[] V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0007:  ldstr      "FETCH_HEAD[{0}]"
    IL_000c:  ldc.i4.1
    IL_000d:  newarr     [mscorlib]System.Object
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldc.i4.0
    IL_0015:  ldarg.s    index
    IL_0017:  box        [mscorlib]System.Int32
    IL_001c:  stelem.ref
    IL_001d:  ldloc.0
    IL_001e:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0023:  ldarg.1
    IL_0024:  ldarg.s    targetId
    IL_0026:  newobj     instance void LibGit2Sharp.DirectReference::.ctor(string,
                                                                           class LibGit2Sharp.Repository,
                                                                           class LibGit2Sharp.ObjectId)
    IL_002b:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> LibGit2Sharp.FetchHead::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0030:  brtrue.s   IL_0043

    IL_0032:  ldnull
    IL_0033:  ldftn      string LibGit2Sharp.FetchHead::'<.ctor>b__0'(class LibGit2Sharp.Reference)
    IL_0039:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string>::.ctor(object,
                                                                                                                    native int)
    IL_003e:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> LibGit2Sharp.FetchHead::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0043:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> LibGit2Sharp.FetchHead::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0048:  call       instance void class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.GitObject>::.ctor(class LibGit2Sharp.Repository,
                                                                                                                  class LibGit2Sharp.Reference,
                                                                                                                  class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string>)
    IL_004d:  ldarg.0
    IL_004e:  ldarg.3
    IL_004f:  call       instance void LibGit2Sharp.FetchHead::set_Url(string)
    IL_0054:  ldarg.0
    IL_0055:  ldarg.s    forMerge
    IL_0057:  call       instance void LibGit2Sharp.FetchHead::set_ForMerge(bool)
    IL_005c:  ldarg.0
    IL_005d:  ldarg.2
    IL_005e:  call       instance void LibGit2Sharp.FetchHead::set_RemoteCanonicalName(string)
    IL_0063:  ret
  } // end of method FetchHead::.ctor

  .method family hidebysig virtual instance string 
          Shorten() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.GitObject>::get_CanonicalName()
    IL_0006:  ret
  } // end of method FetchHead::Shorten

  .method public hidebysig newslot specialname virtual 
          instance string  get_RemoteCanonicalName() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.FetchHead::'<RemoteCanonicalName>k__BackingField'
    IL_0006:  ret
  } // end of method FetchHead::get_RemoteCanonicalName

  .method private hidebysig specialname instance void 
          set_RemoteCanonicalName(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.FetchHead::'<RemoteCanonicalName>k__BackingField'
    IL_0007:  ret
  } // end of method FetchHead::set_RemoteCanonicalName

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.GitObject 
          get_Target() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance !0 class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.GitObject>::get_TargetObject()
    IL_0006:  ret
  } // end of method FetchHead::get_Target

  .method public hidebysig newslot specialname virtual 
          instance string  get_Url() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.FetchHead::'<Url>k__BackingField'
    IL_0006:  ret
  } // end of method FetchHead::get_Url

  .method private hidebysig specialname instance void 
          set_Url(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.FetchHead::'<Url>k__BackingField'
    IL_0007:  ret
  } // end of method FetchHead::set_Url

  .method public hidebysig newslot specialname virtual 
          instance bool  get_ForMerge() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      bool LibGit2Sharp.FetchHead::'<ForMerge>k__BackingField'
    IL_0006:  ret
  } // end of method FetchHead::get_ForMerge

  .method private hidebysig specialname instance void 
          set_ForMerge(bool 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      bool LibGit2Sharp.FetchHead::'<ForMerge>k__BackingField'
    IL_0007:  ret
  } // end of method FetchHead::set_ForMerge

  .method private hidebysig static string 
          '<.ctor>b__0'(class LibGit2Sharp.Reference r) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0006:  ret
  } // end of method FetchHead::'<.ctor>b__0'

  .property instance string RemoteCanonicalName()
  {
    .get instance string LibGit2Sharp.FetchHead::get_RemoteCanonicalName()
    .set instance void LibGit2Sharp.FetchHead::set_RemoteCanonicalName(string)
  } // end of property FetchHead::RemoteCanonicalName
  .property instance class LibGit2Sharp.GitObject
          Target()
  {
    .get instance class LibGit2Sharp.GitObject LibGit2Sharp.FetchHead::get_Target()
  } // end of property FetchHead::Target
  .property instance string Url()
  {
    .get instance string LibGit2Sharp.FetchHead::get_Url()
    .set instance void LibGit2Sharp.FetchHead::set_Url(string)
  } // end of property FetchHead::Url
  .property instance bool ForMerge()
  {
    .get instance bool LibGit2Sharp.FetchHead::get_ForMerge()
    .set instance void LibGit2Sharp.FetchHead::set_ForMerge(bool)
  } // end of property FetchHead::ForMerge
} // end of class LibGit2Sharp.FetchHead

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.PushSafeHandle
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_push_free(native int)
    IL_000b:  ldc.i4.1
    IL_000c:  ret
  } // end of method PushSafeHandle::ReleaseHandleImpl

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method PushSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.PushSafeHandle

.class public auto ansi sealed LibGit2Sharp.Handlers.ProgressHandler
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method ProgressHandler::.ctor

  .method public hidebysig newslot virtual 
          instance void  Invoke(string serverProgressOutput) runtime managed
  {
  } // end of method ProgressHandler::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(string serverProgressOutput,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method ProgressHandler::BeginInvoke

  .method public hidebysig newslot virtual 
          instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method ProgressHandler::EndInvoke

} // end of class LibGit2Sharp.Handlers.ProgressHandler

.class public auto ansi sealed LibGit2Sharp.Handlers.UpdateTipsHandler
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method UpdateTipsHandler::.ctor

  .method public hidebysig newslot virtual 
          instance int32  Invoke(string referenceName,
                                 class LibGit2Sharp.ObjectId oldId,
                                 class LibGit2Sharp.ObjectId newId) runtime managed
  {
  } // end of method UpdateTipsHandler::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(string referenceName,
                      class LibGit2Sharp.ObjectId oldId,
                      class LibGit2Sharp.ObjectId newId,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method UpdateTipsHandler::BeginInvoke

  .method public hidebysig newslot virtual 
          instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method UpdateTipsHandler::EndInvoke

} // end of class LibGit2Sharp.Handlers.UpdateTipsHandler

.class public auto ansi sealed LibGit2Sharp.Handlers.CompletionHandler
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method CompletionHandler::.ctor

  .method public hidebysig newslot virtual 
          instance int32  Invoke(valuetype LibGit2Sharp.RemoteCompletionType remoteCompletionType) runtime managed
  {
  } // end of method CompletionHandler::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(valuetype LibGit2Sharp.RemoteCompletionType remoteCompletionType,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method CompletionHandler::BeginInvoke

  .method public hidebysig newslot virtual 
          instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method CompletionHandler::EndInvoke

} // end of class LibGit2Sharp.Handlers.CompletionHandler

.class public auto ansi sealed LibGit2Sharp.Handlers.TransferProgressHandler
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method TransferProgressHandler::.ctor

  .method public hidebysig newslot virtual 
          instance int32  Invoke(class LibGit2Sharp.TransferProgress progress) runtime managed
  {
  } // end of method TransferProgressHandler::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(class LibGit2Sharp.TransferProgress progress,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method TransferProgressHandler::BeginInvoke

  .method public hidebysig newslot virtual 
          instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method TransferProgressHandler::EndInvoke

} // end of class LibGit2Sharp.Handlers.TransferProgressHandler

.class public auto ansi sealed LibGit2Sharp.Handlers.PushStatusErrorHandler
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method PushStatusErrorHandler::.ctor

  .method public hidebysig newslot virtual 
          instance void  Invoke(class LibGit2Sharp.PushStatusError pushStatusErrors) runtime managed
  {
  } // end of method PushStatusErrorHandler::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(class LibGit2Sharp.PushStatusError pushStatusErrors,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method PushStatusErrorHandler::BeginInvoke

  .method public hidebysig newslot virtual 
          instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method PushStatusErrorHandler::EndInvoke

} // end of class LibGit2Sharp.Handlers.PushStatusErrorHandler

.class public auto ansi sealed LibGit2Sharp.Handlers.CheckoutProgressHandler
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method CheckoutProgressHandler::.ctor

  .method public hidebysig newslot virtual 
          instance void  Invoke(string path,
                                int32 completedSteps,
                                int32 totalSteps) runtime managed
  {
  } // end of method CheckoutProgressHandler::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(string path,
                      int32 completedSteps,
                      int32 totalSteps,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method CheckoutProgressHandler::BeginInvoke

  .method public hidebysig newslot virtual 
          instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method CheckoutProgressHandler::EndInvoke

} // end of class LibGit2Sharp.Handlers.CheckoutProgressHandler

.class public auto ansi sealed LibGit2Sharp.Handlers.CheckoutNotifyHandler
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method CheckoutNotifyHandler::.ctor

  .method public hidebysig newslot virtual 
          instance bool  Invoke(string path,
                                valuetype LibGit2Sharp.CheckoutNotifyFlags notifyFlags) runtime managed
  {
  } // end of method CheckoutNotifyHandler::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(string path,
                      valuetype LibGit2Sharp.CheckoutNotifyFlags notifyFlags,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method CheckoutNotifyHandler::BeginInvoke

  .method public hidebysig newslot virtual 
          instance bool  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method CheckoutNotifyHandler::EndInvoke

} // end of class LibGit2Sharp.Handlers.CheckoutNotifyHandler

.class public auto ansi sealed LibGit2Sharp.Handlers.UnmatchedPathHandler
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method UnmatchedPathHandler::.ctor

  .method public hidebysig newslot virtual 
          instance void  Invoke(string unmatchedPath) runtime managed
  {
  } // end of method UnmatchedPathHandler::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(string unmatchedPath,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method UnmatchedPathHandler::BeginInvoke

  .method public hidebysig newslot virtual 
          instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method UnmatchedPathHandler::EndInvoke

} // end of class LibGit2Sharp.Handlers.UnmatchedPathHandler

.class public auto ansi beforefieldinit LibGit2Sharp.Ignore
       extends [mscorlib]System.Object
{
  .field private initonly class LibGit2Sharp.Repository repo
  .field private static class [System.Core]System.Func`3<class [mscorlib]System.Text.StringBuilder,string,class [mscorlib]System.Text.StringBuilder> 'CS$<>9__CachedAnonymousMethodDelegate1'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method Ignore::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Ignore::repo
    IL_000d:  ret
  } // end of method Ignore::.ctor

  .method public hidebysig newslot virtual 
          instance void  AddTemporaryRules(class [mscorlib]System.Collections.Generic.IEnumerable`1<string> rules) cil managed
  {
    // Code size       75 (0x4b)
    .maxstack  5
    .locals init (class [mscorlib]System.Text.StringBuilder V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "rules"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.1
    IL_000c:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_0011:  ldsfld     class [System.Core]System.Func`3<class [mscorlib]System.Text.StringBuilder,string,class [mscorlib]System.Text.StringBuilder> LibGit2Sharp.Ignore::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0016:  brtrue.s   IL_0029

    IL_0018:  ldnull
    IL_0019:  ldftn      class [mscorlib]System.Text.StringBuilder LibGit2Sharp.Ignore::'<AddTemporaryRules>b__0'(class [mscorlib]System.Text.StringBuilder,
                                                                                                                  string)
    IL_001f:  newobj     instance void class [System.Core]System.Func`3<class [mscorlib]System.Text.StringBuilder,string,class [mscorlib]System.Text.StringBuilder>::.ctor(object,
                                                                                                                                                                           native int)
    IL_0024:  stsfld     class [System.Core]System.Func`3<class [mscorlib]System.Text.StringBuilder,string,class [mscorlib]System.Text.StringBuilder> LibGit2Sharp.Ignore::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0029:  ldsfld     class [System.Core]System.Func`3<class [mscorlib]System.Text.StringBuilder,string,class [mscorlib]System.Text.StringBuilder> LibGit2Sharp.Ignore::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_002e:  call       !!1 [System.Core]System.Linq.Enumerable::Aggregate<string,class [mscorlib]System.Text.StringBuilder>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                              !!1,
                                                                                                                              class [System.Core]System.Func`3<!!1,!!0,!!1>)
    IL_0033:  stloc.0
    IL_0034:  ldarg.0
    IL_0035:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Ignore::repo
    IL_003a:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_003f:  ldloc.0
    IL_0040:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0045:  call       void LibGit2Sharp.Core.Proxy::git_ignore_add_rule(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                           string)
    IL_004a:  ret
  } // end of method Ignore::AddTemporaryRules

  .method public hidebysig newslot virtual 
          instance void  ResetAllTemporaryRules() cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Ignore::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  call       void LibGit2Sharp.Core.Proxy::git_ignore_clear_internal_rules(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0010:  ret
  } // end of method Ignore::ResetAllTemporaryRules

  .method public hidebysig newslot virtual 
          instance bool  IsPathIgnored(string relativePath) cil managed
  {
    // Code size       29 (0x1d)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "relativePath"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Ignore::repo
    IL_0011:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0016:  ldarg.1
    IL_0017:  call       bool LibGit2Sharp.Core.Proxy::git_ignore_path_is_ignored(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                  string)
    IL_001c:  ret
  } // end of method Ignore::IsPathIgnored

  .method private hidebysig static class [mscorlib]System.Text.StringBuilder 
          '<AddTemporaryRules>b__0'(class [mscorlib]System.Text.StringBuilder acc,
                                    string x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       22 (0x16)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0007:  pop
    IL_0008:  ldarg.0
    IL_0009:  ldstr      "\n"
    IL_000e:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0013:  pop
    IL_0014:  ldarg.0
    IL_0015:  ret
  } // end of method Ignore::'<AddTemporaryRules>b__0'

} // end of class LibGit2Sharp.Ignore

.class public auto ansi serializable beforefieldinit LibGit2Sharp.MergeConflictException
       extends LibGit2Sharp.LibGit2SharpException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor()
    IL_0006:  ret
  } // end of method MergeConflictException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0007:  ret
  } // end of method MergeConflictException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               class [mscorlib]System.Exception innerException) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 class [mscorlib]System.Exception)
    IL_0008:  ret
  } // end of method MergeConflictException::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                               valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo,
                                                                                 valuetype [mscorlib]System.Runtime.Serialization.StreamingContext)
    IL_0008:  ret
  } // end of method MergeConflictException::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               valuetype LibGit2Sharp.Core.GitErrorCode code,
                               valuetype LibGit2Sharp.Core.GitErrorCategory category) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_0009:  ret
  } // end of method MergeConflictException::.ctor

} // end of class LibGit2Sharp.MergeConflictException

.class public auto ansi beforefieldinit LibGit2Sharp.MergeHead
       extends class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>
{
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> 'CS$<>9__CachedAnonymousMethodDelegate1'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::.ctor()
    IL_0006:  ret
  } // end of method MergeHead::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.ObjectId targetId,
                               int32 index) cil managed
  {
    // Code size       76 (0x4c)
    .maxstack  7
    .locals init (object[] V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0007:  ldstr      "MERGE_HEAD[{0}]"
    IL_000c:  ldc.i4.1
    IL_000d:  newarr     [mscorlib]System.Object
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldc.i4.0
    IL_0015:  ldarg.3
    IL_0016:  box        [mscorlib]System.Int32
    IL_001b:  stelem.ref
    IL_001c:  ldloc.0
    IL_001d:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0022:  ldarg.1
    IL_0023:  ldarg.2
    IL_0024:  newobj     instance void LibGit2Sharp.DirectReference::.ctor(string,
                                                                           class LibGit2Sharp.Repository,
                                                                           class LibGit2Sharp.ObjectId)
    IL_0029:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> LibGit2Sharp.MergeHead::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_002e:  brtrue.s   IL_0041

    IL_0030:  ldnull
    IL_0031:  ldftn      string LibGit2Sharp.MergeHead::'<.ctor>b__0'(class LibGit2Sharp.Reference)
    IL_0037:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string>::.ctor(object,
                                                                                                                    native int)
    IL_003c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> LibGit2Sharp.MergeHead::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0041:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> LibGit2Sharp.MergeHead::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0046:  call       instance void class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::.ctor(class LibGit2Sharp.Repository,
                                                                                                               class LibGit2Sharp.Reference,
                                                                                                               class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string>)
    IL_004b:  ret
  } // end of method MergeHead::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Commit 
          get_Tip() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance !0 class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_TargetObject()
    IL_0006:  ret
  } // end of method MergeHead::get_Tip

  .method family hidebysig virtual instance string 
          Shorten() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_0006:  ret
  } // end of method MergeHead::Shorten

  .method private hidebysig static string 
          '<.ctor>b__0'(class LibGit2Sharp.Reference r) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0006:  ret
  } // end of method MergeHead::'<.ctor>b__0'

  .property instance class LibGit2Sharp.Commit
          Tip()
  {
    .get instance class LibGit2Sharp.Commit LibGit2Sharp.MergeHead::get_Tip()
  } // end of property MergeHead::Tip
} // end of class LibGit2Sharp.MergeHead

.class public auto ansi serializable beforefieldinit LibGit2Sharp.NameConflictException
       extends LibGit2Sharp.LibGit2SharpException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor()
    IL_0006:  ret
  } // end of method NameConflictException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0007:  ret
  } // end of method NameConflictException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               class [mscorlib]System.Exception innerException) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 class [mscorlib]System.Exception)
    IL_0008:  ret
  } // end of method NameConflictException::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                               valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo,
                                                                                 valuetype [mscorlib]System.Runtime.Serialization.StreamingContext)
    IL_0008:  ret
  } // end of method NameConflictException::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               valuetype LibGit2Sharp.Core.GitErrorCode code,
                               valuetype LibGit2Sharp.Core.GitErrorCategory category) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_0009:  ret
  } // end of method NameConflictException::.ctor

} // end of class LibGit2Sharp.NameConflictException

.class public abstract auto ansi sealed beforefieldinit LibGit2Sharp.NetworkExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static void  Push(class LibGit2Sharp.Network network,
                                             class LibGit2Sharp.Branch branch,
                                             [opt] class LibGit2Sharp.Handlers.PushStatusErrorHandler onPushStatusError,
                                             [opt] class LibGit2Sharp.Credentials credentials) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [3] = nullref
    .param [4] = nullref
    // Code size       21 (0x15)
    .maxstack  4
    .locals init (class LibGit2Sharp.Branch[] V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.1
    IL_0002:  newarr     LibGit2Sharp.Branch
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  ldarg.1
    IL_000b:  stelem.ref
    IL_000c:  ldloc.0
    IL_000d:  ldarg.2
    IL_000e:  ldarg.3
    IL_000f:  call       void LibGit2Sharp.NetworkExtensions::Push(class LibGit2Sharp.Network,
                                                                   class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Branch>,
                                                                   class LibGit2Sharp.Handlers.PushStatusErrorHandler,
                                                                   class LibGit2Sharp.Credentials)
    IL_0014:  ret
  } // end of method NetworkExtensions::Push

  .method public hidebysig static void  Push(class LibGit2Sharp.Network network,
                                             class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Branch> branches,
                                             [opt] class LibGit2Sharp.Handlers.PushStatusErrorHandler onPushStatusError,
                                             [opt] class LibGit2Sharp.Credentials credentials) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [3] = nullref
    .param [4] = nullref
    // Code size       172 (0xac)
    .maxstack  5
    .locals init (class [mscorlib]System.Collections.Generic.IList`1<class LibGit2Sharp.Branch> V_0,
             class LibGit2Sharp.Branch V_1,
             class LibGit2Sharp.Branch V_2,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Branch> V_3,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Branch> V_4)
    IL_0000:  ldarg.1
    IL_0001:  isinst     class [mscorlib]System.Collections.Generic.IList`1<class LibGit2Sharp.Branch>
    IL_0006:  dup
    IL_0007:  brtrue.s   IL_0010

    IL_0009:  pop
    IL_000a:  ldarg.1
    IL_000b:  call       class [mscorlib]System.Collections.Generic.List`1<!!0> [System.Core]System.Linq.Enumerable::ToList<class LibGit2Sharp.Branch>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Branch>::GetEnumerator()
    IL_0017:  stloc.3
    .try
    {
      IL_0018:  br.s       IL_004a

      IL_001a:  ldloc.3
      IL_001b:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Branch>::get_Current()
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  callvirt   instance string LibGit2Sharp.Branch::get_UpstreamBranchCanonicalName()
      IL_0027:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
      IL_002c:  brfalse.s  IL_004a

      IL_002e:  ldstr      "The branch '{0}' (\"{1}\") that you are trying to pu"
      + "sh does not track an upstream branch."
      IL_0033:  ldloc.1
      IL_0034:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_Name()
      IL_0039:  ldloc.1
      IL_003a:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
      IL_003f:  call       string [mscorlib]System.String::Format(string,
                                                                  object,
                                                                  object)
      IL_0044:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
      IL_0049:  throw

      IL_004a:  ldloc.3
      IL_004b:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_0050:  brtrue.s   IL_001a

      IL_0052:  leave.s    IL_005e

    }  // end .try
    finally
    {
      IL_0054:  ldloc.3
      IL_0055:  brfalse.s  IL_005d

      IL_0057:  ldloc.3
      IL_0058:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_005d:  endfinally
    }  // end handler
    IL_005e:  ldloc.0
    IL_005f:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Branch>::GetEnumerator()
    IL_0064:  stloc.s    V_4
    .try
    {
      IL_0066:  br.s       IL_0094

      IL_0068:  ldloc.s    V_4
      IL_006a:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Branch>::get_Current()
      IL_006f:  stloc.2
      IL_0070:  ldarg.0
      IL_0071:  ldloc.2
      IL_0072:  callvirt   instance class LibGit2Sharp.Remote LibGit2Sharp.Branch::get_Remote()
      IL_0077:  ldstr      "{0}:{1}"
      IL_007c:  ldloc.2
      IL_007d:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
      IL_0082:  ldloc.2
      IL_0083:  callvirt   instance string LibGit2Sharp.Branch::get_UpstreamBranchCanonicalName()
      IL_0088:  call       string [mscorlib]System.String::Format(string,
                                                                  object,
                                                                  object)
      IL_008d:  ldarg.2
      IL_008e:  ldnull
      IL_008f:  callvirt   instance void LibGit2Sharp.Network::Push(class LibGit2Sharp.Remote,
                                                                    string,
                                                                    class LibGit2Sharp.Handlers.PushStatusErrorHandler,
                                                                    class LibGit2Sharp.Credentials)
      IL_0094:  ldloc.s    V_4
      IL_0096:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_009b:  brtrue.s   IL_0068

      IL_009d:  leave.s    IL_00ab

    }  // end .try
    finally
    {
      IL_009f:  ldloc.s    V_4
      IL_00a1:  brfalse.s  IL_00aa

      IL_00a3:  ldloc.s    V_4
      IL_00a5:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_00aa:  endfinally
    }  // end handler
    IL_00ab:  ret
  } // end of method NetworkExtensions::Push

  .method public hidebysig static class LibGit2Sharp.PushResult 
          Push(class LibGit2Sharp.Network network,
               class LibGit2Sharp.Remote remote,
               string objectish,
               string destinationSpec,
               [opt] class LibGit2Sharp.Credentials credentials) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [5] = nullref
    // Code size       74 (0x4a)
    .maxstack  7
    .locals init (object[] V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "remote"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "objectish"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.3
    IL_0017:  ldstr      "destinationSpec"
    IL_001c:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0021:  ldarg.0
    IL_0022:  ldarg.1
    IL_0023:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0028:  ldstr      "{0}:{1}"
    IL_002d:  ldc.i4.2
    IL_002e:  newarr     [mscorlib]System.Object
    IL_0033:  stloc.0
    IL_0034:  ldloc.0
    IL_0035:  ldc.i4.0
    IL_0036:  ldarg.2
    IL_0037:  stelem.ref
    IL_0038:  ldloc.0
    IL_0039:  ldc.i4.1
    IL_003a:  ldarg.3
    IL_003b:  stelem.ref
    IL_003c:  ldloc.0
    IL_003d:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0042:  ldarg.s    credentials
    IL_0044:  call       class LibGit2Sharp.PushResult LibGit2Sharp.NetworkExtensions::Push(class LibGit2Sharp.Network,
                                                                                            class LibGit2Sharp.Remote,
                                                                                            string,
                                                                                            class LibGit2Sharp.Credentials)
    IL_0049:  ret
  } // end of method NetworkExtensions::Push

  .method public hidebysig static class LibGit2Sharp.PushResult 
          Push(class LibGit2Sharp.Network network,
               class LibGit2Sharp.Remote remote,
               string pushRefSpec,
               [opt] class LibGit2Sharp.Credentials credentials) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [4] = nullref
    // Code size       43 (0x2b)
    .maxstack  5
    .locals init (string[] V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "remote"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "pushRefSpec"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0016:  ldarg.0
    IL_0017:  ldarg.1
    IL_0018:  ldc.i4.1
    IL_0019:  newarr     [mscorlib]System.String
    IL_001e:  stloc.0
    IL_001f:  ldloc.0
    IL_0020:  ldc.i4.0
    IL_0021:  ldarg.2
    IL_0022:  stelem.ref
    IL_0023:  ldloc.0
    IL_0024:  ldarg.3
    IL_0025:  call       class LibGit2Sharp.PushResult LibGit2Sharp.NetworkExtensions::Push(class LibGit2Sharp.Network,
                                                                                            class LibGit2Sharp.Remote,
                                                                                            class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                                            class LibGit2Sharp.Credentials)
    IL_002a:  ret
  } // end of method NetworkExtensions::Push

  .method public hidebysig static class LibGit2Sharp.PushResult 
          Push(class LibGit2Sharp.Network network,
               class LibGit2Sharp.Remote remote,
               class [mscorlib]System.Collections.Generic.IEnumerable`1<string> pushRefSpecs,
               [opt] class LibGit2Sharp.Credentials credentials) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [4] = nullref
    // Code size       56 (0x38)
    .maxstack  6
    .locals init (class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.PushStatusError> V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "remote"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "pushRefSpecs"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.PushStatusError>::.ctor()
    IL_001b:  stloc.0
    IL_001c:  ldarg.0
    IL_001d:  ldarg.1
    IL_001e:  ldarg.2
    IL_001f:  ldloc.0
    IL_0020:  ldftn      instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.PushStatusError>::Add(!0)
    IL_0026:  newobj     instance void LibGit2Sharp.Handlers.PushStatusErrorHandler::.ctor(object,
                                                                                           native int)
    IL_002b:  ldarg.3
    IL_002c:  callvirt   instance void LibGit2Sharp.Network::Push(class LibGit2Sharp.Remote,
                                                                  class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                  class LibGit2Sharp.Handlers.PushStatusErrorHandler,
                                                                  class LibGit2Sharp.Credentials)
    IL_0031:  ldloc.0
    IL_0032:  newobj     instance void LibGit2Sharp.PushResult::.ctor(class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.PushStatusError>)
    IL_0037:  ret
  } // end of method NetworkExtensions::Push

} // end of class LibGit2Sharp.NetworkExtensions

.class public auto ansi serializable beforefieldinit LibGit2Sharp.NonFastForwardException
       extends LibGit2Sharp.LibGit2SharpException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor()
    IL_0006:  ret
  } // end of method NonFastForwardException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0007:  ret
  } // end of method NonFastForwardException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               class [mscorlib]System.Exception innerException) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 class [mscorlib]System.Exception)
    IL_0008:  ret
  } // end of method NonFastForwardException::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                               valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo,
                                                                                 valuetype [mscorlib]System.Runtime.Serialization.StreamingContext)
    IL_0008:  ret
  } // end of method NonFastForwardException::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               valuetype LibGit2Sharp.Core.GitErrorCode code,
                               valuetype LibGit2Sharp.Core.GitErrorCategory category) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_0009:  ret
  } // end of method NonFastForwardException::.ctor

} // end of class LibGit2Sharp.NonFastForwardException

.class public auto ansi beforefieldinit LibGit2Sharp.PushResult
       extends [mscorlib]System.Object
{
  .field private initonly class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.PushStatusError> failedPushUpdates
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method PushResult::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.PushStatusError> 
          get_FailedPushUpdates() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.PushStatusError> LibGit2Sharp.PushResult::failedPushUpdates
    IL_0006:  ret
  } // end of method PushResult::get_FailedPushUpdates

  .method public hidebysig newslot specialname virtual 
          instance bool  get_HasErrors() cil managed
  {
    // Code size       15 (0xf)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.PushStatusError> LibGit2Sharp.PushResult::failedPushUpdates
    IL_0006:  callvirt   instance int32 class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.PushStatusError>::get_Count()
    IL_000b:  ldc.i4.0
    IL_000c:  cgt
    IL_000e:  ret
  } // end of method PushResult::get_HasErrors

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.PushStatusError> failedPushUpdates) cil managed
  {
    // Code size       23 (0x17)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  dup
    IL_0009:  brtrue.s   IL_0011

    IL_000b:  pop
    IL_000c:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.PushStatusError>::.ctor()
    IL_0011:  stfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.PushStatusError> LibGit2Sharp.PushResult::failedPushUpdates
    IL_0016:  ret
  } // end of method PushResult::.ctor

  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.PushStatusError>
          FailedPushUpdates()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.PushStatusError> LibGit2Sharp.PushResult::get_FailedPushUpdates()
  } // end of property PushResult::FailedPushUpdates
  .property instance bool HasErrors()
  {
    .get instance bool LibGit2Sharp.PushResult::get_HasErrors()
  } // end of property PushResult::HasErrors
} // end of class LibGit2Sharp.PushResult

.class public auto ansi beforefieldinit LibGit2Sharp.PushStatusError
       extends [mscorlib]System.Object
{
  .field private string '<Reference>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private string '<Message>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method PushStatusError::.ctor

  .method public hidebysig newslot specialname virtual 
          instance string  get_Reference() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.PushStatusError::'<Reference>k__BackingField'
    IL_0006:  ret
  } // end of method PushStatusError::get_Reference

  .method private hidebysig specialname instance void 
          set_Reference(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.PushStatusError::'<Reference>k__BackingField'
    IL_0007:  ret
  } // end of method PushStatusError::set_Reference

  .method public hidebysig newslot specialname virtual 
          instance string  get_Message() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.PushStatusError::'<Message>k__BackingField'
    IL_0006:  ret
  } // end of method PushStatusError::get_Message

  .method private hidebysig specialname instance void 
          set_Message(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.PushStatusError::'<Message>k__BackingField'
    IL_0007:  ret
  } // end of method PushStatusError::set_Message

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string reference,
                               string message) cil managed
  {
    // Code size       21 (0x15)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void LibGit2Sharp.PushStatusError::set_Reference(string)
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  call       instance void LibGit2Sharp.PushStatusError::set_Message(string)
    IL_0014:  ret
  } // end of method PushStatusError::.ctor

  .property instance string Reference()
  {
    .set instance void LibGit2Sharp.PushStatusError::set_Reference(string)
    .get instance string LibGit2Sharp.PushStatusError::get_Reference()
  } // end of property PushStatusError::Reference
  .property instance string Message()
  {
    .get instance string LibGit2Sharp.PushStatusError::get_Message()
    .set instance void LibGit2Sharp.PushStatusError::set_Message(string)
  } // end of property PushStatusError::Message
} // end of class LibGit2Sharp.PushStatusError

.class public abstract auto ansi sealed beforefieldinit LibGit2Sharp.ReferenceCollectionExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .class auto ansi sealed nested private RefState
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype LibGit2Sharp.ReferenceCollectionExtensions/RefState Exists = int32(0x00000000)
    .field public static literal valuetype LibGit2Sharp.ReferenceCollectionExtensions/RefState DoesNotExistButLooksValid = int32(0x00000001)
    .field public static literal valuetype LibGit2Sharp.ReferenceCollectionExtensions/RefState DoesNotLookValid = int32(0x00000002)
  } // end of class RefState

  .method private hidebysig static valuetype LibGit2Sharp.ReferenceCollectionExtensions/RefState 
          TryResolveReference([out] class LibGit2Sharp.Reference& reference,
                              class LibGit2Sharp.ReferenceCollection refsColl,
                              string canonicalName) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldarg.2
    IL_0002:  callvirt   instance bool LibGit2Sharp.ReferenceCollection::IsValidName(string)
    IL_0007:  brtrue.s   IL_000e

    IL_0009:  ldarg.0
    IL_000a:  ldnull
    IL_000b:  stind.ref
    IL_000c:  ldc.i4.2
    IL_000d:  ret

    IL_000e:  ldarg.0
    IL_000f:  ldarg.1
    IL_0010:  ldarg.2
    IL_0011:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::get_Item(string)
    IL_0016:  stind.ref
    IL_0017:  ldarg.0
    IL_0018:  ldind.ref
    IL_0019:  ldnull
    IL_001a:  call       bool LibGit2Sharp.Reference::op_Inequality(class LibGit2Sharp.Reference,
                                                                    class LibGit2Sharp.Reference)
    IL_001f:  brtrue.s   IL_0023

    IL_0021:  ldc.i4.1
    IL_0022:  ret

    IL_0023:  ldc.i4.0
    IL_0024:  ret
  } // end of method ReferenceCollectionExtensions::TryResolveReference

  .method public hidebysig static class LibGit2Sharp.Reference 
          Add(class LibGit2Sharp.ReferenceCollection refsColl,
              string name,
              string canonicalRefNameOrObjectish,
              [opt] bool allowOverwrite,
              [opt] string logMessage) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [4] = bool(false)
    .param [5] = nullref
    // Code size       149 (0x95)
    .maxstack  5
    .locals init (class LibGit2Sharp.Reference V_0,
             valuetype LibGit2Sharp.ReferenceCollectionExtensions/RefState V_1,
             class LibGit2Sharp.GitObject V_2,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_3,
             class LibGit2Sharp.Reference V_4)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "canonicalRefNameOrObjectish"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0016:  ldloca.s   V_0
    IL_0018:  ldarg.0
    IL_0019:  ldarg.2
    IL_001a:  call       valuetype LibGit2Sharp.ReferenceCollectionExtensions/RefState LibGit2Sharp.ReferenceCollectionExtensions::TryResolveReference(class LibGit2Sharp.Reference&,
                                                                                                                                                       class LibGit2Sharp.ReferenceCollection,
                                                                                                                                                       string)
    IL_001f:  stloc.1
    IL_0020:  ldarg.0
    IL_0021:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
    IL_0026:  ldarg.2
    IL_0027:  ldc.i4.s   -2
    IL_0029:  ldc.i4.0
    IL_002a:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.Repository::Lookup(string,
                                                                                               valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                               valuetype LibGit2Sharp.Core.LookUpOptions)
    IL_002f:  stloc.2
    IL_0030:  ldloc.1
    IL_0031:  brtrue.s   IL_003f

    IL_0033:  ldarg.0
    IL_0034:  ldarg.1
    IL_0035:  ldloc.0
    IL_0036:  ldarg.3
    IL_0037:  ldarg.s    logMessage
    IL_0039:  callvirt   instance class LibGit2Sharp.SymbolicReference LibGit2Sharp.ReferenceCollection::Add(string,
                                                                                                             class LibGit2Sharp.Reference,
                                                                                                             bool,
                                                                                                             string)
    IL_003e:  ret

    IL_003f:  ldloc.1
    IL_0040:  ldc.i4.1
    IL_0041:  bne.un.s   IL_007a

    IL_0043:  ldloc.2
    IL_0044:  ldnull
    IL_0045:  call       bool LibGit2Sharp.GitObject::op_Equality(class LibGit2Sharp.GitObject,
                                                                  class LibGit2Sharp.GitObject)
    IL_004a:  brfalse.s  IL_007a

    IL_004c:  ldarg.0
    IL_004d:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
    IL_0052:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0057:  ldarg.1
    IL_0058:  ldarg.2
    IL_0059:  ldarg.3
    IL_005a:  call       class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.Core.Proxy::git_reference_symbolic_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                    string,
                                                                                                                                    string,
                                                                                                                                    bool)
    IL_005f:  stloc.3
    .try
    {
      IL_0060:  ldloc.3
      IL_0061:  ldarg.0
      IL_0062:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
      IL_0067:  call       !!0 LibGit2Sharp.Reference::BuildFromPtr<class LibGit2Sharp.Reference>(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                                  class LibGit2Sharp.Repository)
      IL_006c:  stloc.s    V_4
      IL_006e:  leave.s    IL_0092

    }  // end .try
    finally
    {
      IL_0070:  ldloc.3
      IL_0071:  brfalse.s  IL_0079

      IL_0073:  ldloc.3
      IL_0074:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0079:  endfinally
    }  // end handler
    IL_007a:  ldloc.2
    IL_007b:  ldarg.2
    IL_007c:  call       void LibGit2Sharp.Core.Ensure::GitObjectIsNotNull(class LibGit2Sharp.GitObject,
                                                                           string)
    IL_0081:  ldarg.0
    IL_0082:  ldarg.1
    IL_0083:  ldloc.2
    IL_0084:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0089:  ldarg.3
    IL_008a:  ldarg.s    logMessage
    IL_008c:  callvirt   instance class LibGit2Sharp.DirectReference LibGit2Sharp.ReferenceCollection::Add(string,
                                                                                                           class LibGit2Sharp.ObjectId,
                                                                                                           bool,
                                                                                                           string)
    IL_0091:  ret

    IL_0092:  ldloc.s    V_4
    IL_0094:  ret
  } // end of method ReferenceCollectionExtensions::Add

  .method public hidebysig static class LibGit2Sharp.Reference 
          UpdateTarget(class LibGit2Sharp.ReferenceCollection refsColl,
                       class LibGit2Sharp.Reference directRef,
                       string objectish,
                       [opt] string logMessage) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [4] = nullref
    // Code size       57 (0x39)
    .maxstack  4
    .locals init (class LibGit2Sharp.GitObject V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "directRef"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "objectish"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.0
    IL_0017:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
    IL_001c:  ldarg.2
    IL_001d:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.Repository::Lookup(string)
    IL_0022:  stloc.0
    IL_0023:  ldloc.0
    IL_0024:  ldarg.2
    IL_0025:  call       void LibGit2Sharp.Core.Ensure::GitObjectIsNotNull(class LibGit2Sharp.GitObject,
                                                                           string)
    IL_002a:  ldarg.0
    IL_002b:  ldarg.1
    IL_002c:  ldloc.0
    IL_002d:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0032:  ldarg.3
    IL_0033:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::UpdateTarget(class LibGit2Sharp.Reference,
                                                                                                              class LibGit2Sharp.ObjectId,
                                                                                                              string)
    IL_0038:  ret
  } // end of method ReferenceCollectionExtensions::UpdateTarget

  .method public hidebysig static class LibGit2Sharp.Reference 
          Move(class LibGit2Sharp.ReferenceCollection refsColl,
               string currentName,
               string newName,
               [opt] bool allowOverwrite) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [4] = bool(false)
    // Code size       71 (0x47)
    .maxstack  5
    .locals init (class LibGit2Sharp.Reference V_0,
             object[] V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "currentName"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::get_Item(string)
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldnull
    IL_0015:  call       bool LibGit2Sharp.Reference::op_Equality(class LibGit2Sharp.Reference,
                                                                  class LibGit2Sharp.Reference)
    IL_001a:  brfalse.s  IL_003d

    IL_001c:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0021:  ldstr      "Reference '{0}' doesn't exist. One cannot move a n"
    + "on existing reference."
    IL_0026:  ldc.i4.1
    IL_0027:  newarr     [mscorlib]System.Object
    IL_002c:  stloc.1
    IL_002d:  ldloc.1
    IL_002e:  ldc.i4.0
    IL_002f:  ldarg.1
    IL_0030:  stelem.ref
    IL_0031:  ldloc.1
    IL_0032:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0037:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_003c:  throw

    IL_003d:  ldarg.0
    IL_003e:  ldloc.0
    IL_003f:  ldarg.2
    IL_0040:  ldarg.3
    IL_0041:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::Move(class LibGit2Sharp.Reference,
                                                                                                      string,
                                                                                                      bool)
    IL_0046:  ret
  } // end of method ReferenceCollectionExtensions::Move

  .method public hidebysig static class LibGit2Sharp.Reference 
          UpdateTarget(class LibGit2Sharp.ReferenceCollection refsColl,
                       string name,
                       string canonicalRefNameOrObjectish,
                       [opt] string logMessage) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [4] = nullref
    // Code size       213 (0xd5)
    .maxstack  5
    .locals init (class LibGit2Sharp.Reference V_0,
             class LibGit2Sharp.DirectReference V_1,
             class LibGit2Sharp.SymbolicReference V_2,
             class LibGit2Sharp.Reference V_3,
             valuetype LibGit2Sharp.ReferenceCollectionExtensions/RefState V_4,
             object[] V_5,
             object[] V_6)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "canonicalRefNameOrObjectish"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0016:  ldarg.1
    IL_0017:  ldstr      "HEAD"
    IL_001c:  call       bool [mscorlib]System.String::op_Equality(string,
                                                                   string)
    IL_0021:  brfalse.s  IL_0032

    IL_0023:  ldarg.0
    IL_0024:  ldstr      "HEAD"
    IL_0029:  ldarg.2
    IL_002a:  ldc.i4.1
    IL_002b:  ldnull
    IL_002c:  call       class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollectionExtensions::Add(class LibGit2Sharp.ReferenceCollection,
                                                                                                      string,
                                                                                                      string,
                                                                                                      bool,
                                                                                                      string)
    IL_0031:  ret

    IL_0032:  ldarg.0
    IL_0033:  ldarg.1
    IL_0034:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::get_Item(string)
    IL_0039:  stloc.0
    IL_003a:  ldloc.0
    IL_003b:  isinst     LibGit2Sharp.DirectReference
    IL_0040:  stloc.1
    IL_0041:  ldloc.1
    IL_0042:  ldnull
    IL_0043:  call       bool LibGit2Sharp.Reference::op_Inequality(class LibGit2Sharp.Reference,
                                                                    class LibGit2Sharp.Reference)
    IL_0048:  brfalse.s  IL_0054

    IL_004a:  ldarg.0
    IL_004b:  ldloc.1
    IL_004c:  ldarg.2
    IL_004d:  ldarg.3
    IL_004e:  call       class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollectionExtensions::UpdateTarget(class LibGit2Sharp.ReferenceCollection,
                                                                                                               class LibGit2Sharp.Reference,
                                                                                                               string,
                                                                                                               string)
    IL_0053:  ret

    IL_0054:  ldloc.0
    IL_0055:  isinst     LibGit2Sharp.SymbolicReference
    IL_005a:  stloc.2
    IL_005b:  ldloc.2
    IL_005c:  ldnull
    IL_005d:  call       bool LibGit2Sharp.Reference::op_Inequality(class LibGit2Sharp.Reference,
                                                                    class LibGit2Sharp.Reference)
    IL_0062:  brfalse.s  IL_00a7

    IL_0064:  ldloca.s   V_3
    IL_0066:  ldarg.0
    IL_0067:  ldarg.2
    IL_0068:  call       valuetype LibGit2Sharp.ReferenceCollectionExtensions/RefState LibGit2Sharp.ReferenceCollectionExtensions::TryResolveReference(class LibGit2Sharp.Reference&,
                                                                                                                                                       class LibGit2Sharp.ReferenceCollection,
                                                                                                                                                       string)
    IL_006d:  stloc.s    V_4
    IL_006f:  ldloc.s    V_4
    IL_0071:  ldc.i4.2
    IL_0072:  bne.un.s   IL_009d

    IL_0074:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0079:  ldstr      "The reference specified by {0} is a Symbolic refer"
    + "ence, you must provide a reference canonical name as the target."
    IL_007e:  ldc.i4.1
    IL_007f:  newarr     [mscorlib]System.Object
    IL_0084:  stloc.s    V_5
    IL_0086:  ldloc.s    V_5
    IL_0088:  ldc.i4.0
    IL_0089:  ldarg.1
    IL_008a:  stelem.ref
    IL_008b:  ldloc.s    V_5
    IL_008d:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0092:  ldstr      "canonicalRefNameOrObjectish"
    IL_0097:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string,
                                                                                 string)
    IL_009c:  throw

    IL_009d:  ldarg.0
    IL_009e:  ldloc.2
    IL_009f:  ldloc.3
    IL_00a0:  ldarg.3
    IL_00a1:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::UpdateTarget(class LibGit2Sharp.Reference,
                                                                                                              class LibGit2Sharp.Reference,
                                                                                                              string)
    IL_00a6:  ret

    IL_00a7:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_00ac:  ldstr      "Reference '{0}' has an unexpected type ('{1}')."
    IL_00b1:  ldc.i4.2
    IL_00b2:  newarr     [mscorlib]System.Object
    IL_00b7:  stloc.s    V_6
    IL_00b9:  ldloc.s    V_6
    IL_00bb:  ldc.i4.0
    IL_00bc:  ldarg.1
    IL_00bd:  stelem.ref
    IL_00be:  ldloc.s    V_6
    IL_00c0:  ldc.i4.1
    IL_00c1:  ldloc.0
    IL_00c2:  callvirt   instance class [mscorlib]System.Type [mscorlib]System.Object::GetType()
    IL_00c7:  stelem.ref
    IL_00c8:  ldloc.s    V_6
    IL_00ca:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_00cf:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_00d4:  throw
  } // end of method ReferenceCollectionExtensions::UpdateTarget

  .method public hidebysig static void  Remove(class LibGit2Sharp.ReferenceCollection refsColl,
                                               string name) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       37 (0x25)
    .maxstack  2
    .locals init (class LibGit2Sharp.Reference V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::get_Item(string)
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldnull
    IL_0015:  call       bool LibGit2Sharp.Reference::op_Equality(class LibGit2Sharp.Reference,
                                                                  class LibGit2Sharp.Reference)
    IL_001a:  brfalse.s  IL_001d

    IL_001c:  ret

    IL_001d:  ldarg.0
    IL_001e:  ldloc.0
    IL_001f:  callvirt   instance void LibGit2Sharp.ReferenceCollection::Remove(class LibGit2Sharp.Reference)
    IL_0024:  ret
  } // end of method ReferenceCollectionExtensions::Remove

  .method public hidebysig static class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Reference> 
          ReachableFrom(class LibGit2Sharp.ReferenceCollection refsColl,
                        class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Reference> refSubset,
                        class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> targets) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       213 (0xd5)
    .maxstack  3
    .locals init (class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Reference> V_0,
             class [System.Core]System.Collections.Generic.HashSet`1<class LibGit2Sharp.Commit> V_1,
             class LibGit2Sharp.IQueryableCommitLog V_2,
             class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Reference> V_3,
             class LibGit2Sharp.Reference V_4,
             class LibGit2Sharp.Commit V_5,
             class LibGit2Sharp.CommitFilter V_6,
             valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<class LibGit2Sharp.Reference> V_7,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Commit> V_8)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "refSubset"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "targets"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.1
    IL_0017:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Reference>::.ctor(class [mscorlib]System.Collections.Generic.IEnumerable`1<!0>)
    IL_001c:  stloc.0
    IL_001d:  ldloc.0
    IL_001e:  callvirt   instance int32 class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Reference>::get_Count()
    IL_0023:  brtrue.s   IL_002b

    IL_0025:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> [System.Core]System.Linq.Enumerable::Empty<class LibGit2Sharp.Reference>()
    IL_002a:  ret

    IL_002b:  ldarg.2
    IL_002c:  newobj     instance void class [System.Core]System.Collections.Generic.HashSet`1<class LibGit2Sharp.Commit>::.ctor(class [mscorlib]System.Collections.Generic.IEnumerable`1<!0>)
    IL_0031:  stloc.1
    IL_0032:  ldloc.1
    IL_0033:  callvirt   instance int32 class [System.Core]System.Collections.Generic.HashSet`1<class LibGit2Sharp.Commit>::get_Count()
    IL_0038:  brtrue.s   IL_0040

    IL_003a:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> [System.Core]System.Linq.Enumerable::Empty<class LibGit2Sharp.Reference>()
    IL_003f:  ret

    IL_0040:  ldarg.0
    IL_0041:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
    IL_0046:  callvirt   instance class LibGit2Sharp.IQueryableCommitLog LibGit2Sharp.Repository::get_Commits()
    IL_004b:  stloc.2
    IL_004c:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Reference>::.ctor()
    IL_0051:  stloc.3
    IL_0052:  ldloc.0
    IL_0053:  callvirt   instance valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<!0> class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Reference>::GetEnumerator()
    IL_0058:  stloc.s    V_7
    .try
    {
      IL_005a:  br.s       IL_00ba

      IL_005c:  ldloca.s   V_7
      IL_005e:  call       instance !0 valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<class LibGit2Sharp.Reference>::get_Current()
      IL_0063:  stloc.s    V_4
      IL_0065:  ldloc.2
      IL_0066:  newobj     instance void LibGit2Sharp.CommitFilter::.ctor()
      IL_006b:  stloc.s    V_6
      IL_006d:  ldloc.s    V_6
      IL_006f:  ldloc.s    V_4
      IL_0071:  callvirt   instance void LibGit2Sharp.CommitFilter::set_Since(object)
      IL_0076:  ldloc.s    V_6
      IL_0078:  callvirt   instance class LibGit2Sharp.ICommitLog LibGit2Sharp.IQueryableCommitLog::QueryBy(class LibGit2Sharp.CommitFilter)
      IL_007d:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>::GetEnumerator()
      IL_0082:  stloc.s    V_8
      .try
      {
        IL_0084:  br.s       IL_00a3

        IL_0086:  ldloc.s    V_8
        IL_0088:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Commit>::get_Current()
        IL_008d:  stloc.s    V_5
        IL_008f:  ldloc.1
        IL_0090:  ldloc.s    V_5
        IL_0092:  callvirt   instance bool class [System.Core]System.Collections.Generic.HashSet`1<class LibGit2Sharp.Commit>::Contains(!0)
        IL_0097:  brfalse.s  IL_00a3

        IL_0099:  ldloc.3
        IL_009a:  ldloc.s    V_4
        IL_009c:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Reference>::Add(!0)
        IL_00a1:  br.s       IL_00ac

        IL_00a3:  ldloc.s    V_8
        IL_00a5:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
        IL_00aa:  brtrue.s   IL_0086

        IL_00ac:  leave.s    IL_00ba

      }  // end .try
      finally
      {
        IL_00ae:  ldloc.s    V_8
        IL_00b0:  brfalse.s  IL_00b9

        IL_00b2:  ldloc.s    V_8
        IL_00b4:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_00b9:  endfinally
      }  // end handler
      IL_00ba:  ldloca.s   V_7
      IL_00bc:  call       instance bool valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<class LibGit2Sharp.Reference>::MoveNext()
      IL_00c1:  brtrue.s   IL_005c

      IL_00c3:  leave.s    IL_00d3

    }  // end .try
    finally
    {
      IL_00c5:  ldloca.s   V_7
      IL_00c7:  constrained. valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<class LibGit2Sharp.Reference>
      IL_00cd:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_00d2:  endfinally
    }  // end handler
    IL_00d3:  ldloc.3
    IL_00d4:  ret
  } // end of method ReferenceCollectionExtensions::ReachableFrom

  .method public hidebysig static class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Reference> 
          ReachableFrom(class LibGit2Sharp.ReferenceCollection refsColl,
                        class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> targets) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Reference> LibGit2Sharp.ReferenceCollectionExtensions::ReachableFrom(class LibGit2Sharp.ReferenceCollection,
                                                                                                                                                                          class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Reference>,
                                                                                                                                                                          class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>)
    IL_0008:  ret
  } // end of method ReferenceCollectionExtensions::ReachableFrom

} // end of class LibGit2Sharp.ReferenceCollectionExtensions

.class private sequential ansi sealed beforefieldinit LibGit2Sharp.Core.GitRemoteCallbacks
       extends [mscorlib]System.ValueType
{
  .field assembly uint32 version
  .field assembly class LibGit2Sharp.Core.NativeMethods/remote_progress_callback progress
  .field assembly class LibGit2Sharp.Core.NativeMethods/remote_completion_callback completion
  .field assembly class LibGit2Sharp.Core.NativeMethods/remote_update_tips_callback update_tips
  .field assembly native int payload
} // end of class LibGit2Sharp.Core.GitRemoteCallbacks

.class private auto ansi beforefieldinit LibGit2Sharp.RemoteCallbacks
       extends [mscorlib]System.Object
{
  .field private initonly class LibGit2Sharp.Handlers.ProgressHandler Progress
  .field private initonly class LibGit2Sharp.Handlers.UpdateTipsHandler UpdateTips
  .field private initonly class LibGit2Sharp.Handlers.CompletionHandler Completion
  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor([opt] class LibGit2Sharp.Handlers.ProgressHandler onProgress,
                               [opt] class LibGit2Sharp.Handlers.CompletionHandler onCompletion,
                               [opt] class LibGit2Sharp.Handlers.UpdateTipsHandler onUpdateTips) cil managed
  {
    .param [1] = nullref
    .param [2] = nullref
    .param [3] = nullref
    // Code size       28 (0x1c)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Handlers.ProgressHandler LibGit2Sharp.RemoteCallbacks::Progress
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  stfld      class LibGit2Sharp.Handlers.CompletionHandler LibGit2Sharp.RemoteCallbacks::Completion
    IL_0014:  ldarg.0
    IL_0015:  ldarg.3
    IL_0016:  stfld      class LibGit2Sharp.Handlers.UpdateTipsHandler LibGit2Sharp.RemoteCallbacks::UpdateTips
    IL_001b:  ret
  } // end of method RemoteCallbacks::.ctor

  .method assembly hidebysig instance valuetype LibGit2Sharp.Core.GitRemoteCallbacks 
          GenerateCallbacks() cil managed
  {
    // Code size       101 (0x65)
    .maxstack  4
    .locals init (valuetype LibGit2Sharp.Core.GitRemoteCallbacks V_0,
             valuetype LibGit2Sharp.Core.GitRemoteCallbacks V_1)
    IL_0000:  ldloca.s   V_1
    IL_0002:  initobj    LibGit2Sharp.Core.GitRemoteCallbacks
    IL_0008:  ldloca.s   V_1
    IL_000a:  ldc.i4.1
    IL_000b:  stfld      uint32 LibGit2Sharp.Core.GitRemoteCallbacks::version
    IL_0010:  ldloc.1
    IL_0011:  stloc.0
    IL_0012:  ldarg.0
    IL_0013:  ldfld      class LibGit2Sharp.Handlers.ProgressHandler LibGit2Sharp.RemoteCallbacks::Progress
    IL_0018:  brfalse.s  IL_002d

    IL_001a:  ldloca.s   V_0
    IL_001c:  ldarg.0
    IL_001d:  ldftn      instance void LibGit2Sharp.RemoteCallbacks::GitProgressHandler(native int,
                                                                                        int32,
                                                                                        native int)
    IL_0023:  newobj     instance void LibGit2Sharp.Core.NativeMethods/remote_progress_callback::.ctor(object,
                                                                                                       native int)
    IL_0028:  stfld      class LibGit2Sharp.Core.NativeMethods/remote_progress_callback LibGit2Sharp.Core.GitRemoteCallbacks::progress
    IL_002d:  ldarg.0
    IL_002e:  ldfld      class LibGit2Sharp.Handlers.UpdateTipsHandler LibGit2Sharp.RemoteCallbacks::UpdateTips
    IL_0033:  brfalse.s  IL_0048

    IL_0035:  ldloca.s   V_0
    IL_0037:  ldarg.0
    IL_0038:  ldftn      instance int32 LibGit2Sharp.RemoteCallbacks::GitUpdateTipsHandler(native int,
                                                                                           valuetype LibGit2Sharp.Core.GitOid&,
                                                                                           valuetype LibGit2Sharp.Core.GitOid&,
                                                                                           native int)
    IL_003e:  newobj     instance void LibGit2Sharp.Core.NativeMethods/remote_update_tips_callback::.ctor(object,
                                                                                                          native int)
    IL_0043:  stfld      class LibGit2Sharp.Core.NativeMethods/remote_update_tips_callback LibGit2Sharp.Core.GitRemoteCallbacks::update_tips
    IL_0048:  ldarg.0
    IL_0049:  ldfld      class LibGit2Sharp.Handlers.CompletionHandler LibGit2Sharp.RemoteCallbacks::Completion
    IL_004e:  brfalse.s  IL_0063

    IL_0050:  ldloca.s   V_0
    IL_0052:  ldarg.0
    IL_0053:  ldftn      instance int32 LibGit2Sharp.RemoteCallbacks::GitCompletionHandler(valuetype LibGit2Sharp.RemoteCompletionType,
                                                                                           native int)
    IL_0059:  newobj     instance void LibGit2Sharp.Core.NativeMethods/remote_completion_callback::.ctor(object,
                                                                                                         native int)
    IL_005e:  stfld      class LibGit2Sharp.Core.NativeMethods/remote_completion_callback LibGit2Sharp.Core.GitRemoteCallbacks::completion
    IL_0063:  ldloc.0
    IL_0064:  ret
  } // end of method RemoteCallbacks::GenerateCallbacks

  .method private hidebysig instance void 
          GitProgressHandler(native int str,
                             int32 len,
                             native int data) cil managed
  {
    // Code size       26 (0x1a)
    .maxstack  2
    .locals init (class LibGit2Sharp.Handlers.ProgressHandler V_0,
             string V_1)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Handlers.ProgressHandler LibGit2Sharp.RemoteCallbacks::Progress
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  brfalse.s  IL_0019

    IL_000a:  ldarg.1
    IL_000b:  ldarg.2
    IL_000c:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int,
                                                                            int32)
    IL_0011:  stloc.1
    IL_0012:  ldloc.0
    IL_0013:  ldloc.1
    IL_0014:  callvirt   instance void LibGit2Sharp.Handlers.ProgressHandler::Invoke(string)
    IL_0019:  ret
  } // end of method RemoteCallbacks::GitProgressHandler

  .method private hidebysig instance int32 
          GitUpdateTipsHandler(native int str,
                               valuetype LibGit2Sharp.Core.GitOid& oldId,
                               valuetype LibGit2Sharp.Core.GitOid& newId,
                               native int data) cil managed
  {
    // Code size       51 (0x33)
    .maxstack  4
    .locals init (class LibGit2Sharp.Handlers.UpdateTipsHandler V_0,
             int32 V_1,
             string V_2)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Handlers.UpdateTipsHandler LibGit2Sharp.RemoteCallbacks::UpdateTips
    IL_0006:  stloc.0
    IL_0007:  ldc.i4.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.0
    IL_000a:  brfalse.s  IL_0031

    IL_000c:  ldarg.1
    IL_000d:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
    IL_0012:  stloc.2
    IL_0013:  ldloc.0
    IL_0014:  ldloc.2
    IL_0015:  ldarg.2
    IL_0016:  ldobj      LibGit2Sharp.Core.GitOid
    IL_001b:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
    IL_0020:  ldarg.3
    IL_0021:  ldobj      LibGit2Sharp.Core.GitOid
    IL_0026:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
    IL_002b:  callvirt   instance int32 LibGit2Sharp.Handlers.UpdateTipsHandler::Invoke(string,
                                                                                        class LibGit2Sharp.ObjectId,
                                                                                        class LibGit2Sharp.ObjectId)
    IL_0030:  stloc.1
    IL_0031:  ldloc.1
    IL_0032:  ret
  } // end of method RemoteCallbacks::GitUpdateTipsHandler

  .method private hidebysig instance int32 
          GitCompletionHandler(valuetype LibGit2Sharp.RemoteCompletionType remoteCompletionType,
                               native int data) cil managed
  {
    // Code size       22 (0x16)
    .maxstack  2
    .locals init (class LibGit2Sharp.Handlers.CompletionHandler V_0,
             int32 V_1)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Handlers.CompletionHandler LibGit2Sharp.RemoteCallbacks::Completion
    IL_0006:  stloc.0
    IL_0007:  ldc.i4.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.0
    IL_000a:  brfalse.s  IL_0014

    IL_000c:  ldloc.0
    IL_000d:  ldarg.1
    IL_000e:  callvirt   instance int32 LibGit2Sharp.Handlers.CompletionHandler::Invoke(valuetype LibGit2Sharp.RemoteCompletionType)
    IL_0013:  stloc.1
    IL_0014:  ldloc.1
    IL_0015:  ret
  } // end of method RemoteCallbacks::GitCompletionHandler

} // end of class LibGit2Sharp.RemoteCallbacks

.class public auto ansi sealed LibGit2Sharp.RemoteCompletionType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.RemoteCompletionType Download = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.RemoteCompletionType Indexing = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.RemoteCompletionType Error = int32(0x00000002)
} // end of class LibGit2Sharp.RemoteCompletionType

.class public auto ansi sealed LibGit2Sharp.CurrentOperation
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.CurrentOperation None = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.CurrentOperation Merge = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.CurrentOperation Revert = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.CurrentOperation CherryPick = int32(0x00000003)
  .field public static literal valuetype LibGit2Sharp.CurrentOperation Bisect = int32(0x00000004)
  .field public static literal valuetype LibGit2Sharp.CurrentOperation Rebase = int32(0x00000005)
  .field public static literal valuetype LibGit2Sharp.CurrentOperation RebaseInteractive = int32(0x00000006)
  .field public static literal valuetype LibGit2Sharp.CurrentOperation RebaseMerge = int32(0x00000007)
  .field public static literal valuetype LibGit2Sharp.CurrentOperation ApplyMailbox = int32(0x00000008)
  .field public static literal valuetype LibGit2Sharp.CurrentOperation ApplyMailboxOrRebase = int32(0x00000009)
} // end of class LibGit2Sharp.CurrentOperation

.class public auto ansi sealed LibGit2Sharp.StageLevel
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.StageLevel Staged = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.StageLevel Ancestor = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.StageLevel Ours = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.StageLevel Theirs = int32(0x00000003)
} // end of class LibGit2Sharp.StageLevel

.class public abstract auto ansi sealed beforefieldinit LibGit2Sharp.TagCollectionExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static class LibGit2Sharp.Tag 
          Add(class LibGit2Sharp.TagCollection tags,
              string name,
              string objectish,
              class LibGit2Sharp.Signature tagger,
              string message,
              [opt] bool allowOverwrite) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [6] = bool(false)
    // Code size       41 (0x29)
    .maxstack  6
    .locals init (class LibGit2Sharp.GitObject V_0)
    IL_0000:  ldarg.2
    IL_0001:  ldstr      "target"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.TagCollection::repo
    IL_0011:  ldarg.2
    IL_0012:  ldc.i4.s   -2
    IL_0014:  ldc.i4.1
    IL_0015:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.Repository::Lookup(string,
                                                                                               valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                               valuetype LibGit2Sharp.Core.LookUpOptions)
    IL_001a:  stloc.0
    IL_001b:  ldarg.0
    IL_001c:  ldarg.1
    IL_001d:  ldloc.0
    IL_001e:  ldarg.3
    IL_001f:  ldarg.s    message
    IL_0021:  ldarg.s    allowOverwrite
    IL_0023:  callvirt   instance class LibGit2Sharp.Tag LibGit2Sharp.TagCollection::Add(string,
                                                                                         class LibGit2Sharp.GitObject,
                                                                                         class LibGit2Sharp.Signature,
                                                                                         string,
                                                                                         bool)
    IL_0028:  ret
  } // end of method TagCollectionExtensions::Add

  .method public hidebysig static class LibGit2Sharp.Tag 
          Add(class LibGit2Sharp.TagCollection tags,
              string name,
              string objectish,
              [opt] bool allowOverwrite) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [4] = bool(false)
    // Code size       37 (0x25)
    .maxstack  4
    .locals init (class LibGit2Sharp.GitObject V_0)
    IL_0000:  ldarg.2
    IL_0001:  ldstr      "objectish"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.TagCollection::repo
    IL_0011:  ldarg.2
    IL_0012:  ldc.i4.s   -2
    IL_0014:  ldc.i4.1
    IL_0015:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.Repository::Lookup(string,
                                                                                               valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                               valuetype LibGit2Sharp.Core.LookUpOptions)
    IL_001a:  stloc.0
    IL_001b:  ldarg.0
    IL_001c:  ldarg.1
    IL_001d:  ldloc.0
    IL_001e:  ldarg.3
    IL_001f:  callvirt   instance class LibGit2Sharp.Tag LibGit2Sharp.TagCollection::Add(string,
                                                                                         class LibGit2Sharp.GitObject,
                                                                                         bool)
    IL_0024:  ret
  } // end of method TagCollectionExtensions::Add

  .method public hidebysig static void  Remove(class LibGit2Sharp.TagCollection tags,
                                               string name) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       34 (0x22)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.TagCollection::repo
    IL_0011:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0016:  ldarg.1
    IL_0017:  call       string LibGit2Sharp.TagCollection::UnCanonicalizeName(string)
    IL_001c:  call       void LibGit2Sharp.Core.Proxy::git_tag_delete(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                      string)
    IL_0021:  ret
  } // end of method TagCollectionExtensions::Remove

} // end of class LibGit2Sharp.TagCollectionExtensions

.class public abstract auto ansi sealed beforefieldinit LibGit2Sharp.Core.Compat.Environment
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname static 
          bool  get_Is64BitProcess() cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  call       int32 [mscorlib]System.IntPtr::get_Size()
    IL_0005:  ldc.i4.8
    IL_0006:  ceq
    IL_0008:  ret
  } // end of method Environment::get_Is64BitProcess

  .property bool Is64BitProcess()
  {
    .get bool LibGit2Sharp.Core.Compat.Environment::get_Is64BitProcess()
  } // end of property Environment::Is64BitProcess
} // end of class LibGit2Sharp.Core.Compat.Environment

.class private auto ansi beforefieldinit LibGit2Sharp.Core.FilePath
       extends [mscorlib]System.Object
       implements class [mscorlib]System.IEquatable`1<class LibGit2Sharp.Core.FilePath>
{
  .field private static literal char posixDirectorySeparatorChar = char(0x002F)
  .field static assembly class LibGit2Sharp.Core.FilePath Empty
  .field private initonly string 'native'
  .field private initonly string posix
  .method private hidebysig specialname rtspecialname 
          instance void  .ctor(string path) cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  ldc.i4.s   47
    IL_000a:  ldsfld     char [mscorlib]System.IO.Path::DirectorySeparatorChar
    IL_000f:  call       string LibGit2Sharp.Core.FilePath::Replace(string,
                                                                    char,
                                                                    char)
    IL_0014:  stfld      string LibGit2Sharp.Core.FilePath::'native'
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldsfld     char [mscorlib]System.IO.Path::DirectorySeparatorChar
    IL_0020:  ldc.i4.s   47
    IL_0022:  call       string LibGit2Sharp.Core.FilePath::Replace(string,
                                                                    char,
                                                                    char)
    IL_0027:  stfld      string LibGit2Sharp.Core.FilePath::posix
    IL_002c:  ret
  } // end of method FilePath::.ctor

  .method public hidebysig specialname instance string 
          get_Native() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Core.FilePath::'native'
    IL_0006:  ret
  } // end of method FilePath::get_Native

  .method public hidebysig specialname instance string 
          get_Posix() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Core.FilePath::posix
    IL_0006:  ret
  } // end of method FilePath::get_Posix

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance string LibGit2Sharp.Core.FilePath::get_Native()
    IL_0006:  ret
  } // end of method FilePath::ToString

  .method public hidebysig specialname static 
          class LibGit2Sharp.Core.FilePath 
          op_Implicit(string path) cil managed
  {
    // Code size       35 (0x23)
    .maxstack  2
    .locals init (string V_0)
    IL_0000:  ldarg.0
    IL_0001:  dup
    IL_0002:  stloc.0
    IL_0003:  brfalse.s  IL_0014

    IL_0005:  ldloc.0
    IL_0006:  ldstr      ""
    IL_000b:  call       bool [mscorlib]System.String::op_Equality(string,
                                                                   string)
    IL_0010:  brtrue.s   IL_0016

    IL_0012:  br.s       IL_001c

    IL_0014:  ldnull
    IL_0015:  ret

    IL_0016:  ldsfld     class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::Empty
    IL_001b:  ret

    IL_001c:  ldarg.0
    IL_001d:  newobj     instance void LibGit2Sharp.Core.FilePath::.ctor(string)
    IL_0022:  ret
  } // end of method FilePath::op_Implicit

  .method private hidebysig static string 
          Replace(string path,
                  char oldChar,
                  char newChar) cil managed
  {
    // Code size       20 (0x14)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldarg.2
    IL_0002:  bne.un.s   IL_0006

    IL_0004:  ldarg.0
    IL_0005:  ret

    IL_0006:  ldarg.0
    IL_0007:  brfalse.s  IL_0012

    IL_0009:  ldarg.0
    IL_000a:  ldarg.1
    IL_000b:  ldarg.2
    IL_000c:  callvirt   instance string [mscorlib]System.String::Replace(char,
                                                                          char)
    IL_0011:  ret

    IL_0012:  ldnull
    IL_0013:  ret
  } // end of method FilePath::Replace

  .method public hidebysig newslot virtual final 
          instance bool  Equals(class LibGit2Sharp.Core.FilePath other) cil managed
  {
    // Code size       32 (0x20)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse.s  IL_0016

    IL_0003:  ldarg.0
    IL_0004:  ldfld      string LibGit2Sharp.Core.FilePath::posix
    IL_0009:  ldarg.1
    IL_000a:  ldfld      string LibGit2Sharp.Core.FilePath::posix
    IL_000f:  ldc.i4.4
    IL_0010:  call       bool [mscorlib]System.String::Equals(string,
                                                              string,
                                                              valuetype [mscorlib]System.StringComparison)
    IL_0015:  ret

    IL_0016:  ldarg.0
    IL_0017:  ldfld      string LibGit2Sharp.Core.FilePath::posix
    IL_001c:  ldnull
    IL_001d:  ceq
    IL_001f:  ret
  } // end of method FilePath::Equals

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  isinst     LibGit2Sharp.Core.FilePath
    IL_0007:  call       instance bool LibGit2Sharp.Core.FilePath::Equals(class LibGit2Sharp.Core.FilePath)
    IL_000c:  ret
  } // end of method FilePath::Equals

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       22 (0x16)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Core.FilePath::posix
    IL_0006:  brfalse.s  IL_0014

    IL_0008:  ldarg.0
    IL_0009:  ldfld      string LibGit2Sharp.Core.FilePath::posix
    IL_000e:  callvirt   instance int32 [mscorlib]System.Object::GetHashCode()
    IL_0013:  ret

    IL_0014:  ldc.i4.0
    IL_0015:  ret
  } // end of method FilePath::GetHashCode

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       16 (0x10)
    .maxstack  8
    IL_0000:  ldsfld     string [mscorlib]System.String::Empty
    IL_0005:  newobj     instance void LibGit2Sharp.Core.FilePath::.ctor(string)
    IL_000a:  stsfld     class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::Empty
    IL_000f:  ret
  } // end of method FilePath::.cctor

  .property instance string Native()
  {
    .get instance string LibGit2Sharp.Core.FilePath::get_Native()
  } // end of property FilePath::Native
  .property instance string Posix()
  {
    .get instance string LibGit2Sharp.Core.FilePath::get_Posix()
  } // end of property FilePath::Posix
} // end of class LibGit2Sharp.Core.FilePath

.class private abstract auto ansi sealed beforefieldinit LibGit2Sharp.Core.FilePathExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .method assembly hidebysig static class LibGit2Sharp.Core.FilePath 
          Combine(class LibGit2Sharp.Core.FilePath this,
                  string childPath) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       34 (0x22)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       bool LibGit2Sharp.Core.FilePathExtensions::IsNullOrEmpty(class LibGit2Sharp.Core.FilePath)
    IL_0006:  brtrue.s   IL_001b

    IL_0008:  ldarg.0
    IL_0009:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Posix()
    IL_000e:  ldstr      "/"
    IL_0013:  ldarg.1
    IL_0014:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_0019:  br.s       IL_001c

    IL_001b:  ldarg.1
    IL_001c:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0021:  ret
  } // end of method FilePathExtensions::Combine

  .method assembly hidebysig static bool 
          IsNullOrEmpty(class LibGit2Sharp.Core.FilePath this) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       26 (0x1a)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  call       bool [mscorlib]System.Object::ReferenceEquals(object,
                                                                       object)
    IL_0007:  brtrue.s   IL_0018

    IL_0009:  ldarg.0
    IL_000a:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Posix()
    IL_000f:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0014:  ldc.i4.0
    IL_0015:  ceq
    IL_0017:  ret

    IL_0018:  ldc.i4.1
    IL_0019:  ret
  } // end of method FilePathExtensions::IsNullOrEmpty

} // end of class LibGit2Sharp.Core.FilePathExtensions

.class private auto ansi beforefieldinit LibGit2Sharp.Core.FilePathMarshaler
       extends [mscorlib]System.Object
       implements [mscorlib]System.Runtime.InteropServices.ICustomMarshaler
{
  .field private static initonly class LibGit2Sharp.Core.FilePathMarshaler staticInstance
  .method public hidebysig static class [mscorlib]System.Runtime.InteropServices.ICustomMarshaler 
          GetInstance(string cookie) cil managed
  {
    // Code size       6 (0x6)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.FilePathMarshaler LibGit2Sharp.Core.FilePathMarshaler::staticInstance
    IL_0005:  ret
  } // end of method FilePathMarshaler::GetInstance

  .method public hidebysig newslot virtual final 
          instance void  CleanUpManagedData(object managedObj) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method FilePathMarshaler::CleanUpManagedData

  .method public hidebysig newslot virtual 
          instance void  CleanUpNativeData(native int pNativeData) cil managed
  {
    // Code size       20 (0x14)
    .maxstack  8
    IL_0000:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0005:  ldarg.1
    IL_0006:  call       bool [mscorlib]System.IntPtr::op_Inequality(native int,
                                                                     native int)
    IL_000b:  brfalse.s  IL_0013

    IL_000d:  ldarg.1
    IL_000e:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::FreeHGlobal(native int)
    IL_0013:  ret
  } // end of method FilePathMarshaler::CleanUpNativeData

  .method public hidebysig newslot virtual final 
          instance int32  GetNativeDataSize() cil managed
  {
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  ldc.i4.m1
    IL_0001:  ret
  } // end of method FilePathMarshaler::GetNativeDataSize

  .method public hidebysig newslot virtual final 
          instance native int  MarshalManagedToNative(object managedObj) cil managed
  {
    // Code size       119 (0x77)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.FilePath V_0,
             class [mscorlib]System.Type V_1,
             class [mscorlib]System.Type V_2,
             object[] V_3)
    IL_0000:  ldarg.1
    IL_0001:  brtrue.s   IL_0009

    IL_0003:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0008:  ret

    IL_0009:  ldarg.1
    IL_000a:  isinst     LibGit2Sharp.Core.FilePath
    IL_000f:  stloc.0
    IL_0010:  ldloc.0
    IL_0011:  brtrue.s   IL_0070

    IL_0013:  ldtoken    LibGit2Sharp.Core.FilePath
    IL_0018:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_001d:  stloc.1
    IL_001e:  ldarg.1
    IL_001f:  callvirt   instance class [mscorlib]System.Type [mscorlib]System.Object::GetType()
    IL_0024:  stloc.2
    IL_0025:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_002a:  ldstr      "FilePathMarshaler must be used on a FilePath. Expe"
    + "cted '{0}' from '{1}'; received '{2}' from '{3}'."
    IL_002f:  ldc.i4.4
    IL_0030:  newarr     [mscorlib]System.Object
    IL_0035:  stloc.3
    IL_0036:  ldloc.3
    IL_0037:  ldc.i4.0
    IL_0038:  ldloc.1
    IL_0039:  callvirt   instance string [mscorlib]System.Type::get_FullName()
    IL_003e:  stelem.ref
    IL_003f:  ldloc.3
    IL_0040:  ldc.i4.1
    IL_0041:  ldloc.1
    IL_0042:  callvirt   instance class [mscorlib]System.Reflection.Assembly [mscorlib]System.Type::get_Assembly()
    IL_0047:  callvirt   instance string [mscorlib]System.Reflection.Assembly::get_Location()
    IL_004c:  stelem.ref
    IL_004d:  ldloc.3
    IL_004e:  ldc.i4.2
    IL_004f:  ldloc.2
    IL_0050:  callvirt   instance string [mscorlib]System.Type::get_FullName()
    IL_0055:  stelem.ref
    IL_0056:  ldloc.3
    IL_0057:  ldc.i4.3
    IL_0058:  ldloc.2
    IL_0059:  callvirt   instance class [mscorlib]System.Reflection.Assembly [mscorlib]System.Type::get_Assembly()
    IL_005e:  callvirt   instance string [mscorlib]System.Reflection.Assembly::get_Location()
    IL_0063:  stelem.ref
    IL_0064:  ldloc.3
    IL_0065:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_006a:  newobj     instance void [mscorlib]System.Runtime.InteropServices.MarshalDirectiveException::.ctor(string)
    IL_006f:  throw

    IL_0070:  ldloc.0
    IL_0071:  call       native int LibGit2Sharp.Core.FilePathMarshaler::FromManaged(class LibGit2Sharp.Core.FilePath)
    IL_0076:  ret
  } // end of method FilePathMarshaler::MarshalManagedToNative

  .method public hidebysig newslot virtual final 
          instance object  MarshalNativeToManaged(native int pNativeData) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePathMarshaler::FromNative(native int)
    IL_0006:  ret
  } // end of method FilePathMarshaler::MarshalNativeToManaged

  .method public hidebysig static native int 
          FromManaged(class LibGit2Sharp.Core.FilePath filePath) cil managed
  {
    // Code size       21 (0x15)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  brtrue.s   IL_0009

    IL_0003:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0008:  ret

    IL_0009:  ldarg.0
    IL_000a:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Posix()
    IL_000f:  call       native int LibGit2Sharp.Core.Utf8Marshaler::FromManaged(string)
    IL_0014:  ret
  } // end of method FilePathMarshaler::FromManaged

  .method public hidebysig static class LibGit2Sharp.Core.FilePath 
          FromNative(native int pNativeData) cil managed
  {
    // Code size       41 (0x29)
    .maxstack  8
    IL_0000:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0005:  ldarg.0
    IL_0006:  call       bool [mscorlib]System.IntPtr::op_Equality(native int,
                                                                   native int)
    IL_000b:  brfalse.s  IL_000f

    IL_000d:  ldnull
    IL_000e:  ret

    IL_000f:  ldarg.0
    IL_0010:  call       uint8 [mscorlib]System.Runtime.InteropServices.Marshal::ReadByte(native int)
    IL_0015:  brtrue.s   IL_001d

    IL_0017:  ldsfld     class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::Empty
    IL_001c:  ret

    IL_001d:  ldarg.0
    IL_001e:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
    IL_0023:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0028:  ret
  } // end of method FilePathMarshaler::FromNative

  .method public hidebysig static class LibGit2Sharp.Core.FilePath 
          FromNative(native int pNativeData,
                     int32 length) cil managed
  {
    // Code size       22 (0x16)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brtrue.s   IL_0009

    IL_0003:  ldsfld     class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::Empty
    IL_0008:  ret

    IL_0009:  ldarg.0
    IL_000a:  ldarg.1
    IL_000b:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int,
                                                                            int32)
    IL_0010:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0015:  ret
  } // end of method FilePathMarshaler::FromNative

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method FilePathMarshaler::.ctor

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  newobj     instance void LibGit2Sharp.Core.FilePathMarshaler::.ctor()
    IL_0005:  stsfld     class LibGit2Sharp.Core.FilePathMarshaler LibGit2Sharp.Core.FilePathMarshaler::staticInstance
    IL_000a:  ret
  } // end of method FilePathMarshaler::.cctor

} // end of class LibGit2Sharp.Core.FilePathMarshaler

.class private auto ansi beforefieldinit LibGit2Sharp.Core.FilePathNoCleanupMarshaler
       extends LibGit2Sharp.Core.FilePathMarshaler
{
  .field private static initonly class LibGit2Sharp.Core.FilePathNoCleanupMarshaler staticInstance
  .method public hidebysig static class [mscorlib]System.Runtime.InteropServices.ICustomMarshaler 
          GetInstance(string cookie) cil managed
  {
    // Code size       6 (0x6)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.FilePathNoCleanupMarshaler LibGit2Sharp.Core.FilePathNoCleanupMarshaler::staticInstance
    IL_0005:  ret
  } // end of method FilePathNoCleanupMarshaler::GetInstance

  .method public hidebysig virtual instance void 
          CleanUpNativeData(native int pNativeData) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method FilePathNoCleanupMarshaler::CleanUpNativeData

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.FilePathMarshaler::.ctor()
    IL_0006:  ret
  } // end of method FilePathNoCleanupMarshaler::.ctor

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  newobj     instance void LibGit2Sharp.Core.FilePathNoCleanupMarshaler::.ctor()
    IL_0005:  stsfld     class LibGit2Sharp.Core.FilePathNoCleanupMarshaler LibGit2Sharp.Core.FilePathNoCleanupMarshaler::staticInstance
    IL_000a:  ret
  } // end of method FilePathNoCleanupMarshaler::.cctor

} // end of class LibGit2Sharp.Core.FilePathNoCleanupMarshaler

.class public auto ansi sealed LibGit2Sharp.ConfigurationLevel
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.ConfigurationLevel Local = int32(0x00000004)
  .field public static literal valuetype LibGit2Sharp.ConfigurationLevel Global = int32(0x00000003)
  .field public static literal valuetype LibGit2Sharp.ConfigurationLevel Xdg = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.ConfigurationLevel System = int32(0x00000001)
} // end of class LibGit2Sharp.ConfigurationLevel

.class public auto ansi beforefieldinit LibGit2Sharp.Core.Compat.Tuple`2<T1,T2>
       extends [mscorlib]System.Object
{
  .field private initonly valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!T1,!T2> kvp
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(!T1 item1,
                               !T2 item2) cil managed
  {
    // Code size       20 (0x14)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  ldarg.2
    IL_0009:  newobj     instance void valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!T1,!T2>::.ctor(!0,
                                                                                                                     !1)
    IL_000e:  stfld      valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!0,!1> class LibGit2Sharp.Core.Compat.Tuple`2<!T1,!T2>::kvp
    IL_0013:  ret
  } // end of method Tuple`2::.ctor

  .method public hidebysig specialname instance !T2 
          get_Item2() cil managed
  {
    // Code size       15 (0xf)
    .maxstack  1
    .locals init (valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!T1,!T2> V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!0,!1> class LibGit2Sharp.Core.Compat.Tuple`2<!T1,!T2>::kvp
    IL_0006:  stloc.0
    IL_0007:  ldloca.s   V_0
    IL_0009:  call       instance !1 valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!T1,!T2>::get_Value()
    IL_000e:  ret
  } // end of method Tuple`2::get_Item2

  .method public hidebysig specialname instance !T1 
          get_Item1() cil managed
  {
    // Code size       15 (0xf)
    .maxstack  1
    .locals init (valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!T1,!T2> V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!0,!1> class LibGit2Sharp.Core.Compat.Tuple`2<!T1,!T2>::kvp
    IL_0006:  stloc.0
    IL_0007:  ldloca.s   V_0
    IL_0009:  call       instance !0 valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!T1,!T2>::get_Key()
    IL_000e:  ret
  } // end of method Tuple`2::get_Item1

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       21 (0x15)
    .maxstack  1
    .locals init (valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!T1,!T2> V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!0,!1> class LibGit2Sharp.Core.Compat.Tuple`2<!T1,!T2>::kvp
    IL_0006:  stloc.0
    IL_0007:  ldloca.s   V_0
    IL_0009:  constrained. valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!T1,!T2>
    IL_000f:  callvirt   instance int32 [mscorlib]System.Object::GetHashCode()
    IL_0014:  ret
  } // end of method Tuple`2::GetHashCode

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // Code size       47 (0x2f)
    .maxstack  2
    .locals init (valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!T1,!T2> V_0)
    IL_0000:  ldarg.1
    IL_0001:  isinst     class LibGit2Sharp.Core.Compat.Tuple`2<!T1,!T2>
    IL_0006:  brtrue.s   IL_000a

    IL_0008:  ldc.i4.0
    IL_0009:  ret

    IL_000a:  ldarg.0
    IL_000b:  ldfld      valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!0,!1> class LibGit2Sharp.Core.Compat.Tuple`2<!T1,!T2>::kvp
    IL_0010:  stloc.0
    IL_0011:  ldloca.s   V_0
    IL_0013:  ldarg.1
    IL_0014:  castclass  class LibGit2Sharp.Core.Compat.Tuple`2<!T1,!T2>
    IL_0019:  ldfld      valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!0,!1> class LibGit2Sharp.Core.Compat.Tuple`2<!T1,!T2>::kvp
    IL_001e:  box        valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!T1,!T2>
    IL_0023:  constrained. valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!T1,!T2>
    IL_0029:  callvirt   instance bool [mscorlib]System.Object::Equals(object)
    IL_002e:  ret
  } // end of method Tuple`2::Equals

  .property instance !T2 Item2()
  {
    .get instance !T2 LibGit2Sharp.Core.Compat.Tuple`2::get_Item2()
  } // end of property Tuple`2::Item2
  .property instance !T1 Item1()
  {
    .get instance !T1 LibGit2Sharp.Core.Compat.Tuple`2::get_Item1()
  } // end of property Tuple`2::Item1
} // end of class LibGit2Sharp.Core.Compat.Tuple`2

.class private auto ansi beforefieldinit LibGit2Sharp.Core.ArrayMarshaler`1<T>
       extends [mscorlib]System.Object
       implements [mscorlib]System.IDisposable
{
  .field private initonly native int[] ptrs
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(!T[] objs) cil managed
  {
    // Code size       93 (0x5d)
    .maxstack  3
    .locals init (int32 V_0,
             native int V_1)
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  ldlen
    IL_0009:  conv.i4
    IL_000a:  newarr     [mscorlib]System.IntPtr
    IL_000f:  stfld      native int[] class LibGit2Sharp.Core.ArrayMarshaler`1<!T>::ptrs
    IL_0014:  ldc.i4.0
    IL_0015:  stloc.0
    IL_0016:  br.s       IL_0056

    IL_0018:  ldtoken    !T
    IL_001d:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0022:  call       int32 [mscorlib]System.Runtime.InteropServices.Marshal::SizeOf(class [mscorlib]System.Type)
    IL_0027:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::AllocHGlobal(int32)
    IL_002c:  stloc.1
    IL_002d:  ldarg.0
    IL_002e:  ldfld      native int[] class LibGit2Sharp.Core.ArrayMarshaler`1<!T>::ptrs
    IL_0033:  ldloc.0
    IL_0034:  ldelema    [mscorlib]System.IntPtr
    IL_0039:  ldloc.1
    IL_003a:  stobj      [mscorlib]System.IntPtr
    IL_003f:  ldarg.1
    IL_0040:  ldloc.0
    IL_0041:  ldelem     !T
    IL_0046:  box        !T
    IL_004b:  ldloc.1
    IL_004c:  ldc.i4.0
    IL_004d:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::StructureToPtr(object,
                                                                                               native int,
                                                                                               bool)
    IL_0052:  ldloc.0
    IL_0053:  ldc.i4.1
    IL_0054:  add
    IL_0055:  stloc.0
    IL_0056:  ldloc.0
    IL_0057:  ldarg.1
    IL_0058:  ldlen
    IL_0059:  conv.i4
    IL_005a:  blt.s      IL_0018

    IL_005c:  ret
  } // end of method ArrayMarshaler`1::.ctor

  .method public hidebysig specialname instance int32 
          get_Count() cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int[] class LibGit2Sharp.Core.ArrayMarshaler`1<!T>::ptrs
    IL_0006:  ldlen
    IL_0007:  conv.i4
    IL_0008:  ret
  } // end of method ArrayMarshaler`1::get_Count

  .method public hidebysig instance native int[] 
          ToArray() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int[] class LibGit2Sharp.Core.ArrayMarshaler`1<!T>::ptrs
    IL_0006:  ret
  } // end of method ArrayMarshaler`1::ToArray

  .method public hidebysig newslot virtual final 
          instance void  Dispose() cil managed
  {
    // Code size       41 (0x29)
    .maxstack  2
    .locals init (native int V_0,
             native int[] V_1,
             int32 V_2)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int[] class LibGit2Sharp.Core.ArrayMarshaler`1<!T>::ptrs
    IL_0006:  stloc.1
    IL_0007:  ldc.i4.0
    IL_0008:  stloc.2
    IL_0009:  br.s       IL_0022

    IL_000b:  ldloc.1
    IL_000c:  ldloc.2
    IL_000d:  ldelema    [mscorlib]System.IntPtr
    IL_0012:  ldobj      [mscorlib]System.IntPtr
    IL_0017:  stloc.0
    IL_0018:  ldloc.0
    IL_0019:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::FreeHGlobal(native int)
    IL_001e:  ldloc.2
    IL_001f:  ldc.i4.1
    IL_0020:  add
    IL_0021:  stloc.2
    IL_0022:  ldloc.2
    IL_0023:  ldloc.1
    IL_0024:  ldlen
    IL_0025:  conv.i4
    IL_0026:  blt.s      IL_000b

    IL_0028:  ret
  } // end of method ArrayMarshaler`1::Dispose

  .property instance int32 Count()
  {
    .get instance int32 LibGit2Sharp.Core.ArrayMarshaler`1::get_Count()
  } // end of property ArrayMarshaler`1::Count
} // end of class LibGit2Sharp.Core.ArrayMarshaler`1

.class private abstract auto ansi sealed beforefieldinit LibGit2Sharp.Core.EnumExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static bool  HasAny(class [mscorlib]System.Enum enumInstance,
                                               class [mscorlib]System.Collections.Generic.IEnumerable`1<class [mscorlib]System.Enum> entries) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldarg.0
    IL_0002:  ldftn      bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<class [mscorlib]System.Enum>(class [mscorlib]System.Enum,
                                                                                                            !!0)
    IL_0008:  newobj     instance void class [System.Core]System.Func`2<class [mscorlib]System.Enum,bool>::.ctor(object,
                                                                                                                 native int)
    IL_000d:  call       bool [System.Core]System.Linq.Enumerable::Any<class [mscorlib]System.Enum>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                    class [System.Core]System.Func`2<!!0,bool>)
    IL_0012:  ret
  } // end of method EnumExtensions::HasAny

} // end of class LibGit2Sharp.Core.EnumExtensions

.class public auto ansi sealed LibGit2Sharp.ChangeKind
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.ChangeKind Unmodified = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.ChangeKind Added = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.ChangeKind Deleted = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.ChangeKind Modified = int32(0x00000003)
  .field public static literal valuetype LibGit2Sharp.ChangeKind Renamed = int32(0x00000004)
  .field public static literal valuetype LibGit2Sharp.ChangeKind Copied = int32(0x00000005)
  .field public static literal valuetype LibGit2Sharp.ChangeKind Ignored = int32(0x00000006)
  .field public static literal valuetype LibGit2Sharp.ChangeKind Untracked = int32(0x00000007)
  .field public static literal valuetype LibGit2Sharp.ChangeKind TypeChanged = int32(0x00000008)
} // end of class LibGit2Sharp.ChangeKind

.class private auto ansi sealed LibGit2Sharp.Core.GitBranchType
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.Core.GitBranchType GIT_BRANCH_LOCAL = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.Core.GitBranchType GIT_BRANCH_REMOTE = int32(0x00000002)
} // end of class LibGit2Sharp.Core.GitBranchType

.class private auto ansi sealed LibGit2Sharp.Core.GitDiffOptionFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_NORMAL = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_REVERSE = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_FORCE_TEXT = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_IGNORE_WHITESPACE = int32(0x00000004)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_IGNORE_WHITESPACE_CHANGE = int32(0x00000008)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_IGNORE_WHITESPACE_EOL = int32(0x00000010)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_IGNORE_SUBMODULES = int32(0x00000020)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_PATIENCE = int32(0x00000040)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_INCLUDE_IGNORED = int32(0x00000080)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_INCLUDE_UNTRACKED = int32(0x00000100)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_INCLUDE_UNMODIFIED = int32(0x00000200)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_RECURSE_UNTRACKED_DIRS = int32(0x00000400)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_DISABLE_PATHSPEC_MATCH = int32(0x00000800)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_DELTAS_ARE_ICASE = int32(0x00001000)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_INCLUDE_UNTRACKED_CONTENT = int32(0x00002000)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_SKIP_BINARY_CHECK = int32(0x00004000)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_INCLUDE_TYPECHANGE = int32(0x00008000)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_INCLUDE_TYPECHANGE_TREES = int32(0x00010000)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffOptionFlags GIT_DIFF_IGNORE_FILEMODE = int32(0x00020000)
} // end of class LibGit2Sharp.Core.GitDiffOptionFlags

.class private auto ansi sealed LibGit2Sharp.Core.diff_notify_cb
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method diff_notify_cb::.ctor

  .method public hidebysig newslot virtual 
          instance int32  Invoke(native int diff_so_far,
                                 native int delta_to_add,
                                 native int matched_pathspec,
                                 native int payload) runtime managed
  {
  } // end of method diff_notify_cb::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(native int diff_so_far,
                      native int delta_to_add,
                      native int matched_pathspec,
                      native int payload,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method diff_notify_cb::BeginInvoke

  .method public hidebysig newslot virtual 
          instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method diff_notify_cb::EndInvoke

} // end of class LibGit2Sharp.Core.diff_notify_cb

.class private sequential ansi beforefieldinit LibGit2Sharp.Core.GitDiffOptions
       extends [mscorlib]System.Object
       implements [mscorlib]System.IDisposable
{
  .field public uint32 Version
  .field public valuetype LibGit2Sharp.Core.GitDiffOptionFlags Flags
  .field public uint16 ContextLines
  .field public uint16 InterhunkLines
  .field public native int OldPrefixString
  .field public native int NewPrefixString
  .field public class LibGit2Sharp.Core.GitStrArrayIn PathSpec
  .field public int64 MaxSize
  .field public class LibGit2Sharp.Core.diff_notify_cb NotifyCallback
  .field public native int NotifyPayload
  .method public hidebysig newslot virtual final 
          instance void  Dispose() cil managed
  {
    // Code size       21 (0x15)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.GitStrArrayIn LibGit2Sharp.Core.GitDiffOptions::PathSpec
    IL_0006:  brtrue.s   IL_0009

    IL_0008:  ret

    IL_0009:  ldarg.0
    IL_000a:  ldfld      class LibGit2Sharp.Core.GitStrArrayIn LibGit2Sharp.Core.GitDiffOptions::PathSpec
    IL_000f:  callvirt   instance void LibGit2Sharp.Core.GitStrArrayIn::Dispose()
    IL_0014:  ret
  } // end of method GitDiffOptions::Dispose

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.1
    IL_0002:  stfld      uint32 LibGit2Sharp.Core.GitDiffOptions::Version
    IL_0007:  ldarg.0
    IL_0008:  call       instance void [mscorlib]System.Object::.ctor()
    IL_000d:  ret
  } // end of method GitDiffOptions::.ctor

} // end of class LibGit2Sharp.Core.GitDiffOptions

.class private auto ansi sealed LibGit2Sharp.Core.GitDiffFileFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffFileFlags GIT_DIFF_FLAG_BINARY = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffFileFlags GIT_DIFF_FLAG_NOT_BINARY = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffFileFlags GIT_DIFF_FLAG_VALID_OID = int32(0x00000004)
} // end of class LibGit2Sharp.Core.GitDiffFileFlags

.class private sequential ansi beforefieldinit LibGit2Sharp.Core.GitDiffFile
       extends [mscorlib]System.Object
{
  .field public valuetype LibGit2Sharp.Core.GitOid Oid
  .field public native int Path
  .field public int64 Size
  .field public valuetype LibGit2Sharp.Core.GitDiffFileFlags Flags
  .field public uint16 Mode
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method GitDiffFile::.ctor

} // end of class LibGit2Sharp.Core.GitDiffFile

.class private sequential ansi beforefieldinit LibGit2Sharp.Core.GitDiffDelta
       extends [mscorlib]System.Object
{
  .field public class LibGit2Sharp.Core.GitDiffFile OldFile
  .field public class LibGit2Sharp.Core.GitDiffFile NewFile
  .field public valuetype LibGit2Sharp.ChangeKind Status
  .field public uint32 Similarity
  .field public uint32 Flags
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method GitDiffDelta::.ctor

} // end of class LibGit2Sharp.Core.GitDiffDelta

.class private sequential ansi beforefieldinit LibGit2Sharp.Core.GitDiffRange
       extends [mscorlib]System.Object
{
  .field public int32 OldStart
  .field public int32 OldLines
  .field public int32 NewStart
  .field public int32 NewLines
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method GitDiffRange::.ctor

} // end of class LibGit2Sharp.Core.GitDiffRange

.class private auto ansi sealed LibGit2Sharp.Core.GitDiffLineOrigin
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname uint8 value__
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffLineOrigin GIT_DIFF_LINE_CONTEXT = uint8(0x20)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffLineOrigin GIT_DIFF_LINE_ADDITION = uint8(0x2B)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffLineOrigin GIT_DIFF_LINE_DELETION = uint8(0x2D)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffLineOrigin GIT_DIFF_LINE_ADD_EOFNL = uint8(0x0A)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffLineOrigin GIT_DIFF_LINE_DEL_EOFNL = uint8(0x00)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffLineOrigin GIT_DIFF_LINE_FILE_HDR = uint8(0x46)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffLineOrigin GIT_DIFF_LINE_HUNK_HDR = uint8(0x48)
  .field public static literal valuetype LibGit2Sharp.Core.GitDiffLineOrigin GIT_DIFF_LINE_BINARY = uint8(0x42)
} // end of class LibGit2Sharp.Core.GitDiffLineOrigin

.class private abstract auto ansi sealed beforefieldinit LibGit2Sharp.Core.GitDiffExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static bool  IsBinary(class LibGit2Sharp.Core.GitDiffDelta delta) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       49 (0x31)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.GitDiffFile LibGit2Sharp.Core.GitDiffDelta::OldFile
    IL_0006:  ldfld      valuetype LibGit2Sharp.Core.GitDiffFileFlags LibGit2Sharp.Core.GitDiffFile::Flags
    IL_000b:  box        LibGit2Sharp.Core.GitDiffFileFlags
    IL_0010:  ldc.i4.1
    IL_0011:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.Core.GitDiffFileFlags>(class [mscorlib]System.Enum,
                                                                                                                             !!0)
    IL_0016:  brtrue.s   IL_002f

    IL_0018:  ldarg.0
    IL_0019:  ldfld      class LibGit2Sharp.Core.GitDiffFile LibGit2Sharp.Core.GitDiffDelta::NewFile
    IL_001e:  ldfld      valuetype LibGit2Sharp.Core.GitDiffFileFlags LibGit2Sharp.Core.GitDiffFile::Flags
    IL_0023:  box        LibGit2Sharp.Core.GitDiffFileFlags
    IL_0028:  ldc.i4.1
    IL_0029:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.Core.GitDiffFileFlags>(class [mscorlib]System.Enum,
                                                                                                                             !!0)
    IL_002e:  ret

    IL_002f:  ldc.i4.1
    IL_0030:  ret
  } // end of method GitDiffExtensions::IsBinary

} // end of class LibGit2Sharp.Core.GitDiffExtensions

.class private auto ansi sealed LibGit2Sharp.Core.GitDirection
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.Core.GitDirection Fetch = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.Core.GitDirection Push = int32(0x00000001)
} // end of class LibGit2Sharp.Core.GitDirection

.class private sequential ansi beforefieldinit LibGit2Sharp.Core.GitError
       extends [mscorlib]System.Object
{
  .field public native int Message
  .field public valuetype LibGit2Sharp.Core.GitErrorCategory Category
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method GitError::.ctor

} // end of class LibGit2Sharp.Core.GitError

.class private auto ansi sealed LibGit2Sharp.Core.GitErrorCategory
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Unknown = int32(0xFFFFFFFF)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory NoMemory = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Os = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Invalid = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Reference = int32(0x00000003)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Zlib = int32(0x00000004)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Repository = int32(0x00000005)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Config = int32(0x00000006)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Regex = int32(0x00000007)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Odb = int32(0x00000008)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Index = int32(0x00000009)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Object = int32(0x0000000A)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Net = int32(0x0000000B)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Tag = int32(0x0000000C)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Tree = int32(0x0000000D)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Indexer = int32(0x0000000E)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Ssl = int32(0x0000000F)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Submodule = int32(0x00000010)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Thread = int32(0x00000011)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Stash = int32(0x00000012)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCategory Checkout = int32(0x00000013)
} // end of class LibGit2Sharp.Core.GitErrorCategory

.class private sequential ansi sealed LibGit2Sharp.Core.GitOdbBackend
       extends [mscorlib]System.ValueType
{
  .class auto ansi sealed nested public read_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method read_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke([out] native int& buffer_p,
                                   [out] native uint& len_p,
                                   [out] valuetype LibGit2Sharp.Core.GitObjectType& type_p,
                                   native int backend,
                                   valuetype LibGit2Sharp.Core.GitOid& oid) runtime managed
    {
    } // end of method read_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke([out] native int& buffer_p,
                        [out] native uint& len_p,
                        [out] valuetype LibGit2Sharp.Core.GitObjectType& type_p,
                        native int backend,
                        valuetype LibGit2Sharp.Core.GitOid& oid,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method read_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke([out] native int& buffer_p,
                                      [out] native uint& len_p,
                                      [out] valuetype LibGit2Sharp.Core.GitObjectType& type_p,
                                      valuetype LibGit2Sharp.Core.GitOid& oid,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method read_callback::EndInvoke

  } // end of class read_callback

  .class auto ansi sealed nested public read_prefix_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method read_prefix_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke([out] valuetype LibGit2Sharp.Core.GitOid& out_oid,
                                   [out] native int& buffer_p,
                                   [out] native uint& len_p,
                                   [out] valuetype LibGit2Sharp.Core.GitObjectType& type_p,
                                   native int backend,
                                   valuetype LibGit2Sharp.Core.GitOid& short_oid,
                                   native uint len) runtime managed
    {
    } // end of method read_prefix_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke([out] valuetype LibGit2Sharp.Core.GitOid& out_oid,
                        [out] native int& buffer_p,
                        [out] native uint& len_p,
                        [out] valuetype LibGit2Sharp.Core.GitObjectType& type_p,
                        native int backend,
                        valuetype LibGit2Sharp.Core.GitOid& short_oid,
                        native uint len,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method read_prefix_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke([out] valuetype LibGit2Sharp.Core.GitOid& out_oid,
                                      [out] native int& buffer_p,
                                      [out] native uint& len_p,
                                      [out] valuetype LibGit2Sharp.Core.GitObjectType& type_p,
                                      valuetype LibGit2Sharp.Core.GitOid& short_oid,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method read_prefix_callback::EndInvoke

  } // end of class read_prefix_callback

  .class auto ansi sealed nested public read_header_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method read_header_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke([out] native uint& len_p,
                                   [out] valuetype LibGit2Sharp.Core.GitObjectType& type_p,
                                   native int backend,
                                   valuetype LibGit2Sharp.Core.GitOid& oid) runtime managed
    {
    } // end of method read_header_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke([out] native uint& len_p,
                        [out] valuetype LibGit2Sharp.Core.GitObjectType& type_p,
                        native int backend,
                        valuetype LibGit2Sharp.Core.GitOid& oid,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method read_header_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke([out] native uint& len_p,
                                      [out] valuetype LibGit2Sharp.Core.GitObjectType& type_p,
                                      valuetype LibGit2Sharp.Core.GitOid& oid,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method read_header_callback::EndInvoke

  } // end of class read_header_callback

  .class auto ansi sealed nested public write_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method write_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(valuetype LibGit2Sharp.Core.GitOid& oid,
                                   native int backend,
                                   native int data,
                                   native uint len,
                                   valuetype LibGit2Sharp.Core.GitObjectType 'type') runtime managed
    {
    } // end of method write_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(valuetype LibGit2Sharp.Core.GitOid& oid,
                        native int backend,
                        native int data,
                        native uint len,
                        valuetype LibGit2Sharp.Core.GitObjectType 'type',
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method write_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(valuetype LibGit2Sharp.Core.GitOid& oid,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method write_callback::EndInvoke

  } // end of class write_callback

  .class auto ansi sealed nested public writestream_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method writestream_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke([out] native int& stream_out,
                                   native int backend,
                                   native uint length,
                                   valuetype LibGit2Sharp.Core.GitObjectType 'type') runtime managed
    {
    } // end of method writestream_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke([out] native int& stream_out,
                        native int backend,
                        native uint length,
                        valuetype LibGit2Sharp.Core.GitObjectType 'type',
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method writestream_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke([out] native int& stream_out,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method writestream_callback::EndInvoke

  } // end of class writestream_callback

  .class auto ansi sealed nested public readstream_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method readstream_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke([out] native int& stream_out,
                                   native int backend,
                                   valuetype LibGit2Sharp.Core.GitOid& oid) runtime managed
    {
    } // end of method readstream_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke([out] native int& stream_out,
                        native int backend,
                        valuetype LibGit2Sharp.Core.GitOid& oid,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method readstream_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke([out] native int& stream_out,
                                      valuetype LibGit2Sharp.Core.GitOid& oid,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method readstream_callback::EndInvoke

  } // end of class readstream_callback

  .class auto ansi sealed nested public exists_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method exists_callback::.ctor

    .method public hidebysig newslot virtual 
            instance bool  Invoke(native int backend,
                                  valuetype LibGit2Sharp.Core.GitOid& oid) runtime managed
    {
    } // end of method exists_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int backend,
                        valuetype LibGit2Sharp.Core.GitOid& oid,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method exists_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance bool  EndInvoke(valuetype LibGit2Sharp.Core.GitOid& oid,
                                     class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method exists_callback::EndInvoke

  } // end of class exists_callback

  .class auto ansi sealed nested public foreach_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method foreach_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(native int backend,
                                   class LibGit2Sharp.Core.GitOdbBackend/foreach_callback_callback cb,
                                   native int data) runtime managed
    {
    } // end of method foreach_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int backend,
                        class LibGit2Sharp.Core.GitOdbBackend/foreach_callback_callback cb,
                        native int data,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method foreach_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method foreach_callback::EndInvoke

  } // end of class foreach_callback

  .class auto ansi sealed nested public free_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method free_callback::.ctor

    .method public hidebysig newslot virtual 
            instance void  Invoke(native int backend) runtime managed
    {
    } // end of method free_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int backend,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method free_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method free_callback::EndInvoke

  } // end of class free_callback

  .class auto ansi sealed nested public foreach_callback_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method foreach_callback_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(valuetype LibGit2Sharp.Core.GitOid& oid,
                                   native int data) runtime managed
    {
    } // end of method foreach_callback_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(valuetype LibGit2Sharp.Core.GitOid& oid,
                        native int data,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method foreach_callback_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(valuetype LibGit2Sharp.Core.GitOid& oid,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method foreach_callback_callback::EndInvoke

  } // end of class foreach_callback_callback

  .field public uint32 Version
  .field private initonly native int Odb
  .field public class LibGit2Sharp.Core.GitOdbBackend/read_callback Read
  .field public class LibGit2Sharp.Core.GitOdbBackend/read_prefix_callback ReadPrefix
  .field public class LibGit2Sharp.Core.GitOdbBackend/read_header_callback ReadHeader
  .field public class LibGit2Sharp.Core.GitOdbBackend/write_callback Write
  .field public class LibGit2Sharp.Core.GitOdbBackend/writestream_callback WriteStream
  .field public class LibGit2Sharp.Core.GitOdbBackend/readstream_callback ReadStream
  .field public class LibGit2Sharp.Core.GitOdbBackend/exists_callback Exists
  .field public native int Refresh
  .field public class LibGit2Sharp.Core.GitOdbBackend/foreach_callback Foreach
  .field public native int Writepack
  .field public class LibGit2Sharp.Core.GitOdbBackend/free_callback Free
  .field public native int GCHandle
  .field public static int32 GCHandleOffset
  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       34 (0x22)
    .maxstack  2
    .locals init (native int V_0)
    IL_0000:  ldtoken    LibGit2Sharp.Core.GitOdbBackend
    IL_0005:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_000a:  ldstr      "GCHandle"
    IL_000f:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::OffsetOf(class [mscorlib]System.Type,
                                                                                               string)
    IL_0014:  stloc.0
    IL_0015:  ldloca.s   V_0
    IL_0017:  call       instance int32 [mscorlib]System.IntPtr::ToInt32()
    IL_001c:  stsfld     int32 LibGit2Sharp.Core.GitOdbBackend::GCHandleOffset
    IL_0021:  ret
  } // end of method GitOdbBackend::.cctor

} // end of class LibGit2Sharp.Core.GitOdbBackend

.class private auto ansi sealed LibGit2Sharp.Core.GitOdbBackendStreamMode
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.Core.GitOdbBackendStreamMode Read = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.Core.GitOdbBackendStreamMode Write = int32(0x00000004)
} // end of class LibGit2Sharp.Core.GitOdbBackendStreamMode

.class private sequential ansi LibGit2Sharp.Core.GitOdbBackendStream
       extends [mscorlib]System.Object
{
  .class auto ansi sealed nested public read_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method read_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(native int 'stream',
                                   native int buffer,
                                   native uint len) runtime managed
    {
    } // end of method read_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int 'stream',
                        native int buffer,
                        native uint len,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method read_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method read_callback::EndInvoke

  } // end of class read_callback

  .class auto ansi sealed nested public write_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method write_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(native int 'stream',
                                   native int buffer,
                                   native uint len) runtime managed
    {
    } // end of method write_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int 'stream',
                        native int buffer,
                        native uint len,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method write_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method write_callback::EndInvoke

  } // end of class write_callback

  .class auto ansi sealed nested public finalize_write_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method finalize_write_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke([out] valuetype LibGit2Sharp.Core.GitOid& oid_p,
                                   native int 'stream') runtime managed
    {
    } // end of method finalize_write_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke([out] valuetype LibGit2Sharp.Core.GitOid& oid_p,
                        native int 'stream',
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method finalize_write_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke([out] valuetype LibGit2Sharp.Core.GitOid& oid_p,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method finalize_write_callback::EndInvoke

  } // end of class finalize_write_callback

  .class auto ansi sealed nested public free_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method free_callback::.ctor

    .method public hidebysig newslot virtual 
            instance void  Invoke(native int 'stream') runtime managed
    {
    } // end of method free_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int 'stream',
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method free_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method free_callback::EndInvoke

  } // end of class free_callback

  .field public native int Backend
  .field public valuetype LibGit2Sharp.Core.GitOdbBackendStreamMode Mode
  .field public class LibGit2Sharp.Core.GitOdbBackendStream/read_callback Read
  .field public class LibGit2Sharp.Core.GitOdbBackendStream/write_callback Write
  .field public class LibGit2Sharp.Core.GitOdbBackendStream/finalize_write_callback FinalizeWrite
  .field public class LibGit2Sharp.Core.GitOdbBackendStream/free_callback Free
  .field public native int GCHandle
  .field public static int32 GCHandleOffset
  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       34 (0x22)
    .maxstack  2
    .locals init (native int V_0)
    IL_0000:  ldtoken    LibGit2Sharp.Core.GitOdbBackendStream
    IL_0005:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_000a:  ldstr      "GCHandle"
    IL_000f:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::OffsetOf(class [mscorlib]System.Type,
                                                                                               string)
    IL_0014:  stloc.0
    IL_0015:  ldloca.s   V_0
    IL_0017:  call       instance int32 [mscorlib]System.IntPtr::ToInt32()
    IL_001c:  stsfld     int32 LibGit2Sharp.Core.GitOdbBackendStream::GCHandleOffset
    IL_0021:  ret
  } // end of method GitOdbBackendStream::.cctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method GitOdbBackendStream::.ctor

} // end of class LibGit2Sharp.Core.GitOdbBackendStream

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.GitErrorSafeHandle
       extends LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase
{
  .method public hidebysig instance class LibGit2Sharp.Core.GitError 
          MarshalAsGitError() cil managed
  {
    // Code size       47 (0x2f)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_000b:  call       bool [mscorlib]System.IntPtr::op_Equality(native int,
                                                                   native int)
    IL_0010:  brfalse.s  IL_0014

    IL_0012:  ldnull
    IL_0013:  ret

    IL_0014:  ldarg.0
    IL_0015:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_001a:  ldtoken    LibGit2Sharp.Core.GitError
    IL_001f:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0024:  call       object [mscorlib]System.Runtime.InteropServices.Marshal::PtrToStructure(native int,
                                                                                                 class [mscorlib]System.Type)
    IL_0029:  castclass  LibGit2Sharp.Core.GitError
    IL_002e:  ret
  } // end of method GitErrorSafeHandle::MarshalAsGitError

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method GitErrorSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.GitErrorSafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.NoteSafeHandle
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_note_free(native int)
    IL_000b:  ldc.i4.1
    IL_000c:  ret
  } // end of method NoteSafeHandle::ReleaseHandleImpl

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method NoteSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.NoteSafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_odb_free(native int)
    IL_000b:  ldc.i4.1
    IL_000c:  ret
  } // end of method ObjectDatabaseSafeHandle::ReleaseHandleImpl

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method ObjectDatabaseSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.DiffListSafeHandle
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_diff_list_free(native int)
    IL_000b:  ldc.i4.1
    IL_000c:  ret
  } // end of method DiffListSafeHandle::ReleaseHandleImpl

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method DiffListSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.DiffListSafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.IndexEntrySafeHandle
       extends LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase
{
  .method public hidebysig instance class LibGit2Sharp.Core.GitIndexEntry 
          MarshalAsGitIndexEntry() cil managed
  {
    // Code size       27 (0x1b)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  ldtoken    LibGit2Sharp.Core.GitIndexEntry
    IL_000b:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0010:  call       object [mscorlib]System.Runtime.InteropServices.Marshal::PtrToStructure(native int,
                                                                                                 class [mscorlib]System.Type)
    IL_0015:  castclass  LibGit2Sharp.Core.GitIndexEntry
    IL_001a:  ret
  } // end of method IndexEntrySafeHandle::MarshalAsGitIndexEntry

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method IndexEntrySafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.OidSafeHandle
       extends LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase
{
  .method private hidebysig instance valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid> 
          MarshalAsGitOid() cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  2
    .locals init (valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid> V_0)
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance bool [mscorlib]System.Runtime.InteropServices.SafeHandle::get_IsInvalid()
    IL_0006:  brtrue.s   IL_0023

    IL_0008:  ldarg.0
    IL_0009:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_000e:  ldtoken    LibGit2Sharp.Core.GitOid
    IL_0013:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0018:  call       object [mscorlib]System.Runtime.InteropServices.Marshal::PtrToStructure(native int,
                                                                                                 class [mscorlib]System.Type)
    IL_001d:  unbox.any  valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid>
    IL_0022:  ret

    IL_0023:  ldloca.s   V_0
    IL_0025:  initobj    valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid>
    IL_002b:  ldloc.0
    IL_002c:  ret
  } // end of method OidSafeHandle::MarshalAsGitOid

  .method public hidebysig instance class LibGit2Sharp.ObjectId 
          MarshalAsObjectId() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid> LibGit2Sharp.Core.Handles.OidSafeHandle::MarshalAsGitOid()
    IL_0006:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid>)
    IL_000b:  ret
  } // end of method OidSafeHandle::MarshalAsObjectId

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method OidSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.OidSafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_treebuilder_free(native int)
    IL_000b:  ldc.i4.1
    IL_000c:  ret
  } // end of method TreeBuilderSafeHandle::ReleaseHandleImpl

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method TreeBuilderSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.TreeEntrySafeHandle_Owned
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_tree_entry_free(native int)
    IL_000b:  ldc.i4.1
    IL_000c:  ret
  } // end of method TreeEntrySafeHandle_Owned::ReleaseHandleImpl

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method TreeEntrySafeHandle_Owned::.ctor

} // end of class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle_Owned

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.ReferenceSafeHandle
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_reference_free(native int)
    IL_000b:  ldc.i4.1
    IL_000c:  ret
  } // end of method ReferenceSafeHandle::ReleaseHandleImpl

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method ReferenceSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.ReferenceSafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.SignatureSafeHandle
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_signature_free(native int)
    IL_000b:  ldc.i4.1
    IL_000c:  ret
  } // end of method SignatureSafeHandle::ReleaseHandleImpl

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method SignatureSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.SignatureSafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.TreeEntrySafeHandle
       extends LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method TreeEntrySafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.DetachedHead
       extends LibGit2Sharp.Branch
{
  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.Reference reference) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldstr      "(no branch)"
    IL_0008:  call       instance void LibGit2Sharp.Branch::.ctor(class LibGit2Sharp.Repository,
                                                                  class LibGit2Sharp.Reference,
                                                                  string)
    IL_000d:  ret
  } // end of method DetachedHead::.ctor

  .method family hidebysig virtual instance string 
          Shorten() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_0006:  ret
  } // end of method DetachedHead::Shorten

  .method public hidebysig specialname virtual 
          instance class LibGit2Sharp.Branch 
          get_TrackedBranch() cil managed
  {
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  ldnull
    IL_0001:  ret
  } // end of method DetachedHead::get_TrackedBranch

  .property instance class LibGit2Sharp.Branch
          TrackedBranch()
  {
    .get instance class LibGit2Sharp.Branch LibGit2Sharp.DetachedHead::get_TrackedBranch()
  } // end of property DetachedHead::TrackedBranch
} // end of class LibGit2Sharp.DetachedHead

.class public auto ansi beforefieldinit LibGit2Sharp.Diff
       extends [mscorlib]System.Object
{
  .class auto ansi sealed nested private TreeComparisonHandleRetriever
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method TreeComparisonHandleRetriever::.ctor

    .method public hidebysig newslot virtual 
            instance class LibGit2Sharp.Core.Handles.DiffListSafeHandle 
            Invoke(class LibGit2Sharp.ObjectId oldTreeId,
                   class LibGit2Sharp.ObjectId newTreeId,
                   class LibGit2Sharp.Core.GitDiffOptions options) runtime managed
    {
    } // end of method TreeComparisonHandleRetriever::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(class LibGit2Sharp.ObjectId oldTreeId,
                        class LibGit2Sharp.ObjectId newTreeId,
                        class LibGit2Sharp.Core.GitDiffOptions options,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method TreeComparisonHandleRetriever::BeginInvoke

    .method public hidebysig newslot virtual 
            instance class LibGit2Sharp.Core.Handles.DiffListSafeHandle 
            EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method TreeComparisonHandleRetriever::EndInvoke

  } // end of class TreeComparisonHandleRetriever

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass2'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Repository repo
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass2'::.ctor

    .method public hidebysig instance class LibGit2Sharp.Core.Handles.DiffListSafeHandle 
            '<TreeToTree>b__1'(class LibGit2Sharp.ObjectId oh,
                               class LibGit2Sharp.ObjectId nh,
                               class LibGit2Sharp.Core.GitDiffOptions o) cil managed
    {
      // Code size       20 (0x14)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff/'<>c__DisplayClass2'::repo
      IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
      IL_000b:  ldarg.1
      IL_000c:  ldarg.2
      IL_000d:  ldarg.3
      IL_000e:  call       class LibGit2Sharp.Core.Handles.DiffListSafeHandle LibGit2Sharp.Core.Proxy::git_diff_tree_to_tree(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                             class LibGit2Sharp.ObjectId,
                                                                                                                             class LibGit2Sharp.ObjectId,
                                                                                                                             class LibGit2Sharp.Core.GitDiffOptions)
      IL_0013:  ret
    } // end of method '<>c__DisplayClass2'::'<TreeToTree>b__1'

  } // end of class '<>c__DisplayClass2'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass5'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Repository repo
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass5'::.ctor

    .method public hidebysig instance class LibGit2Sharp.Core.Handles.DiffListSafeHandle 
            '<WorkdirToIndex>b__4'(class LibGit2Sharp.ObjectId oh,
                                   class LibGit2Sharp.ObjectId nh,
                                   class LibGit2Sharp.Core.GitDiffOptions o) cil managed
    {
      // Code size       34 (0x22)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff/'<>c__DisplayClass5'::repo
      IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
      IL_000b:  ldarg.0
      IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff/'<>c__DisplayClass5'::repo
      IL_0011:  callvirt   instance class LibGit2Sharp.Index LibGit2Sharp.Repository::get_Index()
      IL_0016:  callvirt   instance class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::get_Handle()
      IL_001b:  ldarg.3
      IL_001c:  call       class LibGit2Sharp.Core.Handles.DiffListSafeHandle LibGit2Sharp.Core.Proxy::git_diff_index_to_workdir(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                 class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                                                                                 class LibGit2Sharp.Core.GitDiffOptions)
      IL_0021:  ret
    } // end of method '<>c__DisplayClass5'::'<WorkdirToIndex>b__4'

  } // end of class '<>c__DisplayClass5'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass8'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Repository repo
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass8'::.ctor

    .method public hidebysig instance class LibGit2Sharp.Core.Handles.DiffListSafeHandle 
            '<WorkdirToTree>b__7'(class LibGit2Sharp.ObjectId oh,
                                  class LibGit2Sharp.ObjectId nh,
                                  class LibGit2Sharp.Core.GitDiffOptions o) cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff/'<>c__DisplayClass8'::repo
      IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
      IL_000b:  ldarg.1
      IL_000c:  ldarg.3
      IL_000d:  call       class LibGit2Sharp.Core.Handles.DiffListSafeHandle LibGit2Sharp.Core.Proxy::git_diff_tree_to_workdir(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                class LibGit2Sharp.ObjectId,
                                                                                                                                class LibGit2Sharp.Core.GitDiffOptions)
      IL_0012:  ret
    } // end of method '<>c__DisplayClass8'::'<WorkdirToTree>b__7'

  } // end of class '<>c__DisplayClass8'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClassb'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Repository repo
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClassb'::.ctor

    .method public hidebysig instance class LibGit2Sharp.Core.Handles.DiffListSafeHandle 
            '<WorkdirAndIndexToTree>b__a'(class LibGit2Sharp.ObjectId oh,
                                          class LibGit2Sharp.ObjectId nh,
                                          class LibGit2Sharp.Core.GitDiffOptions o) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  4
      .locals init (class LibGit2Sharp.Core.Handles.DiffListSafeHandle V_0,
               class LibGit2Sharp.Core.Handles.DiffListSafeHandle V_1)
      IL_0000:  ldnull
      IL_0001:  stloc.0
      IL_0002:  ldnull
      IL_0003:  stloc.1
      .try
      {
        .try
        {
          IL_0004:  ldarg.0
          IL_0005:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff/'<>c__DisplayClassb'::repo
          IL_000a:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
          IL_000f:  ldarg.0
          IL_0010:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff/'<>c__DisplayClassb'::repo
          IL_0015:  callvirt   instance class LibGit2Sharp.Index LibGit2Sharp.Repository::get_Index()
          IL_001a:  callvirt   instance class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::get_Handle()
          IL_001f:  ldarg.1
          IL_0020:  ldarg.3
          IL_0021:  call       class LibGit2Sharp.Core.Handles.DiffListSafeHandle LibGit2Sharp.Core.Proxy::git_diff_tree_to_index(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                  class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                                                                                  class LibGit2Sharp.ObjectId,
                                                                                                                                  class LibGit2Sharp.Core.GitDiffOptions)
          IL_0026:  stloc.0
          IL_0027:  ldarg.0
          IL_0028:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff/'<>c__DisplayClassb'::repo
          IL_002d:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
          IL_0032:  ldarg.0
          IL_0033:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff/'<>c__DisplayClassb'::repo
          IL_0038:  callvirt   instance class LibGit2Sharp.Index LibGit2Sharp.Repository::get_Index()
          IL_003d:  callvirt   instance class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::get_Handle()
          IL_0042:  ldarg.3
          IL_0043:  call       class LibGit2Sharp.Core.Handles.DiffListSafeHandle LibGit2Sharp.Core.Proxy::git_diff_index_to_workdir(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                     class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                                                                                     class LibGit2Sharp.Core.GitDiffOptions)
          IL_0048:  stloc.1
          IL_0049:  ldloc.0
          IL_004a:  ldloc.1
          IL_004b:  call       void LibGit2Sharp.Core.Proxy::git_diff_merge(class LibGit2Sharp.Core.Handles.DiffListSafeHandle,
                                                                            class LibGit2Sharp.Core.Handles.DiffListSafeHandle)
          IL_0050:  leave.s    IL_005b

        }  // end .try
        catch [mscorlib]System.Object 
        {
          IL_0052:  pop
          IL_0053:  ldloc.0
          IL_0054:  call       void LibGit2Sharp.Core.Handles.SafeHandleExtensions::SafeDispose(class LibGit2Sharp.Core.Handles.SafeHandleBase)
          IL_0059:  rethrow
        }  // end handler
        IL_005b:  leave.s    IL_0064

      }  // end .try
      finally
      {
        IL_005d:  ldloc.1
        IL_005e:  call       void LibGit2Sharp.Core.Handles.SafeHandleExtensions::SafeDispose(class LibGit2Sharp.Core.Handles.SafeHandleBase)
        IL_0063:  endfinally
      }  // end handler
      IL_0064:  ldloc.0
      IL_0065:  ret
    } // end of method '<>c__DisplayClassb'::'<WorkdirAndIndexToTree>b__a'

  } // end of class '<>c__DisplayClassb'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClasse'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Repository repo
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClasse'::.ctor

    .method public hidebysig instance class LibGit2Sharp.Core.Handles.DiffListSafeHandle 
            '<IndexToTree>b__d'(class LibGit2Sharp.ObjectId oh,
                                class LibGit2Sharp.ObjectId nh,
                                class LibGit2Sharp.Core.GitDiffOptions o) cil managed
    {
      // Code size       35 (0x23)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff/'<>c__DisplayClasse'::repo
      IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
      IL_000b:  ldarg.0
      IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff/'<>c__DisplayClasse'::repo
      IL_0011:  callvirt   instance class LibGit2Sharp.Index LibGit2Sharp.Repository::get_Index()
      IL_0016:  callvirt   instance class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::get_Handle()
      IL_001b:  ldarg.1
      IL_001c:  ldarg.3
      IL_001d:  call       class LibGit2Sharp.Core.Handles.DiffListSafeHandle LibGit2Sharp.Core.Proxy::git_diff_tree_to_index(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                              class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                                                                              class LibGit2Sharp.ObjectId,
                                                                                                                              class LibGit2Sharp.Core.GitDiffOptions)
      IL_0022:  ret
    } // end of method '<>c__DisplayClasse'::'<IndexToTree>b__d'

  } // end of class '<>c__DisplayClasse'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass12'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass12'::.ctor

    .method public hidebysig instance void 
            '<DispatchUnmatchedPaths>b__10'(class LibGit2Sharp.Core.FilePath filePath) cil managed
    {
      // Code size       23 (0x17)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.ExplicitPathsOptions LibGit2Sharp.Diff/'<>c__DisplayClass12'::explicitPathsOptions
      IL_0006:  callvirt   instance class LibGit2Sharp.Handlers.UnmatchedPathHandler LibGit2Sharp.ExplicitPathsOptions::get_OnUnmatchedPath()
      IL_000b:  ldarg.1
      IL_000c:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
      IL_0011:  callvirt   instance void LibGit2Sharp.Handlers.UnmatchedPathHandler::Invoke(string)
      IL_0016:  ret
    } // end of method '<>c__DisplayClass12'::'<DispatchUnmatchedPaths>b__10'

  } // end of class '<>c__DisplayClass12'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass15'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class [mscorlib]System.Text.StringBuilder message
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass15'::.ctor

    .method public hidebysig instance void 
            '<BuildUnmatchedPathsMessage>b__14'(class LibGit2Sharp.Core.FilePath filePath) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class [mscorlib]System.Text.StringBuilder LibGit2Sharp.Diff/'<>c__DisplayClass15'::message
      IL_0006:  ldstr      "- {0}{1}"
      IL_000b:  ldarg.1
      IL_000c:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
      IL_0011:  call       string [mscorlib]System.Environment::get_NewLine()
      IL_0016:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::AppendFormat(string,
                                                                                                                                object,
                                                                                                                                object)
      IL_001b:  pop
      IL_001c:  ret
    } // end of method '<>c__DisplayClass15'::'<BuildUnmatchedPathsMessage>b__14'

  } // end of class '<>c__DisplayClass15'

  .field private initonly class LibGit2Sharp.Repository repo
  .field private initonly class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.DiffTargets,class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>> handleRetrieverDispatcher
  .method private hidebysig static class LibGit2Sharp.Core.GitDiffOptions 
          BuildOptions(valuetype LibGit2Sharp.DiffModifiers diffOptions,
                       [opt] class LibGit2Sharp.Core.FilePath[] filePaths,
                       [opt] class LibGit2Sharp.MatchedPathsAggregator matchedPathsAggregator,
                       [opt] class LibGit2Sharp.CompareOptions compareOptions) cil managed
  {
    .param [2] = nullref
    .param [3] = nullref
    .param [4] = nullref
    // Code size       231 (0xe7)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.GitDiffOptions V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.Core.GitDiffOptions::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  dup
    IL_0008:  ldfld      valuetype LibGit2Sharp.Core.GitDiffOptionFlags LibGit2Sharp.Core.GitDiffOptions::Flags
    IL_000d:  ldc.i4     0x8000
    IL_0012:  or
    IL_0013:  stfld      valuetype LibGit2Sharp.Core.GitDiffOptionFlags LibGit2Sharp.Core.GitDiffOptions::Flags
    IL_0018:  ldarg.3
    IL_0019:  dup
    IL_001a:  brtrue.s   IL_0022

    IL_001c:  pop
    IL_001d:  newobj     instance void LibGit2Sharp.CompareOptions::.ctor()
    IL_0022:  starg.s    compareOptions
    IL_0024:  ldloc.0
    IL_0025:  ldarg.3
    IL_0026:  callvirt   instance int32 LibGit2Sharp.CompareOptions::get_ContextLines()
    IL_002b:  conv.u2
    IL_002c:  stfld      uint16 LibGit2Sharp.Core.GitDiffOptions::ContextLines
    IL_0031:  ldloc.0
    IL_0032:  ldarg.3
    IL_0033:  callvirt   instance int32 LibGit2Sharp.CompareOptions::get_InterhunkLines()
    IL_0038:  conv.u2
    IL_0039:  stfld      uint16 LibGit2Sharp.Core.GitDiffOptions::InterhunkLines
    IL_003e:  ldarg.0
    IL_003f:  box        LibGit2Sharp.DiffModifiers
    IL_0044:  ldc.i4.2
    IL_0045:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.DiffModifiers>(class [mscorlib]System.Enum,
                                                                                                                     !!0)
    IL_004a:  brfalse.s  IL_005e

    IL_004c:  ldloc.0
    IL_004d:  dup
    IL_004e:  ldfld      valuetype LibGit2Sharp.Core.GitDiffOptionFlags LibGit2Sharp.Core.GitDiffOptions::Flags
    IL_0053:  ldc.i4     0x2500
    IL_0058:  or
    IL_0059:  stfld      valuetype LibGit2Sharp.Core.GitDiffOptionFlags LibGit2Sharp.Core.GitDiffOptions::Flags
    IL_005e:  ldarg.0
    IL_005f:  box        LibGit2Sharp.DiffModifiers
    IL_0064:  ldc.i4.s   16
    IL_0066:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.DiffModifiers>(class [mscorlib]System.Enum,
                                                                                                                     !!0)
    IL_006b:  brfalse.s  IL_007f

    IL_006d:  ldloc.0
    IL_006e:  dup
    IL_006f:  ldfld      valuetype LibGit2Sharp.Core.GitDiffOptionFlags LibGit2Sharp.Core.GitDiffOptions::Flags
    IL_0074:  ldc.i4     0x80
    IL_0079:  or
    IL_007a:  stfld      valuetype LibGit2Sharp.Core.GitDiffOptionFlags LibGit2Sharp.Core.GitDiffOptions::Flags
    IL_007f:  ldarg.0
    IL_0080:  box        LibGit2Sharp.DiffModifiers
    IL_0085:  ldc.i4.4
    IL_0086:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.DiffModifiers>(class [mscorlib]System.Enum,
                                                                                                                     !!0)
    IL_008b:  brfalse.s  IL_009f

    IL_008d:  ldloc.0
    IL_008e:  dup
    IL_008f:  ldfld      valuetype LibGit2Sharp.Core.GitDiffOptionFlags LibGit2Sharp.Core.GitDiffOptions::Flags
    IL_0094:  ldc.i4     0x200
    IL_0099:  or
    IL_009a:  stfld      valuetype LibGit2Sharp.Core.GitDiffOptionFlags LibGit2Sharp.Core.GitDiffOptions::Flags
    IL_009f:  ldarg.0
    IL_00a0:  box        LibGit2Sharp.DiffModifiers
    IL_00a5:  ldc.i4.8
    IL_00a6:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.DiffModifiers>(class [mscorlib]System.Enum,
                                                                                                                     !!0)
    IL_00ab:  brfalse.s  IL_00bf

    IL_00ad:  ldloc.0
    IL_00ae:  dup
    IL_00af:  ldfld      valuetype LibGit2Sharp.Core.GitDiffOptionFlags LibGit2Sharp.Core.GitDiffOptions::Flags
    IL_00b4:  ldc.i4     0x800
    IL_00b9:  or
    IL_00ba:  stfld      valuetype LibGit2Sharp.Core.GitDiffOptionFlags LibGit2Sharp.Core.GitDiffOptions::Flags
    IL_00bf:  ldarg.2
    IL_00c0:  brfalse.s  IL_00d4

    IL_00c2:  ldloc.0
    IL_00c3:  ldarg.2
    IL_00c4:  ldftn      instance int32 LibGit2Sharp.MatchedPathsAggregator::OnGitDiffNotify(native int,
                                                                                             native int,
                                                                                             native int,
                                                                                             native int)
    IL_00ca:  newobj     instance void LibGit2Sharp.Core.diff_notify_cb::.ctor(object,
                                                                               native int)
    IL_00cf:  stfld      class LibGit2Sharp.Core.diff_notify_cb LibGit2Sharp.Core.GitDiffOptions::NotifyCallback
    IL_00d4:  ldarg.1
    IL_00d5:  brtrue.s   IL_00d9

    IL_00d7:  ldloc.0
    IL_00d8:  ret

    IL_00d9:  ldloc.0
    IL_00da:  ldarg.1
    IL_00db:  call       class LibGit2Sharp.Core.GitStrArrayIn LibGit2Sharp.Core.GitStrArrayIn::BuildFrom(class LibGit2Sharp.Core.FilePath[])
    IL_00e0:  stfld      class LibGit2Sharp.Core.GitStrArrayIn LibGit2Sharp.Core.GitDiffOptions::PathSpec
    IL_00e5:  ldloc.0
    IL_00e6:  ret
  } // end of method Diff::BuildOptions

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.DiffTargets,class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>> LibGit2Sharp.Diff::BuildHandleRetrieverDispatcher()
    IL_0006:  stfld      class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.DiffTargets,class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>> LibGit2Sharp.Diff::handleRetrieverDispatcher
    IL_000b:  ldarg.0
    IL_000c:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0011:  ret
  } // end of method Diff::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       25 (0x19)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.DiffTargets,class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>> LibGit2Sharp.Diff::BuildHandleRetrieverDispatcher()
    IL_0006:  stfld      class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.DiffTargets,class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>> LibGit2Sharp.Diff::handleRetrieverDispatcher
    IL_000b:  ldarg.0
    IL_000c:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0011:  ldarg.0
    IL_0012:  ldarg.1
    IL_0013:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff::repo
    IL_0018:  ret
  } // end of method Diff::.ctor

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.TreeChanges 
          Compare(class LibGit2Sharp.Tree oldTree,
                  class LibGit2Sharp.Tree newTree,
                  [opt] class [mscorlib]System.Collections.Generic.IEnumerable`1<string> paths,
                  [opt] class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions,
                  [opt] class LibGit2Sharp.CompareOptions compareOptions) cil managed
  {
    .param [3] = nullref
    .param [4] = nullref
    .param [5] = nullref
    // Code size       98 (0x62)
    .maxstack  8
    .locals init (class LibGit2Sharp.Diff/TreeComparisonHandleRetriever V_0,
             class LibGit2Sharp.ObjectId V_1,
             class LibGit2Sharp.ObjectId V_2,
             valuetype LibGit2Sharp.DiffModifiers V_3)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff::repo
    IL_0006:  call       class LibGit2Sharp.Diff/TreeComparisonHandleRetriever LibGit2Sharp.Diff::TreeToTree(class LibGit2Sharp.Repository)
    IL_000b:  stloc.0
    IL_000c:  ldarg.1
    IL_000d:  ldnull
    IL_000e:  call       bool LibGit2Sharp.GitObject::op_Inequality(class LibGit2Sharp.GitObject,
                                                                    class LibGit2Sharp.GitObject)
    IL_0013:  brtrue.s   IL_0018

    IL_0015:  ldnull
    IL_0016:  br.s       IL_001e

    IL_0018:  ldarg.1
    IL_0019:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_001e:  stloc.1
    IL_001f:  ldarg.2
    IL_0020:  ldnull
    IL_0021:  call       bool LibGit2Sharp.GitObject::op_Inequality(class LibGit2Sharp.GitObject,
                                                                    class LibGit2Sharp.GitObject)
    IL_0026:  brtrue.s   IL_002b

    IL_0028:  ldnull
    IL_0029:  br.s       IL_0031

    IL_002b:  ldarg.2
    IL_002c:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0031:  stloc.2
    IL_0032:  ldc.i4.0
    IL_0033:  stloc.3
    IL_0034:  ldarg.s    explicitPathsOptions
    IL_0036:  brfalse.s  IL_0052

    IL_0038:  ldloc.3
    IL_0039:  ldc.i4.8
    IL_003a:  or
    IL_003b:  stloc.3
    IL_003c:  ldarg.s    explicitPathsOptions
    IL_003e:  callvirt   instance bool LibGit2Sharp.ExplicitPathsOptions::get_ShouldFailOnUnmatchedPath()
    IL_0043:  brtrue.s   IL_004e

    IL_0045:  ldarg.s    explicitPathsOptions
    IL_0047:  callvirt   instance class LibGit2Sharp.Handlers.UnmatchedPathHandler LibGit2Sharp.ExplicitPathsOptions::get_OnUnmatchedPath()
    IL_004c:  brfalse.s  IL_0052

    IL_004e:  ldloc.3
    IL_004f:  ldc.i4.4
    IL_0050:  or
    IL_0051:  stloc.3
    IL_0052:  ldarg.0
    IL_0053:  ldloc.1
    IL_0054:  ldloc.2
    IL_0055:  ldloc.0
    IL_0056:  ldloc.3
    IL_0057:  ldarg.3
    IL_0058:  ldarg.s    explicitPathsOptions
    IL_005a:  ldarg.s    compareOptions
    IL_005c:  call       instance class LibGit2Sharp.TreeChanges LibGit2Sharp.Diff::BuildTreeChangesFromComparer(class LibGit2Sharp.ObjectId,
                                                                                                                 class LibGit2Sharp.ObjectId,
                                                                                                                 class LibGit2Sharp.Diff/TreeComparisonHandleRetriever,
                                                                                                                 valuetype LibGit2Sharp.DiffModifiers,
                                                                                                                 class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                                                                 class LibGit2Sharp.ExplicitPathsOptions,
                                                                                                                 class LibGit2Sharp.CompareOptions)
    IL_0061:  ret
  } // end of method Diff::Compare

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.ContentChanges 
          Compare(class LibGit2Sharp.Blob oldBlob,
                  class LibGit2Sharp.Blob newBlob,
                  [opt] class LibGit2Sharp.CompareOptions compareOptions) cil managed
  {
    .param [3] = nullref
    // Code size       41 (0x29)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.GitDiffOptions V_0,
             class LibGit2Sharp.ContentChanges V_1,
             class LibGit2Sharp.CompareOptions V_2)
    IL_0000:  ldarg.3
    IL_0001:  stloc.2
    IL_0002:  ldc.i4.0
    IL_0003:  ldnull
    IL_0004:  ldnull
    IL_0005:  ldloc.2
    IL_0006:  call       class LibGit2Sharp.Core.GitDiffOptions LibGit2Sharp.Diff::BuildOptions(valuetype LibGit2Sharp.DiffModifiers,
                                                                                                class LibGit2Sharp.Core.FilePath[],
                                                                                                class LibGit2Sharp.MatchedPathsAggregator,
                                                                                                class LibGit2Sharp.CompareOptions)
    IL_000b:  stloc.0
    .try
    {
      IL_000c:  ldarg.0
      IL_000d:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff::repo
      IL_0012:  ldarg.1
      IL_0013:  ldarg.2
      IL_0014:  ldloc.0
      IL_0015:  newobj     instance void LibGit2Sharp.ContentChanges::.ctor(class LibGit2Sharp.Repository,
                                                                            class LibGit2Sharp.Blob,
                                                                            class LibGit2Sharp.Blob,
                                                                            class LibGit2Sharp.Core.GitDiffOptions)
      IL_001a:  stloc.1
      IL_001b:  leave.s    IL_0027

    }  // end .try
    finally
    {
      IL_001d:  ldloc.0
      IL_001e:  brfalse.s  IL_0026

      IL_0020:  ldloc.0
      IL_0021:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0026:  endfinally
    }  // end handler
    IL_0027:  ldloc.1
    IL_0028:  ret
  } // end of method Diff::Compare

  .method private hidebysig static class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.DiffTargets,class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>> 
          BuildHandleRetrieverDispatcher() cil managed
  {
    // Code size       65 (0x41)
    .maxstack  5
    .locals init (class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.DiffTargets,class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>> V_0)
    IL_0000:  newobj     instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.DiffTargets,class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldc.i4.1
    IL_0008:  ldnull
    IL_0009:  ldftn      class LibGit2Sharp.Diff/TreeComparisonHandleRetriever LibGit2Sharp.Diff::IndexToTree(class LibGit2Sharp.Repository)
    IL_000f:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>::.ctor(object,
                                                                                                                                                                    native int)
    IL_0014:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.DiffTargets,class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>>::Add(!0,
                                                                                                                                                                                                                                                              !1)
    IL_0019:  ldloc.0
    IL_001a:  ldc.i4.2
    IL_001b:  ldnull
    IL_001c:  ldftn      class LibGit2Sharp.Diff/TreeComparisonHandleRetriever LibGit2Sharp.Diff::WorkdirToTree(class LibGit2Sharp.Repository)
    IL_0022:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>::.ctor(object,
                                                                                                                                                                    native int)
    IL_0027:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.DiffTargets,class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>>::Add(!0,
                                                                                                                                                                                                                                                              !1)
    IL_002c:  ldloc.0
    IL_002d:  ldc.i4.3
    IL_002e:  ldnull
    IL_002f:  ldftn      class LibGit2Sharp.Diff/TreeComparisonHandleRetriever LibGit2Sharp.Diff::WorkdirAndIndexToTree(class LibGit2Sharp.Repository)
    IL_0035:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>::.ctor(object,
                                                                                                                                                                    native int)
    IL_003a:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.DiffTargets,class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>>::Add(!0,
                                                                                                                                                                                                                                                              !1)
    IL_003f:  ldloc.0
    IL_0040:  ret
  } // end of method Diff::BuildHandleRetrieverDispatcher

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.TreeChanges 
          Compare(class LibGit2Sharp.Tree oldTree,
                  valuetype LibGit2Sharp.DiffTargets diffTargets,
                  [opt] class [mscorlib]System.Collections.Generic.IEnumerable`1<string> paths,
                  [opt] class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions,
                  [opt] class LibGit2Sharp.CompareOptions compareOptions) cil managed
  {
    .param [3] = nullref
    .param [4] = nullref
    .param [5] = nullref
    // Code size       108 (0x6c)
    .maxstack  8
    .locals init (class LibGit2Sharp.Diff/TreeComparisonHandleRetriever V_0,
             class LibGit2Sharp.ObjectId V_1,
             valuetype LibGit2Sharp.DiffModifiers V_2)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.DiffTargets,class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>> LibGit2Sharp.Diff::handleRetrieverDispatcher
    IL_0006:  ldarg.2
    IL_0007:  callvirt   instance !1 class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.DiffTargets,class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>>::get_Item(!0)
    IL_000c:  ldarg.0
    IL_000d:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff::repo
    IL_0012:  callvirt   instance !1 class [System.Core]System.Func`2<class LibGit2Sharp.Repository,class LibGit2Sharp.Diff/TreeComparisonHandleRetriever>::Invoke(!0)
    IL_0017:  stloc.0
    IL_0018:  ldarg.1
    IL_0019:  ldnull
    IL_001a:  call       bool LibGit2Sharp.GitObject::op_Inequality(class LibGit2Sharp.GitObject,
                                                                    class LibGit2Sharp.GitObject)
    IL_001f:  brtrue.s   IL_0024

    IL_0021:  ldnull
    IL_0022:  br.s       IL_002a

    IL_0024:  ldarg.1
    IL_0025:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_002a:  stloc.1
    IL_002b:  ldarg.2
    IL_002c:  box        LibGit2Sharp.DiffTargets
    IL_0031:  ldc.i4.2
    IL_0032:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.DiffTargets>(class [mscorlib]System.Enum,
                                                                                                                   !!0)
    IL_0037:  brtrue.s   IL_003c

    IL_0039:  ldc.i4.0
    IL_003a:  br.s       IL_003d

    IL_003c:  ldc.i4.2
    IL_003d:  stloc.2
    IL_003e:  ldarg.s    explicitPathsOptions
    IL_0040:  brfalse.s  IL_005c

    IL_0042:  ldloc.2
    IL_0043:  ldc.i4.8
    IL_0044:  or
    IL_0045:  stloc.2
    IL_0046:  ldarg.s    explicitPathsOptions
    IL_0048:  callvirt   instance bool LibGit2Sharp.ExplicitPathsOptions::get_ShouldFailOnUnmatchedPath()
    IL_004d:  brtrue.s   IL_0058

    IL_004f:  ldarg.s    explicitPathsOptions
    IL_0051:  callvirt   instance class LibGit2Sharp.Handlers.UnmatchedPathHandler LibGit2Sharp.ExplicitPathsOptions::get_OnUnmatchedPath()
    IL_0056:  brfalse.s  IL_005c

    IL_0058:  ldloc.2
    IL_0059:  ldc.i4.4
    IL_005a:  or
    IL_005b:  stloc.2
    IL_005c:  ldarg.0
    IL_005d:  ldloc.1
    IL_005e:  ldnull
    IL_005f:  ldloc.0
    IL_0060:  ldloc.2
    IL_0061:  ldarg.3
    IL_0062:  ldarg.s    explicitPathsOptions
    IL_0064:  ldarg.s    compareOptions
    IL_0066:  call       instance class LibGit2Sharp.TreeChanges LibGit2Sharp.Diff::BuildTreeChangesFromComparer(class LibGit2Sharp.ObjectId,
                                                                                                                 class LibGit2Sharp.ObjectId,
                                                                                                                 class LibGit2Sharp.Diff/TreeComparisonHandleRetriever,
                                                                                                                 valuetype LibGit2Sharp.DiffModifiers,
                                                                                                                 class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                                                                 class LibGit2Sharp.ExplicitPathsOptions,
                                                                                                                 class LibGit2Sharp.CompareOptions)
    IL_006b:  ret
  } // end of method Diff::Compare

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.TreeChanges 
          Compare([opt] class [mscorlib]System.Collections.Generic.IEnumerable`1<string> paths,
                  [opt] bool includeUntracked,
                  [opt] class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions,
                  [opt] class LibGit2Sharp.CompareOptions compareOptions) cil managed
  {
    .param [1] = nullref
    .param [2] = bool(false)
    .param [3] = nullref
    .param [4] = nullref
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.2
    IL_0002:  brtrue.s   IL_0007

    IL_0004:  ldc.i4.0
    IL_0005:  br.s       IL_0008

    IL_0007:  ldc.i4.2
    IL_0008:  ldarg.1
    IL_0009:  ldarg.3
    IL_000a:  ldarg.s    compareOptions
    IL_000c:  callvirt   instance class LibGit2Sharp.TreeChanges LibGit2Sharp.Diff::Compare(valuetype LibGit2Sharp.DiffModifiers,
                                                                                            class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                                            class LibGit2Sharp.ExplicitPathsOptions,
                                                                                            class LibGit2Sharp.CompareOptions)
    IL_0011:  ret
  } // end of method Diff::Compare

  .method assembly hidebysig newslot strict virtual 
          instance class LibGit2Sharp.TreeChanges 
          Compare(valuetype LibGit2Sharp.DiffModifiers diffOptions,
                  [opt] class [mscorlib]System.Collections.Generic.IEnumerable`1<string> paths,
                  [opt] class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions,
                  [opt] class LibGit2Sharp.CompareOptions compareOptions) cil managed
  {
    .param [2] = nullref
    .param [3] = nullref
    .param [4] = nullref
    // Code size       56 (0x38)
    .maxstack  8
    .locals init (class LibGit2Sharp.Diff/TreeComparisonHandleRetriever V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff::repo
    IL_0006:  call       class LibGit2Sharp.Diff/TreeComparisonHandleRetriever LibGit2Sharp.Diff::WorkdirToIndex(class LibGit2Sharp.Repository)
    IL_000b:  stloc.0
    IL_000c:  ldarg.3
    IL_000d:  brfalse.s  IL_0029

    IL_000f:  ldarg.1
    IL_0010:  ldc.i4.8
    IL_0011:  or
    IL_0012:  starg.s    diffOptions
    IL_0014:  ldarg.3
    IL_0015:  callvirt   instance bool LibGit2Sharp.ExplicitPathsOptions::get_ShouldFailOnUnmatchedPath()
    IL_001a:  brtrue.s   IL_0024

    IL_001c:  ldarg.3
    IL_001d:  callvirt   instance class LibGit2Sharp.Handlers.UnmatchedPathHandler LibGit2Sharp.ExplicitPathsOptions::get_OnUnmatchedPath()
    IL_0022:  brfalse.s  IL_0029

    IL_0024:  ldarg.1
    IL_0025:  ldc.i4.4
    IL_0026:  or
    IL_0027:  starg.s    diffOptions
    IL_0029:  ldarg.0
    IL_002a:  ldnull
    IL_002b:  ldnull
    IL_002c:  ldloc.0
    IL_002d:  ldarg.1
    IL_002e:  ldarg.2
    IL_002f:  ldarg.3
    IL_0030:  ldarg.s    compareOptions
    IL_0032:  call       instance class LibGit2Sharp.TreeChanges LibGit2Sharp.Diff::BuildTreeChangesFromComparer(class LibGit2Sharp.ObjectId,
                                                                                                                 class LibGit2Sharp.ObjectId,
                                                                                                                 class LibGit2Sharp.Diff/TreeComparisonHandleRetriever,
                                                                                                                 valuetype LibGit2Sharp.DiffModifiers,
                                                                                                                 class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                                                                 class LibGit2Sharp.ExplicitPathsOptions,
                                                                                                                 class LibGit2Sharp.CompareOptions)
    IL_0037:  ret
  } // end of method Diff::Compare

  .method private hidebysig static class LibGit2Sharp.Diff/TreeComparisonHandleRetriever 
          TreeToTree(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       26 (0x1a)
    .maxstack  3
    .locals init (class LibGit2Sharp.Diff/'<>c__DisplayClass2' V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.Diff/'<>c__DisplayClass2'::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff/'<>c__DisplayClass2'::repo
    IL_000d:  ldloc.0
    IL_000e:  ldftn      instance class LibGit2Sharp.Core.Handles.DiffListSafeHandle LibGit2Sharp.Diff/'<>c__DisplayClass2'::'<TreeToTree>b__1'(class LibGit2Sharp.ObjectId,
                                                                                                                                                class LibGit2Sharp.ObjectId,
                                                                                                                                                class LibGit2Sharp.Core.GitDiffOptions)
    IL_0014:  newobj     instance void LibGit2Sharp.Diff/TreeComparisonHandleRetriever::.ctor(object,
                                                                                              native int)
    IL_0019:  ret
  } // end of method Diff::TreeToTree

  .method private hidebysig static class LibGit2Sharp.Diff/TreeComparisonHandleRetriever 
          WorkdirToIndex(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       26 (0x1a)
    .maxstack  3
    .locals init (class LibGit2Sharp.Diff/'<>c__DisplayClass5' V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.Diff/'<>c__DisplayClass5'::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff/'<>c__DisplayClass5'::repo
    IL_000d:  ldloc.0
    IL_000e:  ldftn      instance class LibGit2Sharp.Core.Handles.DiffListSafeHandle LibGit2Sharp.Diff/'<>c__DisplayClass5'::'<WorkdirToIndex>b__4'(class LibGit2Sharp.ObjectId,
                                                                                                                                                    class LibGit2Sharp.ObjectId,
                                                                                                                                                    class LibGit2Sharp.Core.GitDiffOptions)
    IL_0014:  newobj     instance void LibGit2Sharp.Diff/TreeComparisonHandleRetriever::.ctor(object,
                                                                                              native int)
    IL_0019:  ret
  } // end of method Diff::WorkdirToIndex

  .method private hidebysig static class LibGit2Sharp.Diff/TreeComparisonHandleRetriever 
          WorkdirToTree(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       26 (0x1a)
    .maxstack  3
    .locals init (class LibGit2Sharp.Diff/'<>c__DisplayClass8' V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.Diff/'<>c__DisplayClass8'::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff/'<>c__DisplayClass8'::repo
    IL_000d:  ldloc.0
    IL_000e:  ldftn      instance class LibGit2Sharp.Core.Handles.DiffListSafeHandle LibGit2Sharp.Diff/'<>c__DisplayClass8'::'<WorkdirToTree>b__7'(class LibGit2Sharp.ObjectId,
                                                                                                                                                   class LibGit2Sharp.ObjectId,
                                                                                                                                                   class LibGit2Sharp.Core.GitDiffOptions)
    IL_0014:  newobj     instance void LibGit2Sharp.Diff/TreeComparisonHandleRetriever::.ctor(object,
                                                                                              native int)
    IL_0019:  ret
  } // end of method Diff::WorkdirToTree

  .method private hidebysig static class LibGit2Sharp.Diff/TreeComparisonHandleRetriever 
          WorkdirAndIndexToTree(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       28 (0x1c)
    .maxstack  3
    .locals init (class LibGit2Sharp.Diff/TreeComparisonHandleRetriever V_0,
             class LibGit2Sharp.Diff/'<>c__DisplayClassb' V_1)
    IL_0000:  newobj     instance void LibGit2Sharp.Diff/'<>c__DisplayClassb'::.ctor()
    IL_0005:  stloc.1
    IL_0006:  ldloc.1
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff/'<>c__DisplayClassb'::repo
    IL_000d:  ldloc.1
    IL_000e:  ldftn      instance class LibGit2Sharp.Core.Handles.DiffListSafeHandle LibGit2Sharp.Diff/'<>c__DisplayClassb'::'<WorkdirAndIndexToTree>b__a'(class LibGit2Sharp.ObjectId,
                                                                                                                                                           class LibGit2Sharp.ObjectId,
                                                                                                                                                           class LibGit2Sharp.Core.GitDiffOptions)
    IL_0014:  newobj     instance void LibGit2Sharp.Diff/TreeComparisonHandleRetriever::.ctor(object,
                                                                                              native int)
    IL_0019:  stloc.0
    IL_001a:  ldloc.0
    IL_001b:  ret
  } // end of method Diff::WorkdirAndIndexToTree

  .method private hidebysig static class LibGit2Sharp.Diff/TreeComparisonHandleRetriever 
          IndexToTree(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       26 (0x1a)
    .maxstack  3
    .locals init (class LibGit2Sharp.Diff/'<>c__DisplayClasse' V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.Diff/'<>c__DisplayClasse'::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff/'<>c__DisplayClasse'::repo
    IL_000d:  ldloc.0
    IL_000e:  ldftn      instance class LibGit2Sharp.Core.Handles.DiffListSafeHandle LibGit2Sharp.Diff/'<>c__DisplayClasse'::'<IndexToTree>b__d'(class LibGit2Sharp.ObjectId,
                                                                                                                                                 class LibGit2Sharp.ObjectId,
                                                                                                                                                 class LibGit2Sharp.Core.GitDiffOptions)
    IL_0014:  newobj     instance void LibGit2Sharp.Diff/TreeComparisonHandleRetriever::.ctor(object,
                                                                                              native int)
    IL_0019:  ret
  } // end of method Diff::IndexToTree

  .method private hidebysig instance class LibGit2Sharp.TreeChanges 
          BuildTreeChangesFromComparer(class LibGit2Sharp.ObjectId oldTreeId,
                                       class LibGit2Sharp.ObjectId newTreeId,
                                       class LibGit2Sharp.Diff/TreeComparisonHandleRetriever comparisonHandleRetriever,
                                       valuetype LibGit2Sharp.DiffModifiers diffOptions,
                                       [opt] class [mscorlib]System.Collections.Generic.IEnumerable`1<string> paths,
                                       [opt] class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions,
                                       [opt] class LibGit2Sharp.CompareOptions compareOptions) cil managed
  {
    .param [5] = nullref
    .param [6] = nullref
    .param [7] = nullref
    // Code size       88 (0x58)
    .maxstack  4
    .locals init (class LibGit2Sharp.MatchedPathsAggregator V_0,
             class LibGit2Sharp.Core.FilePath[] V_1,
             class LibGit2Sharp.Core.GitDiffOptions V_2,
             class LibGit2Sharp.Core.Handles.DiffListSafeHandle V_3,
             class LibGit2Sharp.TreeChanges V_4)
    IL_0000:  newobj     instance void LibGit2Sharp.MatchedPathsAggregator::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldarg.0
    IL_0007:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Diff::repo
    IL_000c:  ldarg.s    paths
    IL_000e:  callvirt   instance class LibGit2Sharp.Core.FilePath[] LibGit2Sharp.Repository::ToFilePaths(class [mscorlib]System.Collections.Generic.IEnumerable`1<string>)
    IL_0013:  stloc.1
    IL_0014:  ldarg.s    diffOptions
    IL_0016:  ldloc.1
    IL_0017:  ldloc.0
    IL_0018:  ldarg.s    compareOptions
    IL_001a:  call       class LibGit2Sharp.Core.GitDiffOptions LibGit2Sharp.Diff::BuildOptions(valuetype LibGit2Sharp.DiffModifiers,
                                                                                                class LibGit2Sharp.Core.FilePath[],
                                                                                                class LibGit2Sharp.MatchedPathsAggregator,
                                                                                                class LibGit2Sharp.CompareOptions)
    IL_001f:  stloc.2
    .try
    {
      IL_0020:  ldarg.3
      IL_0021:  ldarg.1
      IL_0022:  ldarg.2
      IL_0023:  ldloc.2
      IL_0024:  callvirt   instance class LibGit2Sharp.Core.Handles.DiffListSafeHandle LibGit2Sharp.Diff/TreeComparisonHandleRetriever::Invoke(class LibGit2Sharp.ObjectId,
                                                                                                                                               class LibGit2Sharp.ObjectId,
                                                                                                                                               class LibGit2Sharp.Core.GitDiffOptions)
      IL_0029:  stloc.3
      .try
      {
        IL_002a:  ldarg.s    explicitPathsOptions
        IL_002c:  brfalse.s  IL_0037

        IL_002e:  ldarg.s    explicitPathsOptions
        IL_0030:  ldloc.1
        IL_0031:  ldloc.0
        IL_0032:  call       void LibGit2Sharp.Diff::DispatchUnmatchedPaths(class LibGit2Sharp.ExplicitPathsOptions,
                                                                            class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Core.FilePath>,
                                                                            class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Core.FilePath>)
        IL_0037:  ldloc.3
        IL_0038:  newobj     instance void LibGit2Sharp.TreeChanges::.ctor(class LibGit2Sharp.Core.Handles.DiffListSafeHandle)
        IL_003d:  stloc.s    V_4
        IL_003f:  leave.s    IL_0055

      }  // end .try
      finally
      {
        IL_0041:  ldloc.3
        IL_0042:  brfalse.s  IL_004a

        IL_0044:  ldloc.3
        IL_0045:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_004a:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_004b:  ldloc.2
      IL_004c:  brfalse.s  IL_0054

      IL_004e:  ldloc.2
      IL_004f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0054:  endfinally
    }  // end handler
    IL_0055:  ldloc.s    V_4
    IL_0057:  ret
  } // end of method Diff::BuildTreeChangesFromComparer

  .method private hidebysig static void  DispatchUnmatchedPaths(class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions,
                                                                class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Core.FilePath> filePaths,
                                                                class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Core.FilePath> matchedPaths) cil managed
  {
    // Code size       109 (0x6d)
    .maxstack  4
    .locals init (class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath> V_0,
             class [mscorlib]System.Action`1<class LibGit2Sharp.Core.FilePath> V_1,
             class LibGit2Sharp.Diff/'<>c__DisplayClass12' V_2)
    IL_0000:  ldnull
    IL_0001:  stloc.1
    IL_0002:  newobj     instance void LibGit2Sharp.Diff/'<>c__DisplayClass12'::.ctor()
    IL_0007:  stloc.2
    IL_0008:  ldloc.2
    IL_0009:  ldarg.0
    IL_000a:  stfld      class LibGit2Sharp.ExplicitPathsOptions LibGit2Sharp.Diff/'<>c__DisplayClass12'::explicitPathsOptions
    IL_000f:  ldarg.1
    IL_0010:  brtrue.s   IL_0019

    IL_0012:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> [System.Core]System.Linq.Enumerable::Empty<class LibGit2Sharp.Core.FilePath>()
    IL_0017:  br.s       IL_0020

    IL_0019:  ldarg.1
    IL_001a:  ldarg.2
    IL_001b:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> [System.Core]System.Linq.Enumerable::Except<class LibGit2Sharp.Core.FilePath>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                     class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0020:  call       class [mscorlib]System.Collections.Generic.List`1<!!0> [System.Core]System.Linq.Enumerable::ToList<class LibGit2Sharp.Core.FilePath>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0025:  stloc.0
    IL_0026:  ldloc.0
    IL_0027:  call       bool [System.Core]System.Linq.Enumerable::Any<class LibGit2Sharp.Core.FilePath>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_002c:  brtrue.s   IL_002f

    IL_002e:  ret

    IL_002f:  ldloc.2
    IL_0030:  ldfld      class LibGit2Sharp.ExplicitPathsOptions LibGit2Sharp.Diff/'<>c__DisplayClass12'::explicitPathsOptions
    IL_0035:  callvirt   instance class LibGit2Sharp.Handlers.UnmatchedPathHandler LibGit2Sharp.ExplicitPathsOptions::get_OnUnmatchedPath()
    IL_003a:  brfalse.s  IL_0053

    IL_003c:  ldloc.0
    IL_003d:  ldloc.1
    IL_003e:  brtrue.s   IL_004d

    IL_0040:  ldloc.2
    IL_0041:  ldftn      instance void LibGit2Sharp.Diff/'<>c__DisplayClass12'::'<DispatchUnmatchedPaths>b__10'(class LibGit2Sharp.Core.FilePath)
    IL_0047:  newobj     instance void class [mscorlib]System.Action`1<class LibGit2Sharp.Core.FilePath>::.ctor(object,
                                                                                                                native int)
    IL_004c:  stloc.1
    IL_004d:  ldloc.1
    IL_004e:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath>::ForEach(class [mscorlib]System.Action`1<!0>)
    IL_0053:  ldloc.2
    IL_0054:  ldfld      class LibGit2Sharp.ExplicitPathsOptions LibGit2Sharp.Diff/'<>c__DisplayClass12'::explicitPathsOptions
    IL_0059:  callvirt   instance bool LibGit2Sharp.ExplicitPathsOptions::get_ShouldFailOnUnmatchedPath()
    IL_005e:  brfalse.s  IL_006c

    IL_0060:  ldloc.0
    IL_0061:  call       string LibGit2Sharp.Diff::BuildUnmatchedPathsMessage(class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath>)
    IL_0066:  newobj     instance void LibGit2Sharp.UnmatchedPathException::.ctor(string)
    IL_006b:  throw

    IL_006c:  ret
  } // end of method Diff::DispatchUnmatchedPaths

  .method private hidebysig static string 
          BuildUnmatchedPathsMessage(class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath> unmatchedPaths) cil managed
  {
    // Code size       62 (0x3e)
    .maxstack  4
    .locals init (class LibGit2Sharp.Diff/'<>c__DisplayClass15' V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.Diff/'<>c__DisplayClass15'::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldstr      "There were some unmatched paths:"
    IL_000c:  call       string [mscorlib]System.Environment::get_NewLine()
    IL_0011:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0016:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor(string)
    IL_001b:  stfld      class [mscorlib]System.Text.StringBuilder LibGit2Sharp.Diff/'<>c__DisplayClass15'::message
    IL_0020:  ldarg.0
    IL_0021:  ldloc.0
    IL_0022:  ldftn      instance void LibGit2Sharp.Diff/'<>c__DisplayClass15'::'<BuildUnmatchedPathsMessage>b__14'(class LibGit2Sharp.Core.FilePath)
    IL_0028:  newobj     instance void class [mscorlib]System.Action`1<class LibGit2Sharp.Core.FilePath>::.ctor(object,
                                                                                                                native int)
    IL_002d:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath>::ForEach(class [mscorlib]System.Action`1<!0>)
    IL_0032:  ldloc.0
    IL_0033:  ldfld      class [mscorlib]System.Text.StringBuilder LibGit2Sharp.Diff/'<>c__DisplayClass15'::message
    IL_0038:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_003d:  ret
  } // end of method Diff::BuildUnmatchedPathsMessage

} // end of class LibGit2Sharp.Diff

.class interface public abstract auto ansi LibGit2Sharp.IRepository
       implements [mscorlib]System.IDisposable
{
  .method public hidebysig newslot specialname abstract virtual 
          instance class LibGit2Sharp.Branch 
          get_Head() cil managed
  {
  } // end of method IRepository::get_Head

  .method public hidebysig newslot specialname abstract virtual 
          instance class LibGit2Sharp.Configuration 
          get_Config() cil managed
  {
  } // end of method IRepository::get_Config

  .method public hidebysig newslot specialname abstract virtual 
          instance class LibGit2Sharp.Index 
          get_Index() cil managed
  {
  } // end of method IRepository::get_Index

  .method public hidebysig newslot specialname abstract virtual 
          instance class LibGit2Sharp.ReferenceCollection 
          get_Refs() cil managed
  {
  } // end of method IRepository::get_Refs

  .method public hidebysig newslot specialname abstract virtual 
          instance class LibGit2Sharp.IQueryableCommitLog 
          get_Commits() cil managed
  {
  } // end of method IRepository::get_Commits

  .method public hidebysig newslot specialname abstract virtual 
          instance class LibGit2Sharp.BranchCollection 
          get_Branches() cil managed
  {
  } // end of method IRepository::get_Branches

  .method public hidebysig newslot specialname abstract virtual 
          instance class LibGit2Sharp.TagCollection 
          get_Tags() cil managed
  {
  } // end of method IRepository::get_Tags

  .method public hidebysig newslot specialname abstract virtual 
          instance class LibGit2Sharp.RepositoryInformation 
          get_Info() cil managed
  {
  } // end of method IRepository::get_Info

  .method public hidebysig newslot specialname abstract virtual 
          instance class LibGit2Sharp.Diff 
          get_Diff() cil managed
  {
  } // end of method IRepository::get_Diff

  .method public hidebysig newslot specialname abstract virtual 
          instance class LibGit2Sharp.ObjectDatabase 
          get_ObjectDatabase() cil managed
  {
  } // end of method IRepository::get_ObjectDatabase

  .method public hidebysig newslot specialname abstract virtual 
          instance class LibGit2Sharp.NoteCollection 
          get_Notes() cil managed
  {
  } // end of method IRepository::get_Notes

  .method public hidebysig newslot specialname abstract virtual 
          instance class LibGit2Sharp.SubmoduleCollection 
          get_Submodules() cil managed
  {
  } // end of method IRepository::get_Submodules

  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.Branch 
          Checkout(class LibGit2Sharp.Branch branch,
                   valuetype LibGit2Sharp.CheckoutOptions checkoutOptions,
                   class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 80 9E 54 68 69 73 20 6D 65 74 68 6F 64 20   // ....This method 
                                                                                77 69 6C 6C 20 62 65 20 72 65 6D 6F 76 65 64 20   // will be removed 
                                                                                69 6E 20 74 68 65 20 6E 65 78 74 20 72 65 6C 65   // in the next rele
                                                                                61 73 65 2E 20 50 6C 65 61 73 65 20 75 73 65 20   // ase. Please use 
                                                                                43 68 65 63 6B 6F 75 74 28 42 72 61 6E 63 68 2C   // Checkout(Branch,
                                                                                20 43 68 65 63 6B 6F 75 74 4D 6F 64 69 66 69 65   //  CheckoutModifie
                                                                                72 73 2C 20 43 68 65 63 6B 6F 75 74 50 72 6F 67   // rs, CheckoutProg
                                                                                72 65 73 73 48 61 6E 64 6C 65 72 2C 20 43 68 65   // ressHandler, Che
                                                                                63 6B 6F 75 74 4E 6F 74 69 66 69 63 61 74 69 6F   // ckoutNotificatio
                                                                                6E 4F 70 74 69 6F 6E 73 29 20 69 6E 73 74 65 61   // nOptions) instea
                                                                                64 2E 00 00 )                                     // d...
  } // end of method IRepository::Checkout

  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.Branch 
          Checkout(class LibGit2Sharp.Branch branch,
                   valuetype LibGit2Sharp.CheckoutModifiers checkoutModifiers,
                   class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress,
                   class LibGit2Sharp.CheckoutNotificationOptions checkoutNotificationOptions) cil managed
  {
  } // end of method IRepository::Checkout

  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.Branch 
          Checkout(string committishOrBranchSpec,
                   valuetype LibGit2Sharp.CheckoutOptions checkoutOptions,
                   class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 80 9E 54 68 69 73 20 6D 65 74 68 6F 64 20   // ....This method 
                                                                                77 69 6C 6C 20 62 65 20 72 65 6D 6F 76 65 64 20   // will be removed 
                                                                                69 6E 20 74 68 65 20 6E 65 78 74 20 72 65 6C 65   // in the next rele
                                                                                61 73 65 2E 20 50 6C 65 61 73 65 20 75 73 65 20   // ase. Please use 
                                                                                43 68 65 63 6B 6F 75 74 28 73 74 72 69 6E 67 2C   // Checkout(string,
                                                                                20 43 68 65 63 6B 6F 75 74 4D 6F 64 69 66 69 65   //  CheckoutModifie
                                                                                72 73 2C 20 43 68 65 63 6B 6F 75 74 50 72 6F 67   // rs, CheckoutProg
                                                                                72 65 73 73 48 61 6E 64 6C 65 72 2C 20 43 68 65   // ressHandler, Che
                                                                                63 6B 6F 75 74 4E 6F 74 69 66 69 63 61 74 69 6F   // ckoutNotificatio
                                                                                6E 4F 70 74 69 6F 6E 73 29 20 69 6E 73 74 65 61   // nOptions) instea
                                                                                64 2E 00 00 )                                     // d...
  } // end of method IRepository::Checkout

  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.Branch 
          Checkout(string committishOrBranchSpec,
                   valuetype LibGit2Sharp.CheckoutModifiers checkoutModifiers,
                   class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress,
                   class LibGit2Sharp.CheckoutNotificationOptions checkoutNotificationOptions) cil managed
  {
  } // end of method IRepository::Checkout

  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.Branch 
          Checkout(class LibGit2Sharp.Commit commit,
                   valuetype LibGit2Sharp.CheckoutOptions checkoutOptions,
                   class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 80 9E 54 68 69 73 20 6D 65 74 68 6F 64 20   // ....This method 
                                                                                77 69 6C 6C 20 62 65 20 72 65 6D 6F 76 65 64 20   // will be removed 
                                                                                69 6E 20 74 68 65 20 6E 65 78 74 20 72 65 6C 65   // in the next rele
                                                                                61 73 65 2E 20 50 6C 65 61 73 65 20 75 73 65 20   // ase. Please use 
                                                                                43 68 65 63 6B 6F 75 74 28 43 6F 6D 6D 69 74 2C   // Checkout(Commit,
                                                                                20 43 68 65 63 6B 6F 75 74 4D 6F 64 69 66 69 65   //  CheckoutModifie
                                                                                72 73 2C 20 43 68 65 63 6B 6F 75 74 50 72 6F 67   // rs, CheckoutProg
                                                                                72 65 73 73 48 61 6E 64 6C 65 72 2C 20 43 68 65   // ressHandler, Che
                                                                                63 6B 6F 75 74 4E 6F 74 69 66 69 63 61 74 69 6F   // ckoutNotificatio
                                                                                6E 4F 70 74 69 6F 6E 73 29 20 69 6E 73 74 65 61   // nOptions) instea
                                                                                64 2E 00 00 )                                     // d...
  } // end of method IRepository::Checkout

  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.Branch 
          Checkout(class LibGit2Sharp.Commit commit,
                   valuetype LibGit2Sharp.CheckoutModifiers checkoutModifiers,
                   class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress,
                   class LibGit2Sharp.CheckoutNotificationOptions checkoutNotificationOptions) cil managed
  {
  } // end of method IRepository::Checkout

  .method public hidebysig newslot abstract virtual 
          instance void  CheckoutPaths(string committishOrBranchSpec,
                                       class [mscorlib]System.Collections.Generic.IList`1<string> paths,
                                       valuetype LibGit2Sharp.CheckoutModifiers checkoutOptions,
                                       class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress,
                                       class LibGit2Sharp.CheckoutNotificationOptions checkoutNotificationOptions) cil managed
  {
  } // end of method IRepository::CheckoutPaths

  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.GitObject 
          Lookup(class LibGit2Sharp.ObjectId id) cil managed
  {
  } // end of method IRepository::Lookup

  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.GitObject 
          Lookup(string objectish) cil managed
  {
  } // end of method IRepository::Lookup

  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.GitObject 
          Lookup(class LibGit2Sharp.ObjectId id,
                 valuetype LibGit2Sharp.ObjectType 'type') cil managed
  {
  } // end of method IRepository::Lookup

  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.GitObject 
          Lookup(string objectish,
                 valuetype LibGit2Sharp.ObjectType 'type') cil managed
  {
  } // end of method IRepository::Lookup

  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.Commit 
          Commit(string message,
                 class LibGit2Sharp.Signature author,
                 class LibGit2Sharp.Signature committer,
                 [opt] bool amendPreviousCommit) cil managed
  {
    .param [4] = bool(false)
  } // end of method IRepository::Commit

  .method public hidebysig newslot abstract virtual 
          instance void  Reset(valuetype LibGit2Sharp.ResetOptions resetOptions,
                               class LibGit2Sharp.Commit commit) cil managed
  {
  } // end of method IRepository::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Reset(class LibGit2Sharp.Commit commit,
                               [opt] class [mscorlib]System.Collections.Generic.IEnumerable`1<string> paths,
                               [opt] class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions) cil managed
  {
    .param [2] = nullref
    .param [3] = nullref
  } // end of method IRepository::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  RemoveUntrackedFiles() cil managed
  {
  } // end of method IRepository::RemoveUntrackedFiles

  .method public hidebysig newslot specialname abstract virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.MergeHead> 
          get_MergeHeads() cil managed
  {
  } // end of method IRepository::get_MergeHeads

  .method public hidebysig newslot specialname abstract virtual 
          instance class LibGit2Sharp.Network 
          get_Network() cil managed
  {
  } // end of method IRepository::get_Network

  .property instance class LibGit2Sharp.Branch
          Head()
  {
    .get instance class LibGit2Sharp.Branch LibGit2Sharp.IRepository::get_Head()
  } // end of property IRepository::Head
  .property instance class LibGit2Sharp.Configuration
          Config()
  {
    .get instance class LibGit2Sharp.Configuration LibGit2Sharp.IRepository::get_Config()
  } // end of property IRepository::Config
  .property instance class LibGit2Sharp.Index
          Index()
  {
    .get instance class LibGit2Sharp.Index LibGit2Sharp.IRepository::get_Index()
  } // end of property IRepository::Index
  .property instance class LibGit2Sharp.ReferenceCollection
          Refs()
  {
    .get instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.IRepository::get_Refs()
  } // end of property IRepository::Refs
  .property instance class LibGit2Sharp.IQueryableCommitLog
          Commits()
  {
    .get instance class LibGit2Sharp.IQueryableCommitLog LibGit2Sharp.IRepository::get_Commits()
  } // end of property IRepository::Commits
  .property instance class LibGit2Sharp.BranchCollection
          Branches()
  {
    .get instance class LibGit2Sharp.BranchCollection LibGit2Sharp.IRepository::get_Branches()
  } // end of property IRepository::Branches
  .property instance class LibGit2Sharp.TagCollection
          Tags()
  {
    .get instance class LibGit2Sharp.TagCollection LibGit2Sharp.IRepository::get_Tags()
  } // end of property IRepository::Tags
  .property instance class LibGit2Sharp.RepositoryInformation
          Info()
  {
    .get instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.IRepository::get_Info()
  } // end of property IRepository::Info
  .property instance class LibGit2Sharp.Diff
          Diff()
  {
    .get instance class LibGit2Sharp.Diff LibGit2Sharp.IRepository::get_Diff()
  } // end of property IRepository::Diff
  .property instance class LibGit2Sharp.ObjectDatabase
          ObjectDatabase()
  {
    .get instance class LibGit2Sharp.ObjectDatabase LibGit2Sharp.IRepository::get_ObjectDatabase()
  } // end of property IRepository::ObjectDatabase
  .property instance class LibGit2Sharp.NoteCollection
          Notes()
  {
    .get instance class LibGit2Sharp.NoteCollection LibGit2Sharp.IRepository::get_Notes()
  } // end of property IRepository::Notes
  .property instance class LibGit2Sharp.SubmoduleCollection
          Submodules()
  {
    .get instance class LibGit2Sharp.SubmoduleCollection LibGit2Sharp.IRepository::get_Submodules()
  } // end of property IRepository::Submodules
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.MergeHead>
          MergeHeads()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.MergeHead> LibGit2Sharp.IRepository::get_MergeHeads()
  } // end of property IRepository::MergeHeads
  .property instance class LibGit2Sharp.Network
          Network()
  {
    .get instance class LibGit2Sharp.Network LibGit2Sharp.IRepository::get_Network()
  } // end of property IRepository::Network
} // end of class LibGit2Sharp.IRepository

.class public auto ansi beforefieldinit LibGit2Sharp.NoteCollection
       extends [mscorlib]System.Object
       implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note>,
                  [mscorlib]System.Collections.IEnumerable
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass6'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.NoteCollection '<>4__this'
    .field public class LibGit2Sharp.ObjectId id
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass6'::.ctor

    .method public hidebysig instance class LibGit2Sharp.Note 
            '<get_Item>b__3'(string ns) cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.NoteCollection LibGit2Sharp.NoteCollection/'<>c__DisplayClass6'::'<>4__this'
      IL_0006:  ldarg.0
      IL_0007:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.NoteCollection/'<>c__DisplayClass6'::id
      IL_000c:  ldarg.1
      IL_000d:  call       instance class LibGit2Sharp.Note LibGit2Sharp.NoteCollection::RetrieveNote(class LibGit2Sharp.ObjectId,
                                                                                                      string)
      IL_0012:  ret
    } // end of method '<>c__DisplayClass6'::'<get_Item>b__3'

  } // end of class '<>c__DisplayClass6'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass9'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public string canonicalNamespace
    .field public class LibGit2Sharp.NoteCollection '<>4__this'
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass9'::.ctor

    .method public hidebysig instance class LibGit2Sharp.Note 
            '<get_Item>b__8'(valuetype LibGit2Sharp.Core.GitOid blobId,
                             valuetype LibGit2Sharp.Core.GitOid annotatedObjId) cil managed
    {
      // Code size       24 (0x18)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.NoteCollection LibGit2Sharp.NoteCollection/'<>c__DisplayClass9'::'<>4__this'
      IL_0006:  ldarg.2
      IL_0007:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
      IL_000c:  ldarg.0
      IL_000d:  ldfld      string LibGit2Sharp.NoteCollection/'<>c__DisplayClass9'::canonicalNamespace
      IL_0012:  call       instance class LibGit2Sharp.Note LibGit2Sharp.NoteCollection::RetrieveNote(class LibGit2Sharp.ObjectId,
                                                                                                      string)
      IL_0017:  ret
    } // end of method '<>c__DisplayClass9'::'<get_Item>b__8'

  } // end of class '<>c__DisplayClass9'

  .field private initonly class LibGit2Sharp.Repository repo
  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<string> defaultNamespace
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> 'CS$<>9__CachedAnonymousMethodDelegate2'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Note,bool> 'CS$<>9__CachedAnonymousMethodDelegate5'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method NoteCollection::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.NoteCollection::repo
    IL_000d:  ldarg.0
    IL_000e:  ldarg.0
    IL_000f:  ldftn      instance string LibGit2Sharp.NoteCollection::RetrieveDefaultNamespace()
    IL_0015:  newobj     instance void class [System.Core]System.Func`1<string>::.ctor(object,
                                                                                       native int)
    IL_001a:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<string>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_001f:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<string> LibGit2Sharp.NoteCollection::defaultNamespace
    IL_0024:  ret
  } // end of method NoteCollection::.ctor

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Note> 
          GetEnumerator() cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance string LibGit2Sharp.NoteCollection::get_DefaultNamespace()
    IL_0007:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note> LibGit2Sharp.NoteCollection::get_Item(string)
    IL_000c:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note>::GetEnumerator()
    IL_0011:  ret
  } // end of method NoteCollection::GetEnumerator

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Note> LibGit2Sharp.NoteCollection::GetEnumerator()
    IL_0006:  ret
  } // end of method NoteCollection::System.Collections.IEnumerable.GetEnumerator

  .method public hidebysig newslot specialname virtual 
          instance string  get_DefaultNamespace() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<string> LibGit2Sharp.NoteCollection::defaultNamespace
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<string>::get_Value()
    IL_000b:  ret
  } // end of method NoteCollection::get_DefaultNamespace

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> 
          get_Namespaces() cil managed
  {
    // Code size       24 (0x18)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.NoteCollection::get_NamespaceRefs()
    IL_0006:  ldarg.0
    IL_0007:  ldftn      instance string LibGit2Sharp.NoteCollection::UnCanonicalizeName(string)
    IL_000d:  newobj     instance void class [System.Core]System.Func`2<string,string>::.ctor(object,
                                                                                              native int)
    IL_0012:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!1> [System.Core]System.Linq.Enumerable::Select<string,string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                  class [System.Core]System.Func`2<!!0,!!1>)
    IL_0017:  ret
  } // end of method NoteCollection::get_Namespaces

  .method assembly hidebysig specialname 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> 
          get_NamespaceRefs() cil managed
  {
    // Code size       90 (0x5a)
    .maxstack  5
    .locals init (string[] V_0)
    IL_0000:  ldc.i4.1
    IL_0001:  newarr     [mscorlib]System.String
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldc.i4.0
    IL_0009:  ldarg.0
    IL_000a:  callvirt   instance string LibGit2Sharp.NoteCollection::get_DefaultNamespace()
    IL_000f:  call       string LibGit2Sharp.NoteCollection::NormalizeToCanonicalName(string)
    IL_0014:  stelem.ref
    IL_0015:  ldloc.0
    IL_0016:  ldarg.0
    IL_0017:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.NoteCollection::repo
    IL_001c:  callvirt   instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_0021:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> LibGit2Sharp.NoteCollection::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0026:  brtrue.s   IL_0039

    IL_0028:  ldnull
    IL_0029:  ldftn      string LibGit2Sharp.NoteCollection::'<get_NamespaceRefs>b__0'(class LibGit2Sharp.Reference)
    IL_002f:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string>::.ctor(object,
                                                                                                                    native int)
    IL_0034:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> LibGit2Sharp.NoteCollection::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0039:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> LibGit2Sharp.NoteCollection::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_003e:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!1> [System.Core]System.Linq.Enumerable::Select<class LibGit2Sharp.Reference,string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                        class [System.Core]System.Func`2<!!0,!!1>)
    IL_0043:  ldarg.0
    IL_0044:  ldftn      instance bool LibGit2Sharp.NoteCollection::'<get_NamespaceRefs>b__1'(string)
    IL_004a:  newobj     instance void class [System.Core]System.Func`2<string,bool>::.ctor(object,
                                                                                            native int)
    IL_004f:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> [System.Core]System.Linq.Enumerable::Where<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                          class [System.Core]System.Func`2<!!0,bool>)
    IL_0054:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> [System.Core]System.Linq.Enumerable::Concat<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                           class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0059:  ret
  } // end of method NoteCollection::get_NamespaceRefs

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note> 
          get_Item(class LibGit2Sharp.ObjectId id) cil managed
  {
    // Code size       94 (0x5e)
    .maxstack  4
    .locals init (class LibGit2Sharp.NoteCollection/'<>c__DisplayClass6' V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.NoteCollection/'<>c__DisplayClass6'::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.NoteCollection/'<>c__DisplayClass6'::id
    IL_000d:  ldloc.0
    IL_000e:  ldarg.0
    IL_000f:  stfld      class LibGit2Sharp.NoteCollection LibGit2Sharp.NoteCollection/'<>c__DisplayClass6'::'<>4__this'
    IL_0014:  ldloc.0
    IL_0015:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.NoteCollection/'<>c__DisplayClass6'::id
    IL_001a:  ldstr      "id"
    IL_001f:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0024:  ldarg.0
    IL_0025:  call       instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.NoteCollection::get_NamespaceRefs()
    IL_002a:  ldloc.0
    IL_002b:  ldftn      instance class LibGit2Sharp.Note LibGit2Sharp.NoteCollection/'<>c__DisplayClass6'::'<get_Item>b__3'(string)
    IL_0031:  newobj     instance void class [System.Core]System.Func`2<string,class LibGit2Sharp.Note>::.ctor(object,
                                                                                                               native int)
    IL_0036:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!1> [System.Core]System.Linq.Enumerable::Select<string,class LibGit2Sharp.Note>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                   class [System.Core]System.Func`2<!!0,!!1>)
    IL_003b:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Note,bool> LibGit2Sharp.NoteCollection::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0040:  brtrue.s   IL_0053

    IL_0042:  ldnull
    IL_0043:  ldftn      bool LibGit2Sharp.NoteCollection::'<get_Item>b__4'(class LibGit2Sharp.Note)
    IL_0049:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Note,bool>::.ctor(object,
                                                                                                             native int)
    IL_004e:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Note,bool> LibGit2Sharp.NoteCollection::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0053:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Note,bool> LibGit2Sharp.NoteCollection::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0058:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> [System.Core]System.Linq.Enumerable::Where<class LibGit2Sharp.Note>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                           class [System.Core]System.Func`2<!!0,bool>)
    IL_005d:  ret
  } // end of method NoteCollection::get_Item

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note> 
          get_Item(string namespace) cil managed
  {
    // Code size       71 (0x47)
    .maxstack  5
    .locals init (class LibGit2Sharp.NoteCollection/'<>c__DisplayClass9' V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.NoteCollection/'<>c__DisplayClass9'::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.NoteCollection LibGit2Sharp.NoteCollection/'<>c__DisplayClass9'::'<>4__this'
    IL_000d:  ldarg.1
    IL_000e:  ldstr      "@namespace"
    IL_0013:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0018:  ldloc.0
    IL_0019:  ldarg.1
    IL_001a:  call       string LibGit2Sharp.NoteCollection::NormalizeToCanonicalName(string)
    IL_001f:  stfld      string LibGit2Sharp.NoteCollection/'<>c__DisplayClass9'::canonicalNamespace
    IL_0024:  ldarg.0
    IL_0025:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.NoteCollection::repo
    IL_002a:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_002f:  ldloc.0
    IL_0030:  ldfld      string LibGit2Sharp.NoteCollection/'<>c__DisplayClass9'::canonicalNamespace
    IL_0035:  ldloc.0
    IL_0036:  ldftn      instance class LibGit2Sharp.Note LibGit2Sharp.NoteCollection/'<>c__DisplayClass9'::'<get_Item>b__8'(valuetype LibGit2Sharp.Core.GitOid,
                                                                                                                             valuetype LibGit2Sharp.Core.GitOid)
    IL_003c:  newobj     instance void class [System.Core]System.Func`3<valuetype LibGit2Sharp.Core.GitOid,valuetype LibGit2Sharp.Core.GitOid,class LibGit2Sharp.Note>::.ctor(object,
                                                                                                                                                                              native int)
    IL_0041:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!0> LibGit2Sharp.Core.Proxy::git_note_foreach<class LibGit2Sharp.Note>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                                          string,
                                                                                                                                                          class [System.Core]System.Func`3<valuetype LibGit2Sharp.Core.GitOid,valuetype LibGit2Sharp.Core.GitOid,!!0>)
    IL_0046:  ret
  } // end of method NoteCollection::get_Item

  .method assembly hidebysig instance class LibGit2Sharp.Note 
          RetrieveNote(class LibGit2Sharp.ObjectId targetObjectId,
                       string canonicalNamespace) cil managed
  {
    // Code size       54 (0x36)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.NoteSafeHandle V_0,
             class LibGit2Sharp.Note V_1)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.NoteCollection::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  ldarg.2
    IL_000c:  ldarg.1
    IL_000d:  call       class LibGit2Sharp.Core.Handles.NoteSafeHandle LibGit2Sharp.Core.Proxy::git_note_read(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                               string,
                                                                                                               class LibGit2Sharp.ObjectId)
    IL_0012:  stloc.0
    .try
    {
      IL_0013:  ldloc.0
      IL_0014:  brfalse.s  IL_0026

      IL_0016:  ldloc.0
      IL_0017:  ldarg.0
      IL_0018:  ldarg.2
      IL_0019:  call       instance string LibGit2Sharp.NoteCollection::UnCanonicalizeName(string)
      IL_001e:  ldarg.1
      IL_001f:  call       class LibGit2Sharp.Note LibGit2Sharp.Note::BuildFromPtr(class LibGit2Sharp.Core.Handles.NoteSafeHandle,
                                                                                   string,
                                                                                   class LibGit2Sharp.ObjectId)
      IL_0024:  br.s       IL_0027

      IL_0026:  ldnull
      IL_0027:  stloc.1
      IL_0028:  leave.s    IL_0034

    }  // end .try
    finally
    {
      IL_002a:  ldloc.0
      IL_002b:  brfalse.s  IL_0033

      IL_002d:  ldloc.0
      IL_002e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0033:  endfinally
    }  // end handler
    IL_0034:  ldloc.1
    IL_0035:  ret
  } // end of method NoteCollection::RetrieveNote

  .method private hidebysig instance string 
          RetrieveDefaultNamespace() cil managed
  {
    // Code size       25 (0x19)
    .maxstack  2
    .locals init (string V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.NoteCollection::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  call       string LibGit2Sharp.Core.Proxy::git_note_default_ref(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0010:  stloc.0
    IL_0011:  ldarg.0
    IL_0012:  ldloc.0
    IL_0013:  call       instance string LibGit2Sharp.NoteCollection::UnCanonicalizeName(string)
    IL_0018:  ret
  } // end of method NoteCollection::RetrieveDefaultNamespace

  .method assembly hidebysig static string 
          NormalizeToCanonicalName(string name) cil managed
  {
    // Code size       33 (0x21)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  call       bool LibGit2Sharp.ReferenceExtensions::LooksLikeNote(string)
    IL_0011:  brfalse.s  IL_0015

    IL_0013:  ldarg.0
    IL_0014:  ret

    IL_0015:  call       string LibGit2Sharp.Reference::get_NotePrefix()
    IL_001a:  ldarg.0
    IL_001b:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0020:  ret
  } // end of method NoteCollection::NormalizeToCanonicalName

  .method assembly hidebysig instance string 
          UnCanonicalizeName(string name) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.1
    IL_000c:  call       bool LibGit2Sharp.ReferenceExtensions::LooksLikeNote(string)
    IL_0011:  brtrue.s   IL_0015

    IL_0013:  ldarg.1
    IL_0014:  ret

    IL_0015:  ldarg.1
    IL_0016:  call       string LibGit2Sharp.Reference::get_NotePrefix()
    IL_001b:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0020:  callvirt   instance string [mscorlib]System.String::Substring(int32)
    IL_0025:  ret
  } // end of method NoteCollection::UnCanonicalizeName

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Note 
          Add(class LibGit2Sharp.ObjectId targetId,
              string message,
              class LibGit2Sharp.Signature author,
              class LibGit2Sharp.Signature committer,
              string namespace) cil managed
  {
    // Code size       110 (0x6e)
    .maxstack  7
    .locals init (string V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "targetId"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "message"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0016:  ldarg.3
    IL_0017:  ldstr      "author"
    IL_001c:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0021:  ldarg.s    committer
    IL_0023:  ldstr      "committer"
    IL_0028:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_002d:  ldarg.s    namespace
    IL_002f:  ldstr      "@namespace"
    IL_0034:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0039:  ldarg.s    namespace
    IL_003b:  call       string LibGit2Sharp.NoteCollection::NormalizeToCanonicalName(string)
    IL_0040:  stloc.0
    IL_0041:  ldarg.0
    IL_0042:  ldarg.1
    IL_0043:  ldarg.3
    IL_0044:  ldarg.s    committer
    IL_0046:  ldarg.s    namespace
    IL_0048:  callvirt   instance void LibGit2Sharp.NoteCollection::Remove(class LibGit2Sharp.ObjectId,
                                                                           class LibGit2Sharp.Signature,
                                                                           class LibGit2Sharp.Signature,
                                                                           string)
    IL_004d:  ldarg.0
    IL_004e:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.NoteCollection::repo
    IL_0053:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0058:  ldarg.3
    IL_0059:  ldarg.s    committer
    IL_005b:  ldloc.0
    IL_005c:  ldarg.1
    IL_005d:  ldarg.2
    IL_005e:  ldc.i4.1
    IL_005f:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_note_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                              class LibGit2Sharp.Signature,
                                                                                              class LibGit2Sharp.Signature,
                                                                                              string,
                                                                                              class LibGit2Sharp.ObjectId,
                                                                                              string,
                                                                                              bool)
    IL_0064:  pop
    IL_0065:  ldarg.0
    IL_0066:  ldarg.1
    IL_0067:  ldloc.0
    IL_0068:  call       instance class LibGit2Sharp.Note LibGit2Sharp.NoteCollection::RetrieveNote(class LibGit2Sharp.ObjectId,
                                                                                                    string)
    IL_006d:  ret
  } // end of method NoteCollection::Add

  .method public hidebysig newslot virtual 
          instance void  Remove(class LibGit2Sharp.ObjectId targetId,
                                class LibGit2Sharp.Signature author,
                                class LibGit2Sharp.Signature committer,
                                string namespace) cil managed
  {
    // Code size       74 (0x4a)
    .maxstack  5
    .locals init (string V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "targetId"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "author"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.3
    IL_0017:  ldstr      "committer"
    IL_001c:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0021:  ldarg.s    namespace
    IL_0023:  ldstr      "@namespace"
    IL_0028:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_002d:  ldarg.s    namespace
    IL_002f:  call       string LibGit2Sharp.NoteCollection::NormalizeToCanonicalName(string)
    IL_0034:  stloc.0
    IL_0035:  ldarg.0
    IL_0036:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.NoteCollection::repo
    IL_003b:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0040:  ldloc.0
    IL_0041:  ldarg.2
    IL_0042:  ldarg.3
    IL_0043:  ldarg.1
    IL_0044:  call       void LibGit2Sharp.Core.Proxy::git_note_remove(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                       string,
                                                                       class LibGit2Sharp.Signature,
                                                                       class LibGit2Sharp.Signature,
                                                                       class LibGit2Sharp.ObjectId)
    IL_0049:  ret
  } // end of method NoteCollection::Remove

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       38 (0x26)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "Count = {0}"
    IL_000a:  ldc.i4.1
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  call       int32 [System.Core]System.Linq.Enumerable::Count<class LibGit2Sharp.Note>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0019:  box        [mscorlib]System.Int32
    IL_001e:  stelem.ref
    IL_001f:  ldloc.0
    IL_0020:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0025:  ret
  } // end of method NoteCollection::get_DebuggerDisplay

  .method private hidebysig static string 
          '<get_NamespaceRefs>b__0'(class LibGit2Sharp.Reference reference) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0006:  ret
  } // end of method NoteCollection::'<get_NamespaceRefs>b__0'

  .method private hidebysig instance bool 
          '<get_NamespaceRefs>b__1'(string refCanonical) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       34 (0x22)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  call       string LibGit2Sharp.Reference::get_NotePrefix()
    IL_0006:  ldc.i4.4
    IL_0007:  callvirt   instance bool [mscorlib]System.String::StartsWith(string,
                                                                           valuetype [mscorlib]System.StringComparison)
    IL_000c:  brfalse.s  IL_0020

    IL_000e:  ldarg.1
    IL_000f:  ldarg.0
    IL_0010:  callvirt   instance string LibGit2Sharp.NoteCollection::get_DefaultNamespace()
    IL_0015:  call       string LibGit2Sharp.NoteCollection::NormalizeToCanonicalName(string)
    IL_001a:  call       bool [mscorlib]System.String::op_Inequality(string,
                                                                     string)
    IL_001f:  ret

    IL_0020:  ldc.i4.0
    IL_0021:  ret
  } // end of method NoteCollection::'<get_NamespaceRefs>b__1'

  .method private hidebysig static bool  '<get_Item>b__4'(class LibGit2Sharp.Note n) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  call       bool LibGit2Sharp.Note::op_Inequality(class LibGit2Sharp.Note,
                                                               class LibGit2Sharp.Note)
    IL_0007:  ret
  } // end of method NoteCollection::'<get_Item>b__4'

  .property instance string DefaultNamespace()
  {
    .get instance string LibGit2Sharp.NoteCollection::get_DefaultNamespace()
  } // end of property NoteCollection::DefaultNamespace
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string>
          Namespaces()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.NoteCollection::get_Namespaces()
  } // end of property NoteCollection::Namespaces
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string>
          NamespaceRefs()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.NoteCollection::get_NamespaceRefs()
  } // end of property NoteCollection::NamespaceRefs
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note>
          Item(class LibGit2Sharp.ObjectId)
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note> LibGit2Sharp.NoteCollection::get_Item(class LibGit2Sharp.ObjectId)
  } // end of property NoteCollection::Item
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note>
          Item(string)
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Note> LibGit2Sharp.NoteCollection::get_Item(string)
  } // end of property NoteCollection::Item
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.NoteCollection::get_DebuggerDisplay()
  } // end of property NoteCollection::DebuggerDisplay
} // end of class LibGit2Sharp.NoteCollection

.class public auto ansi beforefieldinit LibGit2Sharp.Note
       extends [mscorlib]System.Object
       implements class [mscorlib]System.IEquatable`1<class LibGit2Sharp.Note>
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field private static initonly class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Note> equalityHelper
  .field private class LibGit2Sharp.ObjectId '<BlobId>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private string '<Message>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private string '<Namespace>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private class LibGit2Sharp.ObjectId '<TargetObjectId>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Note,object> 'CS$<>9__CachedAnonymousMethodDelegate3'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Note,object> 'CS$<>9__CachedAnonymousMethodDelegate4'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Note,object> 'CS$<>9__CachedAnonymousMethodDelegate5'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method Note::.ctor

  .method private hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.ObjectId blobId,
                               string message,
                               class LibGit2Sharp.ObjectId targetObjectId,
                               string namespace) cil managed
  {
    // Code size       36 (0x24)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void LibGit2Sharp.Note::set_BlobId(class LibGit2Sharp.ObjectId)
    IL_000d:  ldarg.0
    IL_000e:  ldarg.s    namespace
    IL_0010:  call       instance void LibGit2Sharp.Note::set_Namespace(string)
    IL_0015:  ldarg.0
    IL_0016:  ldarg.2
    IL_0017:  call       instance void LibGit2Sharp.Note::set_Message(string)
    IL_001c:  ldarg.0
    IL_001d:  ldarg.3
    IL_001e:  call       instance void LibGit2Sharp.Note::set_TargetObjectId(class LibGit2Sharp.ObjectId)
    IL_0023:  ret
  } // end of method Note::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.ObjectId 
          get_BlobId() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.Note::'<BlobId>k__BackingField'
    IL_0006:  ret
  } // end of method Note::get_BlobId

  .method private hidebysig specialname instance void 
          set_BlobId(class LibGit2Sharp.ObjectId 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.Note::'<BlobId>k__BackingField'
    IL_0007:  ret
  } // end of method Note::set_BlobId

  .method public hidebysig newslot specialname virtual 
          instance string  get_Message() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Note::'<Message>k__BackingField'
    IL_0006:  ret
  } // end of method Note::get_Message

  .method private hidebysig specialname instance void 
          set_Message(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.Note::'<Message>k__BackingField'
    IL_0007:  ret
  } // end of method Note::set_Message

  .method public hidebysig newslot specialname virtual 
          instance string  get_Namespace() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Note::'<Namespace>k__BackingField'
    IL_0006:  ret
  } // end of method Note::get_Namespace

  .method private hidebysig specialname instance void 
          set_Namespace(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.Note::'<Namespace>k__BackingField'
    IL_0007:  ret
  } // end of method Note::set_Namespace

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.ObjectId 
          get_TargetObjectId() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.Note::'<TargetObjectId>k__BackingField'
    IL_0006:  ret
  } // end of method Note::get_TargetObjectId

  .method private hidebysig specialname instance void 
          set_TargetObjectId(class LibGit2Sharp.ObjectId 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.Note::'<TargetObjectId>k__BackingField'
    IL_0007:  ret
  } // end of method Note::set_TargetObjectId

  .method assembly hidebysig static class LibGit2Sharp.Note 
          BuildFromPtr(class LibGit2Sharp.Core.Handles.NoteSafeHandle note,
                       string namespace,
                       class LibGit2Sharp.ObjectId targetObjectId) cil managed
  {
    // Code size       24 (0x18)
    .maxstack  5
    .locals init (class LibGit2Sharp.ObjectId V_0,
             string V_1)
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_note_oid(class LibGit2Sharp.Core.Handles.NoteSafeHandle)
    IL_0006:  stloc.0
    IL_0007:  ldarg.0
    IL_0008:  call       string LibGit2Sharp.Core.Proxy::git_note_message(class LibGit2Sharp.Core.Handles.NoteSafeHandle)
    IL_000d:  stloc.1
    IL_000e:  ldloc.0
    IL_000f:  ldloc.1
    IL_0010:  ldarg.2
    IL_0011:  ldarg.1
    IL_0012:  newobj     instance void LibGit2Sharp.Note::.ctor(class LibGit2Sharp.ObjectId,
                                                                string,
                                                                class LibGit2Sharp.ObjectId,
                                                                string)
    IL_0017:  ret
  } // end of method Note::BuildFromPtr

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  isinst     LibGit2Sharp.Note
    IL_0007:  call       instance bool LibGit2Sharp.Note::Equals(class LibGit2Sharp.Note)
    IL_000c:  ret
  } // end of method Note::Equals

  .method public hidebysig newslot virtual final 
          instance bool  Equals(class LibGit2Sharp.Note other) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Note> LibGit2Sharp.Note::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance bool class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Note>::Equals(!0,
                                                                                                                       !0)
    IL_000c:  ret
  } // end of method Note::Equals

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Note> LibGit2Sharp.Note::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  callvirt   instance int32 class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Note>::GetHashCode(!0)
    IL_000b:  ret
  } // end of method Note::GetHashCode

  .method public hidebysig specialname static 
          bool  op_Equality(class LibGit2Sharp.Note left,
                            class LibGit2Sharp.Note right) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ret
  } // end of method Note::op_Equality

  .method public hidebysig specialname static 
          bool  op_Inequality(class LibGit2Sharp.Note left,
                              class LibGit2Sharp.Note right) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  ret
  } // end of method Note::op_Inequality

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       57 (0x39)
    .maxstack  6
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "Target \"{0}\", Namespace \"{1}\": {2}"
    IL_000a:  ldc.i4.3
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Note::get_TargetObjectId()
    IL_0019:  ldc.i4.7
    IL_001a:  callvirt   instance string LibGit2Sharp.ObjectId::ToString(int32)
    IL_001f:  stelem.ref
    IL_0020:  ldloc.0
    IL_0021:  ldc.i4.1
    IL_0022:  ldarg.0
    IL_0023:  callvirt   instance string LibGit2Sharp.Note::get_Namespace()
    IL_0028:  stelem.ref
    IL_0029:  ldloc.0
    IL_002a:  ldc.i4.2
    IL_002b:  ldarg.0
    IL_002c:  callvirt   instance string LibGit2Sharp.Note::get_Message()
    IL_0031:  stelem.ref
    IL_0032:  ldloc.0
    IL_0033:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0038:  ret
  } // end of method Note::get_DebuggerDisplay

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       115 (0x73)
    .maxstack  5
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.Note,object>[] V_0)
    IL_0000:  ldc.i4.3
    IL_0001:  newarr     class [System.Core]System.Func`2<class LibGit2Sharp.Note,object>
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldc.i4.0
    IL_0009:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Note,object> LibGit2Sharp.Note::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_000e:  brtrue.s   IL_0021

    IL_0010:  ldnull
    IL_0011:  ldftn      object LibGit2Sharp.Note::'<.cctor>b__0'(class LibGit2Sharp.Note)
    IL_0017:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Note,object>::.ctor(object,
                                                                                                               native int)
    IL_001c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Note,object> LibGit2Sharp.Note::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_0021:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Note,object> LibGit2Sharp.Note::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_0026:  stelem.ref
    IL_0027:  ldloc.0
    IL_0028:  ldc.i4.1
    IL_0029:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Note,object> LibGit2Sharp.Note::'CS$<>9__CachedAnonymousMethodDelegate4'
    IL_002e:  brtrue.s   IL_0041

    IL_0030:  ldnull
    IL_0031:  ldftn      object LibGit2Sharp.Note::'<.cctor>b__1'(class LibGit2Sharp.Note)
    IL_0037:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Note,object>::.ctor(object,
                                                                                                               native int)
    IL_003c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Note,object> LibGit2Sharp.Note::'CS$<>9__CachedAnonymousMethodDelegate4'
    IL_0041:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Note,object> LibGit2Sharp.Note::'CS$<>9__CachedAnonymousMethodDelegate4'
    IL_0046:  stelem.ref
    IL_0047:  ldloc.0
    IL_0048:  ldc.i4.2
    IL_0049:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Note,object> LibGit2Sharp.Note::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_004e:  brtrue.s   IL_0061

    IL_0050:  ldnull
    IL_0051:  ldftn      object LibGit2Sharp.Note::'<.cctor>b__2'(class LibGit2Sharp.Note)
    IL_0057:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Note,object>::.ctor(object,
                                                                                                               native int)
    IL_005c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Note,object> LibGit2Sharp.Note::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0061:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Note,object> LibGit2Sharp.Note::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0066:  stelem.ref
    IL_0067:  ldloc.0
    IL_0068:  newobj     instance void class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Note>::.ctor(class [System.Core]System.Func`2<!0,object>[])
    IL_006d:  stsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Note> LibGit2Sharp.Note::equalityHelper
    IL_0072:  ret
  } // end of method Note::.cctor

  .method private hidebysig static object 
          '<.cctor>b__0'(class LibGit2Sharp.Note x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Note::get_BlobId()
    IL_0006:  ret
  } // end of method Note::'<.cctor>b__0'

  .method private hidebysig static object 
          '<.cctor>b__1'(class LibGit2Sharp.Note x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Note::get_TargetObjectId()
    IL_0006:  ret
  } // end of method Note::'<.cctor>b__1'

  .method private hidebysig static object 
          '<.cctor>b__2'(class LibGit2Sharp.Note x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Note::get_Namespace()
    IL_0006:  ret
  } // end of method Note::'<.cctor>b__2'

  .property instance class LibGit2Sharp.ObjectId
          BlobId()
  {
    .get instance class LibGit2Sharp.ObjectId LibGit2Sharp.Note::get_BlobId()
    .set instance void LibGit2Sharp.Note::set_BlobId(class LibGit2Sharp.ObjectId)
  } // end of property Note::BlobId
  .property instance string Message()
  {
    .get instance string LibGit2Sharp.Note::get_Message()
    .set instance void LibGit2Sharp.Note::set_Message(string)
  } // end of property Note::Message
  .property instance string Namespace()
  {
    .set instance void LibGit2Sharp.Note::set_Namespace(string)
    .get instance string LibGit2Sharp.Note::get_Namespace()
  } // end of property Note::Namespace
  .property instance class LibGit2Sharp.ObjectId
          TargetObjectId()
  {
    .get instance class LibGit2Sharp.ObjectId LibGit2Sharp.Note::get_TargetObjectId()
    .set instance void LibGit2Sharp.Note::set_TargetObjectId(class LibGit2Sharp.ObjectId)
  } // end of property Note::TargetObjectId
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.Note::get_DebuggerDisplay()
  } // end of property Note::DebuggerDisplay
} // end of class LibGit2Sharp.Note

.class public auto ansi serializable beforefieldinit LibGit2Sharp.RepositoryNotFoundException
       extends LibGit2Sharp.LibGit2SharpException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor()
    IL_0006:  ret
  } // end of method RepositoryNotFoundException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0007:  ret
  } // end of method RepositoryNotFoundException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               class [mscorlib]System.Exception innerException) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 class [mscorlib]System.Exception)
    IL_0008:  ret
  } // end of method RepositoryNotFoundException::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                               valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo,
                                                                                 valuetype [mscorlib]System.Runtime.Serialization.StreamingContext)
    IL_0008:  ret
  } // end of method RepositoryNotFoundException::.ctor

} // end of class LibGit2Sharp.RepositoryNotFoundException

.class public auto ansi sealed LibGit2Sharp.TagFetchMode
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.TagFetchMode Auto = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.TagFetchMode None = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.TagFetchMode All = int32(0x00000002)
} // end of class LibGit2Sharp.TagFetchMode

.class private auto ansi beforefieldinit LibGit2Sharp.TransferCallbacks
       extends [mscorlib]System.Object
{
  .field private initonly class LibGit2Sharp.Handlers.TransferProgressHandler onTransferProgress
  .method private hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Handlers.TransferProgressHandler onTransferProgress) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Handlers.TransferProgressHandler LibGit2Sharp.TransferCallbacks::onTransferProgress
    IL_000d:  ret
  } // end of method TransferCallbacks::.ctor

  .method assembly hidebysig static class LibGit2Sharp.Core.NativeMethods/git_transfer_progress_callback 
          GenerateCallback(class LibGit2Sharp.Handlers.TransferProgressHandler onTransferProgress) cil managed
  {
    // Code size       23 (0x17)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  brtrue.s   IL_0005

    IL_0003:  ldnull
    IL_0004:  ret

    IL_0005:  ldarg.0
    IL_0006:  newobj     instance void LibGit2Sharp.TransferCallbacks::.ctor(class LibGit2Sharp.Handlers.TransferProgressHandler)
    IL_000b:  ldftn      instance int32 LibGit2Sharp.TransferCallbacks::OnGitTransferProgress(valuetype LibGit2Sharp.Core.GitTransferProgress&,
                                                                                              native int)
    IL_0011:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_transfer_progress_callback::.ctor(object,
                                                                                                             native int)
    IL_0016:  ret
  } // end of method TransferCallbacks::GenerateCallback

  .method private hidebysig instance int32 
          OnGitTransferProgress(valuetype LibGit2Sharp.Core.GitTransferProgress& progress,
                                native int payload) cil managed
  {
    // Code size       23 (0x17)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Handlers.TransferProgressHandler LibGit2Sharp.TransferCallbacks::onTransferProgress
    IL_0006:  ldarg.1
    IL_0007:  ldobj      LibGit2Sharp.Core.GitTransferProgress
    IL_000c:  newobj     instance void LibGit2Sharp.TransferProgress::.ctor(valuetype LibGit2Sharp.Core.GitTransferProgress)
    IL_0011:  callvirt   instance int32 LibGit2Sharp.Handlers.TransferProgressHandler::Invoke(class LibGit2Sharp.TransferProgress)
    IL_0016:  ret
  } // end of method TransferCallbacks::OnGitTransferProgress

} // end of class LibGit2Sharp.TransferCallbacks

.class public auto ansi beforefieldinit LibGit2Sharp.TransferProgress
       extends [mscorlib]System.Object
{
  .field private valuetype LibGit2Sharp.Core.GitTransferProgress gitTransferProgress
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method TransferProgress::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype LibGit2Sharp.Core.GitTransferProgress gitTransferProgress) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      valuetype LibGit2Sharp.Core.GitTransferProgress LibGit2Sharp.TransferProgress::gitTransferProgress
    IL_000d:  ret
  } // end of method TransferProgress::.ctor

  .method public hidebysig newslot specialname virtual 
          instance int32  get_TotalObjects() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldflda     valuetype LibGit2Sharp.Core.GitTransferProgress LibGit2Sharp.TransferProgress::gitTransferProgress
    IL_0006:  ldfld      uint32 LibGit2Sharp.Core.GitTransferProgress::total_objects
    IL_000b:  ret
  } // end of method TransferProgress::get_TotalObjects

  .method public hidebysig newslot specialname virtual 
          instance int32  get_IndexedObjects() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldflda     valuetype LibGit2Sharp.Core.GitTransferProgress LibGit2Sharp.TransferProgress::gitTransferProgress
    IL_0006:  ldfld      uint32 LibGit2Sharp.Core.GitTransferProgress::indexed_objects
    IL_000b:  ret
  } // end of method TransferProgress::get_IndexedObjects

  .method public hidebysig newslot specialname virtual 
          instance int32  get_ReceivedObjects() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldflda     valuetype LibGit2Sharp.Core.GitTransferProgress LibGit2Sharp.TransferProgress::gitTransferProgress
    IL_0006:  ldfld      uint32 LibGit2Sharp.Core.GitTransferProgress::received_objects
    IL_000b:  ret
  } // end of method TransferProgress::get_ReceivedObjects

  .method public hidebysig newslot specialname virtual 
          instance int64  get_ReceivedBytes() cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldflda     valuetype LibGit2Sharp.Core.GitTransferProgress LibGit2Sharp.TransferProgress::gitTransferProgress
    IL_0006:  ldfld      native uint LibGit2Sharp.Core.GitTransferProgress::received_bytes
    IL_000b:  call       uint64 [mscorlib]System.UIntPtr::op_Explicit(native uint)
    IL_0010:  ret
  } // end of method TransferProgress::get_ReceivedBytes

  .property instance int32 TotalObjects()
  {
    .get instance int32 LibGit2Sharp.TransferProgress::get_TotalObjects()
  } // end of property TransferProgress::TotalObjects
  .property instance int32 IndexedObjects()
  {
    .get instance int32 LibGit2Sharp.TransferProgress::get_IndexedObjects()
  } // end of property TransferProgress::IndexedObjects
  .property instance int32 ReceivedObjects()
  {
    .get instance int32 LibGit2Sharp.TransferProgress::get_ReceivedObjects()
  } // end of property TransferProgress::ReceivedObjects
  .property instance int64 ReceivedBytes()
  {
    .get instance int64 LibGit2Sharp.TransferProgress::get_ReceivedBytes()
  } // end of property TransferProgress::ReceivedBytes
} // end of class LibGit2Sharp.TransferProgress

.class public auto ansi beforefieldinit LibGit2Sharp.TreeChanges
       extends [mscorlib]System.Object
       implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges>,
                  [mscorlib]System.Collections.IEnumerable
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .field private initonly class [mscorlib]System.Collections.Generic.IDictionary`2<class LibGit2Sharp.Core.FilePath,class LibGit2Sharp.TreeEntryChanges> changes
  .field private initonly class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> added
  .field private initonly class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> deleted
  .field private initonly class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> modified
  .field private initonly class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> typeChanged
  .field private initonly class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> unmodified
  .field private int32 linesAdded
  .field private int32 linesDeleted
  .field private initonly class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.ChangeKind,class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>> fileDispatcher
  .field private initonly class [mscorlib]System.Text.StringBuilder fullPatchBuilder
  .field private static class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> 'CS$<>9__CachedAnonymousMethodDelegate6'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> 'CS$<>9__CachedAnonymousMethodDelegate7'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> 'CS$<>9__CachedAnonymousMethodDelegate8'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> 'CS$<>9__CachedAnonymousMethodDelegate9'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> 'CS$<>9__CachedAnonymousMethodDelegatea'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method private hidebysig static class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.ChangeKind,class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>> 
          Build() cil managed
  {
    // Code size       188 (0xbc)
    .maxstack  5
    .locals init (class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.ChangeKind,class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>> V_0)
    IL_0000:  newobj     instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.ChangeKind,class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldc.i4.3
    IL_0008:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::'CS$<>9__CachedAnonymousMethodDelegate6'
    IL_000d:  brtrue.s   IL_0020

    IL_000f:  ldnull
    IL_0010:  ldftn      void LibGit2Sharp.TreeChanges::'<Build>b__1'(class LibGit2Sharp.TreeChanges,
                                                                      class LibGit2Sharp.TreeEntryChanges)
    IL_0016:  newobj     instance void class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>::.ctor(object,
                                                                                                                                                     native int)
    IL_001b:  stsfld     class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::'CS$<>9__CachedAnonymousMethodDelegate6'
    IL_0020:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::'CS$<>9__CachedAnonymousMethodDelegate6'
    IL_0025:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.ChangeKind,class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>>::Add(!0,
                                                                                                                                                                                                                                              !1)
    IL_002a:  ldloc.0
    IL_002b:  ldc.i4.2
    IL_002c:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::'CS$<>9__CachedAnonymousMethodDelegate7'
    IL_0031:  brtrue.s   IL_0044

    IL_0033:  ldnull
    IL_0034:  ldftn      void LibGit2Sharp.TreeChanges::'<Build>b__2'(class LibGit2Sharp.TreeChanges,
                                                                      class LibGit2Sharp.TreeEntryChanges)
    IL_003a:  newobj     instance void class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>::.ctor(object,
                                                                                                                                                     native int)
    IL_003f:  stsfld     class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::'CS$<>9__CachedAnonymousMethodDelegate7'
    IL_0044:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::'CS$<>9__CachedAnonymousMethodDelegate7'
    IL_0049:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.ChangeKind,class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>>::Add(!0,
                                                                                                                                                                                                                                              !1)
    IL_004e:  ldloc.0
    IL_004f:  ldc.i4.1
    IL_0050:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::'CS$<>9__CachedAnonymousMethodDelegate8'
    IL_0055:  brtrue.s   IL_0068

    IL_0057:  ldnull
    IL_0058:  ldftn      void LibGit2Sharp.TreeChanges::'<Build>b__3'(class LibGit2Sharp.TreeChanges,
                                                                      class LibGit2Sharp.TreeEntryChanges)
    IL_005e:  newobj     instance void class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>::.ctor(object,
                                                                                                                                                     native int)
    IL_0063:  stsfld     class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::'CS$<>9__CachedAnonymousMethodDelegate8'
    IL_0068:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::'CS$<>9__CachedAnonymousMethodDelegate8'
    IL_006d:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.ChangeKind,class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>>::Add(!0,
                                                                                                                                                                                                                                              !1)
    IL_0072:  ldloc.0
    IL_0073:  ldc.i4.8
    IL_0074:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::'CS$<>9__CachedAnonymousMethodDelegate9'
    IL_0079:  brtrue.s   IL_008c

    IL_007b:  ldnull
    IL_007c:  ldftn      void LibGit2Sharp.TreeChanges::'<Build>b__4'(class LibGit2Sharp.TreeChanges,
                                                                      class LibGit2Sharp.TreeEntryChanges)
    IL_0082:  newobj     instance void class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>::.ctor(object,
                                                                                                                                                     native int)
    IL_0087:  stsfld     class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::'CS$<>9__CachedAnonymousMethodDelegate9'
    IL_008c:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::'CS$<>9__CachedAnonymousMethodDelegate9'
    IL_0091:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.ChangeKind,class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>>::Add(!0,
                                                                                                                                                                                                                                              !1)
    IL_0096:  ldloc.0
    IL_0097:  ldc.i4.0
    IL_0098:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::'CS$<>9__CachedAnonymousMethodDelegatea'
    IL_009d:  brtrue.s   IL_00b0

    IL_009f:  ldnull
    IL_00a0:  ldftn      void LibGit2Sharp.TreeChanges::'<Build>b__5'(class LibGit2Sharp.TreeChanges,
                                                                      class LibGit2Sharp.TreeEntryChanges)
    IL_00a6:  newobj     instance void class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>::.ctor(object,
                                                                                                                                                     native int)
    IL_00ab:  stsfld     class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::'CS$<>9__CachedAnonymousMethodDelegatea'
    IL_00b0:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::'CS$<>9__CachedAnonymousMethodDelegatea'
    IL_00b5:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.ChangeKind,class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>>::Add(!0,
                                                                                                                                                                                                                                              !1)
    IL_00ba:  ldloc.0
    IL_00bb:  ret
  } // end of method TreeChanges::Build

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       95 (0x5f)
    .maxstack  2
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.Core.FilePath,class LibGit2Sharp.TreeEntryChanges>::.ctor()
    IL_0006:  stfld      class [mscorlib]System.Collections.Generic.IDictionary`2<class LibGit2Sharp.Core.FilePath,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::changes
    IL_000b:  ldarg.0
    IL_000c:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges>::.ctor()
    IL_0011:  stfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::added
    IL_0016:  ldarg.0
    IL_0017:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges>::.ctor()
    IL_001c:  stfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::deleted
    IL_0021:  ldarg.0
    IL_0022:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges>::.ctor()
    IL_0027:  stfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::modified
    IL_002c:  ldarg.0
    IL_002d:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges>::.ctor()
    IL_0032:  stfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::typeChanged
    IL_0037:  ldarg.0
    IL_0038:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges>::.ctor()
    IL_003d:  stfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::unmodified
    IL_0042:  ldarg.0
    IL_0043:  call       class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.ChangeKind,class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>> LibGit2Sharp.TreeChanges::Build()
    IL_0048:  stfld      class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.ChangeKind,class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>> LibGit2Sharp.TreeChanges::fileDispatcher
    IL_004d:  ldarg.0
    IL_004e:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_0053:  stfld      class [mscorlib]System.Text.StringBuilder LibGit2Sharp.TreeChanges::fullPatchBuilder
    IL_0058:  ldarg.0
    IL_0059:  call       instance void [mscorlib]System.Object::.ctor()
    IL_005e:  ret
  } // end of method TreeChanges::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Core.Handles.DiffListSafeHandle diff) cil managed
  {
    // Code size       144 (0x90)
    .maxstack  6
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.Core.FilePath,class LibGit2Sharp.TreeEntryChanges>::.ctor()
    IL_0006:  stfld      class [mscorlib]System.Collections.Generic.IDictionary`2<class LibGit2Sharp.Core.FilePath,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::changes
    IL_000b:  ldarg.0
    IL_000c:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges>::.ctor()
    IL_0011:  stfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::added
    IL_0016:  ldarg.0
    IL_0017:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges>::.ctor()
    IL_001c:  stfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::deleted
    IL_0021:  ldarg.0
    IL_0022:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges>::.ctor()
    IL_0027:  stfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::modified
    IL_002c:  ldarg.0
    IL_002d:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges>::.ctor()
    IL_0032:  stfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::typeChanged
    IL_0037:  ldarg.0
    IL_0038:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges>::.ctor()
    IL_003d:  stfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::unmodified
    IL_0042:  ldarg.0
    IL_0043:  call       class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.ChangeKind,class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>> LibGit2Sharp.TreeChanges::Build()
    IL_0048:  stfld      class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.ChangeKind,class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>> LibGit2Sharp.TreeChanges::fileDispatcher
    IL_004d:  ldarg.0
    IL_004e:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_0053:  stfld      class [mscorlib]System.Text.StringBuilder LibGit2Sharp.TreeChanges::fullPatchBuilder
    IL_0058:  ldarg.0
    IL_0059:  call       instance void [mscorlib]System.Object::.ctor()
    IL_005e:  ldarg.1
    IL_005f:  ldarg.0
    IL_0060:  ldftn      instance int32 LibGit2Sharp.TreeChanges::FileCallback(class LibGit2Sharp.Core.GitDiffDelta,
                                                                               float32,
                                                                               native int)
    IL_0066:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_diff_file_cb::.ctor(object,
                                                                                               native int)
    IL_006b:  ldnull
    IL_006c:  ldarg.0
    IL_006d:  ldftn      instance int32 LibGit2Sharp.TreeChanges::DataCallback(class LibGit2Sharp.Core.GitDiffDelta,
                                                                               class LibGit2Sharp.Core.GitDiffRange,
                                                                               valuetype LibGit2Sharp.Core.GitDiffLineOrigin,
                                                                               native int,
                                                                               native uint,
                                                                               native int)
    IL_0073:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_diff_data_cb::.ctor(object,
                                                                                               native int)
    IL_0078:  call       void LibGit2Sharp.Core.Proxy::git_diff_foreach(class LibGit2Sharp.Core.Handles.DiffListSafeHandle,
                                                                        class LibGit2Sharp.Core.NativeMethods/git_diff_file_cb,
                                                                        class LibGit2Sharp.Core.NativeMethods/git_diff_hunk_cb,
                                                                        class LibGit2Sharp.Core.NativeMethods/git_diff_data_cb)
    IL_007d:  ldarg.1
    IL_007e:  ldarg.0
    IL_007f:  ldftn      instance int32 LibGit2Sharp.TreeChanges::PrintCallBack(class LibGit2Sharp.Core.GitDiffDelta,
                                                                                class LibGit2Sharp.Core.GitDiffRange,
                                                                                valuetype LibGit2Sharp.Core.GitDiffLineOrigin,
                                                                                native int,
                                                                                native uint,
                                                                                native int)
    IL_0085:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_diff_data_cb::.ctor(object,
                                                                                               native int)
    IL_008a:  call       void LibGit2Sharp.Core.Proxy::git_diff_print_patch(class LibGit2Sharp.Core.Handles.DiffListSafeHandle,
                                                                            class LibGit2Sharp.Core.NativeMethods/git_diff_data_cb)
    IL_008f:  ret
  } // end of method TreeChanges::.ctor

  .method private hidebysig instance int32 
          DataCallback(class LibGit2Sharp.Core.GitDiffDelta delta,
                       class LibGit2Sharp.Core.GitDiffRange range,
                       valuetype LibGit2Sharp.Core.GitDiffLineOrigin lineOrigin,
                       native int content,
                       native uint contentLen,
                       native int payload) cil managed
  {
    // Code size       33 (0x21)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.FilePath V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldfld      class LibGit2Sharp.Core.GitDiffFile LibGit2Sharp.Core.GitDiffDelta::NewFile
    IL_0006:  ldfld      native int LibGit2Sharp.Core.GitDiffFile::Path
    IL_000b:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePathMarshaler::FromNative(native int)
    IL_0010:  stloc.0
    IL_0011:  ldarg.0
    IL_0012:  ldarg.0
    IL_0013:  ldloc.0
    IL_0014:  call       instance class LibGit2Sharp.TreeEntryChanges LibGit2Sharp.TreeChanges::get_Item(class LibGit2Sharp.Core.FilePath)
    IL_0019:  ldarg.3
    IL_001a:  call       instance void LibGit2Sharp.TreeChanges::AddLineChange(class LibGit2Sharp.Changes,
                                                                               valuetype LibGit2Sharp.Core.GitDiffLineOrigin)
    IL_001f:  ldc.i4.0
    IL_0020:  ret
  } // end of method TreeChanges::DataCallback

  .method private hidebysig instance int32 
          FileCallback(class LibGit2Sharp.Core.GitDiffDelta delta,
                       float32 progress,
                       native int payload) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LibGit2Sharp.TreeChanges::AddFileChange(class LibGit2Sharp.Core.GitDiffDelta)
    IL_0007:  ldc.i4.0
    IL_0008:  ret
  } // end of method TreeChanges::FileCallback

  .method private hidebysig instance int32 
          PrintCallBack(class LibGit2Sharp.Core.GitDiffDelta delta,
                        class LibGit2Sharp.Core.GitDiffRange range,
                        valuetype LibGit2Sharp.Core.GitDiffLineOrigin lineorigin,
                        native int content,
                        native uint contentlen,
                        native int payload) cil managed
  {
    // Code size       60 (0x3c)
    .maxstack  2
    .locals init (string V_0,
             class LibGit2Sharp.Core.FilePath V_1)
    IL_0000:  ldarg.s    content
    IL_0002:  ldarg.s    contentlen
    IL_0004:  call       uint32 [mscorlib]System.UIntPtr::op_Explicit(native uint)
    IL_0009:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int,
                                                                            int32)
    IL_000e:  stloc.0
    IL_000f:  ldarg.1
    IL_0010:  ldfld      class LibGit2Sharp.Core.GitDiffFile LibGit2Sharp.Core.GitDiffDelta::NewFile
    IL_0015:  ldfld      native int LibGit2Sharp.Core.GitDiffFile::Path
    IL_001a:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePathMarshaler::FromNative(native int)
    IL_001f:  stloc.1
    IL_0020:  ldarg.0
    IL_0021:  ldfld      class [mscorlib]System.Text.StringBuilder LibGit2Sharp.TreeChanges::fullPatchBuilder
    IL_0026:  ldloc.0
    IL_0027:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_002c:  pop
    IL_002d:  ldarg.0
    IL_002e:  ldloc.1
    IL_002f:  call       instance class LibGit2Sharp.TreeEntryChanges LibGit2Sharp.TreeChanges::get_Item(class LibGit2Sharp.Core.FilePath)
    IL_0034:  ldloc.0
    IL_0035:  callvirt   instance void LibGit2Sharp.Changes::AppendToPatch(string)
    IL_003a:  ldc.i4.0
    IL_003b:  ret
  } // end of method TreeChanges::PrintCallBack

  .method private hidebysig instance void 
          AddLineChange(class LibGit2Sharp.Changes currentChange,
                        valuetype LibGit2Sharp.Core.GitDiffLineOrigin lineOrigin) cil managed
  {
    // Code size       82 (0x52)
    .maxstack  3
    .locals init (valuetype LibGit2Sharp.Core.GitDiffLineOrigin V_0)
    IL_0000:  ldarg.2
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.s   43
    IL_0005:  sub
    IL_0006:  switch     ( 
                          IL_0018,
                          IL_0051,
                          IL_0035)
    IL_0017:  ret

    IL_0018:  ldarg.0
    IL_0019:  dup
    IL_001a:  ldfld      int32 LibGit2Sharp.TreeChanges::linesAdded
    IL_001f:  ldc.i4.1
    IL_0020:  add
    IL_0021:  stfld      int32 LibGit2Sharp.TreeChanges::linesAdded
    IL_0026:  ldarg.1
    IL_0027:  dup
    IL_0028:  callvirt   instance int32 LibGit2Sharp.Changes::get_LinesAdded()
    IL_002d:  ldc.i4.1
    IL_002e:  add
    IL_002f:  callvirt   instance void LibGit2Sharp.Changes::set_LinesAdded(int32)
    IL_0034:  ret

    IL_0035:  ldarg.0
    IL_0036:  dup
    IL_0037:  ldfld      int32 LibGit2Sharp.TreeChanges::linesDeleted
    IL_003c:  ldc.i4.1
    IL_003d:  add
    IL_003e:  stfld      int32 LibGit2Sharp.TreeChanges::linesDeleted
    IL_0043:  ldarg.1
    IL_0044:  dup
    IL_0045:  callvirt   instance int32 LibGit2Sharp.Changes::get_LinesDeleted()
    IL_004a:  ldc.i4.1
    IL_004b:  add
    IL_004c:  callvirt   instance void LibGit2Sharp.Changes::set_LinesDeleted(int32)
    IL_0051:  ret
  } // end of method TreeChanges::AddLineChange

  .method private hidebysig instance void 
          AddFileChange(class LibGit2Sharp.Core.GitDiffDelta delta) cil managed
  {
    // Code size       186 (0xba)
    .maxstack  9
    .locals init (class LibGit2Sharp.Core.FilePath V_0,
             class LibGit2Sharp.Core.FilePath V_1,
             valuetype LibGit2Sharp.Mode V_2,
             valuetype LibGit2Sharp.Mode V_3,
             valuetype LibGit2Sharp.Core.GitOid V_4,
             valuetype LibGit2Sharp.Core.GitOid V_5,
             class LibGit2Sharp.TreeEntryChanges V_6)
    IL_0000:  ldarg.1
    IL_0001:  ldfld      class LibGit2Sharp.Core.GitDiffFile LibGit2Sharp.Core.GitDiffDelta::NewFile
    IL_0006:  ldfld      native int LibGit2Sharp.Core.GitDiffFile::Path
    IL_000b:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePathMarshaler::FromNative(native int)
    IL_0010:  stloc.0
    IL_0011:  ldarg.1
    IL_0012:  ldfld      class LibGit2Sharp.Core.GitDiffFile LibGit2Sharp.Core.GitDiffDelta::OldFile
    IL_0017:  ldfld      native int LibGit2Sharp.Core.GitDiffFile::Path
    IL_001c:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePathMarshaler::FromNative(native int)
    IL_0021:  stloc.1
    IL_0022:  ldarg.1
    IL_0023:  ldfld      class LibGit2Sharp.Core.GitDiffFile LibGit2Sharp.Core.GitDiffDelta::NewFile
    IL_0028:  ldfld      uint16 LibGit2Sharp.Core.GitDiffFile::Mode
    IL_002d:  stloc.2
    IL_002e:  ldarg.1
    IL_002f:  ldfld      class LibGit2Sharp.Core.GitDiffFile LibGit2Sharp.Core.GitDiffDelta::OldFile
    IL_0034:  ldfld      uint16 LibGit2Sharp.Core.GitDiffFile::Mode
    IL_0039:  stloc.3
    IL_003a:  ldarg.1
    IL_003b:  ldfld      class LibGit2Sharp.Core.GitDiffFile LibGit2Sharp.Core.GitDiffDelta::NewFile
    IL_0040:  ldfld      valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.Core.GitDiffFile::Oid
    IL_0045:  stloc.s    V_4
    IL_0047:  ldarg.1
    IL_0048:  ldfld      class LibGit2Sharp.Core.GitDiffFile LibGit2Sharp.Core.GitDiffDelta::OldFile
    IL_004d:  ldfld      valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.Core.GitDiffFile::Oid
    IL_0052:  stloc.s    V_5
    IL_0054:  ldarg.1
    IL_0055:  ldfld      valuetype LibGit2Sharp.ChangeKind LibGit2Sharp.Core.GitDiffDelta::Status
    IL_005a:  ldc.i4.7
    IL_005b:  beq.s      IL_0066

    IL_005d:  ldarg.1
    IL_005e:  ldfld      valuetype LibGit2Sharp.ChangeKind LibGit2Sharp.Core.GitDiffDelta::Status
    IL_0063:  ldc.i4.6
    IL_0064:  bne.un.s   IL_006d

    IL_0066:  ldarg.1
    IL_0067:  ldc.i4.1
    IL_0068:  stfld      valuetype LibGit2Sharp.ChangeKind LibGit2Sharp.Core.GitDiffDelta::Status
    IL_006d:  ldloc.0
    IL_006e:  ldloc.2
    IL_006f:  ldloc.s    V_4
    IL_0071:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
    IL_0076:  ldarg.1
    IL_0077:  ldfld      valuetype LibGit2Sharp.ChangeKind LibGit2Sharp.Core.GitDiffDelta::Status
    IL_007c:  ldloc.1
    IL_007d:  ldloc.3
    IL_007e:  ldloc.s    V_5
    IL_0080:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
    IL_0085:  ldarg.1
    IL_0086:  call       bool LibGit2Sharp.Core.GitDiffExtensions::IsBinary(class LibGit2Sharp.Core.GitDiffDelta)
    IL_008b:  newobj     instance void LibGit2Sharp.TreeEntryChanges::.ctor(class LibGit2Sharp.Core.FilePath,
                                                                            valuetype LibGit2Sharp.Mode,
                                                                            class LibGit2Sharp.ObjectId,
                                                                            valuetype LibGit2Sharp.ChangeKind,
                                                                            class LibGit2Sharp.Core.FilePath,
                                                                            valuetype LibGit2Sharp.Mode,
                                                                            class LibGit2Sharp.ObjectId,
                                                                            bool)
    IL_0090:  stloc.s    V_6
    IL_0092:  ldarg.0
    IL_0093:  ldfld      class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.ChangeKind,class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>> LibGit2Sharp.TreeChanges::fileDispatcher
    IL_0098:  ldarg.1
    IL_0099:  ldfld      valuetype LibGit2Sharp.ChangeKind LibGit2Sharp.Core.GitDiffDelta::Status
    IL_009e:  callvirt   instance !1 class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.ChangeKind,class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>>::get_Item(!0)
    IL_00a3:  ldarg.0
    IL_00a4:  ldloc.s    V_6
    IL_00a6:  callvirt   instance void class [System.Core]System.Action`2<class LibGit2Sharp.TreeChanges,class LibGit2Sharp.TreeEntryChanges>::Invoke(!0,
                                                                                                                                                      !1)
    IL_00ab:  ldarg.0
    IL_00ac:  ldfld      class [mscorlib]System.Collections.Generic.IDictionary`2<class LibGit2Sharp.Core.FilePath,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::changes
    IL_00b1:  ldloc.0
    IL_00b2:  ldloc.s    V_6
    IL_00b4:  callvirt   instance void class [mscorlib]System.Collections.Generic.IDictionary`2<class LibGit2Sharp.Core.FilePath,class LibGit2Sharp.TreeEntryChanges>::Add(!0,
                                                                                                                                                                           !1)
    IL_00b9:  ret
  } // end of method TreeChanges::AddFileChange

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntryChanges> 
          GetEnumerator() cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.IDictionary`2<class LibGit2Sharp.Core.FilePath,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::changes
    IL_0006:  callvirt   instance class [mscorlib]System.Collections.Generic.ICollection`1<!1> class [mscorlib]System.Collections.Generic.IDictionary`2<class LibGit2Sharp.Core.FilePath,class LibGit2Sharp.TreeEntryChanges>::get_Values()
    IL_000b:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges>::GetEnumerator()
    IL_0010:  ret
  } // end of method TreeChanges::GetEnumerator

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::GetEnumerator()
    IL_0006:  ret
  } // end of method TreeChanges::System.Collections.IEnumerable.GetEnumerator

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.TreeEntryChanges 
          get_Item(string path) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0007:  call       instance class LibGit2Sharp.TreeEntryChanges LibGit2Sharp.TreeChanges::get_Item(class LibGit2Sharp.Core.FilePath)
    IL_000c:  ret
  } // end of method TreeChanges::get_Item

  .method private hidebysig specialname instance class LibGit2Sharp.TreeEntryChanges 
          get_Item(class LibGit2Sharp.Core.FilePath path) cil managed
  {
    // Code size       20 (0x14)
    .maxstack  3
    .locals init (class LibGit2Sharp.TreeEntryChanges V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.IDictionary`2<class LibGit2Sharp.Core.FilePath,class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::changes
    IL_0006:  ldarg.1
    IL_0007:  ldloca.s   V_0
    IL_0009:  callvirt   instance bool class [mscorlib]System.Collections.Generic.IDictionary`2<class LibGit2Sharp.Core.FilePath,class LibGit2Sharp.TreeEntryChanges>::TryGetValue(!0,
                                                                                                                                                                                   !1&)
    IL_000e:  brfalse.s  IL_0012

    IL_0010:  ldloc.0
    IL_0011:  ret

    IL_0012:  ldnull
    IL_0013:  ret
  } // end of method TreeChanges::get_Item

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges> 
          get_Added() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::added
    IL_0006:  ret
  } // end of method TreeChanges::get_Added

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges> 
          get_Deleted() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::deleted
    IL_0006:  ret
  } // end of method TreeChanges::get_Deleted

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges> 
          get_Modified() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::modified
    IL_0006:  ret
  } // end of method TreeChanges::get_Modified

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges> 
          get_TypeChanged() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::typeChanged
    IL_0006:  ret
  } // end of method TreeChanges::get_TypeChanged

  .method public hidebysig newslot specialname virtual 
          instance int32  get_LinesAdded() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      int32 LibGit2Sharp.TreeChanges::linesAdded
    IL_0006:  ret
  } // end of method TreeChanges::get_LinesAdded

  .method public hidebysig newslot specialname virtual 
          instance int32  get_LinesDeleted() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      int32 LibGit2Sharp.TreeChanges::linesDeleted
    IL_0006:  ret
  } // end of method TreeChanges::get_LinesDeleted

  .method public hidebysig newslot specialname virtual 
          instance string  get_Patch() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Text.StringBuilder LibGit2Sharp.TreeChanges::fullPatchBuilder
    IL_0006:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_000b:  ret
  } // end of method TreeChanges::get_Patch

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       100 (0x64)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      bytearray (2B 00 7B 00 30 00 7D 00 20 00 7E 00 7B 00 32 00   // +.{.0.}. .~.{.2.
                                    7D 00 20 00 2D 00 7B 00 31 00 7D 00 20 00 B1 00   // }. .-.{.1.}. ...
                                    7B 00 33 00 7D 00 )                               // {.3.}.
    IL_000a:  ldc.i4.4
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::get_Added()
    IL_0019:  call       int32 [System.Core]System.Linq.Enumerable::Count<class LibGit2Sharp.TreeEntryChanges>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_001e:  box        [mscorlib]System.Int32
    IL_0023:  stelem.ref
    IL_0024:  ldloc.0
    IL_0025:  ldc.i4.1
    IL_0026:  ldarg.0
    IL_0027:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::get_Deleted()
    IL_002c:  call       int32 [System.Core]System.Linq.Enumerable::Count<class LibGit2Sharp.TreeEntryChanges>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0031:  box        [mscorlib]System.Int32
    IL_0036:  stelem.ref
    IL_0037:  ldloc.0
    IL_0038:  ldc.i4.2
    IL_0039:  ldarg.0
    IL_003a:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::get_Modified()
    IL_003f:  call       int32 [System.Core]System.Linq.Enumerable::Count<class LibGit2Sharp.TreeEntryChanges>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0044:  box        [mscorlib]System.Int32
    IL_0049:  stelem.ref
    IL_004a:  ldloc.0
    IL_004b:  ldc.i4.3
    IL_004c:  ldarg.0
    IL_004d:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::get_TypeChanged()
    IL_0052:  call       int32 [System.Core]System.Linq.Enumerable::Count<class LibGit2Sharp.TreeEntryChanges>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0057:  box        [mscorlib]System.Int32
    IL_005c:  stelem.ref
    IL_005d:  ldloc.0
    IL_005e:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0063:  ret
  } // end of method TreeChanges::get_DebuggerDisplay

  .method private hidebysig static void  '<Build>b__1'(class LibGit2Sharp.TreeChanges de,
                                                       class LibGit2Sharp.TreeEntryChanges d) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::modified
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges>::Add(!0)
    IL_000c:  ret
  } // end of method TreeChanges::'<Build>b__1'

  .method private hidebysig static void  '<Build>b__2'(class LibGit2Sharp.TreeChanges de,
                                                       class LibGit2Sharp.TreeEntryChanges d) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::deleted
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges>::Add(!0)
    IL_000c:  ret
  } // end of method TreeChanges::'<Build>b__2'

  .method private hidebysig static void  '<Build>b__3'(class LibGit2Sharp.TreeChanges de,
                                                       class LibGit2Sharp.TreeEntryChanges d) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::added
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges>::Add(!0)
    IL_000c:  ret
  } // end of method TreeChanges::'<Build>b__3'

  .method private hidebysig static void  '<Build>b__4'(class LibGit2Sharp.TreeChanges de,
                                                       class LibGit2Sharp.TreeEntryChanges d) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::typeChanged
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges>::Add(!0)
    IL_000c:  ret
  } // end of method TreeChanges::'<Build>b__4'

  .method private hidebysig static void  '<Build>b__5'(class LibGit2Sharp.TreeChanges de,
                                                       class LibGit2Sharp.TreeEntryChanges d) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::unmodified
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.TreeEntryChanges>::Add(!0)
    IL_000c:  ret
  } // end of method TreeChanges::'<Build>b__5'

  .property instance class LibGit2Sharp.TreeEntryChanges
          Item(string)
  {
    .get instance class LibGit2Sharp.TreeEntryChanges LibGit2Sharp.TreeChanges::get_Item(string)
  } // end of property TreeChanges::Item
  .property instance class LibGit2Sharp.TreeEntryChanges
          Item(class LibGit2Sharp.Core.FilePath)
  {
    .get instance class LibGit2Sharp.TreeEntryChanges LibGit2Sharp.TreeChanges::get_Item(class LibGit2Sharp.Core.FilePath)
  } // end of property TreeChanges::Item
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges>
          Added()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::get_Added()
  } // end of property TreeChanges::Added
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges>
          Deleted()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::get_Deleted()
  } // end of property TreeChanges::Deleted
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges>
          Modified()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::get_Modified()
  } // end of property TreeChanges::Modified
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges>
          TypeChanged()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::get_TypeChanged()
  } // end of property TreeChanges::TypeChanged
  .property instance int32 LinesAdded()
  {
    .get instance int32 LibGit2Sharp.TreeChanges::get_LinesAdded()
  } // end of property TreeChanges::LinesAdded
  .property instance int32 LinesDeleted()
  {
    .get instance int32 LibGit2Sharp.TreeChanges::get_LinesDeleted()
  } // end of property TreeChanges::LinesDeleted
  .property instance string Patch()
  {
    .get instance string LibGit2Sharp.TreeChanges::get_Patch()
  } // end of property TreeChanges::Patch
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.TreeChanges::get_DebuggerDisplay()
  } // end of property TreeChanges::DebuggerDisplay
} // end of class LibGit2Sharp.TreeChanges

.class public auto ansi beforefieldinit LibGit2Sharp.TreeEntryChanges
       extends LibGit2Sharp.Changes
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field private string '<Path>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private valuetype LibGit2Sharp.Mode '<Mode>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private class LibGit2Sharp.ObjectId '<Oid>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private valuetype LibGit2Sharp.ChangeKind '<Status>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private string '<OldPath>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private valuetype LibGit2Sharp.Mode '<OldMode>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private class LibGit2Sharp.ObjectId '<OldOid>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Changes::.ctor()
    IL_0006:  ret
  } // end of method TreeEntryChanges::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Core.FilePath path,
                               valuetype LibGit2Sharp.Mode mode,
                               class LibGit2Sharp.ObjectId oid,
                               valuetype LibGit2Sharp.ChangeKind status,
                               class LibGit2Sharp.Core.FilePath oldPath,
                               valuetype LibGit2Sharp.Mode oldMode,
                               class LibGit2Sharp.ObjectId oldOid,
                               bool isBinaryComparison) cil managed
  {
    // Code size       78 (0x4e)
    .maxstack  2
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Changes::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
    IL_000d:  call       instance void LibGit2Sharp.TreeEntryChanges::set_Path(string)
    IL_0012:  ldarg.0
    IL_0013:  ldarg.2
    IL_0014:  call       instance void LibGit2Sharp.TreeEntryChanges::set_Mode(valuetype LibGit2Sharp.Mode)
    IL_0019:  ldarg.0
    IL_001a:  ldarg.3
    IL_001b:  call       instance void LibGit2Sharp.TreeEntryChanges::set_Oid(class LibGit2Sharp.ObjectId)
    IL_0020:  ldarg.0
    IL_0021:  ldarg.s    status
    IL_0023:  call       instance void LibGit2Sharp.TreeEntryChanges::set_Status(valuetype LibGit2Sharp.ChangeKind)
    IL_0028:  ldarg.0
    IL_0029:  ldarg.s    oldPath
    IL_002b:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
    IL_0030:  call       instance void LibGit2Sharp.TreeEntryChanges::set_OldPath(string)
    IL_0035:  ldarg.0
    IL_0036:  ldarg.s    oldMode
    IL_0038:  call       instance void LibGit2Sharp.TreeEntryChanges::set_OldMode(valuetype LibGit2Sharp.Mode)
    IL_003d:  ldarg.0
    IL_003e:  ldarg.s    oldOid
    IL_0040:  call       instance void LibGit2Sharp.TreeEntryChanges::set_OldOid(class LibGit2Sharp.ObjectId)
    IL_0045:  ldarg.0
    IL_0046:  ldarg.s    isBinaryComparison
    IL_0048:  callvirt   instance void LibGit2Sharp.Changes::set_IsBinaryComparison(bool)
    IL_004d:  ret
  } // end of method TreeEntryChanges::.ctor

  .method public hidebysig newslot specialname virtual 
          instance string  get_Path() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.TreeEntryChanges::'<Path>k__BackingField'
    IL_0006:  ret
  } // end of method TreeEntryChanges::get_Path

  .method private hidebysig specialname instance void 
          set_Path(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.TreeEntryChanges::'<Path>k__BackingField'
    IL_0007:  ret
  } // end of method TreeEntryChanges::set_Path

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.Mode 
          get_Mode() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntryChanges::'<Mode>k__BackingField'
    IL_0006:  ret
  } // end of method TreeEntryChanges::get_Mode

  .method private hidebysig specialname instance void 
          set_Mode(valuetype LibGit2Sharp.Mode 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntryChanges::'<Mode>k__BackingField'
    IL_0007:  ret
  } // end of method TreeEntryChanges::set_Mode

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.ObjectId 
          get_Oid() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntryChanges::'<Oid>k__BackingField'
    IL_0006:  ret
  } // end of method TreeEntryChanges::get_Oid

  .method private hidebysig specialname instance void 
          set_Oid(class LibGit2Sharp.ObjectId 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntryChanges::'<Oid>k__BackingField'
    IL_0007:  ret
  } // end of method TreeEntryChanges::set_Oid

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.ChangeKind 
          get_Status() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.ChangeKind LibGit2Sharp.TreeEntryChanges::'<Status>k__BackingField'
    IL_0006:  ret
  } // end of method TreeEntryChanges::get_Status

  .method private hidebysig specialname instance void 
          set_Status(valuetype LibGit2Sharp.ChangeKind 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      valuetype LibGit2Sharp.ChangeKind LibGit2Sharp.TreeEntryChanges::'<Status>k__BackingField'
    IL_0007:  ret
  } // end of method TreeEntryChanges::set_Status

  .method public hidebysig newslot specialname virtual 
          instance string  get_OldPath() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.TreeEntryChanges::'<OldPath>k__BackingField'
    IL_0006:  ret
  } // end of method TreeEntryChanges::get_OldPath

  .method private hidebysig specialname instance void 
          set_OldPath(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.TreeEntryChanges::'<OldPath>k__BackingField'
    IL_0007:  ret
  } // end of method TreeEntryChanges::set_OldPath

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.Mode 
          get_OldMode() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntryChanges::'<OldMode>k__BackingField'
    IL_0006:  ret
  } // end of method TreeEntryChanges::get_OldMode

  .method private hidebysig specialname instance void 
          set_OldMode(valuetype LibGit2Sharp.Mode 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntryChanges::'<OldMode>k__BackingField'
    IL_0007:  ret
  } // end of method TreeEntryChanges::set_OldMode

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.ObjectId 
          get_OldOid() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntryChanges::'<OldOid>k__BackingField'
    IL_0006:  ret
  } // end of method TreeEntryChanges::get_OldOid

  .method private hidebysig specialname instance void 
          set_OldOid(class LibGit2Sharp.ObjectId 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntryChanges::'<OldOid>k__BackingField'
    IL_0007:  ret
  } // end of method TreeEntryChanges::set_OldOid

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       68 (0x44)
    .maxstack  6
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "Path = {0}, File {1}"
    IL_000a:  ldc.i4.2
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_Path()
    IL_0019:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
    IL_001e:  brfalse.s  IL_0028

    IL_0020:  ldarg.0
    IL_0021:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_OldPath()
    IL_0026:  br.s       IL_002e

    IL_0028:  ldarg.0
    IL_0029:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_Path()
    IL_002e:  stelem.ref
    IL_002f:  ldloc.0
    IL_0030:  ldc.i4.1
    IL_0031:  ldarg.0
    IL_0032:  callvirt   instance valuetype LibGit2Sharp.ChangeKind LibGit2Sharp.TreeEntryChanges::get_Status()
    IL_0037:  box        LibGit2Sharp.ChangeKind
    IL_003c:  stelem.ref
    IL_003d:  ldloc.0
    IL_003e:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0043:  ret
  } // end of method TreeEntryChanges::get_DebuggerDisplay

  .property instance string Path()
  {
    .get instance string LibGit2Sharp.TreeEntryChanges::get_Path()
    .set instance void LibGit2Sharp.TreeEntryChanges::set_Path(string)
  } // end of property TreeEntryChanges::Path
  .property instance valuetype LibGit2Sharp.Mode
          Mode()
  {
    .get instance valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntryChanges::get_Mode()
    .set instance void LibGit2Sharp.TreeEntryChanges::set_Mode(valuetype LibGit2Sharp.Mode)
  } // end of property TreeEntryChanges::Mode
  .property instance class LibGit2Sharp.ObjectId
          Oid()
  {
    .set instance void LibGit2Sharp.TreeEntryChanges::set_Oid(class LibGit2Sharp.ObjectId)
    .get instance class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntryChanges::get_Oid()
  } // end of property TreeEntryChanges::Oid
  .property instance valuetype LibGit2Sharp.ChangeKind
          Status()
  {
    .get instance valuetype LibGit2Sharp.ChangeKind LibGit2Sharp.TreeEntryChanges::get_Status()
    .set instance void LibGit2Sharp.TreeEntryChanges::set_Status(valuetype LibGit2Sharp.ChangeKind)
  } // end of property TreeEntryChanges::Status
  .property instance string OldPath()
  {
    .get instance string LibGit2Sharp.TreeEntryChanges::get_OldPath()
    .set instance void LibGit2Sharp.TreeEntryChanges::set_OldPath(string)
  } // end of property TreeEntryChanges::OldPath
  .property instance valuetype LibGit2Sharp.Mode
          OldMode()
  {
    .get instance valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntryChanges::get_OldMode()
    .set instance void LibGit2Sharp.TreeEntryChanges::set_OldMode(valuetype LibGit2Sharp.Mode)
  } // end of property TreeEntryChanges::OldMode
  .property instance class LibGit2Sharp.ObjectId
          OldOid()
  {
    .set instance void LibGit2Sharp.TreeEntryChanges::set_OldOid(class LibGit2Sharp.ObjectId)
    .get instance class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntryChanges::get_OldOid()
  } // end of property TreeEntryChanges::OldOid
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.TreeEntryChanges::get_DebuggerDisplay()
  } // end of property TreeEntryChanges::DebuggerDisplay
} // end of class LibGit2Sharp.TreeEntryChanges

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.ConfigurationSafeHandle
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_config_free(native int)
    IL_000b:  ldc.i4.1
    IL_000c:  ret
  } // end of method ConfigurationSafeHandle::ReleaseHandleImpl

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method ConfigurationSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle

.class private abstract auto ansi sealed beforefieldinit LibGit2Sharp.Core.Ensure
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerStepThroughAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static void  ArgumentNotNull(object argumentValue,
                                                        string argumentName) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  brtrue.s   IL_000a

    IL_0003:  ldarg.1
    IL_0004:  newobj     instance void [mscorlib]System.ArgumentNullException::.ctor(string)
    IL_0009:  throw

    IL_000a:  ret
  } // end of method Ensure::ArgumentNotNull

  .method public hidebysig static void  ArgumentNotNullOrEmptyString(string argumentValue,
                                                                     string argumentName) cil managed
  {
    // Code size       33 (0x21)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0007:  ldarg.0
    IL_0008:  callvirt   instance string [mscorlib]System.String::Trim()
    IL_000d:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0012:  brtrue.s   IL_0020

    IL_0014:  ldstr      "String cannot be empty"
    IL_0019:  ldarg.1
    IL_001a:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string,
                                                                                 string)
    IL_001f:  throw

    IL_0020:  ret
  } // end of method Ensure::ArgumentNotNullOrEmptyString

  .method private hidebysig static void  HandleError(int32 result) cil managed
  {
    // Code size       225 (0xe1)
    .maxstack  4
    .locals init (string V_0,
             class LibGit2Sharp.Core.GitError V_1,
             class LibGit2Sharp.Core.GitError V_2,
             int32 V_3)
    IL_0000:  call       class LibGit2Sharp.Core.Handles.GitErrorSafeHandle LibGit2Sharp.Core.NativeMethods::giterr_last()
    IL_0005:  callvirt   instance class LibGit2Sharp.Core.GitError LibGit2Sharp.Core.Handles.GitErrorSafeHandle::MarshalAsGitError()
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  brtrue.s   IL_0030

    IL_000e:  newobj     instance void LibGit2Sharp.Core.GitError::.ctor()
    IL_0013:  stloc.2
    IL_0014:  ldloc.2
    IL_0015:  ldc.i4.m1
    IL_0016:  stfld      valuetype LibGit2Sharp.Core.GitErrorCategory LibGit2Sharp.Core.GitError::Category
    IL_001b:  ldloc.2
    IL_001c:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0021:  stfld      native int LibGit2Sharp.Core.GitError::Message
    IL_0026:  ldloc.2
    IL_0027:  stloc.1
    IL_0028:  ldstr      "No error message has been provided by the native l"
    + "ibrary"
    IL_002d:  stloc.0
    IL_002e:  br.s       IL_003c

    IL_0030:  ldloc.1
    IL_0031:  ldfld      native int LibGit2Sharp.Core.GitError::Message
    IL_0036:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
    IL_003b:  stloc.0
    IL_003c:  ldarg.0
    IL_003d:  stloc.3
    IL_003e:  ldloc.3
    IL_003f:  ldc.i4.s   -13
    IL_0041:  sub
    IL_0042:  switch     ( 
                          IL_00c5,
                          IL_009b,
                          IL_00b7,
                          IL_00a9,
                          IL_00d3,
                          IL_007f,
                          IL_0071,
                          IL_00d3,
                          IL_00d3,
                          IL_008d)
    IL_006f:  br.s       IL_00d3

    IL_0071:  ldloc.0
    IL_0072:  ldarg.0
    IL_0073:  ldloc.1
    IL_0074:  ldfld      valuetype LibGit2Sharp.Core.GitErrorCategory LibGit2Sharp.Core.GitError::Category
    IL_0079:  newobj     instance void LibGit2Sharp.UserCancelledException::.ctor(string,
                                                                                  valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                  valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_007e:  throw

    IL_007f:  ldloc.0
    IL_0080:  ldarg.0
    IL_0081:  ldloc.1
    IL_0082:  ldfld      valuetype LibGit2Sharp.Core.GitErrorCategory LibGit2Sharp.Core.GitError::Category
    IL_0087:  newobj     instance void LibGit2Sharp.BareRepositoryException::.ctor(string,
                                                                                   valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                   valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_008c:  throw

    IL_008d:  ldloc.0
    IL_008e:  ldarg.0
    IL_008f:  ldloc.1
    IL_0090:  ldfld      valuetype LibGit2Sharp.Core.GitErrorCategory LibGit2Sharp.Core.GitError::Category
    IL_0095:  newobj     instance void LibGit2Sharp.NameConflictException::.ctor(string,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_009a:  throw

    IL_009b:  ldloc.0
    IL_009c:  ldarg.0
    IL_009d:  ldloc.1
    IL_009e:  ldfld      valuetype LibGit2Sharp.Core.GitErrorCategory LibGit2Sharp.Core.GitError::Category
    IL_00a3:  newobj     instance void LibGit2Sharp.InvalidSpecificationException::.ctor(string,
                                                                                         valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                         valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_00a8:  throw

    IL_00a9:  ldloc.0
    IL_00aa:  ldarg.0
    IL_00ab:  ldloc.1
    IL_00ac:  ldfld      valuetype LibGit2Sharp.Core.GitErrorCategory LibGit2Sharp.Core.GitError::Category
    IL_00b1:  newobj     instance void LibGit2Sharp.UnmergedIndexEntriesException::.ctor(string,
                                                                                         valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                         valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_00b6:  throw

    IL_00b7:  ldloc.0
    IL_00b8:  ldarg.0
    IL_00b9:  ldloc.1
    IL_00ba:  ldfld      valuetype LibGit2Sharp.Core.GitErrorCategory LibGit2Sharp.Core.GitError::Category
    IL_00bf:  newobj     instance void LibGit2Sharp.NonFastForwardException::.ctor(string,
                                                                                   valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                   valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_00c4:  throw

    IL_00c5:  ldloc.0
    IL_00c6:  ldarg.0
    IL_00c7:  ldloc.1
    IL_00c8:  ldfld      valuetype LibGit2Sharp.Core.GitErrorCategory LibGit2Sharp.Core.GitError::Category
    IL_00cd:  newobj     instance void LibGit2Sharp.MergeConflictException::.ctor(string,
                                                                                  valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                  valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_00d2:  throw

    IL_00d3:  ldloc.0
    IL_00d4:  ldarg.0
    IL_00d5:  ldloc.1
    IL_00d6:  ldfld      valuetype LibGit2Sharp.Core.GitErrorCategory LibGit2Sharp.Core.GitError::Category
    IL_00db:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_00e0:  throw
  } // end of method Ensure::HandleError

  .method public hidebysig static void  ZeroResult(int32 result) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  brtrue.s   IL_0004

    IL_0003:  ret

    IL_0004:  ldarg.0
    IL_0005:  call       void LibGit2Sharp.Core.Ensure::HandleError(int32)
    IL_000a:  ret
  } // end of method Ensure::ZeroResult

  .method public hidebysig static void  BooleanResult(int32 result) cil managed
  {
    // Code size       15 (0xf)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  brfalse.s  IL_0007

    IL_0003:  ldarg.0
    IL_0004:  ldc.i4.1
    IL_0005:  bne.un.s   IL_0008

    IL_0007:  ret

    IL_0008:  ldarg.0
    IL_0009:  call       void LibGit2Sharp.Core.Ensure::HandleError(int32)
    IL_000e:  ret
  } // end of method Ensure::BooleanResult

  .method public hidebysig static void  Int32Result(int32 result) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  blt.s      IL_0005

    IL_0004:  ret

    IL_0005:  ldarg.0
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::HandleError(int32)
    IL_000b:  ret
  } // end of method Ensure::Int32Result

  .method public hidebysig static void  ArgumentConformsTo<T>(!!T argumentValue,
                                                              class [System.Core]System.Func`2<!!T,bool> checker,
                                                              string argumentName) cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance !1 class [System.Core]System.Func`2<!!T,bool>::Invoke(!0)
    IL_0007:  brfalse.s  IL_000a

    IL_0009:  ret

    IL_000a:  ldarg.2
    IL_000b:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0010:  throw
  } // end of method Ensure::ArgumentConformsTo

  .method public hidebysig static void  GitObjectIsNotNull(class LibGit2Sharp.GitObject gitObject,
                                                           string identifier) cil managed
  {
    // Code size       43 (0x2b)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  call       bool LibGit2Sharp.GitObject::op_Inequality(class LibGit2Sharp.GitObject,
                                                                    class LibGit2Sharp.GitObject)
    IL_0007:  brfalse.s  IL_000a

    IL_0009:  ret

    IL_000a:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_000f:  ldstr      "No valid git object identified by '{0}' exists in "
    + "the repository."
    IL_0014:  ldc.i4.1
    IL_0015:  newarr     [mscorlib]System.Object
    IL_001a:  stloc.0
    IL_001b:  ldloc.0
    IL_001c:  ldc.i4.0
    IL_001d:  ldarg.1
    IL_001e:  stelem.ref
    IL_001f:  ldloc.0
    IL_0020:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0025:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_002a:  throw
  } // end of method Ensure::GitObjectIsNotNull

} // end of class LibGit2Sharp.Core.Ensure

.class public abstract auto ansi sealed beforefieldinit LibGit2Sharp.Core.Epoch
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static initonly valuetype [mscorlib]System.DateTimeOffset epochDateTimeOffset
  .method public hidebysig static valuetype [mscorlib]System.DateTimeOffset 
          ToDateTimeOffset(int64 secondsSinceEpoch,
                           int32 timeZoneOffsetInMinutes) cil managed
  {
    // Code size       47 (0x2f)
    .maxstack  3
    .locals init (valuetype [mscorlib]System.DateTimeOffset V_0,
             valuetype [mscorlib]System.TimeSpan V_1,
             valuetype [mscorlib]System.DateTimeOffset V_2,
             valuetype [mscorlib]System.DateTime V_3)
    IL_0000:  ldsfld     valuetype [mscorlib]System.DateTimeOffset LibGit2Sharp.Core.Epoch::epochDateTimeOffset
    IL_0005:  stloc.2
    IL_0006:  ldloca.s   V_2
    IL_0008:  ldarg.0
    IL_0009:  conv.r8
    IL_000a:  call       instance valuetype [mscorlib]System.DateTimeOffset [mscorlib]System.DateTimeOffset::AddSeconds(float64)
    IL_000f:  stloc.0
    IL_0010:  ldarg.1
    IL_0011:  conv.r8
    IL_0012:  call       valuetype [mscorlib]System.TimeSpan [mscorlib]System.TimeSpan::FromMinutes(float64)
    IL_0017:  stloc.1
    IL_0018:  ldloca.s   V_0
    IL_001a:  call       instance valuetype [mscorlib]System.DateTime [mscorlib]System.DateTimeOffset::get_DateTime()
    IL_001f:  stloc.3
    IL_0020:  ldloca.s   V_3
    IL_0022:  ldloc.1
    IL_0023:  call       instance valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::Add(valuetype [mscorlib]System.TimeSpan)
    IL_0028:  ldloc.1
    IL_0029:  newobj     instance void [mscorlib]System.DateTimeOffset::.ctor(valuetype [mscorlib]System.DateTime,
                                                                              valuetype [mscorlib]System.TimeSpan)
    IL_002e:  ret
  } // end of method Epoch::ToDateTimeOffset

  .method public hidebysig static int32  ToSecondsSinceEpoch(valuetype [mscorlib]System.DateTimeOffset 'date') cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       30 (0x1e)
    .maxstack  2
    .locals init (valuetype [mscorlib]System.DateTimeOffset V_0,
             valuetype [mscorlib]System.TimeSpan V_1)
    IL_0000:  ldarga.s   'date'
    IL_0002:  call       instance valuetype [mscorlib]System.DateTimeOffset [mscorlib]System.DateTimeOffset::ToUniversalTime()
    IL_0007:  stloc.0
    IL_0008:  ldloca.s   V_0
    IL_000a:  ldsfld     valuetype [mscorlib]System.DateTimeOffset LibGit2Sharp.Core.Epoch::epochDateTimeOffset
    IL_000f:  call       instance valuetype [mscorlib]System.TimeSpan [mscorlib]System.DateTimeOffset::Subtract(valuetype [mscorlib]System.DateTimeOffset)
    IL_0014:  stloc.1
    IL_0015:  ldloca.s   V_1
    IL_0017:  call       instance float64 [mscorlib]System.TimeSpan::get_TotalSeconds()
    IL_001c:  conv.i4
    IL_001d:  ret
  } // end of method Epoch::ToSecondsSinceEpoch

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       26 (0x1a)
    .maxstack  8
    IL_0000:  ldc.i4     0x7b2
    IL_0005:  ldc.i4.1
    IL_0006:  ldc.i4.1
    IL_0007:  ldc.i4.0
    IL_0008:  ldc.i4.0
    IL_0009:  ldc.i4.0
    IL_000a:  ldsfld     valuetype [mscorlib]System.TimeSpan [mscorlib]System.TimeSpan::Zero
    IL_000f:  newobj     instance void [mscorlib]System.DateTimeOffset::.ctor(int32,
                                                                              int32,
                                                                              int32,
                                                                              int32,
                                                                              int32,
                                                                              int32,
                                                                              valuetype [mscorlib]System.TimeSpan)
    IL_0014:  stsfld     valuetype [mscorlib]System.DateTimeOffset LibGit2Sharp.Core.Epoch::epochDateTimeOffset
    IL_0019:  ret
  } // end of method Epoch::.cctor

} // end of class LibGit2Sharp.Core.Epoch

.class private auto ansi sealed LibGit2Sharp.Core.GitErrorCode
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCode Ok = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCode Error = int32(0xFFFFFFFF)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCode NotFound = int32(0xFFFFFFFD)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCode Exists = int32(0xFFFFFFFC)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCode Ambiguous = int32(0xFFFFFFFB)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCode Buffer = int32(0xFFFFFFFA)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCode User = int32(0xFFFFFFF9)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCode BareRepo = int32(0xFFFFFFF8)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCode OrphanedHead = int32(0xFFFFFFF7)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCode UnmergedEntries = int32(0xFFFFFFF6)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCode NonFastForward = int32(0xFFFFFFF5)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCode InvalidSpecification = int32(0xFFFFFFF4)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCode MergeConflict = int32(0xFFFFFFF3)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCode PassThrough = int32(0xFFFFFFE2)
  .field public static literal valuetype LibGit2Sharp.Core.GitErrorCode IterOver = int32(0xFFFFFFE1)
} // end of class LibGit2Sharp.Core.GitErrorCode

.class private sequential ansi sealed beforefieldinit LibGit2Sharp.Core.GitOid
       extends [mscorlib]System.ValueType
{
  .field public  marshal( fixed array [20]) uint8[] Id
  .method public hidebysig specialname static 
          class LibGit2Sharp.ObjectId  op_Implicit(valuetype LibGit2Sharp.Core.GitOid oid) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void LibGit2Sharp.ObjectId::.ctor(valuetype LibGit2Sharp.Core.GitOid)
    IL_0006:  ret
  } // end of method GitOid::op_Implicit

  .method public hidebysig specialname static 
          class LibGit2Sharp.ObjectId  op_Implicit(valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid> oid) cil managed
  {
    // Code size       24 (0x18)
    .maxstack  8
    IL_0000:  ldarga.s   oid
    IL_0002:  call       instance bool valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid>::get_HasValue()
    IL_0007:  brfalse.s  IL_0016

    IL_0009:  ldarga.s   oid
    IL_000b:  call       instance !0 valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid>::get_Value()
    IL_0010:  newobj     instance void LibGit2Sharp.ObjectId::.ctor(valuetype LibGit2Sharp.Core.GitOid)
    IL_0015:  ret

    IL_0016:  ldnull
    IL_0017:  ret
  } // end of method GitOid::op_Implicit

} // end of class LibGit2Sharp.Core.GitOid

.class private auto ansi sealed LibGit2Sharp.Core.GitReferenceType
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.Core.GitReferenceType Invalid = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.Core.GitReferenceType Oid = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.Core.GitReferenceType Symbolic = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.Core.GitReferenceType Packed = int32(0x00000004)
  .field public static literal valuetype LibGit2Sharp.Core.GitReferenceType Peel = int32(0x00000008)
  .field public static literal valuetype LibGit2Sharp.Core.GitReferenceType ListAll = int32(0x00000007)
} // end of class LibGit2Sharp.Core.GitReferenceType

.class private sequential ansi beforefieldinit LibGit2Sharp.Core.GitSignature
       extends [mscorlib]System.Object
{
  .field public native int Name
  .field public native int Email
  .field public class LibGit2Sharp.Core.GitTime When
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method GitSignature::.ctor

} // end of class LibGit2Sharp.Core.GitSignature

.class public auto ansi sealed LibGit2Sharp.FileStatus
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.FileStatus Nonexistent = int32(0x80000000)
  .field public static literal valuetype LibGit2Sharp.FileStatus Unaltered = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.FileStatus Added = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.FileStatus Staged = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.FileStatus Removed = int32(0x00000004)
  .field public static literal valuetype LibGit2Sharp.FileStatus Renamed = int32(0x00000008)
  .field public static literal valuetype LibGit2Sharp.FileStatus StagedTypeChange = int32(0x00000010)
  .field public static literal valuetype LibGit2Sharp.FileStatus Untracked = int32(0x00000080)
  .field public static literal valuetype LibGit2Sharp.FileStatus Modified = int32(0x00000100)
  .field public static literal valuetype LibGit2Sharp.FileStatus Missing = int32(0x00000200)
  .field public static literal valuetype LibGit2Sharp.FileStatus TypeChanged = int32(0x00000400)
  .field public static literal valuetype LibGit2Sharp.FileStatus Ignored = int32(0x00004000)
} // end of class LibGit2Sharp.FileStatus

.class private sequential ansi beforefieldinit LibGit2Sharp.Core.GitTime
       extends [mscorlib]System.Object
{
  .field public int64 Time
  .field public int32 Offset
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method GitTime::.ctor

} // end of class LibGit2Sharp.Core.GitTime

.class private abstract auto ansi sealed LibGit2Sharp.Core.NativeMethods
       extends [mscorlib]System.Object
{
  .class auto ansi sealed nested private beforefieldinit LibraryLifetimeObject
         extends [mscorlib]System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed noinlining
    {
      // Code size       22 (0x16)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Runtime.ConstrainedExecution.CriticalFinalizerObject::.ctor()
      IL_0006:  call       int32 LibGit2Sharp.Core.NativeMethods::git_threads_init()
      IL_000b:  call       void LibGit2Sharp.Core.Ensure::ZeroResult(int32)
      IL_0010:  call       void LibGit2Sharp.Core.NativeMethods::AddHandle()
      IL_0015:  ret
    } // end of method LibraryLifetimeObject::.ctor

    .method family hidebysig virtual instance void 
            Finalize() cil managed
    {
      // Code size       15 (0xf)
      .maxstack  1
      .try
      {
        IL_0000:  call       void LibGit2Sharp.Core.NativeMethods::RemoveHandle()
        IL_0005:  leave.s    IL_000e

      }  // end .try
      finally
      {
        IL_0007:  ldarg.0
        IL_0008:  call       instance void [mscorlib]System.Runtime.ConstrainedExecution.CriticalFinalizerObject::Finalize()
        IL_000d:  endfinally
      }  // end handler
      IL_000e:  ret
    } // end of method LibraryLifetimeObject::Finalize

  } // end of class LibraryLifetimeObject

  .class auto ansi sealed nested assembly source_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method source_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(native int content,
                                   int32 max_length,
                                   native int data) runtime managed
    {
    } // end of method source_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int content,
                        int32 max_length,
                        native int data,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method source_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method source_callback::EndInvoke

  } // end of class source_callback

  .class auto ansi sealed nested assembly branch_foreach_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method branch_foreach_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(native int branch_name,
                                   valuetype LibGit2Sharp.Core.GitBranchType branch_type,
                                   native int payload) runtime managed
    {
    } // end of method branch_foreach_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int branch_name,
                        valuetype LibGit2Sharp.Core.GitBranchType branch_type,
                        native int payload,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method branch_foreach_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method branch_foreach_callback::EndInvoke

  } // end of class branch_foreach_callback

  .class auto ansi sealed nested assembly config_foreach_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method config_foreach_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(native int entry,
                                   native int payload) runtime managed
    {
    } // end of method config_foreach_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int entry,
                        native int payload,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method config_foreach_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method config_foreach_callback::EndInvoke

  } // end of class config_foreach_callback

  .class auto ansi sealed nested assembly git_cred_acquire_cb
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method git_cred_acquire_cb::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke([out] native int& cred,
                                   native int url,
                                   native int username_from_url,
                                   uint32 allowed_types,
                                   native int payload) runtime managed
    {
    } // end of method git_cred_acquire_cb::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke([out] native int& cred,
                        native int url,
                        native int username_from_url,
                        uint32 allowed_types,
                        native int payload,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method git_cred_acquire_cb::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke([out] native int& cred,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method git_cred_acquire_cb::EndInvoke

  } // end of class git_cred_acquire_cb

  .class auto ansi sealed nested assembly git_diff_file_cb
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method git_diff_file_cb::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(class LibGit2Sharp.Core.GitDiffDelta delta,
                                   float32 progress,
                                   native int payload) runtime managed
    {
    } // end of method git_diff_file_cb::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(class LibGit2Sharp.Core.GitDiffDelta delta,
                        float32 progress,
                        native int payload,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method git_diff_file_cb::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method git_diff_file_cb::EndInvoke

  } // end of class git_diff_file_cb

  .class auto ansi sealed nested assembly git_diff_hunk_cb
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method git_diff_hunk_cb::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(class LibGit2Sharp.Core.GitDiffDelta delta,
                                   class LibGit2Sharp.Core.GitDiffRange range,
                                   native int header,
                                   native uint headerLen,
                                   native int payload) runtime managed
    {
    } // end of method git_diff_hunk_cb::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(class LibGit2Sharp.Core.GitDiffDelta delta,
                        class LibGit2Sharp.Core.GitDiffRange range,
                        native int header,
                        native uint headerLen,
                        native int payload,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method git_diff_hunk_cb::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method git_diff_hunk_cb::EndInvoke

  } // end of class git_diff_hunk_cb

  .class auto ansi sealed nested assembly git_diff_data_cb
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method git_diff_data_cb::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(class LibGit2Sharp.Core.GitDiffDelta delta,
                                   class LibGit2Sharp.Core.GitDiffRange range,
                                   valuetype LibGit2Sharp.Core.GitDiffLineOrigin lineOrigin,
                                   native int content,
                                   native uint contentLen,
                                   native int payload) runtime managed
    {
    } // end of method git_diff_data_cb::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(class LibGit2Sharp.Core.GitDiffDelta delta,
                        class LibGit2Sharp.Core.GitDiffRange range,
                        valuetype LibGit2Sharp.Core.GitDiffLineOrigin lineOrigin,
                        native int content,
                        native uint contentLen,
                        native int payload,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method git_diff_data_cb::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method git_diff_data_cb::EndInvoke

  } // end of class git_diff_data_cb

  .class auto ansi sealed nested assembly git_note_foreach_cb
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method git_note_foreach_cb::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(valuetype LibGit2Sharp.Core.GitOid& blob_id,
                                   valuetype LibGit2Sharp.Core.GitOid& annotated_object_id,
                                   native int payload) runtime managed
    {
    } // end of method git_note_foreach_cb::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(valuetype LibGit2Sharp.Core.GitOid& blob_id,
                        valuetype LibGit2Sharp.Core.GitOid& annotated_object_id,
                        native int payload,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method git_note_foreach_cb::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(valuetype LibGit2Sharp.Core.GitOid& blob_id,
                                      valuetype LibGit2Sharp.Core.GitOid& annotated_object_id,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method git_note_foreach_cb::EndInvoke

  } // end of class git_note_foreach_cb

  .class auto ansi sealed nested assembly push_status_foreach_cb
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method push_status_foreach_cb::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(native int reference,
                                   native int msg,
                                   native int data) runtime managed
    {
    } // end of method push_status_foreach_cb::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int reference,
                        native int msg,
                        native int data,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method push_status_foreach_cb::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method push_status_foreach_cb::EndInvoke

  } // end of class push_status_foreach_cb

  .class auto ansi sealed nested assembly ref_glob_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method ref_glob_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(native int reference_name,
                                   native int payload) runtime managed
    {
    } // end of method ref_glob_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int reference_name,
                        native int payload,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method ref_glob_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method ref_glob_callback::EndInvoke

  } // end of class ref_glob_callback

  .class auto ansi sealed nested assembly git_headlist_cb
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method git_headlist_cb::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(valuetype LibGit2Sharp.Core.GitRemoteHead& remoteHeadPtr,
                                   native int payload) runtime managed
    {
    } // end of method git_headlist_cb::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(valuetype LibGit2Sharp.Core.GitRemoteHead& remoteHeadPtr,
                        native int payload,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method git_headlist_cb::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(valuetype LibGit2Sharp.Core.GitRemoteHead& remoteHeadPtr,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method git_headlist_cb::EndInvoke

  } // end of class git_headlist_cb

  .class auto ansi sealed nested assembly remote_progress_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method remote_progress_callback::.ctor

    .method public hidebysig newslot virtual 
            instance void  Invoke(native int str,
                                  int32 len,
                                  native int data) runtime managed
    {
    } // end of method remote_progress_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int str,
                        int32 len,
                        native int data,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method remote_progress_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method remote_progress_callback::EndInvoke

  } // end of class remote_progress_callback

  .class auto ansi sealed nested assembly remote_completion_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method remote_completion_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(valuetype LibGit2Sharp.RemoteCompletionType 'type',
                                   native int data) runtime managed
    {
    } // end of method remote_completion_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(valuetype LibGit2Sharp.RemoteCompletionType 'type',
                        native int data,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method remote_completion_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method remote_completion_callback::EndInvoke

  } // end of class remote_completion_callback

  .class auto ansi sealed nested assembly remote_update_tips_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method remote_update_tips_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(native int refName,
                                   valuetype LibGit2Sharp.Core.GitOid& oldId,
                                   valuetype LibGit2Sharp.Core.GitOid& newId,
                                   native int data) runtime managed
    {
    } // end of method remote_update_tips_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int refName,
                        valuetype LibGit2Sharp.Core.GitOid& oldId,
                        valuetype LibGit2Sharp.Core.GitOid& newId,
                        native int data,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method remote_update_tips_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(valuetype LibGit2Sharp.Core.GitOid& oldId,
                                      valuetype LibGit2Sharp.Core.GitOid& newId,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method remote_update_tips_callback::EndInvoke

  } // end of class remote_update_tips_callback

  .class auto ansi sealed nested assembly git_repository_fetchhead_foreach_cb
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method git_repository_fetchhead_foreach_cb::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(native int remote_name,
                                   native int remote_url,
                                   valuetype LibGit2Sharp.Core.GitOid& oid,
                                   bool  marshal( bool) is_merge,
                                   native int payload) runtime managed
    {
    } // end of method git_repository_fetchhead_foreach_cb::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int remote_name,
                        native int remote_url,
                        valuetype LibGit2Sharp.Core.GitOid& oid,
                        bool  marshal( bool) is_merge,
                        native int payload,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method git_repository_fetchhead_foreach_cb::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(valuetype LibGit2Sharp.Core.GitOid& oid,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method git_repository_fetchhead_foreach_cb::EndInvoke

  } // end of class git_repository_fetchhead_foreach_cb

  .class auto ansi sealed nested assembly git_repository_mergehead_foreach_cb
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method git_repository_mergehead_foreach_cb::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(valuetype LibGit2Sharp.Core.GitOid& oid,
                                   native int payload) runtime managed
    {
    } // end of method git_repository_mergehead_foreach_cb::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(valuetype LibGit2Sharp.Core.GitOid& oid,
                        native int payload,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method git_repository_mergehead_foreach_cb::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(valuetype LibGit2Sharp.Core.GitOid& oid,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method git_repository_mergehead_foreach_cb::EndInvoke

  } // end of class git_repository_mergehead_foreach_cb

  .class auto ansi sealed nested assembly git_stash_cb
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method git_stash_cb::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(native uint index,
                                   native int message,
                                   valuetype LibGit2Sharp.Core.GitOid& stash_id,
                                   native int payload) runtime managed
    {
    } // end of method git_stash_cb::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native uint index,
                        native int message,
                        valuetype LibGit2Sharp.Core.GitOid& stash_id,
                        native int payload,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method git_stash_cb::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(valuetype LibGit2Sharp.Core.GitOid& stash_id,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method git_stash_cb::EndInvoke

  } // end of class git_stash_cb

  .class auto ansi sealed nested assembly git_status_cb
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method git_status_cb::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(native int path,
                                   uint32 statusflags,
                                   native int payload) runtime managed
    {
    } // end of method git_status_cb::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int path,
                        uint32 statusflags,
                        native int payload,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method git_status_cb::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method git_status_cb::EndInvoke

  } // end of class git_status_cb

  .class auto ansi sealed nested assembly submodule_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method submodule_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(native int sm,
                                   native int name,
                                   native int payload) runtime managed
    {
    } // end of method submodule_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(native int sm,
                        native int name,
                        native int payload,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method submodule_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method submodule_callback::EndInvoke

  } // end of class submodule_callback

  .class auto ansi sealed nested assembly git_transfer_progress_callback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method git_transfer_progress_callback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(valuetype LibGit2Sharp.Core.GitTransferProgress& stats,
                                   native int payload) runtime managed
    {
    } // end of method git_transfer_progress_callback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(valuetype LibGit2Sharp.Core.GitTransferProgress& stats,
                        native int payload,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method git_transfer_progress_callback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(valuetype LibGit2Sharp.Core.GitTransferProgress& stats,
                                      class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method git_transfer_progress_callback::EndInvoke

  } // end of class git_transfer_progress_callback

  .field public static literal uint32 GIT_PATH_MAX = uint32(0x00001000)
  .field private static literal string libgit2 = "git2-7940036"
  .field private static initonly class LibGit2Sharp.Core.NativeMethods/LibraryLifetimeObject lifetimeObject
  .field private static int32 handlesCount
  .method assembly hidebysig static void 
          AddHandle() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.ConstrainedExecution.ReliabilityContractAttribute::.ctor(valuetype [mscorlib]System.Runtime.ConstrainedExecution.Consistency,
                                                                                                            valuetype [mscorlib]System.Runtime.ConstrainedExecution.Cer) = ( 01 00 03 00 00 00 02 00 00 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldsflda    int32 LibGit2Sharp.Core.NativeMethods::handlesCount
    IL_0005:  call       int32 [mscorlib]System.Threading.Interlocked::Increment(int32&)
    IL_000a:  pop
    IL_000b:  ret
  } // end of method NativeMethods::AddHandle

  .method assembly hidebysig static void 
          RemoveHandle() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.ConstrainedExecution.ReliabilityContractAttribute::.ctor(valuetype [mscorlib]System.Runtime.ConstrainedExecution.Consistency,
                                                                                                            valuetype [mscorlib]System.Runtime.ConstrainedExecution.Cer) = ( 01 00 03 00 00 00 02 00 00 00 00 00 ) 
    // Code size       20 (0x14)
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  ldsflda    int32 LibGit2Sharp.Core.NativeMethods::handlesCount
    IL_0005:  call       int32 [mscorlib]System.Threading.Interlocked::Decrement(int32&)
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_0013

    IL_000e:  call       void LibGit2Sharp.Core.NativeMethods::git_threads_shutdown()
    IL_0013:  ret
  } // end of method NativeMethods::RemoveHandle

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       131 (0x83)
    .maxstack  6
    .locals init (string V_0,
             string V_1,
             string V_2,
             object[] V_3)
    IL_0000:  call       bool LibGit2Sharp.Core.NativeMethods::IsRunningOnLinux()
    IL_0005:  brtrue.s   IL_0078

    IL_0007:  call       class [mscorlib]System.Reflection.Assembly [mscorlib]System.Reflection.Assembly::GetExecutingAssembly()
    IL_000c:  callvirt   instance string [mscorlib]System.Reflection.Assembly::get_EscapedCodeBase()
    IL_0011:  newobj     instance void [System]System.Uri::.ctor(string)
    IL_0016:  call       instance string [System]System.Uri::get_LocalPath()
    IL_001b:  stloc.0
    IL_001c:  ldstr      "NativeBinaries/"
    IL_0021:  call       string LibGit2Sharp.Core.NativeMethods::get_ProcessorArchitecture()
    IL_0026:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_002b:  stloc.1
    IL_002c:  ldloc.0
    IL_002d:  call       string [mscorlib]System.IO.Path::GetDirectoryName(string)
    IL_0032:  ldloc.1
    IL_0033:  call       string [mscorlib]System.IO.Path::Combine(string,
                                                                  string)
    IL_0038:  stloc.2
    IL_0039:  ldstr      "PATH"
    IL_003e:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0043:  ldstr      "{0}{1}{2}"
    IL_0048:  ldc.i4.3
    IL_0049:  newarr     [mscorlib]System.Object
    IL_004e:  stloc.3
    IL_004f:  ldloc.3
    IL_0050:  ldc.i4.0
    IL_0051:  ldloc.2
    IL_0052:  stelem.ref
    IL_0053:  ldloc.3
    IL_0054:  ldc.i4.1
    IL_0055:  ldsfld     char [mscorlib]System.IO.Path::PathSeparator
    IL_005a:  box        [mscorlib]System.Char
    IL_005f:  stelem.ref
    IL_0060:  ldloc.3
    IL_0061:  ldc.i4.2
    IL_0062:  ldstr      "PATH"
    IL_0067:  call       string [mscorlib]System.Environment::GetEnvironmentVariable(string)
    IL_006c:  stelem.ref
    IL_006d:  ldloc.3
    IL_006e:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0073:  call       void [mscorlib]System.Environment::SetEnvironmentVariable(string,
                                                                                   string)
    IL_0078:  newobj     instance void LibGit2Sharp.Core.NativeMethods/LibraryLifetimeObject::.ctor()
    IL_007d:  stsfld     class LibGit2Sharp.Core.NativeMethods/LibraryLifetimeObject LibGit2Sharp.Core.NativeMethods::lifetimeObject
    IL_0082:  ret
  } // end of method NativeMethods::.cctor

  .method public hidebysig specialname static 
          string  get_ProcessorArchitecture() cil managed
  {
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  call       bool LibGit2Sharp.Core.Compat.Environment::get_Is64BitProcess()
    IL_0005:  brfalse.s  IL_000d

    IL_0007:  ldstr      "amd64"
    IL_000c:  ret

    IL_000d:  ldstr      "x86"
    IL_0012:  ret
  } // end of method NativeMethods::get_ProcessorArchitecture

  .method private hidebysig static bool  IsRunningOnLinux() cil managed
  {
    // Code size       30 (0x1e)
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  call       class [mscorlib]System.OperatingSystem [mscorlib]System.Environment::get_OSVersion()
    IL_0005:  callvirt   instance valuetype [mscorlib]System.PlatformID [mscorlib]System.OperatingSystem::get_Platform()
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  ldc.i4.4
    IL_000d:  beq.s      IL_001c

    IL_000f:  ldloc.0
    IL_0010:  ldc.i4.6
    IL_0011:  beq.s      IL_001c

    IL_0013:  ldloc.0
    IL_0014:  ldc.i4     0x80
    IL_0019:  ceq
    IL_001b:  ret

    IL_001c:  ldc.i4.1
    IL_001d:  ret
  } // end of method NativeMethods::IsRunningOnLinux

  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.GitErrorSafeHandle 
          giterr_last() cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory error_class,
                               string errorString) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  giterr_set_oom() cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_blob_create_fromdisk(valuetype LibGit2Sharp.Core.GitOid& id,
                                          class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                          class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                          "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) path) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_blob_create_fromworkdir(valuetype LibGit2Sharp.Core.GitOid& id,
                                             class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                             class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                             "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) relative_path) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_blob_create_fromchunks(valuetype LibGit2Sharp.Core.GitOid& oid,
                                            class LibGit2Sharp.Core.Handles.RepositorySafeHandle repositoryPtr,
                                            class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                            "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) hintpath,
                                            class LibGit2Sharp.Core.NativeMethods/source_callback fileCallback,
                                            native int data) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          native int  git_blob_rawcontent(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle 'blob') cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int64  git_blob_rawsize(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle 'blob') cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_branch_create([out] class LibGit2Sharp.Core.Handles.ReferenceSafeHandle& ref_out,
                                   class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                   string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                   "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) branch_name,
                                   class LibGit2Sharp.Core.Handles.GitObjectSafeHandle target,
                                   bool  marshal( bool) force) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_branch_delete(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_branch_foreach(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                    valuetype LibGit2Sharp.Core.GitBranchType branch_type,
                                    class LibGit2Sharp.Core.NativeMethods/branch_foreach_callback branch_cb,
                                    native int payload) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_branch_move([out] class LibGit2Sharp.Core.Handles.ReferenceSafeHandle& ref_out,
                                 class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference,
                                 string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                 "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) new_branch_name,
                                 bool  marshal( bool) force) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_branch_remote_name(uint8[] remote_name_out,
                                        native uint buffer_size,
                                        class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                        string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                        "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) canonical_branch_name) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_branch_upstream_name(uint8[] tracking_branch_name_out,
                                          native uint buffer_size,
                                          class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                          string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                          "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) referenceName) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_checkout_tree(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                   class LibGit2Sharp.Core.Handles.GitObjectSafeHandle treeish,
                                   valuetype LibGit2Sharp.Core.GitCheckoutOpts& opts) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_checkout_index(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                    class LibGit2Sharp.Core.Handles.GitObjectSafeHandle treeish,
                                    valuetype LibGit2Sharp.Core.GitCheckoutOpts& opts) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_clone([out] class LibGit2Sharp.Core.Handles.RepositorySafeHandle& repo,
                           string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                           "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) origin_url,
                           class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                           "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) workdir_path,
                           class LibGit2Sharp.Core.GitCloneOptions opts) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          native int  git_commit_author(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle commit) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          native int  git_commit_committer(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle commit) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_commit_create_from_oids([out] valuetype LibGit2Sharp.Core.GitOid& id,
                                             class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                             string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                             "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) updateRef,
                                             class LibGit2Sharp.Core.Handles.SignatureSafeHandle author,
                                             class LibGit2Sharp.Core.Handles.SignatureSafeHandle committer,
                                             string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                             "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) encoding,
                                             string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                             "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) message,
                                             valuetype LibGit2Sharp.Core.GitOid& tree,
                                             int32 parentCount,
                                             [in] native int[]  marshal([]) parents) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          string 
          marshal( custom ("LibGit2Sharp.Core.Utf8NoCleanupMarshaler","83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 
          git_commit_message(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle commit) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          string 
          marshal( custom ("LibGit2Sharp.Core.Utf8NoCleanupMarshaler","83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 
          git_commit_message_encoding(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle commit) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.OidSafeHandle 
          git_commit_parent_id(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle commit,
                               uint32 n) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          uint32  git_commit_parentcount(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle commit) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.OidSafeHandle 
          git_commit_tree_id(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle commit) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_delete_entry(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle cfg,
                                         string name) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_find_global(uint8[] global_config_path,
                                        native uint length) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_find_system(uint8[] system_config_path,
                                        native uint length) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_find_xdg(uint8[] xdg_config_path,
                                     native uint length) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_config_free(native int cfg) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_get_entry([out] class LibGit2Sharp.Core.Handles.GitConfigEntryHandle& entry,
                                      class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle cfg,
                                      string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                      "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_add_file_ondisk(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle cfg,
                                            class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                            "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) path,
                                            uint32 level,
                                            bool force) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_new([out] class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle& cfg) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_open_level([out] class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle& cfg,
                                       class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle parent,
                                       uint32 level) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_parse_bool([out] bool&  marshal( bool) 'value',
                                       string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                       "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) valueToParse) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_parse_int32([out] int32&  marshal( int32) 'value',
                                        string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                        "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) valueToParse) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_parse_int64([out] int64&  marshal( int64) 'value',
                                        string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                        "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) valueToParse) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_set_bool(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle cfg,
                                     string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                     "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name,
                                     bool  marshal( bool) 'value') cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_set_int32(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle cfg,
                                      string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                      "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name,
                                      int32 'value') cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_set_int64(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle cfg,
                                      string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                      "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name,
                                      int64 'value') cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_set_string(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle cfg,
                                       string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                       "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name,
                                       string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                       "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 'value') cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_config_foreach(class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle cfg,
                                    class LibGit2Sharp.Core.NativeMethods/config_foreach_callback callback,
                                    native int payload) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_cred_userpass_plaintext_new([out] native int& cred,
                                                 string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                                 "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) username,
                                                 string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                                 "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) password) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_diff_list_free(native int diff) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_diff_tree_to_tree([out] class LibGit2Sharp.Core.Handles.DiffListSafeHandle& diff,
                                       class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                       class LibGit2Sharp.Core.Handles.GitObjectSafeHandle oldTree,
                                       class LibGit2Sharp.Core.Handles.GitObjectSafeHandle newTree,
                                       class LibGit2Sharp.Core.GitDiffOptions options) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_diff_tree_to_index([out] class LibGit2Sharp.Core.Handles.DiffListSafeHandle& diff,
                                        class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                        class LibGit2Sharp.Core.Handles.GitObjectSafeHandle oldTree,
                                        class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                                        class LibGit2Sharp.Core.GitDiffOptions options) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_diff_merge(class LibGit2Sharp.Core.Handles.DiffListSafeHandle onto,
                                class LibGit2Sharp.Core.Handles.DiffListSafeHandle from) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_diff_index_to_workdir([out] class LibGit2Sharp.Core.Handles.DiffListSafeHandle& diff,
                                           class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                           class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                                           class LibGit2Sharp.Core.GitDiffOptions options) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_diff_tree_to_workdir([out] class LibGit2Sharp.Core.Handles.DiffListSafeHandle& diff,
                                          class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                          class LibGit2Sharp.Core.Handles.GitObjectSafeHandle oldTree,
                                          class LibGit2Sharp.Core.GitDiffOptions options) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_diff_print_patch(class LibGit2Sharp.Core.Handles.DiffListSafeHandle diff,
                                      class LibGit2Sharp.Core.NativeMethods/git_diff_data_cb printCallback,
                                      native int payload) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_diff_blobs(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle oldBlob,
                                class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) old_as_path,
                                class LibGit2Sharp.Core.Handles.GitObjectSafeHandle newBlob,
                                class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) new_as_path,
                                class LibGit2Sharp.Core.GitDiffOptions options,
                                class LibGit2Sharp.Core.NativeMethods/git_diff_file_cb fileCallback,
                                class LibGit2Sharp.Core.NativeMethods/git_diff_hunk_cb hunkCallback,
                                class LibGit2Sharp.Core.NativeMethods/git_diff_data_cb lineCallback,
                                native int payload) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_diff_foreach(class LibGit2Sharp.Core.Handles.DiffListSafeHandle diff,
                                  class LibGit2Sharp.Core.NativeMethods/git_diff_file_cb fileCallback,
                                  class LibGit2Sharp.Core.NativeMethods/git_diff_hunk_cb hunkCallback,
                                  class LibGit2Sharp.Core.NativeMethods/git_diff_data_cb lineCallback,
                                  native int payload) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_graph_ahead_behind([out] native uint& ahead,
                                        [out] native uint& behind,
                                        class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                        valuetype LibGit2Sharp.Core.GitOid& one,
                                        valuetype LibGit2Sharp.Core.GitOid& two) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_ignore_add_rule(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                     string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                     "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) rules) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_ignore_clear_internal_rules(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_ignore_path_is_ignored([out] int32& ignored,
                                            class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                            class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                            "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) path) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_index_add_bypath(class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                                      class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                      "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) path) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_index_add(class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                               class LibGit2Sharp.Core.GitIndexEntry entry) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_index_conflict_get([out] class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle& ancestor,
                                        [out] class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle& ours,
                                        [out] class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle& theirs,
                                        class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                                        class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                        "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) path) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          native uint  git_index_entrycount(class LibGit2Sharp.Core.Handles.IndexSafeHandle index) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_index_entry_stage(class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle indexentry) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_index_find([out] native uint& pos,
                                class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                                class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) path) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_index_free(native int index) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle 
          git_index_get_byindex(class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                                native uint n) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle 
          git_index_get_bypath(class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                               class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                               "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) path,
                               int32 stage) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_index_has_conflicts(class LibGit2Sharp.Core.Handles.IndexSafeHandle index) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_index_open([out] class LibGit2Sharp.Core.Handles.IndexSafeHandle& index,
                                class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) indexpath) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_index_remove_bypath(class LibGit2Sharp.Core.Handles.IndexSafeHandle index,
                                         class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                         "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) path) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_index_write(class LibGit2Sharp.Core.Handles.IndexSafeHandle index) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_index_write_tree([out] valuetype LibGit2Sharp.Core.GitOid& treeOid,
                                      class LibGit2Sharp.Core.Handles.IndexSafeHandle index) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_merge_base([out] valuetype LibGit2Sharp.Core.GitOid& mergeBase,
                                class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                class LibGit2Sharp.Core.Handles.GitObjectSafeHandle one,
                                class LibGit2Sharp.Core.Handles.GitObjectSafeHandle two) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_message_prettify(uint8[] message_out,
                                      native uint buffer_size,
                                      string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                      "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) message,
                                      bool strip_comments) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_note_create([out] valuetype LibGit2Sharp.Core.GitOid& noteOid,
                                 class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                 class LibGit2Sharp.Core.Handles.SignatureSafeHandle author,
                                 class LibGit2Sharp.Core.Handles.SignatureSafeHandle committer,
                                 string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                 "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) notes_ref,
                                 valuetype LibGit2Sharp.Core.GitOid& oid,
                                 string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                 "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) note,
                                 int32 force) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_note_free(native int note) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          string 
          marshal( custom ("LibGit2Sharp.Core.Utf8NoCleanupMarshaler","83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 
          git_note_message(class LibGit2Sharp.Core.Handles.NoteSafeHandle note) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.OidSafeHandle 
          git_note_oid(class LibGit2Sharp.Core.Handles.NoteSafeHandle note) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_note_read([out] class LibGit2Sharp.Core.Handles.NoteSafeHandle& note,
                               class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                               string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                               "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) notes_ref,
                               valuetype LibGit2Sharp.Core.GitOid& oid) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_note_remove(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                 string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                 "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) notes_ref,
                                 class LibGit2Sharp.Core.Handles.SignatureSafeHandle author,
                                 class LibGit2Sharp.Core.Handles.SignatureSafeHandle committer,
                                 valuetype LibGit2Sharp.Core.GitOid& oid) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_note_default_ref([out] string&  marshal( custom ("LibGit2Sharp.Core.Utf8NoCleanupMarshaler",
                                      "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) notes_ref,
                                      class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_note_foreach(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                  string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                  "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) notes_ref,
                                  class LibGit2Sharp.Core.NativeMethods/git_note_foreach_cb cb,
                                  native int payload) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_odb_add_backend(class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle odb,
                                     native int backend,
                                     int32 priority) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          native int  git_odb_backend_malloc(native int backend,
                                             native uint len) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_odb_exists(class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle odb,
                                valuetype LibGit2Sharp.Core.GitOid& id) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_odb_free(native int odb) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_object_free(native int obj) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.OidSafeHandle 
          git_object_id(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_object_lookup([out] class LibGit2Sharp.Core.Handles.GitObjectSafeHandle& obj,
                                   class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                   valuetype LibGit2Sharp.Core.GitOid& id,
                                   valuetype LibGit2Sharp.Core.GitObjectType 'type') cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_object_peel([out] class LibGit2Sharp.Core.Handles.GitObjectSafeHandle& peeled,
                                 class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj,
                                 valuetype LibGit2Sharp.Core.GitObjectType 'type') cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          valuetype LibGit2Sharp.Core.GitObjectType 
          git_object_type(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_push_new([out] class LibGit2Sharp.Core.Handles.PushSafeHandle& push,
                              class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_push_add_refspec(class LibGit2Sharp.Core.Handles.PushSafeHandle push,
                                      string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                      "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) pushRefSpec) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_push_finish(class LibGit2Sharp.Core.Handles.PushSafeHandle push) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_push_free(native int push) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_push_status_foreach(class LibGit2Sharp.Core.Handles.PushSafeHandle push,
                                         class LibGit2Sharp.Core.NativeMethods/push_status_foreach_cb status_cb,
                                         native int data) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_push_unpack_ok(class LibGit2Sharp.Core.Handles.PushSafeHandle push) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_push_update_tips(class LibGit2Sharp.Core.Handles.PushSafeHandle push) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_reference_create([out] class LibGit2Sharp.Core.Handles.ReferenceSafeHandle& reference,
                                      class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                      string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                      "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name,
                                      valuetype LibGit2Sharp.Core.GitOid& oid,
                                      bool  marshal( bool) force) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_reference_symbolic_create([out] class LibGit2Sharp.Core.Handles.ReferenceSafeHandle& reference,
                                               class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                               string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                               "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name,
                                               string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                               "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) target,
                                               bool  marshal( bool) force) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_reference_delete(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_reference_foreach_glob(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                            string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                            "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) glob,
                                            class LibGit2Sharp.Core.NativeMethods/ref_glob_callback callback,
                                            native int payload) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_reference_free(native int reference) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_reference_is_valid_name(string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                             "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) refname) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_reference_lookup([out] class LibGit2Sharp.Core.Handles.ReferenceSafeHandle& reference,
                                      class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                      string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                      "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          string 
          marshal( custom ("LibGit2Sharp.Core.Utf8NoCleanupMarshaler","83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 
          git_reference_name(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.OidSafeHandle 
          git_reference_target(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_reference_rename([out] class LibGit2Sharp.Core.Handles.ReferenceSafeHandle& ref_out,
                                      class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference,
                                      string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                      "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) newName,
                                      bool  marshal( bool) force) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_reference_resolve([out] class LibGit2Sharp.Core.Handles.ReferenceSafeHandle& resolvedReference,
                                       class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_reference_set_target([out] class LibGit2Sharp.Core.Handles.ReferenceSafeHandle& ref_out,
                                          class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference,
                                          valuetype LibGit2Sharp.Core.GitOid& id) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_reference_symbolic_set_target([out] class LibGit2Sharp.Core.Handles.ReferenceSafeHandle& ref_out,
                                                   class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference,
                                                   string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                                   "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) target) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          string 
          marshal( custom ("LibGit2Sharp.Core.Utf8NoCleanupMarshaler","83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 
          git_reference_symbolic_target(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          valuetype LibGit2Sharp.Core.GitReferenceType 
          git_reference_type(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_reflog_free(native int reflog) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_reflog_read([out] class LibGit2Sharp.Core.Handles.ReflogSafeHandle& ref_out,
                                 class LibGit2Sharp.Core.Handles.ReferenceSafeHandle reference) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          native uint  git_reflog_entrycount(class LibGit2Sharp.Core.Handles.ReflogSafeHandle reflog) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.ReflogEntrySafeHandle 
          git_reflog_entry_byindex(class LibGit2Sharp.Core.Handles.ReflogSafeHandle reflog,
                                   native uint idx) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.OidSafeHandle 
          git_reflog_entry_id_old(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.OidSafeHandle 
          git_reflog_entry_id_new(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          native int  git_reflog_entry_committer(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_reflog_append(class LibGit2Sharp.Core.Handles.ReflogSafeHandle reflog,
                                   valuetype LibGit2Sharp.Core.GitOid& id,
                                   class LibGit2Sharp.Core.Handles.SignatureSafeHandle committer,
                                   string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                   "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) msg) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_reflog_write(class LibGit2Sharp.Core.Handles.ReflogSafeHandle reflog) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          string 
          marshal( custom ("LibGit2Sharp.Core.Utf8NoCleanupMarshaler","83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 
          git_reflog_entry_message(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_refspec_rtransform(uint8[] target,
                                        native uint outlen,
                                        class LibGit2Sharp.Core.Handles.GitRefSpecHandle refSpec,
                                        string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                        "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_remote_autotag(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_remote_connect(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                                    valuetype LibGit2Sharp.Core.GitDirection direction) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_remote_create([out] class LibGit2Sharp.Core.Handles.RemoteSafeHandle& remote,
                                   class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                   string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                   "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name,
                                   string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                   "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) url) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_remote_disconnect(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_remote_download(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                                     class LibGit2Sharp.Core.NativeMethods/git_transfer_progress_callback progress_cb,
                                     native int payload) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_remote_free(native int remote) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.GitRefSpecHandle 
          git_remote_get_refspec(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                                 native uint n) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_remote_is_valid_name(string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                          "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) remote_name) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_remote_load([out] class LibGit2Sharp.Core.Handles.RemoteSafeHandle& remote,
                                 class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                 string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                 "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_remote_ls(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                               class LibGit2Sharp.Core.NativeMethods/git_headlist_cb headlist_cb,
                               native int payload) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          string 
          marshal( custom ("LibGit2Sharp.Core.Utf8NoCleanupMarshaler","83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 
          git_remote_name(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_remote_save(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_remote_set_cred_acquire_cb(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                                               class LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb cred_acquire_cb,
                                               native int payload) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          string 
          marshal( custom ("LibGit2Sharp.Core.Utf8NoCleanupMarshaler","83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 
          git_remote_url(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_remote_set_autotag(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                                       valuetype LibGit2Sharp.TagFetchMode option) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_remote_set_callbacks(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                                          valuetype LibGit2Sharp.Core.GitRemoteCallbacks& callbacks) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_remote_add_fetch(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote,
                                      string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                      "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) refspec) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_remote_update_tips(class LibGit2Sharp.Core.Handles.RemoteSafeHandle remote) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_discover(uint8[] repository_path,
                                         native uint size,
                                         class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                         "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) start_path,
                                         bool  marshal( bool) across_fs,
                                         class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                         "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) ceiling_dirs) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_fetchhead_foreach(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                  class LibGit2Sharp.Core.NativeMethods/git_repository_fetchhead_foreach_cb cb,
                                                  native int payload) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_repository_free(native int repo) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_head_detached(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_head_orphan(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_index([out] class LibGit2Sharp.Core.Handles.IndexSafeHandle& index,
                                      class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_init_ext([out] class LibGit2Sharp.Core.Handles.RepositorySafeHandle& repository,
                                         class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                         "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) path,
                                         class LibGit2Sharp.Core.GitRepositoryInitOptions options) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_is_bare(class LibGit2Sharp.Core.Handles.RepositorySafeHandle handle) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_is_empty(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_is_shallow(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_merge_cleanup(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_mergehead_foreach(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                                  class LibGit2Sharp.Core.NativeMethods/git_repository_mergehead_foreach_cb cb,
                                                  native int payload) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_message(uint8[] message_out,
                                        native uint buffer_size,
                                        class LibGit2Sharp.Core.Handles.RepositorySafeHandle repository) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_odb([out] class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle& odb,
                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_open([out] class LibGit2Sharp.Core.Handles.RepositorySafeHandle& repository,
                                     class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                     "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) path) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_open_ext(class LibGit2Sharp.Core.Handles.NullRepositorySafeHandle repository,
                                         class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                         "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) path,
                                         valuetype LibGit2Sharp.Core.RepositoryOpenFlags 'flags',
                                         class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                         "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) ceilingDirs) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.FilePath 
          marshal( custom ("LibGit2Sharp.Core.FilePathNoCleanupMarshaler","83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 
          git_repository_path(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repository) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_repository_set_config(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repository,
                                          class LibGit2Sharp.Core.Handles.ConfigurationSafeHandle config) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_repository_set_index(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repository,
                                         class LibGit2Sharp.Core.Handles.IndexSafeHandle index) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_set_workdir(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repository,
                                            class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                            "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) workdir,
                                            bool update_gitlink) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_repository_state(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repository) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.FilePath 
          marshal( custom ("LibGit2Sharp.Core.FilePathNoCleanupMarshaler","83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 
          git_repository_workdir(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repository) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_reset(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                           class LibGit2Sharp.Core.Handles.GitObjectSafeHandle target,
                           valuetype LibGit2Sharp.ResetOptions reset_type) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_revparse_ext([out] class LibGit2Sharp.Core.Handles.GitObjectSafeHandle& obj,
                                  [out] class LibGit2Sharp.Core.Handles.ReferenceSafeHandle& reference,
                                  class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                  string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                  "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) spec) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_revwalk_free(native int walker) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_revwalk_hide(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle walker,
                                  valuetype LibGit2Sharp.Core.GitOid& commit_id) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_revwalk_new([out] class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle& walker,
                                 class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_revwalk_next([out] valuetype LibGit2Sharp.Core.GitOid& id,
                                  class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle walker) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_revwalk_push(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle walker,
                                  valuetype LibGit2Sharp.Core.GitOid& id) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_revwalk_reset(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle walker) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_revwalk_sorting(class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle walk,
                                    valuetype LibGit2Sharp.CommitSortStrategies sort) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_signature_free(native int signature) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_signature_new([out] class LibGit2Sharp.Core.Handles.SignatureSafeHandle& signature,
                                   string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                   "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name,
                                   string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                   "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) email,
                                   int64 time,
                                   int32 offset) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_stash_save([out] valuetype LibGit2Sharp.Core.GitOid& id,
                                class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                class LibGit2Sharp.Core.Handles.SignatureSafeHandle stasher,
                                string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) message,
                                valuetype LibGit2Sharp.StashModifiers 'flags') cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_stash_foreach(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                   class LibGit2Sharp.Core.NativeMethods/git_stash_cb callback,
                                   native int payload) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_stash_drop(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                native uint index) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_status_file([out] valuetype LibGit2Sharp.FileStatus& statusflags,
                                 class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                 class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                 "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) filepath) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_status_foreach(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                    class LibGit2Sharp.Core.NativeMethods/git_status_cb cb,
                                    native int payload) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_submodule_lookup([out] class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle& reference,
                                      class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                      string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                      "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_submodule_foreach(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                       class LibGit2Sharp.Core.NativeMethods/submodule_callback callback,
                                       native int payload) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_submodule_add_to_index(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule,
                                            bool write_index) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_submodule_save(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          string 
          marshal( custom ("LibGit2Sharp.Core.Utf8NoCleanupMarshaler","83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 
          git_submodule_path(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          string 
          marshal( custom ("LibGit2Sharp.Core.Utf8NoCleanupMarshaler","83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 
          git_submodule_url(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.OidSafeHandle 
          git_submodule_index_id(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.OidSafeHandle 
          git_submodule_head_id(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.OidSafeHandle 
          git_submodule_wd_id(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          valuetype LibGit2Sharp.SubmoduleIgnore 
          git_submodule_ignore(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          valuetype LibGit2Sharp.SubmoduleUpdate 
          git_submodule_update(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          bool  git_submodule_fetch_recurse_submodules(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_submodule_reload(class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_submodule_status([out] valuetype LibGit2Sharp.SubmoduleStatus& status,
                                      class LibGit2Sharp.Core.Handles.SubmoduleSafeHandle submodule) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_tag_annotation_create([out] valuetype LibGit2Sharp.Core.GitOid& oid,
                                           class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                           string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                           "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name,
                                           class LibGit2Sharp.Core.Handles.GitObjectSafeHandle target,
                                           class LibGit2Sharp.Core.Handles.SignatureSafeHandle signature,
                                           string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                           "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) message) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_tag_create([out] valuetype LibGit2Sharp.Core.GitOid& oid,
                                class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name,
                                class LibGit2Sharp.Core.Handles.GitObjectSafeHandle target,
                                class LibGit2Sharp.Core.Handles.SignatureSafeHandle signature,
                                string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) message,
                                bool  marshal( bool) force) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_tag_create_lightweight([out] valuetype LibGit2Sharp.Core.GitOid& oid,
                                            class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                            string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                            "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) name,
                                            class LibGit2Sharp.Core.Handles.GitObjectSafeHandle target,
                                            bool  marshal( bool) force) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_tag_delete(class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) tagName) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          string 
          marshal( custom ("LibGit2Sharp.Core.Utf8NoCleanupMarshaler","83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 
          git_tag_message(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle tag) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          string 
          marshal( custom ("LibGit2Sharp.Core.Utf8NoCleanupMarshaler","83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 
          git_tag_name(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle tag) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          native int  git_tag_tagger(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle tag) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.OidSafeHandle 
          git_tag_target_id(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle tag) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          valuetype LibGit2Sharp.Core.GitObjectType 
          git_tag_target_type(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle tag) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_threads_init() cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_threads_shutdown() cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          uint32  git_tree_entry_filemode(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle 
          git_tree_entry_byindex(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle tree,
                                 native uint idx) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_tree_entry_bypath([out] class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle_Owned& tree,
                                       class LibGit2Sharp.Core.Handles.GitObjectSafeHandle root,
                                       class LibGit2Sharp.Core.FilePath  marshal( custom ("LibGit2Sharp.Core.FilePathMarshaler",
                                       "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) treeentry_path) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_tree_entry_free(native int treeEntry) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          class LibGit2Sharp.Core.Handles.OidSafeHandle 
          git_tree_entry_id(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          string 
          marshal( custom ("LibGit2Sharp.Core.Utf8NoCleanupMarshaler","83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) 
          git_tree_entry_name(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          valuetype LibGit2Sharp.Core.GitObjectType 
          git_tree_entry_type(class [mscorlib]System.Runtime.InteropServices.SafeHandle entry) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          native uint  git_tree_entrycount(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle tree) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_treebuilder_create([out] class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle& builder,
                                        native int src) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_treebuilder_insert(native int entry_out,
                                        class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle builder,
                                        string  marshal( custom ("LibGit2Sharp.Core.Utf8Marshaler",
                                        "83959e5d-2d2c-429f-ac8f-ee3622cb38a0")) treeentry_name,
                                        valuetype LibGit2Sharp.Core.GitOid& id,
                                        uint32 attributes) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_treebuilder_write([out] valuetype LibGit2Sharp.Core.GitOid& id,
                                       class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                                       class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle bld) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_treebuilder_free(native int bld) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_blob_is_binary(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle 'blob') cil managed preservesig
  {
  }
  .property string ProcessorArchitecture()
  {
    .get string LibGit2Sharp.Core.NativeMethods::get_ProcessorArchitecture()
  } // end of property NativeMethods::ProcessorArchitecture
} // end of class LibGit2Sharp.Core.NativeMethods

.class private abstract auto ansi sealed beforefieldinit LibGit2Sharp.Core.Handles.SafeHandleExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static void  SafeDispose(class [mscorlib]System.IDisposable disposable) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       28 (0x1c)
    .maxstack  1
    .locals init (class LibGit2Sharp.Core.Handles.SafeHandleBase V_0)
    IL_0000:  ldarg.0
    IL_0001:  brtrue.s   IL_0004

    IL_0003:  ret

    IL_0004:  ldarg.0
    IL_0005:  isinst     LibGit2Sharp.Core.Handles.SafeHandleBase
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brfalse.s  IL_0015

    IL_000e:  ldloc.0
    IL_000f:  call       void LibGit2Sharp.Core.Handles.SafeHandleExtensions::SafeDispose(class LibGit2Sharp.Core.Handles.SafeHandleBase)
    IL_0014:  ret

    IL_0015:  ldarg.0
    IL_0016:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
    IL_001b:  ret
  } // end of method SafeHandleExtensions::SafeDispose

  .method public hidebysig static void  SafeDispose(class LibGit2Sharp.Core.Handles.SafeHandleBase handle) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       27 (0x1b)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  brfalse.s  IL_0013

    IL_0003:  ldarg.0
    IL_0004:  callvirt   instance bool [mscorlib]System.Runtime.InteropServices.SafeHandle::get_IsClosed()
    IL_0009:  brtrue.s   IL_0013

    IL_000b:  ldarg.0
    IL_000c:  callvirt   instance bool [mscorlib]System.Runtime.InteropServices.SafeHandle::get_IsInvalid()
    IL_0011:  brfalse.s  IL_0014

    IL_0013:  ret

    IL_0014:  ldarg.0
    IL_0015:  callvirt   instance void [mscorlib]System.Runtime.InteropServices.SafeHandle::Dispose()
    IL_001a:  ret
  } // end of method SafeHandleExtensions::SafeDispose

} // end of class LibGit2Sharp.Core.Handles.SafeHandleExtensions

.class private auto ansi beforefieldinit LibGit2Sharp.Core.ObjectSafeWrapper
       extends [mscorlib]System.Object
       implements [mscorlib]System.IDisposable
{
  .field private initonly class LibGit2Sharp.Core.Handles.GitObjectSafeHandle objectPtr
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.ObjectId id,
                               class LibGit2Sharp.Core.Handles.RepositorySafeHandle handle,
                               [opt] bool allowNullObjectId) cil managed
  {
    .param [3] = bool(false)
    // Code size       68 (0x44)
    .maxstack  4
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.2
    IL_0007:  ldstr      "handle"
    IL_000c:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0011:  ldarg.3
    IL_0012:  brfalse.s  IL_0029

    IL_0014:  ldarg.1
    IL_0015:  ldnull
    IL_0016:  call       bool LibGit2Sharp.ObjectId::op_Equality(class LibGit2Sharp.ObjectId,
                                                                 class LibGit2Sharp.ObjectId)
    IL_001b:  brfalse.s  IL_0029

    IL_001d:  ldarg.0
    IL_001e:  newobj     instance void LibGit2Sharp.Core.Handles.NullGitObjectSafeHandle::.ctor()
    IL_0023:  stfld      class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::objectPtr
    IL_0028:  ret

    IL_0029:  ldarg.1
    IL_002a:  ldstr      "id"
    IL_002f:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0034:  ldarg.0
    IL_0035:  ldarg.2
    IL_0036:  ldarg.1
    IL_0037:  ldc.i4.s   -2
    IL_0039:  call       class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.Proxy::git_object_lookup(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                        class LibGit2Sharp.ObjectId,
                                                                                                                        valuetype LibGit2Sharp.Core.GitObjectType)
    IL_003e:  stfld      class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::objectPtr
    IL_0043:  ret
  } // end of method ObjectSafeWrapper::.ctor

  .method public hidebysig specialname instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle 
          get_ObjectPtr() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::objectPtr
    IL_0006:  ret
  } // end of method ObjectSafeWrapper::get_ObjectPtr

  .method public hidebysig newslot virtual final 
          instance void  Dispose() cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.1
    IL_0002:  call       instance void LibGit2Sharp.Core.ObjectSafeWrapper::Dispose(bool)
    IL_0007:  ldarg.0
    IL_0008:  call       void [mscorlib]System.GC::SuppressFinalize(object)
    IL_000d:  ret
  } // end of method ObjectSafeWrapper::Dispose

  .method private hidebysig instance void 
          Dispose(bool disposing) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::objectPtr
    IL_0006:  call       void LibGit2Sharp.Core.Handles.SafeHandleExtensions::SafeDispose(class LibGit2Sharp.Core.Handles.SafeHandleBase)
    IL_000b:  ret
  } // end of method ObjectSafeWrapper::Dispose

  .property instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle
          ObjectPtr()
  {
    .get instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
  } // end of property ObjectSafeWrapper::ObjectPtr
} // end of class LibGit2Sharp.Core.ObjectSafeWrapper

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.RemoteSafeHandle
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_remote_free(native int)
    IL_000b:  ldc.i4.1
    IL_000c:  ret
  } // end of method RemoteSafeHandle::ReleaseHandleImpl

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method RemoteSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.RemoteSafeHandle

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.RevWalkerSafeHandle
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_revwalk_free(native int)
    IL_000b:  ldc.i4.1
    IL_000c:  ret
  } // end of method RevWalkerSafeHandle::ReleaseHandleImpl

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method RevWalkerSafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.RevWalkerSafeHandle

.class private abstract auto ansi sealed beforefieldinit LibGit2Sharp.Core.UnSafeNativeMethods
       extends [mscorlib]System.Object
{
  .class sequential ansi sealed nested assembly beforefieldinit git_strarray
         extends [mscorlib]System.ValueType
  {
    .field public int8** strings
    .field public native uint size
  } // end of class git_strarray

  .field private static literal string libgit2 = "git2-7940036"
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_reference_list([out] valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray& 'array',
                                    class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_remote_list([out] valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray& 'array',
                                 class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          int32  git_tag_list([out] valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray& 'array',
                              class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo) cil managed preservesig
  {
  }
  .method assembly hidebysig static pinvokeimpl("git2-7940036" winapi) 
          void  git_strarray_free(valuetype LibGit2Sharp.Core.UnSafeNativeMethods/git_strarray& 'array') cil managed preservesig
  {
  }
} // end of class LibGit2Sharp.Core.UnSafeNativeMethods

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Utf8Marshaler
       extends [mscorlib]System.Object
       implements [mscorlib]System.Runtime.InteropServices.ICustomMarshaler
{
  .field private static initonly class LibGit2Sharp.Core.Utf8Marshaler staticInstance
  .method public hidebysig static class [mscorlib]System.Runtime.InteropServices.ICustomMarshaler 
          GetInstance(string cookie) cil managed
  {
    // Code size       6 (0x6)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.Utf8Marshaler LibGit2Sharp.Core.Utf8Marshaler::staticInstance
    IL_0005:  ret
  } // end of method Utf8Marshaler::GetInstance

  .method public hidebysig newslot virtual final 
          instance void  CleanUpManagedData(object managedObj) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method Utf8Marshaler::CleanUpManagedData

  .method public hidebysig newslot virtual 
          instance void  CleanUpNativeData(native int pNativeData) cil managed
  {
    // Code size       20 (0x14)
    .maxstack  8
    IL_0000:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0005:  ldarg.1
    IL_0006:  call       bool [mscorlib]System.IntPtr::op_Inequality(native int,
                                                                     native int)
    IL_000b:  brfalse.s  IL_0013

    IL_000d:  ldarg.1
    IL_000e:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::FreeHGlobal(native int)
    IL_0013:  ret
  } // end of method Utf8Marshaler::CleanUpNativeData

  .method public hidebysig newslot virtual final 
          instance int32  GetNativeDataSize() cil managed
  {
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  ldc.i4.m1
    IL_0001:  ret
  } // end of method Utf8Marshaler::GetNativeDataSize

  .method public hidebysig newslot virtual final 
          instance native int  MarshalManagedToNative(object managedObj) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  2
    .locals init (string V_0)
    IL_0000:  ldarg.1
    IL_0001:  brtrue.s   IL_0009

    IL_0003:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0008:  ret

    IL_0009:  ldarg.1
    IL_000a:  isinst     [mscorlib]System.String
    IL_000f:  stloc.0
    IL_0010:  ldloc.0
    IL_0011:  brtrue.s   IL_001e

    IL_0013:  ldstr      "Utf8Marshaler must be used on a string."
    IL_0018:  newobj     instance void [mscorlib]System.Runtime.InteropServices.MarshalDirectiveException::.ctor(string)
    IL_001d:  throw

    IL_001e:  ldloc.0
    IL_001f:  call       native int LibGit2Sharp.Core.Utf8Marshaler::FromManaged(string)
    IL_0024:  ret
  } // end of method Utf8Marshaler::MarshalManagedToNative

  .method public hidebysig newslot virtual final 
          instance object  MarshalNativeToManaged(native int pNativeData) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
    IL_0006:  ret
  } // end of method Utf8Marshaler::MarshalNativeToManaged

  .method public hidebysig static native int 
          FromManaged(string 'value') cil managed
  {
    // Code size       93 (0x5d)
    .maxstack  5
    .locals init (int32 V_0,
             uint8* V_1,
             char* V_2,
             native int V_3,
             string pinned V_4)
    IL_0000:  ldarg.0
    IL_0001:  brtrue.s   IL_0009

    IL_0003:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0008:  ret

    IL_0009:  call       class [mscorlib]System.Text.Encoding [mscorlib]System.Text.Encoding::get_UTF8()
    IL_000e:  ldarg.0
    IL_000f:  callvirt   instance int32 [mscorlib]System.Text.Encoding::GetByteCount(string)
    IL_0014:  stloc.0
    IL_0015:  ldloc.0
    IL_0016:  ldc.i4.1
    IL_0017:  add
    IL_0018:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::AllocHGlobal(int32)
    IL_001d:  stloc.3
    IL_001e:  ldloca.s   V_3
    IL_0020:  call       instance void* [mscorlib]System.IntPtr::ToPointer()
    IL_0025:  stloc.1
    IL_0026:  ldloc.0
    IL_0027:  ldc.i4.0
    IL_0028:  ble.s      IL_0051

    IL_002a:  ldarg.0
    IL_002b:  stloc.s    V_4
    IL_002d:  ldloc.s    V_4
    IL_002f:  conv.i
    IL_0030:  dup
    IL_0031:  brfalse.s  IL_0039

    IL_0033:  call       int32 [mscorlib]System.Runtime.CompilerServices.RuntimeHelpers::get_OffsetToStringData()
    IL_0038:  add
    IL_0039:  stloc.2
    IL_003a:  call       class [mscorlib]System.Text.Encoding [mscorlib]System.Text.Encoding::get_UTF8()
    IL_003f:  ldloc.2
    IL_0040:  ldarg.0
    IL_0041:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0046:  ldloc.1
    IL_0047:  ldloc.0
    IL_0048:  callvirt   instance int32 [mscorlib]System.Text.Encoding::GetBytes(char*,
                                                                                 int32,
                                                                                 uint8*,
                                                                                 int32)
    IL_004d:  pop
    IL_004e:  ldnull
    IL_004f:  stloc.s    V_4
    IL_0051:  ldloc.1
    IL_0052:  ldloc.0
    IL_0053:  add
    IL_0054:  ldc.i4.0
    IL_0055:  stind.i1
    IL_0056:  ldloc.1
    IL_0057:  newobj     instance void [mscorlib]System.IntPtr::.ctor(void*)
    IL_005c:  ret
  } // end of method Utf8Marshaler::FromManaged

  .method public hidebysig static string 
          FromNative(native int pNativeData) cil managed
  {
    // Code size       71 (0x47)
    .maxstack  5
    .locals init (uint8* V_0,
             uint8* V_1)
    IL_0000:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0005:  ldarg.0
    IL_0006:  call       bool [mscorlib]System.IntPtr::op_Equality(native int,
                                                                   native int)
    IL_000b:  brfalse.s  IL_000f

    IL_000d:  ldnull
    IL_000e:  ret

    IL_000f:  ldarg.0
    IL_0010:  call       void* [mscorlib]System.IntPtr::op_Explicit(native int)
    IL_0015:  stloc.0
    IL_0016:  ldloc.0
    IL_0017:  stloc.1
    IL_0018:  br.s       IL_001f

    IL_001a:  ldloc.1
    IL_001b:  ldc.i4.1
    IL_001c:  conv.i
    IL_001d:  add
    IL_001e:  stloc.1
    IL_001f:  ldloc.1
    IL_0020:  ldind.u1
    IL_0021:  brtrue.s   IL_001a

    IL_0023:  ldloc.1
    IL_0024:  ldloc.0
    IL_0025:  bne.un.s   IL_002d

    IL_0027:  ldsfld     string [mscorlib]System.String::Empty
    IL_002c:  ret

    IL_002d:  ldarga.s   pNativeData
    IL_002f:  call       instance void* [mscorlib]System.IntPtr::ToPointer()
    IL_0034:  ldc.i4.0
    IL_0035:  ldloc.1
    IL_0036:  ldloc.0
    IL_0037:  sub
    IL_0038:  ldc.i4.1
    IL_0039:  div
    IL_003a:  conv.i8
    IL_003b:  conv.i4
    IL_003c:  call       class [mscorlib]System.Text.Encoding [mscorlib]System.Text.Encoding::get_UTF8()
    IL_0041:  newobj     instance void [mscorlib]System.String::.ctor(int8*,
                                                                      int32,
                                                                      int32,
                                                                      class [mscorlib]System.Text.Encoding)
    IL_0046:  ret
  } // end of method Utf8Marshaler::FromNative

  .method public hidebysig static string 
          FromNative(native int pNativeData,
                     int32 length) cil managed
  {
    // Code size       44 (0x2c)
    .maxstack  8
    IL_0000:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0005:  ldarg.0
    IL_0006:  call       bool [mscorlib]System.IntPtr::op_Equality(native int,
                                                                   native int)
    IL_000b:  brfalse.s  IL_000f

    IL_000d:  ldnull
    IL_000e:  ret

    IL_000f:  ldarg.1
    IL_0010:  brtrue.s   IL_0018

    IL_0012:  ldsfld     string [mscorlib]System.String::Empty
    IL_0017:  ret

    IL_0018:  ldarga.s   pNativeData
    IL_001a:  call       instance void* [mscorlib]System.IntPtr::ToPointer()
    IL_001f:  ldc.i4.0
    IL_0020:  ldarg.1
    IL_0021:  call       class [mscorlib]System.Text.Encoding [mscorlib]System.Text.Encoding::get_UTF8()
    IL_0026:  newobj     instance void [mscorlib]System.String::.ctor(int8*,
                                                                      int32,
                                                                      int32,
                                                                      class [mscorlib]System.Text.Encoding)
    IL_002b:  ret
  } // end of method Utf8Marshaler::FromNative

  .method public hidebysig static string 
          Utf8FromBuffer(uint8[] buffer) cil managed
  {
    // Code size       49 (0x31)
    .maxstack  4
    .locals init (int32 V_0,
             int32 V_1)
    IL_0000:  ldarg.0
    IL_0001:  brtrue.s   IL_0005

    IL_0003:  ldnull
    IL_0004:  ret

    IL_0005:  ldc.i4.0
    IL_0006:  stloc.0
    IL_0007:  ldarg.0
    IL_0008:  ldlen
    IL_0009:  conv.i4
    IL_000a:  stloc.1
    IL_000b:  br.s       IL_0011

    IL_000d:  ldloc.0
    IL_000e:  ldc.i4.1
    IL_000f:  add
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldloc.1
    IL_0013:  bge.s      IL_001a

    IL_0015:  ldarg.0
    IL_0016:  ldloc.0
    IL_0017:  ldelem.u1
    IL_0018:  brtrue.s   IL_000d

    IL_001a:  ldloc.0
    IL_001b:  brtrue.s   IL_0023

    IL_001d:  ldsfld     string [mscorlib]System.String::Empty
    IL_0022:  ret

    IL_0023:  call       class [mscorlib]System.Text.Encoding [mscorlib]System.Text.Encoding::get_UTF8()
    IL_0028:  ldarg.0
    IL_0029:  ldc.i4.0
    IL_002a:  ldloc.0
    IL_002b:  callvirt   instance string [mscorlib]System.Text.Encoding::GetString(uint8[],
                                                                                   int32,
                                                                                   int32)
    IL_0030:  ret
  } // end of method Utf8Marshaler::Utf8FromBuffer

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method Utf8Marshaler::.ctor

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  newobj     instance void LibGit2Sharp.Core.Utf8Marshaler::.ctor()
    IL_0005:  stsfld     class LibGit2Sharp.Core.Utf8Marshaler LibGit2Sharp.Core.Utf8Marshaler::staticInstance
    IL_000a:  ret
  } // end of method Utf8Marshaler::.cctor

} // end of class LibGit2Sharp.Core.Utf8Marshaler

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Utf8NoCleanupMarshaler
       extends LibGit2Sharp.Core.Utf8Marshaler
{
  .field private static initonly class LibGit2Sharp.Core.Utf8NoCleanupMarshaler staticInstance
  .method public hidebysig static class [mscorlib]System.Runtime.InteropServices.ICustomMarshaler 
          GetInstance(string cookie) cil managed
  {
    // Code size       6 (0x6)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.Utf8NoCleanupMarshaler LibGit2Sharp.Core.Utf8NoCleanupMarshaler::staticInstance
    IL_0005:  ret
  } // end of method Utf8NoCleanupMarshaler::GetInstance

  .method public hidebysig virtual instance void 
          CleanUpNativeData(native int pNativeData) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method Utf8NoCleanupMarshaler::CleanUpNativeData

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Utf8Marshaler::.ctor()
    IL_0006:  ret
  } // end of method Utf8NoCleanupMarshaler::.ctor

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  newobj     instance void LibGit2Sharp.Core.Utf8NoCleanupMarshaler::.ctor()
    IL_0005:  stsfld     class LibGit2Sharp.Core.Utf8NoCleanupMarshaler LibGit2Sharp.Core.Utf8NoCleanupMarshaler::staticInstance
    IL_000a:  ret
  } // end of method Utf8NoCleanupMarshaler::.cctor

} // end of class LibGit2Sharp.Core.Utf8NoCleanupMarshaler

.class public abstract auto ansi beforefieldinit LibGit2Sharp.Reference
       extends [mscorlib]System.Object
       implements class [mscorlib]System.IEquatable`1<class LibGit2Sharp.Reference>
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field private static initonly class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Reference> equalityHelper
  .field private initonly string canonicalName
  .field private initonly string targetIdentifier
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Reference,object> 'CS$<>9__CachedAnonymousMethodDelegate2'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Reference,object> 'CS$<>9__CachedAnonymousMethodDelegate3'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method Reference::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(string canonicalName,
                               string targetIdentifier) cil managed
  {
    // Code size       21 (0x15)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      string LibGit2Sharp.Reference::canonicalName
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  stfld      string LibGit2Sharp.Reference::targetIdentifier
    IL_0014:  ret
  } // end of method Reference::.ctor

  .method assembly hidebysig static !!T  BuildFromPtr<(LibGit2Sharp.Reference) T>(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle handle,
                                                                                  class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       173 (0xad)
    .maxstack  5
    .locals init (valuetype LibGit2Sharp.Core.GitReferenceType V_0,
             string V_1,
             class LibGit2Sharp.Reference V_2,
             string V_3,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_4,
             class LibGit2Sharp.DirectReference V_5,
             class LibGit2Sharp.ObjectId V_6,
             valuetype LibGit2Sharp.Core.GitReferenceType V_7,
             object[] V_8)
    IL_0000:  ldarg.0
    IL_0001:  call       valuetype LibGit2Sharp.Core.GitReferenceType LibGit2Sharp.Core.Proxy::git_reference_type(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
    IL_0006:  stloc.0
    IL_0007:  ldarg.0
    IL_0008:  call       string LibGit2Sharp.Core.Proxy::git_reference_name(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
    IL_000d:  stloc.1
    IL_000e:  ldloc.0
    IL_000f:  stloc.s    V_7
    IL_0011:  ldloc.s    V_7
    IL_0013:  ldc.i4.1
    IL_0014:  sub
    IL_0015:  switch     ( 
                          IL_0064,
                          IL_0024)
    IL_0022:  br.s       IL_0078

    IL_0024:  ldarg.0
    IL_0025:  call       string LibGit2Sharp.Core.Proxy::git_reference_symbolic_target(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
    IL_002a:  stloc.3
    IL_002b:  ldarg.0
    IL_002c:  call       class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.Core.Proxy::git_reference_resolve(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
    IL_0031:  stloc.s    V_4
    .try
    {
      IL_0033:  ldloc.s    V_4
      IL_0035:  brtrue.s   IL_0042

      IL_0037:  ldloc.1
      IL_0038:  ldloc.3
      IL_0039:  ldnull
      IL_003a:  newobj     instance void LibGit2Sharp.SymbolicReference::.ctor(string,
                                                                               string,
                                                                               class LibGit2Sharp.Reference)
      IL_003f:  stloc.2
      IL_0040:  leave.s    IL_00a1

      IL_0042:  ldloc.s    V_4
      IL_0044:  ldarg.1
      IL_0045:  call       !!0 LibGit2Sharp.Reference::BuildFromPtr<class LibGit2Sharp.DirectReference>(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                                        class LibGit2Sharp.Repository)
      IL_004a:  stloc.s    V_5
      IL_004c:  ldloc.1
      IL_004d:  ldloc.3
      IL_004e:  ldloc.s    V_5
      IL_0050:  newobj     instance void LibGit2Sharp.SymbolicReference::.ctor(string,
                                                                               string,
                                                                               class LibGit2Sharp.Reference)
      IL_0055:  stloc.2
      IL_0056:  leave.s    IL_00a1

    }  // end .try
    finally
    {
      IL_0058:  ldloc.s    V_4
      IL_005a:  brfalse.s  IL_0063

      IL_005c:  ldloc.s    V_4
      IL_005e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0063:  endfinally
    }  // end handler
    IL_0064:  ldarg.0
    IL_0065:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_reference_target(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
    IL_006a:  stloc.s    V_6
    IL_006c:  ldloc.1
    IL_006d:  ldarg.1
    IL_006e:  ldloc.s    V_6
    IL_0070:  newobj     instance void LibGit2Sharp.DirectReference::.ctor(string,
                                                                           class LibGit2Sharp.Repository,
                                                                           class LibGit2Sharp.ObjectId)
    IL_0075:  stloc.2
    IL_0076:  br.s       IL_00a1

    IL_0078:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_007d:  ldstr      "Unable to build a new reference from a type '{0}'."
    IL_0082:  ldc.i4.1
    IL_0083:  newarr     [mscorlib]System.Object
    IL_0088:  stloc.s    V_8
    IL_008a:  ldloc.s    V_8
    IL_008c:  ldc.i4.0
    IL_008d:  ldloc.0
    IL_008e:  box        LibGit2Sharp.Core.GitReferenceType
    IL_0093:  stelem.ref
    IL_0094:  ldloc.s    V_8
    IL_0096:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_009b:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_00a0:  throw

    IL_00a1:  ldloc.2
    IL_00a2:  isinst     !!T
    IL_00a7:  unbox.any  !!T
    IL_00ac:  ret
  } // end of method Reference::BuildFromPtr

  .method public hidebysig newslot specialname virtual 
          instance string  get_CanonicalName() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Reference::canonicalName
    IL_0006:  ret
  } // end of method Reference::get_CanonicalName

  .method public hidebysig newslot abstract virtual 
          instance class LibGit2Sharp.DirectReference 
          ResolveToDirectReference() cil managed
  {
  } // end of method Reference::ResolveToDirectReference

  .method public hidebysig newslot specialname virtual 
          instance string  get_TargetIdentifier() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Reference::targetIdentifier
    IL_0006:  ret
  } // end of method Reference::get_TargetIdentifier

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  isinst     LibGit2Sharp.Reference
    IL_0007:  call       instance bool LibGit2Sharp.Reference::Equals(class LibGit2Sharp.Reference)
    IL_000c:  ret
  } // end of method Reference::Equals

  .method public hidebysig newslot virtual final 
          instance bool  Equals(class LibGit2Sharp.Reference other) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Reference> LibGit2Sharp.Reference::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance bool class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Reference>::Equals(!0,
                                                                                                                            !0)
    IL_000c:  ret
  } // end of method Reference::Equals

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Reference> LibGit2Sharp.Reference::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  callvirt   instance int32 class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Reference>::GetHashCode(!0)
    IL_000b:  ret
  } // end of method Reference::GetHashCode

  .method public hidebysig specialname static 
          bool  op_Equality(class LibGit2Sharp.Reference left,
                            class LibGit2Sharp.Reference right) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ret
  } // end of method Reference::op_Equality

  .method public hidebysig specialname static 
          bool  op_Inequality(class LibGit2Sharp.Reference left,
                              class LibGit2Sharp.Reference right) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  ret
  } // end of method Reference::op_Inequality

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0006:  ret
  } // end of method Reference::ToString

  .method assembly hidebysig specialname static 
          string  get_LocalBranchPrefix() cil managed
  {
    // Code size       6 (0x6)
    .maxstack  8
    IL_0000:  ldstr      "refs/heads/"
    IL_0005:  ret
  } // end of method Reference::get_LocalBranchPrefix

  .method assembly hidebysig specialname static 
          string  get_RemoteTrackingBranchPrefix() cil managed
  {
    // Code size       6 (0x6)
    .maxstack  8
    IL_0000:  ldstr      "refs/remotes/"
    IL_0005:  ret
  } // end of method Reference::get_RemoteTrackingBranchPrefix

  .method assembly hidebysig specialname static 
          string  get_TagPrefix() cil managed
  {
    // Code size       6 (0x6)
    .maxstack  8
    IL_0000:  ldstr      "refs/tags/"
    IL_0005:  ret
  } // end of method Reference::get_TagPrefix

  .method assembly hidebysig specialname static 
          string  get_NotePrefix() cil managed
  {
    // Code size       6 (0x6)
    .maxstack  8
    IL_0000:  ldstr      "refs/notes/"
    IL_0005:  ret
  } // end of method Reference::get_NotePrefix

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "{0} => \"{1}\""
    IL_000a:  ldc.i4.2
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0019:  stelem.ref
    IL_001a:  ldloc.0
    IL_001b:  ldc.i4.1
    IL_001c:  ldarg.0
    IL_001d:  callvirt   instance string LibGit2Sharp.Reference::get_TargetIdentifier()
    IL_0022:  stelem.ref
    IL_0023:  ldloc.0
    IL_0024:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0029:  ret
  } // end of method Reference::get_DebuggerDisplay

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       83 (0x53)
    .maxstack  5
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.Reference,object>[] V_0)
    IL_0000:  ldc.i4.2
    IL_0001:  newarr     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,object>
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldc.i4.0
    IL_0009:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,object> LibGit2Sharp.Reference::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_000e:  brtrue.s   IL_0021

    IL_0010:  ldnull
    IL_0011:  ldftn      object LibGit2Sharp.Reference::'<.cctor>b__0'(class LibGit2Sharp.Reference)
    IL_0017:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Reference,object>::.ctor(object,
                                                                                                                    native int)
    IL_001c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,object> LibGit2Sharp.Reference::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0021:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,object> LibGit2Sharp.Reference::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0026:  stelem.ref
    IL_0027:  ldloc.0
    IL_0028:  ldc.i4.1
    IL_0029:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,object> LibGit2Sharp.Reference::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_002e:  brtrue.s   IL_0041

    IL_0030:  ldnull
    IL_0031:  ldftn      object LibGit2Sharp.Reference::'<.cctor>b__1'(class LibGit2Sharp.Reference)
    IL_0037:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Reference,object>::.ctor(object,
                                                                                                                    native int)
    IL_003c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,object> LibGit2Sharp.Reference::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_0041:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Reference,object> LibGit2Sharp.Reference::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_0046:  stelem.ref
    IL_0047:  ldloc.0
    IL_0048:  newobj     instance void class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Reference>::.ctor(class [System.Core]System.Func`2<!0,object>[])
    IL_004d:  stsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Reference> LibGit2Sharp.Reference::equalityHelper
    IL_0052:  ret
  } // end of method Reference::.cctor

  .method private hidebysig static object 
          '<.cctor>b__0'(class LibGit2Sharp.Reference x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0006:  ret
  } // end of method Reference::'<.cctor>b__0'

  .method private hidebysig static object 
          '<.cctor>b__1'(class LibGit2Sharp.Reference x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Reference::get_TargetIdentifier()
    IL_0006:  ret
  } // end of method Reference::'<.cctor>b__1'

  .property instance string CanonicalName()
  {
    .get instance string LibGit2Sharp.Reference::get_CanonicalName()
  } // end of property Reference::CanonicalName
  .property instance string TargetIdentifier()
  {
    .get instance string LibGit2Sharp.Reference::get_TargetIdentifier()
  } // end of property Reference::TargetIdentifier
  .property string LocalBranchPrefix()
  {
    .get string LibGit2Sharp.Reference::get_LocalBranchPrefix()
  } // end of property Reference::LocalBranchPrefix
  .property string RemoteTrackingBranchPrefix()
  {
    .get string LibGit2Sharp.Reference::get_RemoteTrackingBranchPrefix()
  } // end of property Reference::RemoteTrackingBranchPrefix
  .property string TagPrefix()
  {
    .get string LibGit2Sharp.Reference::get_TagPrefix()
  } // end of property Reference::TagPrefix
  .property string NotePrefix()
  {
    .get string LibGit2Sharp.Reference::get_NotePrefix()
  } // end of property Reference::NotePrefix
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.Reference::get_DebuggerDisplay()
  } // end of property Reference::DebuggerDisplay
} // end of class LibGit2Sharp.Reference

.class public auto ansi beforefieldinit LibGit2Sharp.DirectReference
       extends LibGit2Sharp.Reference
{
  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass6'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Repository repo
    .field public class LibGit2Sharp.ObjectId targetId
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass6'::.ctor

    .method public hidebysig instance class LibGit2Sharp.GitObject 
            '<.ctor>b__4'() cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.DirectReference/'<>c__DisplayClass6'::repo
      IL_0006:  ldarg.0
      IL_0007:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.DirectReference/'<>c__DisplayClass6'::targetId
      IL_000c:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.Repository::Lookup(class LibGit2Sharp.ObjectId)
      IL_0011:  ret
    } // end of method '<>c__DisplayClass6'::'<.ctor>b__4'

  } // end of class '<>c__DisplayClass6'

  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject> targetBuilder
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Reference::.ctor()
    IL_0006:  ret
  } // end of method DirectReference::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string canonicalName,
                               class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.ObjectId targetId) cil managed
  {
    // Code size       69 (0x45)
    .maxstack  4
    .locals init (class [System.Core]System.Func`1<class LibGit2Sharp.GitObject> V_0,
             class LibGit2Sharp.DirectReference/'<>c__DisplayClass6' V_1)
    IL_0000:  ldnull
    IL_0001:  stloc.0
    IL_0002:  newobj     instance void LibGit2Sharp.DirectReference/'<>c__DisplayClass6'::.ctor()
    IL_0007:  stloc.1
    IL_0008:  ldloc.1
    IL_0009:  ldarg.2
    IL_000a:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.DirectReference/'<>c__DisplayClass6'::repo
    IL_000f:  ldloc.1
    IL_0010:  ldarg.3
    IL_0011:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.DirectReference/'<>c__DisplayClass6'::targetId
    IL_0016:  ldarg.0
    IL_0017:  ldarg.1
    IL_0018:  ldloc.1
    IL_0019:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.DirectReference/'<>c__DisplayClass6'::targetId
    IL_001e:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
    IL_0023:  call       instance void LibGit2Sharp.Reference::.ctor(string,
                                                                     string)
    IL_0028:  ldarg.0
    IL_0029:  ldloc.0
    IL_002a:  brtrue.s   IL_0039

    IL_002c:  ldloc.1
    IL_002d:  ldftn      instance class LibGit2Sharp.GitObject LibGit2Sharp.DirectReference/'<>c__DisplayClass6'::'<.ctor>b__4'()
    IL_0033:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.GitObject>::.ctor(object,
                                                                                                             native int)
    IL_0038:  stloc.0
    IL_0039:  ldloc.0
    IL_003a:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_003f:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject> LibGit2Sharp.DirectReference::targetBuilder
    IL_0044:  ret
  } // end of method DirectReference::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.GitObject 
          get_Target() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject> LibGit2Sharp.DirectReference::targetBuilder
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject>::get_Value()
    IL_000b:  ret
  } // end of method DirectReference::get_Target

  .method public hidebysig virtual instance class LibGit2Sharp.DirectReference 
          ResolveToDirectReference() cil managed
  {
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ret
  } // end of method DirectReference::ResolveToDirectReference

  .property instance class LibGit2Sharp.GitObject
          Target()
  {
    .get instance class LibGit2Sharp.GitObject LibGit2Sharp.DirectReference::get_Target()
  } // end of property DirectReference::Target
} // end of class LibGit2Sharp.DirectReference

.class private sequential ansi beforefieldinit LibGit2Sharp.Core.GitIndexTime
       extends [mscorlib]System.Object
{
  .field public int64 seconds
  .field public uint32 nanoseconds
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method GitIndexTime::.ctor

} // end of class LibGit2Sharp.Core.GitIndexTime

.class private sequential ansi beforefieldinit LibGit2Sharp.Core.GitIndexEntry
       extends [mscorlib]System.Object
{
  .field public class LibGit2Sharp.Core.GitIndexTime CTime
  .field public class LibGit2Sharp.Core.GitIndexTime MTime
  .field public uint32 Dev
  .field public uint32 Ino
  .field public uint32 Mode
  .field public uint32 Uid
  .field public uint32 Gid
  .field public int64 file_size
  .field public valuetype LibGit2Sharp.Core.GitOid oid
  .field public uint16 Flags
  .field public uint16 ExtendedFlags
  .field public native int Path
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method GitIndexEntry::.ctor

} // end of class LibGit2Sharp.Core.GitIndexEntry

.class private auto ansi sealed LibGit2Sharp.Core.GitObjectType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.Core.GitObjectType Any = int32(0xFFFFFFFE)
  .field public static literal valuetype LibGit2Sharp.Core.GitObjectType Bad = int32(0xFFFFFFFF)
  .field public static literal valuetype LibGit2Sharp.Core.GitObjectType Ext1 = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.Core.GitObjectType Commit = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.Core.GitObjectType Tree = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.Core.GitObjectType Blob = int32(0x00000003)
  .field public static literal valuetype LibGit2Sharp.Core.GitObjectType Tag = int32(0x00000004)
  .field public static literal valuetype LibGit2Sharp.Core.GitObjectType Ext2 = int32(0x00000005)
  .field public static literal valuetype LibGit2Sharp.Core.GitObjectType OfsDelta = int32(0x00000006)
  .field public static literal valuetype LibGit2Sharp.Core.GitObjectType RefDelta = int32(0x00000007)
} // end of class LibGit2Sharp.Core.GitObjectType

.class private abstract auto ansi sealed beforefieldinit LibGit2Sharp.Core.GitObjectTypeExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static valuetype LibGit2Sharp.TreeEntryTargetType 
          ToTreeEntryTargetType(valuetype LibGit2Sharp.Core.GitObjectType 'type') cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       52 (0x34)
    .maxstack  2
    .locals init (valuetype LibGit2Sharp.Core.GitObjectType V_0)
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.1
    IL_0004:  sub
    IL_0005:  switch     ( 
                          IL_0018,
                          IL_001a,
                          IL_001c)
    IL_0016:  br.s       IL_001e

    IL_0018:  ldc.i4.2
    IL_0019:  ret

    IL_001a:  ldc.i4.1
    IL_001b:  ret

    IL_001c:  ldc.i4.0
    IL_001d:  ret

    IL_001e:  ldstr      "Cannot map {0} to a TreeEntryTargetType."
    IL_0023:  ldarg.0
    IL_0024:  box        LibGit2Sharp.Core.GitObjectType
    IL_0029:  call       string [mscorlib]System.String::Format(string,
                                                                object)
    IL_002e:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor(string)
    IL_0033:  throw
  } // end of method GitObjectTypeExtensions::ToTreeEntryTargetType

  .method public hidebysig static valuetype LibGit2Sharp.ObjectType 
          ToObjectType(valuetype LibGit2Sharp.Core.GitObjectType 'type') cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       58 (0x3a)
    .maxstack  2
    .locals init (valuetype LibGit2Sharp.Core.GitObjectType V_0)
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.1
    IL_0004:  sub
    IL_0005:  switch     ( 
                          IL_001c,
                          IL_001e,
                          IL_0020,
                          IL_0022)
    IL_001a:  br.s       IL_0024

    IL_001c:  ldc.i4.1
    IL_001d:  ret

    IL_001e:  ldc.i4.2
    IL_001f:  ret

    IL_0020:  ldc.i4.3
    IL_0021:  ret

    IL_0022:  ldc.i4.4
    IL_0023:  ret

    IL_0024:  ldstr      "Cannot map {0} to a ObjectType."
    IL_0029:  ldarg.0
    IL_002a:  box        LibGit2Sharp.Core.GitObjectType
    IL_002f:  call       string [mscorlib]System.String::Format(string,
                                                                object)
    IL_0034:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor(string)
    IL_0039:  throw
  } // end of method GitObjectTypeExtensions::ToObjectType

} // end of class LibGit2Sharp.Core.GitObjectTypeExtensions

.class public auto ansi sealed LibGit2Sharp.GitSortOptions
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 2E 54 68 69 73 20 74 79 70 65 20 77 69 6C   // ...This type wil
                                                                              6C 20 62 65 20 72 65 6D 6F 76 65 64 20 69 6E 20   // l be removed in 
                                                                              74 68 65 20 6E 65 78 74 20 72 65 6C 65 61 73 65   // the next release
                                                                              2E 00 00 )                                        // ...
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.GitSortOptions None = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.GitSortOptions Topological = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.GitSortOptions Time = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.GitSortOptions Reverse = int32(0x00000004)
} // end of class LibGit2Sharp.GitSortOptions

.class private auto ansi beforefieldinit LibGit2Sharp.Core.LambdaEqualityHelper`1<T>
       extends [mscorlib]System.Object
{
  .field private initonly class [System.Core]System.Func`2<!T,object>[] equalityContributorAccessors
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class [System.Core]System.Func`2<!T,object>[] equalityContributorAccessors) cil managed
  {
    .param [1]
    .custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class [System.Core]System.Func`2<!0,object>[] class LibGit2Sharp.Core.LambdaEqualityHelper`1<!T>::equalityContributorAccessors
    IL_000d:  ret
  } // end of method LambdaEqualityHelper`1::.ctor

  .method public hidebysig instance bool 
          Equals(!T 'instance',
                 !T other) cil managed
  {
    // Code size       135 (0x87)
    .maxstack  3
    .locals init (class [System.Core]System.Func`2<!T,object> V_0,
             bool V_1,
             class [System.Core]System.Func`2<!T,object>[] V_2,
             int32 V_3)
    IL_0000:  ldnull
    IL_0001:  ldarg.1
    IL_0002:  box        !T
    IL_0007:  call       bool [mscorlib]System.Object::ReferenceEquals(object,
                                                                       object)
    IL_000c:  brtrue.s   IL_001c

    IL_000e:  ldnull
    IL_000f:  ldarg.2
    IL_0010:  box        !T
    IL_0015:  call       bool [mscorlib]System.Object::ReferenceEquals(object,
                                                                       object)
    IL_001a:  brfalse.s  IL_001e

    IL_001c:  ldc.i4.0
    IL_001d:  ret

    IL_001e:  ldarg.1
    IL_001f:  box        !T
    IL_0024:  ldarg.2
    IL_0025:  box        !T
    IL_002a:  call       bool [mscorlib]System.Object::ReferenceEquals(object,
                                                                       object)
    IL_002f:  brfalse.s  IL_0033

    IL_0031:  ldc.i4.1
    IL_0032:  ret

    IL_0033:  ldarga.s   'instance'
    IL_0035:  constrained. !T
    IL_003b:  callvirt   instance class [mscorlib]System.Type [mscorlib]System.Object::GetType()
    IL_0040:  ldarga.s   other
    IL_0042:  constrained. !T
    IL_0048:  callvirt   instance class [mscorlib]System.Type [mscorlib]System.Object::GetType()
    IL_004d:  beq.s      IL_0051

    IL_004f:  ldc.i4.0
    IL_0050:  ret

    IL_0051:  ldarg.0
    IL_0052:  ldfld      class [System.Core]System.Func`2<!0,object>[] class LibGit2Sharp.Core.LambdaEqualityHelper`1<!T>::equalityContributorAccessors
    IL_0057:  stloc.2
    IL_0058:  ldc.i4.0
    IL_0059:  stloc.3
    IL_005a:  br.s       IL_007d

    IL_005c:  ldloc.2
    IL_005d:  ldloc.3
    IL_005e:  ldelem.ref
    IL_005f:  stloc.0
    IL_0060:  ldloc.0
    IL_0061:  ldarg.1
    IL_0062:  callvirt   instance !1 class [System.Core]System.Func`2<!T,object>::Invoke(!0)
    IL_0067:  ldloc.0
    IL_0068:  ldarg.2
    IL_0069:  callvirt   instance !1 class [System.Core]System.Func`2<!T,object>::Invoke(!0)
    IL_006e:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0073:  brtrue.s   IL_0079

    IL_0075:  ldc.i4.0
    IL_0076:  stloc.1
    IL_0077:  leave.s    IL_0085

    IL_0079:  ldloc.3
    IL_007a:  ldc.i4.1
    IL_007b:  add
    IL_007c:  stloc.3
    IL_007d:  ldloc.3
    IL_007e:  ldloc.2
    IL_007f:  ldlen
    IL_0080:  conv.i4
    IL_0081:  blt.s      IL_005c

    IL_0083:  ldc.i4.1
    IL_0084:  ret

    IL_0085:  ldloc.1
    IL_0086:  ret
  } // end of method LambdaEqualityHelper`1::Equals

  .method public hidebysig instance int32 
          GetHashCode(!T 'instance') cil managed
  {
    // Code size       60 (0x3c)
    .maxstack  3
    .locals init (int32 V_0,
             class [System.Core]System.Func`2<!T,object> V_1,
             class [System.Core]System.Func`2<!T,object>[] V_2,
             int32 V_3)
    IL_0000:  ldarg.0
    IL_0001:  call       instance class [mscorlib]System.Type [mscorlib]System.Object::GetType()
    IL_0006:  callvirt   instance int32 [mscorlib]System.Object::GetHashCode()
    IL_000b:  stloc.0
    IL_000c:  ldarg.0
    IL_000d:  ldfld      class [System.Core]System.Func`2<!0,object>[] class LibGit2Sharp.Core.LambdaEqualityHelper`1<!T>::equalityContributorAccessors
    IL_0012:  stloc.2
    IL_0013:  ldc.i4.0
    IL_0014:  stloc.3
    IL_0015:  br.s       IL_0034

    IL_0017:  ldloc.2
    IL_0018:  ldloc.3
    IL_0019:  ldelem.ref
    IL_001a:  stloc.1
    IL_001b:  ldloc.0
    IL_001c:  ldc.i4     0x18d
    IL_0021:  mul
    IL_0022:  ldloc.1
    IL_0023:  ldarg.1
    IL_0024:  callvirt   instance !1 class [System.Core]System.Func`2<!T,object>::Invoke(!0)
    IL_0029:  callvirt   instance int32 [mscorlib]System.Object::GetHashCode()
    IL_002e:  xor
    IL_002f:  stloc.0
    IL_0030:  ldloc.3
    IL_0031:  ldc.i4.1
    IL_0032:  add
    IL_0033:  stloc.3
    IL_0034:  ldloc.3
    IL_0035:  ldloc.2
    IL_0036:  ldlen
    IL_0037:  conv.i4
    IL_0038:  blt.s      IL_0017

    IL_003a:  ldloc.0
    IL_003b:  ret
  } // end of method LambdaEqualityHelper`1::GetHashCode

} // end of class LibGit2Sharp.Core.LambdaEqualityHelper`1

.class public auto ansi beforefieldinit LibGit2Sharp.Index
       extends [mscorlib]System.Object
       implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.IndexEntry>,
                  [mscorlib]System.Collections.IEnumerable
{
  .custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field private initonly class LibGit2Sharp.Core.Handles.IndexSafeHandle handle
  .field private initonly class LibGit2Sharp.Repository repo
  .field private initonly class LibGit2Sharp.ConflictCollection conflicts
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method Index::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       56 (0x38)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_000d:  ldarg.0
    IL_000e:  ldarg.1
    IL_000f:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0014:  call       class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Core.Proxy::git_repository_index(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0019:  stfld      class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::handle
    IL_001e:  ldarg.0
    IL_001f:  ldarg.1
    IL_0020:  newobj     instance void LibGit2Sharp.ConflictCollection::.ctor(class LibGit2Sharp.Repository)
    IL_0025:  stfld      class LibGit2Sharp.ConflictCollection LibGit2Sharp.Index::conflicts
    IL_002a:  ldarg.1
    IL_002b:  ldarg.0
    IL_002c:  ldfld      class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::handle
    IL_0031:  callvirt   instance !!0 LibGit2Sharp.Repository::RegisterForCleanup<class LibGit2Sharp.Core.Handles.IndexSafeHandle>(!!0)
    IL_0036:  pop
    IL_0037:  ret
  } // end of method Index::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               string indexPath) cil managed
  {
    // Code size       73 (0x49)
    .maxstack  3
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0014:  call       class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Core.Proxy::git_index_open(class LibGit2Sharp.Core.FilePath)
    IL_0019:  stfld      class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::handle
    IL_001e:  ldarg.1
    IL_001f:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0024:  ldarg.0
    IL_0025:  ldfld      class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::handle
    IL_002a:  call       void LibGit2Sharp.Core.Proxy::git_repository_set_index(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                class LibGit2Sharp.Core.Handles.IndexSafeHandle)
    IL_002f:  ldarg.0
    IL_0030:  ldarg.1
    IL_0031:  newobj     instance void LibGit2Sharp.ConflictCollection::.ctor(class LibGit2Sharp.Repository)
    IL_0036:  stfld      class LibGit2Sharp.ConflictCollection LibGit2Sharp.Index::conflicts
    IL_003b:  ldarg.1
    IL_003c:  ldarg.0
    IL_003d:  ldfld      class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::handle
    IL_0042:  callvirt   instance !!0 LibGit2Sharp.Repository::RegisterForCleanup<class LibGit2Sharp.Core.Handles.IndexSafeHandle>(!!0)
    IL_0047:  pop
    IL_0048:  ret
  } // end of method Index::.ctor

  .method assembly hidebysig specialname 
          instance class LibGit2Sharp.Core.Handles.IndexSafeHandle 
          get_Handle() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::handle
    IL_0006:  ret
  } // end of method Index::get_Handle

  .method public hidebysig newslot specialname virtual 
          instance int32  get_Count() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::handle
    IL_0006:  call       int32 LibGit2Sharp.Core.Proxy::git_index_entrycount(class LibGit2Sharp.Core.Handles.IndexSafeHandle)
    IL_000b:  ret
  } // end of method Index::get_Count

  .method public hidebysig newslot specialname virtual 
          instance bool  get_IsFullyMerged() cil managed
  {
    // Code size       15 (0xf)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::handle
    IL_0006:  call       bool LibGit2Sharp.Core.Proxy::git_index_has_conflicts(class LibGit2Sharp.Core.Handles.IndexSafeHandle)
    IL_000b:  ldc.i4.0
    IL_000c:  ceq
    IL_000e:  ret
  } // end of method Index::get_IsFullyMerged

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.IndexEntry 
          get_Item(string path) cil managed
  {
    // Code size       43 (0x2b)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "path"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::handle
    IL_0011:  ldarg.1
    IL_0012:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0017:  ldc.i4.0
    IL_0018:  call       class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle LibGit2Sharp.Core.Proxy::git_index_get_bypath(class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                                                                            class LibGit2Sharp.Core.FilePath,
                                                                                                                            int32)
    IL_001d:  stloc.0
    IL_001e:  ldarg.0
    IL_001f:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_0024:  ldloc.0
    IL_0025:  call       class LibGit2Sharp.IndexEntry LibGit2Sharp.IndexEntry::BuildFromPtr(class LibGit2Sharp.Repository,
                                                                                             class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle)
    IL_002a:  ret
  } // end of method Index::get_Item

  .method private hidebysig specialname instance class LibGit2Sharp.IndexEntry 
          get_Item(int32 index) cil managed
  {
    // Code size       32 (0x20)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::handle
    IL_0006:  ldarg.1
    IL_0007:  conv.i8
    IL_0008:  call       native uint [mscorlib]System.UIntPtr::op_Explicit(uint64)
    IL_000d:  call       class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle LibGit2Sharp.Core.Proxy::git_index_get_byindex(class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                                                                             native uint)
    IL_0012:  stloc.0
    IL_0013:  ldarg.0
    IL_0014:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_0019:  ldloc.0
    IL_001a:  call       class LibGit2Sharp.IndexEntry LibGit2Sharp.IndexEntry::BuildFromPtr(class LibGit2Sharp.Repository,
                                                                                             class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle)
    IL_001f:  ret
  } // end of method Index::get_Item

  .method private hidebysig instance class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.IndexEntry> 
          AllIndexEntries() cil managed
  {
    // Code size       41 (0x29)
    .maxstack  3
    .locals init (int32 V_0,
             class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.IndexEntry> V_1,
             int32 V_2)
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance int32 LibGit2Sharp.Index::get_Count()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.IndexEntry>::.ctor(int32)
    IL_000d:  stloc.1
    IL_000e:  ldc.i4.0
    IL_000f:  stloc.2
    IL_0010:  br.s       IL_0023

    IL_0012:  ldloc.1
    IL_0013:  ldarg.0
    IL_0014:  ldloc.2
    IL_0015:  call       instance class LibGit2Sharp.IndexEntry LibGit2Sharp.Index::get_Item(int32)
    IL_001a:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.IndexEntry>::Add(!0)
    IL_001f:  ldloc.2
    IL_0020:  ldc.i4.1
    IL_0021:  add
    IL_0022:  stloc.2
    IL_0023:  ldloc.2
    IL_0024:  ldloc.0
    IL_0025:  blt.s      IL_0012

    IL_0027:  ldloc.1
    IL_0028:  ret
  } // end of method Index::AllIndexEntries

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.IndexEntry> 
          GetEnumerator() cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.IndexEntry> LibGit2Sharp.Index::AllIndexEntries()
    IL_0006:  callvirt   instance valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<!0> class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.IndexEntry>::GetEnumerator()
    IL_000b:  box        valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<class LibGit2Sharp.IndexEntry>
    IL_0010:  ret
  } // end of method Index::GetEnumerator

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.IndexEntry> LibGit2Sharp.Index::GetEnumerator()
    IL_0006:  ret
  } // end of method Index::System.Collections.IEnumerable.GetEnumerator

  .method public hidebysig newslot virtual 
          instance void  Stage(string path,
                               [opt] class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions) cil managed
  {
    .param [2] = nullref
    // Code size       31 (0x1f)
    .maxstack  4
    .locals init (string[] V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "path"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  ldc.i4.1
    IL_000d:  newarr     [mscorlib]System.String
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldc.i4.0
    IL_0015:  ldarg.1
    IL_0016:  stelem.ref
    IL_0017:  ldloc.0
    IL_0018:  ldarg.2
    IL_0019:  callvirt   instance void LibGit2Sharp.Index::Stage(class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                 class LibGit2Sharp.ExplicitPathsOptions)
    IL_001e:  ret
  } // end of method Index::Stage

  .method public hidebysig newslot virtual 
          instance void  Stage(class [mscorlib]System.Collections.Generic.IEnumerable`1<string> paths,
                               [opt] class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions) cil managed
  {
    .param [2] = nullref
    // Code size       195 (0xc3)
    .maxstack  5
    .locals init (class LibGit2Sharp.TreeChanges V_0,
             class LibGit2Sharp.TreeEntryChanges V_1,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntryChanges> V_2,
             valuetype LibGit2Sharp.ChangeKind V_3,
             object[] V_4)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "paths"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_0011:  callvirt   instance class LibGit2Sharp.Diff LibGit2Sharp.Repository::get_Diff()
    IL_0016:  ldc.i4.s   18
    IL_0018:  ldarg.1
    IL_0019:  ldarg.2
    IL_001a:  ldnull
    IL_001b:  callvirt   instance class LibGit2Sharp.TreeChanges LibGit2Sharp.Diff::Compare(valuetype LibGit2Sharp.DiffModifiers,
                                                                                            class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                                            class LibGit2Sharp.ExplicitPathsOptions,
                                                                                            class LibGit2Sharp.CompareOptions)
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::GetEnumerator()
    IL_0027:  stloc.2
    .try
    {
      IL_0028:  br.s       IL_00a5

      IL_002a:  ldloc.2
      IL_002b:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntryChanges>::get_Current()
      IL_0030:  stloc.1
      IL_0031:  ldloc.1
      IL_0032:  callvirt   instance valuetype LibGit2Sharp.ChangeKind LibGit2Sharp.TreeEntryChanges::get_Status()
      IL_0037:  stloc.3
      IL_0038:  ldloc.3
      IL_0039:  switch     ( 
                            IL_00a5,
                            IL_005f,
                            IL_0050,
                            IL_005f)
      IL_004e:  br.s       IL_006d

      IL_0050:  ldarg.0
      IL_0051:  ldloc.1
      IL_0052:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_Path()
      IL_0057:  call       instance string LibGit2Sharp.Index::RemoveFromIndex(string)
      IL_005c:  pop
      IL_005d:  br.s       IL_00a5

      IL_005f:  ldarg.0
      IL_0060:  ldloc.1
      IL_0061:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_Path()
      IL_0066:  call       instance void LibGit2Sharp.Index::AddToIndex(string)
      IL_006b:  br.s       IL_00a5

      IL_006d:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_0072:  ldstr      "Entry '{0}' bears an unexpected ChangeKind '{1}'"
      IL_0077:  ldc.i4.2
      IL_0078:  newarr     [mscorlib]System.Object
      IL_007d:  stloc.s    V_4
      IL_007f:  ldloc.s    V_4
      IL_0081:  ldc.i4.0
      IL_0082:  ldloc.1
      IL_0083:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_Path()
      IL_0088:  stelem.ref
      IL_0089:  ldloc.s    V_4
      IL_008b:  ldc.i4.1
      IL_008c:  ldloc.1
      IL_008d:  callvirt   instance valuetype LibGit2Sharp.ChangeKind LibGit2Sharp.TreeEntryChanges::get_Status()
      IL_0092:  box        LibGit2Sharp.ChangeKind
      IL_0097:  stelem.ref
      IL_0098:  ldloc.s    V_4
      IL_009a:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                  string,
                                                                  object[])
      IL_009f:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor(string)
      IL_00a4:  throw

      IL_00a5:  ldloc.2
      IL_00a6:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_00ab:  brtrue     IL_002a

      IL_00b0:  leave.s    IL_00bc

    }  // end .try
    finally
    {
      IL_00b2:  ldloc.2
      IL_00b3:  brfalse.s  IL_00bb

      IL_00b5:  ldloc.2
      IL_00b6:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_00bb:  endfinally
    }  // end handler
    IL_00bc:  ldarg.0
    IL_00bd:  call       instance void LibGit2Sharp.Index::UpdatePhysicalIndex()
    IL_00c2:  ret
  } // end of method Index::Stage

  .method public hidebysig newslot virtual 
          instance void  Unstage(string path,
                                 [opt] class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions) cil managed
  {
    .param [2] = nullref
    // Code size       31 (0x1f)
    .maxstack  4
    .locals init (string[] V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "path"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  ldc.i4.1
    IL_000d:  newarr     [mscorlib]System.String
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldc.i4.0
    IL_0015:  ldarg.1
    IL_0016:  stelem.ref
    IL_0017:  ldloc.0
    IL_0018:  ldarg.2
    IL_0019:  callvirt   instance void LibGit2Sharp.Index::Unstage(class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                   class LibGit2Sharp.ExplicitPathsOptions)
    IL_001e:  ret
  } // end of method Index::Unstage

  .method public hidebysig newslot virtual 
          instance void  Unstage(class [mscorlib]System.Collections.Generic.IEnumerable`1<string> paths,
                                 [opt] class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions) cil managed
  {
    .param [2] = nullref
    // Code size       78 (0x4e)
    .maxstack  6
    .locals init (class LibGit2Sharp.TreeChanges V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "paths"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_0011:  callvirt   instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_0016:  callvirt   instance bool LibGit2Sharp.RepositoryInformation::get_IsHeadOrphaned()
    IL_001b:  brfalse.s  IL_003b

    IL_001d:  ldarg.0
    IL_001e:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_0023:  callvirt   instance class LibGit2Sharp.Diff LibGit2Sharp.Repository::get_Diff()
    IL_0028:  ldnull
    IL_0029:  ldc.i4.1
    IL_002a:  ldarg.1
    IL_002b:  ldarg.2
    IL_002c:  ldnull
    IL_002d:  callvirt   instance class LibGit2Sharp.TreeChanges LibGit2Sharp.Diff::Compare(class LibGit2Sharp.Tree,
                                                                                            valuetype LibGit2Sharp.DiffTargets,
                                                                                            class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                                            class LibGit2Sharp.ExplicitPathsOptions,
                                                                                            class LibGit2Sharp.CompareOptions)
    IL_0032:  stloc.0
    IL_0033:  ldarg.0
    IL_0034:  ldloc.0
    IL_0035:  call       instance void LibGit2Sharp.Index::Reset(class LibGit2Sharp.TreeChanges)
    IL_003a:  ret

    IL_003b:  ldarg.0
    IL_003c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_0041:  ldstr      "HEAD"
    IL_0046:  ldarg.1
    IL_0047:  ldarg.2
    IL_0048:  call       void LibGit2Sharp.RepositoryExtensions::Reset(class LibGit2Sharp.IRepository,
                                                                       string,
                                                                       class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                       class LibGit2Sharp.ExplicitPathsOptions)
    IL_004d:  ret
  } // end of method Index::Unstage

  .method public hidebysig newslot virtual 
          instance void  Move(string sourcePath,
                              string destinationPath) cil managed
  {
    // Code size       31 (0x1f)
    .maxstack  5
    .locals init (string[] V_0,
             string[] V_1)
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.1
    IL_0002:  newarr     [mscorlib]System.String
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  ldarg.1
    IL_000b:  stelem.ref
    IL_000c:  ldloc.0
    IL_000d:  ldc.i4.1
    IL_000e:  newarr     [mscorlib]System.String
    IL_0013:  stloc.1
    IL_0014:  ldloc.1
    IL_0015:  ldc.i4.0
    IL_0016:  ldarg.2
    IL_0017:  stelem.ref
    IL_0018:  ldloc.1
    IL_0019:  callvirt   instance void LibGit2Sharp.Index::Move(class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                class [mscorlib]System.Collections.Generic.IEnumerable`1<string>)
    IL_001e:  ret
  } // end of method Index::Move

  .method public hidebysig newslot virtual 
          instance void  Move(class [mscorlib]System.Collections.Generic.IEnumerable`1<string> sourcePaths,
                              class [mscorlib]System.Collections.Generic.IEnumerable`1<string> destinationPaths) cil managed
  {
    // Code size       530 (0x212)
    .maxstack  5
    .locals init (class [mscorlib]System.Collections.Generic.IDictionary`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>> V_0,
             valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>> V_1,
             string V_2,
             string V_3,
             valuetype LibGit2Sharp.FileStatus V_4,
             valuetype LibGit2Sharp.FileStatus V_5,
             string V_6,
             valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>> V_7,
             string V_8,
             string V_9,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>>> V_10,
             class [mscorlib]System.Enum[] V_11,
             object[] V_12,
             class [mscorlib]System.Enum[] V_13,
             object[] V_14,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>>> V_15)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "sourcePaths"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "destinationPaths"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.0
    IL_0017:  ldarg.1
    IL_0018:  ldarg.2
    IL_0019:  call       instance class [mscorlib]System.Collections.Generic.IDictionary`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>> LibGit2Sharp.Index::PrepareBatch(class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                                                                                                                                                                                                                                               class [mscorlib]System.Collections.Generic.IEnumerable`1<string>)
    IL_001e:  stloc.0
    IL_001f:  ldloc.0
    IL_0020:  callvirt   instance int32 class [mscorlib]System.Collections.Generic.ICollection`1<valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>>>::get_Count()
    IL_0025:  brtrue.s   IL_0032

    IL_0027:  ldstr      "sourcePaths"
    IL_002c:  newobj     instance void [mscorlib]System.ArgumentNullException::.ctor(string)
    IL_0031:  throw

    IL_0032:  ldloc.0
    IL_0033:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>>>::GetEnumerator()
    IL_0038:  stloc.s    V_10
    .try
    {
      IL_003a:  br         IL_0171

      IL_003f:  ldloc.s    V_10
      IL_0041:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>>>::get_Current()
      IL_0046:  stloc.1
      IL_0047:  ldloca.s   V_1
      IL_0049:  call       instance !0 valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>>::get_Key()
      IL_004e:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>::get_Item1()
      IL_0053:  stloc.2
      IL_0054:  ldloca.s   V_1
      IL_0056:  call       instance !1 valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>>::get_Value()
      IL_005b:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>::get_Item1()
      IL_0060:  stloc.3
      IL_0061:  ldloc.2
      IL_0062:  call       bool [mscorlib]System.IO.Directory::Exists(string)
      IL_0067:  brtrue.s   IL_0071

      IL_0069:  ldloc.3
      IL_006a:  call       bool [mscorlib]System.IO.Directory::Exists(string)
      IL_006f:  brfalse.s  IL_0077

      IL_0071:  newobj     instance void [mscorlib]System.NotImplementedException::.ctor()
      IL_0076:  throw

      IL_0077:  ldloca.s   V_1
      IL_0079:  call       instance !0 valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>>::get_Key()
      IL_007e:  callvirt   instance !1 class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>::get_Item2()
      IL_0083:  stloc.s    V_4
      IL_0085:  ldloc.s    V_4
      IL_0087:  box        LibGit2Sharp.FileStatus
      IL_008c:  ldc.i4.4
      IL_008d:  newarr     [mscorlib]System.Enum
      IL_0092:  stloc.s    V_11
      IL_0094:  ldloc.s    V_11
      IL_0096:  ldc.i4.0
      IL_0097:  ldc.i4     0x80000000
      IL_009c:  box        LibGit2Sharp.FileStatus
      IL_00a1:  stelem.ref
      IL_00a2:  ldloc.s    V_11
      IL_00a4:  ldc.i4.1
      IL_00a5:  ldc.i4.4
      IL_00a6:  box        LibGit2Sharp.FileStatus
      IL_00ab:  stelem.ref
      IL_00ac:  ldloc.s    V_11
      IL_00ae:  ldc.i4.2
      IL_00af:  ldc.i4     0x80
      IL_00b4:  box        LibGit2Sharp.FileStatus
      IL_00b9:  stelem.ref
      IL_00ba:  ldloc.s    V_11
      IL_00bc:  ldc.i4.3
      IL_00bd:  ldc.i4     0x200
      IL_00c2:  box        LibGit2Sharp.FileStatus
      IL_00c7:  stelem.ref
      IL_00c8:  ldloc.s    V_11
      IL_00ca:  call       bool LibGit2Sharp.Core.EnumExtensions::HasAny(class [mscorlib]System.Enum,
                                                                         class [mscorlib]System.Collections.Generic.IEnumerable`1<class [mscorlib]System.Enum>)
      IL_00cf:  brfalse.s  IL_0100

      IL_00d1:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_00d6:  ldstr      "Unable to move file '{0}'. Its current status is '"
      + "{1}'."
      IL_00db:  ldc.i4.2
      IL_00dc:  newarr     [mscorlib]System.Object
      IL_00e1:  stloc.s    V_12
      IL_00e3:  ldloc.s    V_12
      IL_00e5:  ldc.i4.0
      IL_00e6:  ldloc.2
      IL_00e7:  stelem.ref
      IL_00e8:  ldloc.s    V_12
      IL_00ea:  ldc.i4.1
      IL_00eb:  ldloc.s    V_4
      IL_00ed:  box        LibGit2Sharp.FileStatus
      IL_00f2:  stelem.ref
      IL_00f3:  ldloc.s    V_12
      IL_00f5:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                  string,
                                                                  object[])
      IL_00fa:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
      IL_00ff:  throw

      IL_0100:  ldloca.s   V_1
      IL_0102:  call       instance !1 valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>>::get_Value()
      IL_0107:  callvirt   instance !1 class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>::get_Item2()
      IL_010c:  stloc.s    V_5
      IL_010e:  ldloc.s    V_5
      IL_0110:  box        LibGit2Sharp.FileStatus
      IL_0115:  ldc.i4.2
      IL_0116:  newarr     [mscorlib]System.Enum
      IL_011b:  stloc.s    V_13
      IL_011d:  ldloc.s    V_13
      IL_011f:  ldc.i4.0
      IL_0120:  ldc.i4     0x80000000
      IL_0125:  box        LibGit2Sharp.FileStatus
      IL_012a:  stelem.ref
      IL_012b:  ldloc.s    V_13
      IL_012d:  ldc.i4.1
      IL_012e:  ldc.i4     0x200
      IL_0133:  box        LibGit2Sharp.FileStatus
      IL_0138:  stelem.ref
      IL_0139:  ldloc.s    V_13
      IL_013b:  call       bool LibGit2Sharp.Core.EnumExtensions::HasAny(class [mscorlib]System.Enum,
                                                                         class [mscorlib]System.Collections.Generic.IEnumerable`1<class [mscorlib]System.Enum>)
      IL_0140:  brtrue.s   IL_0171

      IL_0142:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_0147:  ldstr      "Unable to overwrite file '{0}'. Its current status"
      + " is '{1}'."
      IL_014c:  ldc.i4.2
      IL_014d:  newarr     [mscorlib]System.Object
      IL_0152:  stloc.s    V_14
      IL_0154:  ldloc.s    V_14
      IL_0156:  ldc.i4.0
      IL_0157:  ldloc.3
      IL_0158:  stelem.ref
      IL_0159:  ldloc.s    V_14
      IL_015b:  ldc.i4.1
      IL_015c:  ldloc.s    V_5
      IL_015e:  box        LibGit2Sharp.FileStatus
      IL_0163:  stelem.ref
      IL_0164:  ldloc.s    V_14
      IL_0166:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                  string,
                                                                  object[])
      IL_016b:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
      IL_0170:  throw

      IL_0171:  ldloc.s    V_10
      IL_0173:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_0178:  brtrue     IL_003f

      IL_017d:  leave.s    IL_018b

    }  // end .try
    finally
    {
      IL_017f:  ldloc.s    V_10
      IL_0181:  brfalse.s  IL_018a

      IL_0183:  ldloc.s    V_10
      IL_0185:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_018a:  endfinally
    }  // end handler
    IL_018b:  ldarg.0
    IL_018c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_0191:  callvirt   instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_0196:  callvirt   instance string LibGit2Sharp.RepositoryInformation::get_WorkingDirectory()
    IL_019b:  stloc.s    V_6
    IL_019d:  ldloc.0
    IL_019e:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>>>::GetEnumerator()
    IL_01a3:  stloc.s    V_15
    .try
    {
      IL_01a5:  br.s       IL_01f4

      IL_01a7:  ldloc.s    V_15
      IL_01a9:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>>>::get_Current()
      IL_01ae:  stloc.s    V_7
      IL_01b0:  ldloca.s   V_7
      IL_01b2:  call       instance !0 valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>>::get_Key()
      IL_01b7:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>::get_Item1()
      IL_01bc:  stloc.s    V_8
      IL_01be:  ldloca.s   V_7
      IL_01c0:  call       instance !1 valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>>::get_Value()
      IL_01c5:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>::get_Item1()
      IL_01ca:  stloc.s    V_9
      IL_01cc:  ldarg.0
      IL_01cd:  ldloc.s    V_8
      IL_01cf:  call       instance string LibGit2Sharp.Index::RemoveFromIndex(string)
      IL_01d4:  pop
      IL_01d5:  ldloc.s    V_6
      IL_01d7:  ldloc.s    V_8
      IL_01d9:  call       string [mscorlib]System.IO.Path::Combine(string,
                                                                    string)
      IL_01de:  ldloc.s    V_6
      IL_01e0:  ldloc.s    V_9
      IL_01e2:  call       string [mscorlib]System.IO.Path::Combine(string,
                                                                    string)
      IL_01e7:  call       void [mscorlib]System.IO.File::Move(string,
                                                               string)
      IL_01ec:  ldarg.0
      IL_01ed:  ldloc.s    V_9
      IL_01ef:  call       instance void LibGit2Sharp.Index::AddToIndex(string)
      IL_01f4:  ldloc.s    V_15
      IL_01f6:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_01fb:  brtrue.s   IL_01a7

      IL_01fd:  leave.s    IL_020b

    }  // end .try
    finally
    {
      IL_01ff:  ldloc.s    V_15
      IL_0201:  brfalse.s  IL_020a

      IL_0203:  ldloc.s    V_15
      IL_0205:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_020a:  endfinally
    }  // end handler
    IL_020b:  ldarg.0
    IL_020c:  call       instance void LibGit2Sharp.Index::UpdatePhysicalIndex()
    IL_0211:  ret
  } // end of method Index::Move

  .method public hidebysig newslot virtual 
          instance void  Remove(string path,
                                [opt] bool removeFromWorkingDirectory,
                                [opt] class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions) cil managed
  {
    .param [2] = bool(true)
    .param [3] = nullref
    // Code size       32 (0x20)
    .maxstack  4
    .locals init (string[] V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "path"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  ldc.i4.1
    IL_000d:  newarr     [mscorlib]System.String
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldc.i4.0
    IL_0015:  ldarg.1
    IL_0016:  stelem.ref
    IL_0017:  ldloc.0
    IL_0018:  ldarg.2
    IL_0019:  ldarg.3
    IL_001a:  callvirt   instance void LibGit2Sharp.Index::Remove(class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                  bool,
                                                                  class LibGit2Sharp.ExplicitPathsOptions)
    IL_001f:  ret
  } // end of method Index::Remove

  .method public hidebysig newslot virtual 
          instance void  Remove(class [mscorlib]System.Collections.Generic.IEnumerable`1<string> paths,
                                [opt] bool removeFromWorkingDirectory,
                                [opt] class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions) cil managed
  {
    .param [2] = bool(true)
    .param [3] = nullref
    // Code size       491 (0x1eb)
    .maxstack  5
    .locals init (class [mscorlib]System.Collections.Generic.List`1<string> V_0,
             class LibGit2Sharp.TreeChanges V_1,
             class [mscorlib]System.Collections.Generic.List`1<string> V_2,
             class LibGit2Sharp.TreeEntryChanges V_3,
             valuetype LibGit2Sharp.FileStatus V_4,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntryChanges> V_5,
             valuetype LibGit2Sharp.ChangeKind V_6,
             object[] V_7,
             object[] V_8,
             object[] V_9,
             object[] V_10)
    IL_0000:  ldarg.1
    IL_0001:  call       class [mscorlib]System.Collections.Generic.List`1<!!0> [System.Core]System.Linq.Enumerable::ToList<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0006:  stloc.0
    IL_0007:  ldarg.0
    IL_0008:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_000d:  callvirt   instance class LibGit2Sharp.Diff LibGit2Sharp.Repository::get_Diff()
    IL_0012:  ldc.i4.6
    IL_0013:  ldloc.0
    IL_0014:  ldarg.3
    IL_0015:  ldnull
    IL_0016:  callvirt   instance class LibGit2Sharp.TreeChanges LibGit2Sharp.Diff::Compare(valuetype LibGit2Sharp.DiffModifiers,
                                                                                            class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                                            class LibGit2Sharp.ExplicitPathsOptions,
                                                                                            class LibGit2Sharp.CompareOptions)
    IL_001b:  stloc.1
    IL_001c:  ldloc.0
    IL_001d:  ldarg.0
    IL_001e:  ldftn      instance bool LibGit2Sharp.Index::'<Remove>b__0'(string)
    IL_0024:  newobj     instance void class [System.Core]System.Func`2<string,bool>::.ctor(object,
                                                                                            native int)
    IL_0029:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> [System.Core]System.Linq.Enumerable::Where<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                          class [System.Core]System.Func`2<!!0,bool>)
    IL_002e:  call       class [mscorlib]System.Collections.Generic.List`1<!!0> [System.Core]System.Linq.Enumerable::ToList<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0033:  stloc.2
    IL_0034:  ldloc.1
    IL_0035:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::GetEnumerator()
    IL_003a:  stloc.s    V_5
    .try
    {
      IL_003c:  br         IL_01c0

      IL_0041:  ldloc.s    V_5
      IL_0043:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntryChanges>::get_Current()
      IL_0048:  stloc.3
      IL_0049:  ldarg.0
      IL_004a:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
      IL_004f:  callvirt   instance class LibGit2Sharp.Index LibGit2Sharp.Repository::get_Index()
      IL_0054:  ldloc.3
      IL_0055:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_Path()
      IL_005a:  callvirt   instance valuetype LibGit2Sharp.FileStatus LibGit2Sharp.Index::RetrieveStatus(string)
      IL_005f:  stloc.s    V_4
      IL_0061:  ldloc.3
      IL_0062:  callvirt   instance valuetype LibGit2Sharp.ChangeKind LibGit2Sharp.TreeEntryChanges::get_Status()
      IL_0067:  stloc.s    V_6
      IL_0069:  ldloc.s    V_6
      IL_006b:  switch     ( 
                            IL_009c,
                            IL_0085,
                            IL_0085,
                            IL_00fd)
      IL_0080:  br         IL_0188

      IL_0085:  ldloc.2
      IL_0086:  ldarg.0
      IL_0087:  ldloc.3
      IL_0088:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_Path()
      IL_008d:  call       instance string LibGit2Sharp.Index::RemoveFromIndex(string)
      IL_0092:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<string>::Add(!0)
      IL_0097:  br         IL_01c0

      IL_009c:  ldarg.2
      IL_009d:  brfalse.s  IL_00e6

      IL_009f:  ldloc.s    V_4
      IL_00a1:  box        LibGit2Sharp.FileStatus
      IL_00a6:  ldc.i4.2
      IL_00a7:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.FileStatus>(class [mscorlib]System.Enum,
                                                                                                                    !!0)
      IL_00ac:  brtrue.s   IL_00bd

      IL_00ae:  ldloc.s    V_4
      IL_00b0:  box        LibGit2Sharp.FileStatus
      IL_00b5:  ldc.i4.1
      IL_00b6:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.FileStatus>(class [mscorlib]System.Enum,
                                                                                                                    !!0)
      IL_00bb:  brfalse.s  IL_00e6

      IL_00bd:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_00c2:  ldstr      "Unable to remove file '{0}', as it has changes sta"
      + "ged in the index. You can call the Remove() method with removeFromWorki"
      + "ngDirectory=false if you want to remove it from the index only."
      IL_00c7:  ldc.i4.1
      IL_00c8:  newarr     [mscorlib]System.Object
      IL_00cd:  stloc.s    V_7
      IL_00cf:  ldloc.s    V_7
      IL_00d1:  ldc.i4.0
      IL_00d2:  ldloc.3
      IL_00d3:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_Path()
      IL_00d8:  stelem.ref
      IL_00d9:  ldloc.s    V_7
      IL_00db:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                  string,
                                                                  object[])
      IL_00e0:  newobj     instance void LibGit2Sharp.RemoveFromIndexException::.ctor(string)
      IL_00e5:  throw

      IL_00e6:  ldloc.2
      IL_00e7:  ldarg.0
      IL_00e8:  ldloc.3
      IL_00e9:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_Path()
      IL_00ee:  call       instance string LibGit2Sharp.Index::RemoveFromIndex(string)
      IL_00f3:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<string>::Add(!0)
      IL_00f8:  br         IL_01c0

      IL_00fd:  ldloc.s    V_4
      IL_00ff:  box        LibGit2Sharp.FileStatus
      IL_0104:  ldc.i4     0x100
      IL_0109:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.FileStatus>(class [mscorlib]System.Enum,
                                                                                                                    !!0)
      IL_010e:  brfalse.s  IL_0148

      IL_0110:  ldloc.s    V_4
      IL_0112:  box        LibGit2Sharp.FileStatus
      IL_0117:  ldc.i4.2
      IL_0118:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.FileStatus>(class [mscorlib]System.Enum,
                                                                                                                    !!0)
      IL_011d:  brfalse.s  IL_0148

      IL_011f:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_0124:  ldstr      "Unable to remove file '{0}', as it has staged cont"
      + "ent different from both the working directory and the HEAD."
      IL_0129:  ldc.i4.1
      IL_012a:  newarr     [mscorlib]System.Object
      IL_012f:  stloc.s    V_8
      IL_0131:  ldloc.s    V_8
      IL_0133:  ldc.i4.0
      IL_0134:  ldloc.3
      IL_0135:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_Path()
      IL_013a:  stelem.ref
      IL_013b:  ldloc.s    V_8
      IL_013d:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                  string,
                                                                  object[])
      IL_0142:  newobj     instance void LibGit2Sharp.RemoveFromIndexException::.ctor(string)
      IL_0147:  throw

      IL_0148:  ldarg.2
      IL_0149:  brfalse.s  IL_0174

      IL_014b:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_0150:  ldstr      "Unable to remove file '{0}', as it has local modif"
      + "ications. You can call the Remove() method with removeFromWorkingDirect"
      + "ory=false if you want to remove it from the index only."
      IL_0155:  ldc.i4.1
      IL_0156:  newarr     [mscorlib]System.Object
      IL_015b:  stloc.s    V_9
      IL_015d:  ldloc.s    V_9
      IL_015f:  ldc.i4.0
      IL_0160:  ldloc.3
      IL_0161:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_Path()
      IL_0166:  stelem.ref
      IL_0167:  ldloc.s    V_9
      IL_0169:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                  string,
                                                                  object[])
      IL_016e:  newobj     instance void LibGit2Sharp.RemoveFromIndexException::.ctor(string)
      IL_0173:  throw

      IL_0174:  ldloc.2
      IL_0175:  ldarg.0
      IL_0176:  ldloc.3
      IL_0177:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_Path()
      IL_017c:  call       instance string LibGit2Sharp.Index::RemoveFromIndex(string)
      IL_0181:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<string>::Add(!0)
      IL_0186:  br.s       IL_01c0

      IL_0188:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_018d:  ldstr      "Unable to remove file '{0}'. Its current status is"
      + " '{1}'."
      IL_0192:  ldc.i4.2
      IL_0193:  newarr     [mscorlib]System.Object
      IL_0198:  stloc.s    V_10
      IL_019a:  ldloc.s    V_10
      IL_019c:  ldc.i4.0
      IL_019d:  ldloc.3
      IL_019e:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_Path()
      IL_01a3:  stelem.ref
      IL_01a4:  ldloc.s    V_10
      IL_01a6:  ldc.i4.1
      IL_01a7:  ldloc.3
      IL_01a8:  callvirt   instance valuetype LibGit2Sharp.ChangeKind LibGit2Sharp.TreeEntryChanges::get_Status()
      IL_01ad:  box        LibGit2Sharp.ChangeKind
      IL_01b2:  stelem.ref
      IL_01b3:  ldloc.s    V_10
      IL_01b5:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                  string,
                                                                  object[])
      IL_01ba:  newobj     instance void LibGit2Sharp.RemoveFromIndexException::.ctor(string)
      IL_01bf:  throw

      IL_01c0:  ldloc.s    V_5
      IL_01c2:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_01c7:  brtrue     IL_0041

      IL_01cc:  leave.s    IL_01da

    }  // end .try
    finally
    {
      IL_01ce:  ldloc.s    V_5
      IL_01d0:  brfalse.s  IL_01d9

      IL_01d2:  ldloc.s    V_5
      IL_01d4:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_01d9:  endfinally
    }  // end handler
    IL_01da:  ldarg.2
    IL_01db:  brfalse.s  IL_01e4

    IL_01dd:  ldarg.0
    IL_01de:  ldloc.2
    IL_01df:  call       instance void LibGit2Sharp.Index::RemoveFilesAndFolders(class [mscorlib]System.Collections.Generic.IEnumerable`1<string>)
    IL_01e4:  ldarg.0
    IL_01e5:  call       instance void LibGit2Sharp.Index::UpdatePhysicalIndex()
    IL_01ea:  ret
  } // end of method Index::Remove

  .method private hidebysig instance void 
          RemoveFilesAndFolders(class [mscorlib]System.Collections.Generic.IEnumerable`1<string> pathsList) cil managed
  {
    // Code size       93 (0x5d)
    .maxstack  2
    .locals init (string V_0,
             string V_1,
             string V_2,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<string> V_3)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_000b:  callvirt   instance string LibGit2Sharp.RepositoryInformation::get_WorkingDirectory()
    IL_0010:  stloc.0
    IL_0011:  ldarg.1
    IL_0012:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<string>::GetEnumerator()
    IL_0017:  stloc.3
    .try
    {
      IL_0018:  br.s       IL_0048

      IL_001a:  ldloc.3
      IL_001b:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<string>::get_Current()
      IL_0020:  stloc.1
      IL_0021:  ldloc.0
      IL_0022:  ldloc.1
      IL_0023:  call       string [mscorlib]System.IO.Path::Combine(string,
                                                                    string)
      IL_0028:  stloc.2
      IL_0029:  ldloc.2
      IL_002a:  call       bool [mscorlib]System.IO.Directory::Exists(string)
      IL_002f:  brfalse.s  IL_003a

      IL_0031:  ldloc.2
      IL_0032:  ldc.i4.1
      IL_0033:  call       void [mscorlib]System.IO.Directory::Delete(string,
                                                                      bool)
      IL_0038:  br.s       IL_0048

      IL_003a:  ldloc.2
      IL_003b:  call       bool [mscorlib]System.IO.File::Exists(string)
      IL_0040:  brfalse.s  IL_0048

      IL_0042:  ldloc.2
      IL_0043:  call       void [mscorlib]System.IO.File::Delete(string)
      IL_0048:  ldloc.3
      IL_0049:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_004e:  brtrue.s   IL_001a

      IL_0050:  leave.s    IL_005c

    }  // end .try
    finally
    {
      IL_0052:  ldloc.3
      IL_0053:  brfalse.s  IL_005b

      IL_0055:  ldloc.3
      IL_0056:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_005b:  endfinally
    }  // end handler
    IL_005c:  ret
  } // end of method Index::RemoveFilesAndFolders

  .method private hidebysig instance class [mscorlib]System.Collections.Generic.IDictionary`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>> 
          PrepareBatch(class [mscorlib]System.Collections.Generic.IEnumerable`1<string> leftPaths,
                       class [mscorlib]System.Collections.Generic.IEnumerable`1<string> rightPaths) cil managed
  {
    // Code size       69 (0x45)
    .maxstack  3
    .locals init (class [mscorlib]System.Collections.Generic.IDictionary`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>> V_0,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<string> V_1,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<string> V_2,
             class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus> V_3,
             class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus> V_4)
    IL_0000:  newobj     instance void class [mscorlib]System.Collections.Generic.Dictionary`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<string>::GetEnumerator()
    IL_000c:  stloc.1
    IL_000d:  ldarg.2
    IL_000e:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<string>::GetEnumerator()
    IL_0013:  stloc.2
    IL_0014:  br.s       IL_003a

    IL_0016:  ldarg.0
    IL_0017:  ldloc.1
    IL_0018:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<string>::get_Current()
    IL_001d:  call       instance class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus> LibGit2Sharp.Index::BuildFrom(string)
    IL_0022:  stloc.3
    IL_0023:  ldarg.0
    IL_0024:  ldloc.2
    IL_0025:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<string>::get_Current()
    IL_002a:  call       instance class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus> LibGit2Sharp.Index::BuildFrom(string)
    IL_002f:  stloc.s    V_4
    IL_0031:  ldloc.0
    IL_0032:  ldloc.3
    IL_0033:  ldloc.s    V_4
    IL_0035:  callvirt   instance void class [mscorlib]System.Collections.Generic.IDictionary`2<class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>,class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>>::Add(!0,
                                                                                                                                                                                                                                                                        !1)
    IL_003a:  ldloc.1
    IL_003b:  ldloc.2
    IL_003c:  call       bool LibGit2Sharp.Index::Enumerate(class [mscorlib]System.Collections.Generic.IEnumerator`1<string>,
                                                            class [mscorlib]System.Collections.Generic.IEnumerator`1<string>)
    IL_0041:  brtrue.s   IL_0016

    IL_0043:  ldloc.0
    IL_0044:  ret
  } // end of method Index::PrepareBatch

  .method private hidebysig instance class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus> 
          BuildFrom(string path) cil managed
  {
    // Code size       27 (0x1b)
    .maxstack  3
    .locals init (string V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_0006:  ldarg.1
    IL_0007:  call       string LibGit2Sharp.RepositoryExtensions::BuildRelativePathFrom(class LibGit2Sharp.Repository,
                                                                                         string)
    IL_000c:  stloc.0
    IL_000d:  ldloc.0
    IL_000e:  ldarg.0
    IL_000f:  ldloc.0
    IL_0010:  callvirt   instance valuetype LibGit2Sharp.FileStatus LibGit2Sharp.Index::RetrieveStatus(string)
    IL_0015:  newobj     instance void class LibGit2Sharp.Core.Compat.Tuple`2<string,valuetype LibGit2Sharp.FileStatus>::.ctor(!0,
                                                                                                                               !1)
    IL_001a:  ret
  } // end of method Index::BuildFrom

  .method private hidebysig static bool  Enumerate(class [mscorlib]System.Collections.Generic.IEnumerator`1<string> leftEnum,
                                                   class [mscorlib]System.Collections.Generic.IEnumerator`1<string> rightEnum) cil managed
  {
    // Code size       31 (0x1f)
    .maxstack  2
    .locals init (bool V_0,
             bool V_1)
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
    IL_0006:  stloc.0
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
    IL_000d:  stloc.1
    IL_000e:  ldloc.0
    IL_000f:  ldloc.1
    IL_0010:  bne.un.s   IL_0014

    IL_0012:  ldloc.0
    IL_0013:  ret

    IL_0014:  ldstr      "The collection of paths are of different lengths."
    IL_0019:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_001e:  throw
  } // end of method Index::Enumerate

  .method private hidebysig instance void 
          AddToIndex(string relativePath) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.SubmoduleCollection LibGit2Sharp.Repository::get_Submodules()
    IL_000b:  ldarg.1
    IL_000c:  ldc.i4.1
    IL_000d:  callvirt   instance bool LibGit2Sharp.SubmoduleCollection::TryStage(string,
                                                                                  bool)
    IL_0012:  brtrue.s   IL_0025

    IL_0014:  ldarg.0
    IL_0015:  ldfld      class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::handle
    IL_001a:  ldarg.1
    IL_001b:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0020:  call       void LibGit2Sharp.Core.Proxy::git_index_add_bypath(class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                            class LibGit2Sharp.Core.FilePath)
    IL_0025:  ret
  } // end of method Index::AddToIndex

  .method private hidebysig instance string 
          RemoveFromIndex(string relativePath) cil managed
  {
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::handle
    IL_0006:  ldarg.1
    IL_0007:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_000c:  call       void LibGit2Sharp.Core.Proxy::git_index_remove_bypath(class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                               class LibGit2Sharp.Core.FilePath)
    IL_0011:  ldarg.1
    IL_0012:  ret
  } // end of method Index::RemoveFromIndex

  .method private hidebysig instance void 
          UpdatePhysicalIndex() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_index_write(class LibGit2Sharp.Core.Handles.IndexSafeHandle)
    IL_000b:  ret
  } // end of method Index::UpdatePhysicalIndex

  .method public hidebysig newslot virtual 
          instance valuetype LibGit2Sharp.FileStatus 
          RetrieveStatus(string filePath) cil managed
  {
    // Code size       47 (0x2f)
    .maxstack  2
    .locals init (string V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "filePath"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_0011:  ldarg.1
    IL_0012:  call       string LibGit2Sharp.RepositoryExtensions::BuildRelativePathFrom(class LibGit2Sharp.Repository,
                                                                                         string)
    IL_0017:  stloc.0
    IL_0018:  ldarg.0
    IL_0019:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_001e:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0023:  ldloc.0
    IL_0024:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0029:  call       valuetype LibGit2Sharp.FileStatus LibGit2Sharp.Core.Proxy::git_status_file(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                    class LibGit2Sharp.Core.FilePath)
    IL_002e:  ret
  } // end of method Index::RetrieveStatus

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.RepositoryStatus 
          RetrieveStatus() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_0006:  newobj     instance void LibGit2Sharp.RepositoryStatus::.ctor(class LibGit2Sharp.Repository)
    IL_000b:  ret
  } // end of method Index::RetrieveStatus

  .method assembly hidebysig instance void 
          Reset(class LibGit2Sharp.TreeChanges changes) cil managed
  {
    // Code size       150 (0x96)
    .maxstack  5
    .locals init (class LibGit2Sharp.TreeEntryChanges V_0,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntryChanges> V_1,
             valuetype LibGit2Sharp.ChangeKind V_2,
             object[] V_3)
    IL_0000:  ldarg.1
    IL_0001:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntryChanges> LibGit2Sharp.TreeChanges::GetEnumerator()
    IL_0006:  stloc.1
    .try
    {
      IL_0007:  br.s       IL_007b

      IL_0009:  ldloc.1
      IL_000a:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntryChanges>::get_Current()
      IL_000f:  stloc.0
      IL_0010:  ldloc.0
      IL_0011:  callvirt   instance valuetype LibGit2Sharp.ChangeKind LibGit2Sharp.TreeEntryChanges::get_Status()
      IL_0016:  stloc.2
      IL_0017:  ldloc.2
      IL_0018:  switch     ( 
                            IL_007b,
                            IL_002f,
                            IL_003e,
                            IL_003e)
      IL_002d:  br.s       IL_0047

      IL_002f:  ldarg.0
      IL_0030:  ldloc.0
      IL_0031:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_Path()
      IL_0036:  call       instance string LibGit2Sharp.Index::RemoveFromIndex(string)
      IL_003b:  pop
      IL_003c:  br.s       IL_007b

      IL_003e:  ldarg.0
      IL_003f:  ldloc.0
      IL_0040:  call       instance void LibGit2Sharp.Index::ReplaceIndexEntryWith(class LibGit2Sharp.TreeEntryChanges)
      IL_0045:  br.s       IL_007b

      IL_0047:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
      IL_004c:  ldstr      "Entry '{0}' bears an unexpected ChangeKind '{1}'"
      IL_0051:  ldc.i4.2
      IL_0052:  newarr     [mscorlib]System.Object
      IL_0057:  stloc.3
      IL_0058:  ldloc.3
      IL_0059:  ldc.i4.0
      IL_005a:  ldloc.0
      IL_005b:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_Path()
      IL_0060:  stelem.ref
      IL_0061:  ldloc.3
      IL_0062:  ldc.i4.1
      IL_0063:  ldloc.0
      IL_0064:  callvirt   instance valuetype LibGit2Sharp.ChangeKind LibGit2Sharp.TreeEntryChanges::get_Status()
      IL_0069:  box        LibGit2Sharp.ChangeKind
      IL_006e:  stelem.ref
      IL_006f:  ldloc.3
      IL_0070:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                  string,
                                                                  object[])
      IL_0075:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ldloc.1
      IL_007c:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_0081:  brtrue.s   IL_0009

      IL_0083:  leave.s    IL_008f

    }  // end .try
    finally
    {
      IL_0085:  ldloc.1
      IL_0086:  brfalse.s  IL_008e

      IL_0088:  ldloc.1
      IL_0089:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_008e:  endfinally
    }  // end handler
    IL_008f:  ldarg.0
    IL_0090:  call       instance void LibGit2Sharp.Index::UpdatePhysicalIndex()
    IL_0095:  ret
  } // end of method Index::Reset

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.ConflictCollection 
          get_Conflicts() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.ConflictCollection LibGit2Sharp.Index::conflicts
    IL_0006:  ret
  } // end of method Index::get_Conflicts

  .method private hidebysig instance void 
          ReplaceIndexEntryWith(class LibGit2Sharp.TreeEntryChanges treeEntryChanges) cil managed
  {
    // Code size       83 (0x53)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.GitIndexEntry V_0,
             class LibGit2Sharp.Core.GitIndexEntry V_1)
    IL_0000:  newobj     instance void LibGit2Sharp.Core.GitIndexEntry::.ctor()
    IL_0005:  stloc.1
    IL_0006:  ldloc.1
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntryChanges::get_OldMode()
    IL_000d:  stfld      uint32 LibGit2Sharp.Core.GitIndexEntry::Mode
    IL_0012:  ldloc.1
    IL_0013:  ldarg.1
    IL_0014:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntryChanges::get_OldOid()
    IL_0019:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
    IL_001e:  stfld      valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.Core.GitIndexEntry::oid
    IL_0023:  ldloc.1
    IL_0024:  ldarg.1
    IL_0025:  callvirt   instance string LibGit2Sharp.TreeEntryChanges::get_OldPath()
    IL_002a:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_002f:  call       native int LibGit2Sharp.Core.FilePathMarshaler::FromManaged(class LibGit2Sharp.Core.FilePath)
    IL_0034:  stfld      native int LibGit2Sharp.Core.GitIndexEntry::Path
    IL_0039:  ldloc.1
    IL_003a:  stloc.0
    IL_003b:  ldarg.0
    IL_003c:  ldfld      class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::handle
    IL_0041:  ldloc.0
    IL_0042:  call       void LibGit2Sharp.Core.Proxy::git_index_add(class LibGit2Sharp.Core.Handles.IndexSafeHandle,
                                                                     class LibGit2Sharp.Core.GitIndexEntry)
    IL_0047:  ldloc.0
    IL_0048:  ldfld      native int LibGit2Sharp.Core.GitIndexEntry::Path
    IL_004d:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::FreeHGlobal(native int)
    IL_0052:  ret
  } // end of method Index::ReplaceIndexEntryWith

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       38 (0x26)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "Count = {0}"
    IL_000a:  ldc.i4.1
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance int32 LibGit2Sharp.Index::get_Count()
    IL_0019:  box        [mscorlib]System.Int32
    IL_001e:  stelem.ref
    IL_001f:  ldloc.0
    IL_0020:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0025:  ret
  } // end of method Index::get_DebuggerDisplay

  .method private hidebysig instance bool 
          '<Remove>b__0'(string p) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       28 (0x1c)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Index::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_000b:  callvirt   instance string LibGit2Sharp.RepositoryInformation::get_WorkingDirectory()
    IL_0010:  ldarg.1
    IL_0011:  call       string [mscorlib]System.IO.Path::Combine(string,
                                                                  string)
    IL_0016:  call       bool [mscorlib]System.IO.Directory::Exists(string)
    IL_001b:  ret
  } // end of method Index::'<Remove>b__0'

  .property instance class LibGit2Sharp.Core.Handles.IndexSafeHandle
          Handle()
  {
    .get instance class LibGit2Sharp.Core.Handles.IndexSafeHandle LibGit2Sharp.Index::get_Handle()
  } // end of property Index::Handle
  .property instance int32 Count()
  {
    .get instance int32 LibGit2Sharp.Index::get_Count()
  } // end of property Index::Count
  .property instance bool IsFullyMerged()
  {
    .get instance bool LibGit2Sharp.Index::get_IsFullyMerged()
  } // end of property Index::IsFullyMerged
  .property instance class LibGit2Sharp.IndexEntry
          Item(string)
  {
    .get instance class LibGit2Sharp.IndexEntry LibGit2Sharp.Index::get_Item(string)
  } // end of property Index::Item
  .property instance class LibGit2Sharp.IndexEntry
          Item(int32)
  {
    .get instance class LibGit2Sharp.IndexEntry LibGit2Sharp.Index::get_Item(int32)
  } // end of property Index::Item
  .property instance class LibGit2Sharp.ConflictCollection
          Conflicts()
  {
    .get instance class LibGit2Sharp.ConflictCollection LibGit2Sharp.Index::get_Conflicts()
  } // end of property Index::Conflicts
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.Index::get_DebuggerDisplay()
  } // end of property Index::DebuggerDisplay
} // end of class LibGit2Sharp.Index

.class public auto ansi beforefieldinit LibGit2Sharp.IndexEntry
       extends [mscorlib]System.Object
       implements class [mscorlib]System.IEquatable`1<class LibGit2Sharp.IndexEntry>
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field private static initonly class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.IndexEntry> equalityHelper
  .field private string '<Path>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private valuetype LibGit2Sharp.Mode '<Mode>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private valuetype LibGit2Sharp.StageLevel '<StageLevel>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private class LibGit2Sharp.ObjectId '<Id>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> 'CS$<>9__CachedAnonymousMethodDelegate5'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> 'CS$<>9__CachedAnonymousMethodDelegate6'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> 'CS$<>9__CachedAnonymousMethodDelegate7'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> 'CS$<>9__CachedAnonymousMethodDelegate8'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig newslot specialname virtual 
          instance string  get_Path() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.IndexEntry::'<Path>k__BackingField'
    IL_0006:  ret
  } // end of method IndexEntry::get_Path

  .method private hidebysig specialname instance void 
          set_Path(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.IndexEntry::'<Path>k__BackingField'
    IL_0007:  ret
  } // end of method IndexEntry::set_Path

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.Mode 
          get_Mode() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.Mode LibGit2Sharp.IndexEntry::'<Mode>k__BackingField'
    IL_0006:  ret
  } // end of method IndexEntry::get_Mode

  .method private hidebysig specialname instance void 
          set_Mode(valuetype LibGit2Sharp.Mode 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      valuetype LibGit2Sharp.Mode LibGit2Sharp.IndexEntry::'<Mode>k__BackingField'
    IL_0007:  ret
  } // end of method IndexEntry::set_Mode

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.StageLevel 
          get_StageLevel() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.StageLevel LibGit2Sharp.IndexEntry::'<StageLevel>k__BackingField'
    IL_0006:  ret
  } // end of method IndexEntry::get_StageLevel

  .method private hidebysig specialname instance void 
          set_StageLevel(valuetype LibGit2Sharp.StageLevel 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      valuetype LibGit2Sharp.StageLevel LibGit2Sharp.IndexEntry::'<StageLevel>k__BackingField'
    IL_0007:  ret
  } // end of method IndexEntry::set_StageLevel

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.ObjectId 
          get_Id() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.IndexEntry::'<Id>k__BackingField'
    IL_0006:  ret
  } // end of method IndexEntry::get_Id

  .method private hidebysig specialname instance void 
          set_Id(class LibGit2Sharp.ObjectId 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.IndexEntry::'<Id>k__BackingField'
    IL_0007:  ret
  } // end of method IndexEntry::set_Id

  .method assembly hidebysig static class LibGit2Sharp.IndexEntry 
          BuildFromPtr(class LibGit2Sharp.Repository repo,
                       class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle handle) cil managed
  {
    // Code size       93 (0x5d)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.GitIndexEntry V_0,
             class LibGit2Sharp.Core.FilePath V_1,
             class LibGit2Sharp.IndexEntry V_2)
    IL_0000:  ldarg.1
    IL_0001:  brfalse.s  IL_000b

    IL_0003:  ldarg.1
    IL_0004:  callvirt   instance bool LibGit2Sharp.Core.Handles.NotOwnedSafeHandleBase::get_IsZero()
    IL_0009:  brfalse.s  IL_000d

    IL_000b:  ldnull
    IL_000c:  ret

    IL_000d:  ldarg.1
    IL_000e:  callvirt   instance class LibGit2Sharp.Core.GitIndexEntry LibGit2Sharp.Core.Handles.IndexEntrySafeHandle::MarshalAsGitIndexEntry()
    IL_0013:  stloc.0
    IL_0014:  ldloc.0
    IL_0015:  ldfld      native int LibGit2Sharp.Core.GitIndexEntry::Path
    IL_001a:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePathMarshaler::FromNative(native int)
    IL_001f:  stloc.1
    IL_0020:  newobj     instance void LibGit2Sharp.IndexEntry::.ctor()
    IL_0025:  stloc.2
    IL_0026:  ldloc.2
    IL_0027:  ldloc.1
    IL_0028:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
    IL_002d:  callvirt   instance void LibGit2Sharp.IndexEntry::set_Path(string)
    IL_0032:  ldloc.2
    IL_0033:  ldloc.0
    IL_0034:  ldfld      valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.Core.GitIndexEntry::oid
    IL_0039:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
    IL_003e:  callvirt   instance void LibGit2Sharp.IndexEntry::set_Id(class LibGit2Sharp.ObjectId)
    IL_0043:  ldloc.2
    IL_0044:  ldarg.1
    IL_0045:  call       valuetype LibGit2Sharp.StageLevel LibGit2Sharp.Core.Proxy::git_index_entry_stage(class LibGit2Sharp.Core.Handles.IndexEntrySafeHandle)
    IL_004a:  callvirt   instance void LibGit2Sharp.IndexEntry::set_StageLevel(valuetype LibGit2Sharp.StageLevel)
    IL_004f:  ldloc.2
    IL_0050:  ldloc.0
    IL_0051:  ldfld      uint32 LibGit2Sharp.Core.GitIndexEntry::Mode
    IL_0056:  callvirt   instance void LibGit2Sharp.IndexEntry::set_Mode(valuetype LibGit2Sharp.Mode)
    IL_005b:  ldloc.2
    IL_005c:  ret
  } // end of method IndexEntry::BuildFromPtr

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  isinst     LibGit2Sharp.IndexEntry
    IL_0007:  call       instance bool LibGit2Sharp.IndexEntry::Equals(class LibGit2Sharp.IndexEntry)
    IL_000c:  ret
  } // end of method IndexEntry::Equals

  .method public hidebysig newslot virtual final 
          instance bool  Equals(class LibGit2Sharp.IndexEntry other) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.IndexEntry> LibGit2Sharp.IndexEntry::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance bool class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.IndexEntry>::Equals(!0,
                                                                                                                             !0)
    IL_000c:  ret
  } // end of method IndexEntry::Equals

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.IndexEntry> LibGit2Sharp.IndexEntry::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  callvirt   instance int32 class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.IndexEntry>::GetHashCode(!0)
    IL_000b:  ret
  } // end of method IndexEntry::GetHashCode

  .method public hidebysig specialname static 
          bool  op_Equality(class LibGit2Sharp.IndexEntry left,
                            class LibGit2Sharp.IndexEntry right) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ret
  } // end of method IndexEntry::op_Equality

  .method public hidebysig specialname static 
          bool  op_Inequality(class LibGit2Sharp.IndexEntry left,
                              class LibGit2Sharp.IndexEntry right) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  ret
  } // end of method IndexEntry::op_Inequality

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       62 (0x3e)
    .maxstack  6
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "{0} ({1}) => \"{2}\""
    IL_000a:  ldc.i4.3
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance string LibGit2Sharp.IndexEntry::get_Path()
    IL_0019:  stelem.ref
    IL_001a:  ldloc.0
    IL_001b:  ldc.i4.1
    IL_001c:  ldarg.0
    IL_001d:  callvirt   instance valuetype LibGit2Sharp.StageLevel LibGit2Sharp.IndexEntry::get_StageLevel()
    IL_0022:  box        LibGit2Sharp.StageLevel
    IL_0027:  stelem.ref
    IL_0028:  ldloc.0
    IL_0029:  ldc.i4.2
    IL_002a:  ldarg.0
    IL_002b:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.IndexEntry::get_Id()
    IL_0030:  ldc.i4.7
    IL_0031:  callvirt   instance string LibGit2Sharp.ObjectId::ToString(int32)
    IL_0036:  stelem.ref
    IL_0037:  ldloc.0
    IL_0038:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_003d:  ret
  } // end of method IndexEntry::get_DebuggerDisplay

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method IndexEntry::.ctor

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       147 (0x93)
    .maxstack  5
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object>[] V_0)
    IL_0000:  ldc.i4.4
    IL_0001:  newarr     class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object>
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldc.i4.0
    IL_0009:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> LibGit2Sharp.IndexEntry::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_000e:  brtrue.s   IL_0021

    IL_0010:  ldnull
    IL_0011:  ldftn      object LibGit2Sharp.IndexEntry::'<.cctor>b__1'(class LibGit2Sharp.IndexEntry)
    IL_0017:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object>::.ctor(object,
                                                                                                                     native int)
    IL_001c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> LibGit2Sharp.IndexEntry::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0021:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> LibGit2Sharp.IndexEntry::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0026:  stelem.ref
    IL_0027:  ldloc.0
    IL_0028:  ldc.i4.1
    IL_0029:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> LibGit2Sharp.IndexEntry::'CS$<>9__CachedAnonymousMethodDelegate6'
    IL_002e:  brtrue.s   IL_0041

    IL_0030:  ldnull
    IL_0031:  ldftn      object LibGit2Sharp.IndexEntry::'<.cctor>b__2'(class LibGit2Sharp.IndexEntry)
    IL_0037:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object>::.ctor(object,
                                                                                                                     native int)
    IL_003c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> LibGit2Sharp.IndexEntry::'CS$<>9__CachedAnonymousMethodDelegate6'
    IL_0041:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> LibGit2Sharp.IndexEntry::'CS$<>9__CachedAnonymousMethodDelegate6'
    IL_0046:  stelem.ref
    IL_0047:  ldloc.0
    IL_0048:  ldc.i4.2
    IL_0049:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> LibGit2Sharp.IndexEntry::'CS$<>9__CachedAnonymousMethodDelegate7'
    IL_004e:  brtrue.s   IL_0061

    IL_0050:  ldnull
    IL_0051:  ldftn      object LibGit2Sharp.IndexEntry::'<.cctor>b__3'(class LibGit2Sharp.IndexEntry)
    IL_0057:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object>::.ctor(object,
                                                                                                                     native int)
    IL_005c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> LibGit2Sharp.IndexEntry::'CS$<>9__CachedAnonymousMethodDelegate7'
    IL_0061:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> LibGit2Sharp.IndexEntry::'CS$<>9__CachedAnonymousMethodDelegate7'
    IL_0066:  stelem.ref
    IL_0067:  ldloc.0
    IL_0068:  ldc.i4.3
    IL_0069:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> LibGit2Sharp.IndexEntry::'CS$<>9__CachedAnonymousMethodDelegate8'
    IL_006e:  brtrue.s   IL_0081

    IL_0070:  ldnull
    IL_0071:  ldftn      object LibGit2Sharp.IndexEntry::'<.cctor>b__4'(class LibGit2Sharp.IndexEntry)
    IL_0077:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object>::.ctor(object,
                                                                                                                     native int)
    IL_007c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> LibGit2Sharp.IndexEntry::'CS$<>9__CachedAnonymousMethodDelegate8'
    IL_0081:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.IndexEntry,object> LibGit2Sharp.IndexEntry::'CS$<>9__CachedAnonymousMethodDelegate8'
    IL_0086:  stelem.ref
    IL_0087:  ldloc.0
    IL_0088:  newobj     instance void class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.IndexEntry>::.ctor(class [System.Core]System.Func`2<!0,object>[])
    IL_008d:  stsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.IndexEntry> LibGit2Sharp.IndexEntry::equalityHelper
    IL_0092:  ret
  } // end of method IndexEntry::.cctor

  .method private hidebysig static object 
          '<.cctor>b__1'(class LibGit2Sharp.IndexEntry x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.IndexEntry::get_Path()
    IL_0006:  ret
  } // end of method IndexEntry::'<.cctor>b__1'

  .method private hidebysig static object 
          '<.cctor>b__2'(class LibGit2Sharp.IndexEntry x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.IndexEntry::get_Id()
    IL_0006:  ret
  } // end of method IndexEntry::'<.cctor>b__2'

  .method private hidebysig static object 
          '<.cctor>b__3'(class LibGit2Sharp.IndexEntry x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance valuetype LibGit2Sharp.Mode LibGit2Sharp.IndexEntry::get_Mode()
    IL_0006:  box        LibGit2Sharp.Mode
    IL_000b:  ret
  } // end of method IndexEntry::'<.cctor>b__3'

  .method private hidebysig static object 
          '<.cctor>b__4'(class LibGit2Sharp.IndexEntry x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance valuetype LibGit2Sharp.StageLevel LibGit2Sharp.IndexEntry::get_StageLevel()
    IL_0006:  box        LibGit2Sharp.StageLevel
    IL_000b:  ret
  } // end of method IndexEntry::'<.cctor>b__4'

  .property instance string Path()
  {
    .get instance string LibGit2Sharp.IndexEntry::get_Path()
    .set instance void LibGit2Sharp.IndexEntry::set_Path(string)
  } // end of property IndexEntry::Path
  .property instance valuetype LibGit2Sharp.Mode
          Mode()
  {
    .get instance valuetype LibGit2Sharp.Mode LibGit2Sharp.IndexEntry::get_Mode()
    .set instance void LibGit2Sharp.IndexEntry::set_Mode(valuetype LibGit2Sharp.Mode)
  } // end of property IndexEntry::Mode
  .property instance valuetype LibGit2Sharp.StageLevel
          StageLevel()
  {
    .get instance valuetype LibGit2Sharp.StageLevel LibGit2Sharp.IndexEntry::get_StageLevel()
    .set instance void LibGit2Sharp.IndexEntry::set_StageLevel(valuetype LibGit2Sharp.StageLevel)
  } // end of property IndexEntry::StageLevel
  .property instance class LibGit2Sharp.ObjectId
          Id()
  {
    .get instance class LibGit2Sharp.ObjectId LibGit2Sharp.IndexEntry::get_Id()
    .set instance void LibGit2Sharp.IndexEntry::set_Id(class LibGit2Sharp.ObjectId)
  } // end of property IndexEntry::Id
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.IndexEntry::get_DebuggerDisplay()
  } // end of property IndexEntry::DebuggerDisplay
} // end of class LibGit2Sharp.IndexEntry

.class public auto ansi beforefieldinit LibGit2Sharp.Filter
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 2E 54 68 69 73 20 74 79 70 65 20 77 69 6C   // ...This type wil
                                                                              6C 20 62 65 20 72 65 6D 6F 76 65 64 20 69 6E 20   // l be removed in 
                                                                              74 68 65 20 6E 65 78 74 20 72 65 6C 65 61 73 65   // the next release
                                                                              2E 00 00 )                                        // ...
  .field private valuetype LibGit2Sharp.GitSortOptions '<SortBy>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private object '<Since>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private object '<Until>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       25 (0x19)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldc.i4.2
    IL_0008:  call       instance void LibGit2Sharp.Filter::set_SortBy(valuetype LibGit2Sharp.GitSortOptions)
    IL_000d:  ldarg.0
    IL_000e:  ldstr      "HEAD"
    IL_0013:  call       instance void LibGit2Sharp.Filter::set_Since(object)
    IL_0018:  ret
  } // end of method Filter::.ctor

  .method public hidebysig specialname instance valuetype LibGit2Sharp.GitSortOptions 
          get_SortBy() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.GitSortOptions LibGit2Sharp.Filter::'<SortBy>k__BackingField'
    IL_0006:  ret
  } // end of method Filter::get_SortBy

  .method public hidebysig specialname instance void 
          set_SortBy(valuetype LibGit2Sharp.GitSortOptions 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      valuetype LibGit2Sharp.GitSortOptions LibGit2Sharp.Filter::'<SortBy>k__BackingField'
    IL_0007:  ret
  } // end of method Filter::set_SortBy

  .method public hidebysig specialname instance object 
          get_Since() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      object LibGit2Sharp.Filter::'<Since>k__BackingField'
    IL_0006:  ret
  } // end of method Filter::get_Since

  .method public hidebysig specialname instance void 
          set_Since(object 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      object LibGit2Sharp.Filter::'<Since>k__BackingField'
    IL_0007:  ret
  } // end of method Filter::set_Since

  .method public hidebysig specialname instance object 
          get_Until() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      object LibGit2Sharp.Filter::'<Until>k__BackingField'
    IL_0006:  ret
  } // end of method Filter::get_Until

  .method public hidebysig specialname instance void 
          set_Until(object 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      object LibGit2Sharp.Filter::'<Until>k__BackingField'
    IL_0007:  ret
  } // end of method Filter::set_Until

  .method assembly hidebysig instance class LibGit2Sharp.CommitFilter 
          ToCommitFilter() cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  2
    .locals init (class LibGit2Sharp.CommitFilter V_0,
             class LibGit2Sharp.CommitFilter V_1)
    IL_0000:  newobj     instance void LibGit2Sharp.CommitFilter::.ctor()
    IL_0005:  stloc.1
    IL_0006:  ldloc.1
    IL_0007:  ldarg.0
    IL_0008:  call       instance object LibGit2Sharp.Filter::get_Since()
    IL_000d:  callvirt   instance void LibGit2Sharp.CommitFilter::set_Since(object)
    IL_0012:  ldloc.1
    IL_0013:  ldarg.0
    IL_0014:  call       instance valuetype LibGit2Sharp.GitSortOptions LibGit2Sharp.Filter::get_SortBy()
    IL_0019:  callvirt   instance void LibGit2Sharp.CommitFilter::set_SortBy(valuetype LibGit2Sharp.CommitSortStrategies)
    IL_001e:  ldloc.1
    IL_001f:  ldarg.0
    IL_0020:  call       instance object LibGit2Sharp.Filter::get_Until()
    IL_0025:  callvirt   instance void LibGit2Sharp.CommitFilter::set_Until(object)
    IL_002a:  ldloc.1
    IL_002b:  stloc.0
    IL_002c:  ldloc.0
    IL_002d:  ret
  } // end of method Filter::ToCommitFilter

  .property instance valuetype LibGit2Sharp.GitSortOptions
          SortBy()
  {
    .set instance void LibGit2Sharp.Filter::set_SortBy(valuetype LibGit2Sharp.GitSortOptions)
    .get instance valuetype LibGit2Sharp.GitSortOptions LibGit2Sharp.Filter::get_SortBy()
  } // end of property Filter::SortBy
  .property instance object Since()
  {
    .set instance void LibGit2Sharp.Filter::set_Since(object)
    .get instance object LibGit2Sharp.Filter::get_Since()
  } // end of property Filter::Since
  .property instance object Until()
  {
    .get instance object LibGit2Sharp.Filter::get_Until()
    .set instance void LibGit2Sharp.Filter::set_Until(object)
  } // end of property Filter::Until
} // end of class LibGit2Sharp.Filter

.class private auto ansi sealed LibGit2Sharp.Core.LookUpOptions
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.Core.LookUpOptions None = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.Core.LookUpOptions ThrowWhenNoGitObjectHasBeenFound = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.Core.LookUpOptions DereferenceResultToCommit = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.Core.LookUpOptions ThrowWhenCanNotBeDereferencedToACommit = int32(0x00000004)
} // end of class LibGit2Sharp.Core.LookUpOptions

.class public auto ansi sealed LibGit2Sharp.Mode
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.Mode Nonexistent = int32(0x00000000)
  .field public static literal valuetype LibGit2Sharp.Mode Directory = int32(0x00004000)
  .field public static literal valuetype LibGit2Sharp.Mode NonExecutableFile = int32(0x000081A4)
  .field public static literal valuetype LibGit2Sharp.Mode NonExecutableGroupWritableFile = int32(0x000081B4)
  .field public static literal valuetype LibGit2Sharp.Mode ExecutableFile = int32(0x000081ED)
  .field public static literal valuetype LibGit2Sharp.Mode SymbolicLink = int32(0x0000A000)
  .field public static literal valuetype LibGit2Sharp.Mode GitLink = int32(0x0000E000)
} // end of class LibGit2Sharp.Mode

.class public auto ansi beforefieldinit LibGit2Sharp.ObjectDatabase
       extends [mscorlib]System.Object
{
  .class auto ansi nested private beforefieldinit Processor
         extends [mscorlib]System.Object
  {
    .field private initonly class [mscorlib]System.IO.Stream 'stream'
    .field private initonly valuetype [mscorlib]System.Nullable`1<int32> numberOfBytesToConsume
    .field private int32 totalNumberOfReadBytes
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(class [mscorlib]System.IO.Stream 'stream',
                                 valuetype [mscorlib]System.Nullable`1<int32> numberOfBytesToConsume) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  stfld      class [mscorlib]System.IO.Stream LibGit2Sharp.ObjectDatabase/Processor::'stream'
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  stfld      valuetype [mscorlib]System.Nullable`1<int32> LibGit2Sharp.ObjectDatabase/Processor::numberOfBytesToConsume
      IL_0014:  ret
    } // end of method Processor::.ctor

    .method public hidebysig instance int32 
            Provider(native int content,
                     int32 max_length,
                     native int data) cil managed
    {
      // Code size       95 (0x5f)
      .maxstack  4
      .locals init (uint8[] V_0,
               int32 V_1,
               int32 V_2,
               int32 V_3,
               valuetype [mscorlib]System.Nullable`1<int32> V_4,
               valuetype [mscorlib]System.Nullable`1<int32> V_5)
      IL_0000:  ldarg.2
      IL_0001:  newarr     [mscorlib]System.Byte
      IL_0006:  stloc.0
      IL_0007:  ldarg.2
      IL_0008:  stloc.1
      IL_0009:  ldarg.0
      IL_000a:  ldfld      valuetype [mscorlib]System.Nullable`1<int32> LibGit2Sharp.ObjectDatabase/Processor::numberOfBytesToConsume
      IL_000f:  stloc.s    V_4
      IL_0011:  ldloca.s   V_4
      IL_0013:  call       instance bool valuetype [mscorlib]System.Nullable`1<int32>::get_HasValue()
      IL_0018:  brfalse.s  IL_0037

      IL_001a:  ldarg.0
      IL_001b:  ldfld      valuetype [mscorlib]System.Nullable`1<int32> LibGit2Sharp.ObjectDatabase/Processor::numberOfBytesToConsume
      IL_0020:  stloc.s    V_5
      IL_0022:  ldloca.s   V_5
      IL_0024:  call       instance !0 valuetype [mscorlib]System.Nullable`1<int32>::get_Value()
      IL_0029:  ldarg.0
      IL_002a:  ldfld      int32 LibGit2Sharp.ObjectDatabase/Processor::totalNumberOfReadBytes
      IL_002f:  sub
      IL_0030:  stloc.2
      IL_0031:  ldloc.2
      IL_0032:  ldarg.2
      IL_0033:  bge.s      IL_0037

      IL_0035:  ldloc.2
      IL_0036:  stloc.1
      IL_0037:  ldarg.0
      IL_0038:  ldfld      class [mscorlib]System.IO.Stream LibGit2Sharp.ObjectDatabase/Processor::'stream'
      IL_003d:  ldloc.0
      IL_003e:  ldc.i4.0
      IL_003f:  ldloc.1
      IL_0040:  callvirt   instance int32 [mscorlib]System.IO.Stream::Read(uint8[],
                                                                           int32,
                                                                           int32)
      IL_0045:  stloc.3
      IL_0046:  ldarg.0
      IL_0047:  dup
      IL_0048:  ldfld      int32 LibGit2Sharp.ObjectDatabase/Processor::totalNumberOfReadBytes
      IL_004d:  ldloc.3
      IL_004e:  add
      IL_004f:  stfld      int32 LibGit2Sharp.ObjectDatabase/Processor::totalNumberOfReadBytes
      IL_0054:  ldloc.0
      IL_0055:  ldc.i4.0
      IL_0056:  ldarg.1
      IL_0057:  ldloc.3
      IL_0058:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::Copy(uint8[],
                                                                                       int32,
                                                                                       native int,
                                                                                       int32)
      IL_005d:  ldloc.3
      IL_005e:  ret
    } // end of method Processor::Provider

  } // end of class Processor

  .field private initonly class LibGit2Sharp.Repository repo
  .field private initonly class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle handle
  .field private static class [System.Core]System.Func`2<int32,bool> 'CS$<>9__CachedAnonymousMethodDelegate1'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Commit,valuetype LibGit2Sharp.Core.GitOid> 'CS$<>9__CachedAnonymousMethodDelegate3'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ObjectDatabase::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       44 (0x2c)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.ObjectDatabase::repo
    IL_000d:  ldarg.0
    IL_000e:  ldarg.1
    IL_000f:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0014:  call       class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle LibGit2Sharp.Core.Proxy::git_repository_odb(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0019:  stfld      class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle LibGit2Sharp.ObjectDatabase::handle
    IL_001e:  ldarg.1
    IL_001f:  ldarg.0
    IL_0020:  ldfld      class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle LibGit2Sharp.ObjectDatabase::handle
    IL_0025:  callvirt   instance !!0 LibGit2Sharp.Repository::RegisterForCleanup<class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle>(!!0)
    IL_002a:  pop
    IL_002b:  ret
  } // end of method ObjectDatabase::.ctor

  .method public hidebysig newslot virtual 
          instance bool  Contains(class LibGit2Sharp.ObjectId objectId) cil managed
  {
    // Code size       24 (0x18)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "objectId"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle LibGit2Sharp.ObjectDatabase::handle
    IL_0011:  ldarg.1
    IL_0012:  call       bool LibGit2Sharp.Core.Proxy::git_odb_exists(class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle,
                                                                      class LibGit2Sharp.ObjectId)
    IL_0017:  ret
  } // end of method ObjectDatabase::Contains

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Blob 
          CreateBlob(string path) cil managed
  {
    // Code size       138 (0x8a)
    .maxstack  5
    .locals init (class LibGit2Sharp.ObjectId V_0,
             object[] V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "path"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ObjectDatabase::repo
    IL_0011:  callvirt   instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_0016:  callvirt   instance bool LibGit2Sharp.RepositoryInformation::get_IsBare()
    IL_001b:  brfalse.s  IL_0046

    IL_001d:  ldarg.1
    IL_001e:  call       bool [mscorlib]System.IO.Path::IsPathRooted(string)
    IL_0023:  brtrue.s   IL_0046

    IL_0025:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_002a:  ldstr      "Cannot create a blob in a bare repository from a r"
    + "elative path ('{0}')."
    IL_002f:  ldc.i4.1
    IL_0030:  newarr     [mscorlib]System.Object
    IL_0035:  stloc.1
    IL_0036:  ldloc.1
    IL_0037:  ldc.i4.0
    IL_0038:  ldarg.1
    IL_0039:  stelem.ref
    IL_003a:  ldloc.1
    IL_003b:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0040:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor(string)
    IL_0045:  throw

    IL_0046:  ldarg.1
    IL_0047:  call       bool [mscorlib]System.IO.Path::IsPathRooted(string)
    IL_004c:  brtrue.s   IL_0066

    IL_004e:  ldarg.0
    IL_004f:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ObjectDatabase::repo
    IL_0054:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0059:  ldarg.1
    IL_005a:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_005f:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_blob_create_fromfile(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                       class LibGit2Sharp.Core.FilePath)
    IL_0064:  br.s       IL_007c

    IL_0066:  ldarg.0
    IL_0067:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ObjectDatabase::repo
    IL_006c:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0071:  ldarg.1
    IL_0072:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0077:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_blob_create_fromdisk(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                       class LibGit2Sharp.Core.FilePath)
    IL_007c:  stloc.0
    IL_007d:  ldarg.0
    IL_007e:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ObjectDatabase::repo
    IL_0083:  ldloc.0
    IL_0084:  call       !!0 LibGit2Sharp.RepositoryExtensions::Lookup<class LibGit2Sharp.Blob>(class LibGit2Sharp.IRepository,
                                                                                                class LibGit2Sharp.ObjectId)
    IL_0089:  ret
  } // end of method ObjectDatabase::CreateBlob

  .method public hidebysig newslot virtual 
          instance void  AddBackend(class LibGit2Sharp.OdbBackend backend,
                                    int32 priority) cil managed
  {
    // Code size       70 (0x46)
    .maxstack  4
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "backend"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldsfld     class [System.Core]System.Func`2<int32,bool> LibGit2Sharp.ObjectDatabase::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0011:  brtrue.s   IL_0024

    IL_0013:  ldnull
    IL_0014:  ldftn      bool LibGit2Sharp.ObjectDatabase::'<AddBackend>b__0'(int32)
    IL_001a:  newobj     instance void class [System.Core]System.Func`2<int32,bool>::.ctor(object,
                                                                                           native int)
    IL_001f:  stsfld     class [System.Core]System.Func`2<int32,bool> LibGit2Sharp.ObjectDatabase::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0024:  ldsfld     class [System.Core]System.Func`2<int32,bool> LibGit2Sharp.ObjectDatabase::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0029:  ldstr      "priority"
    IL_002e:  call       void LibGit2Sharp.Core.Ensure::ArgumentConformsTo<int32>(!!0,
                                                                                  class [System.Core]System.Func`2<!!0,bool>,
                                                                                  string)
    IL_0033:  ldarg.0
    IL_0034:  ldfld      class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle LibGit2Sharp.ObjectDatabase::handle
    IL_0039:  ldarg.1
    IL_003a:  callvirt   instance native int LibGit2Sharp.OdbBackend::get_GitOdbBackendPointer()
    IL_003f:  ldarg.2
    IL_0040:  call       void LibGit2Sharp.Core.Proxy::git_odb_add_backend(class LibGit2Sharp.Core.Handles.ObjectDatabaseSafeHandle,
                                                                           native int,
                                                                           int32)
    IL_0045:  ret
  } // end of method ObjectDatabase::AddBackend

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Blob 
          CreateBlob(class [mscorlib]System.IO.BinaryReader reader,
                     [opt] string hintpath) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 5F 54 68 69 73 20 6D 65 74 68 6F 64 20 77   // .._This method w
                                                                                69 6C 6C 20 62 65 20 72 65 6D 6F 76 65 64 20 69   // ill be removed i
                                                                                6E 20 74 68 65 20 6E 65 78 74 20 72 65 6C 65 61   // n the next relea
                                                                                73 65 2E 20 50 6C 65 61 73 65 20 75 73 65 20 43   // se. Please use C
                                                                                72 65 61 74 65 42 6C 6F 62 28 53 74 72 65 61 6D   // reateBlob(Stream
                                                                                2C 20 73 74 72 69 6E 67 29 20 69 6E 73 74 65 61   // , string) instea
                                                                                64 2E 00 00 )                                     // d...
    .param [2] = nullref
    // Code size       34 (0x22)
    .maxstack  4
    .locals init (valuetype [mscorlib]System.Nullable`1<int32> V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "reader"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance class [mscorlib]System.IO.Stream [mscorlib]System.IO.BinaryReader::get_BaseStream()
    IL_0012:  ldarg.2
    IL_0013:  ldloca.s   V_0
    IL_0015:  initobj    valuetype [mscorlib]System.Nullable`1<int32>
    IL_001b:  ldloc.0
    IL_001c:  callvirt   instance class LibGit2Sharp.Blob LibGit2Sharp.ObjectDatabase::CreateBlob(class [mscorlib]System.IO.Stream,
                                                                                                  string,
                                                                                                  valuetype [mscorlib]System.Nullable`1<int32>)
    IL_0021:  ret
  } // end of method ObjectDatabase::CreateBlob

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Blob 
          CreateBlob(class [mscorlib]System.IO.Stream 'stream',
                     [opt] string hintpath,
                     [opt] valuetype [mscorlib]System.Nullable`1<int32> numberOfBytesToConsume) cil managed
  {
    .param [2] = nullref
    .param [3] = nullref
    // Code size       91 (0x5b)
    .maxstack  5
    .locals init (class LibGit2Sharp.ObjectDatabase/Processor V_0,
             class LibGit2Sharp.ObjectId V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "stream"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.1
    IL_000c:  callvirt   instance bool [mscorlib]System.IO.Stream::get_CanRead()
    IL_0011:  brtrue.s   IL_0023

    IL_0013:  ldstr      "The stream cannot be read from."
    IL_0018:  ldstr      "stream"
    IL_001d:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string,
                                                                                 string)
    IL_0022:  throw

    IL_0023:  ldarg.1
    IL_0024:  ldarg.3
    IL_0025:  newobj     instance void LibGit2Sharp.ObjectDatabase/Processor::.ctor(class [mscorlib]System.IO.Stream,
                                                                                    valuetype [mscorlib]System.Nullable`1<int32>)
    IL_002a:  stloc.0
    IL_002b:  ldarg.0
    IL_002c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ObjectDatabase::repo
    IL_0031:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0036:  ldarg.2
    IL_0037:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_003c:  ldloc.0
    IL_003d:  ldftn      instance int32 LibGit2Sharp.ObjectDatabase/Processor::Provider(native int,
                                                                                        int32,
                                                                                        native int)
    IL_0043:  newobj     instance void LibGit2Sharp.Core.NativeMethods/source_callback::.ctor(object,
                                                                                              native int)
    IL_0048:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_blob_create_fromchunks(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                         class LibGit2Sharp.Core.FilePath,
                                                                                                         class LibGit2Sharp.Core.NativeMethods/source_callback)
    IL_004d:  stloc.1
    IL_004e:  ldarg.0
    IL_004f:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ObjectDatabase::repo
    IL_0054:  ldloc.1
    IL_0055:  call       !!0 LibGit2Sharp.RepositoryExtensions::Lookup<class LibGit2Sharp.Blob>(class LibGit2Sharp.IRepository,
                                                                                                class LibGit2Sharp.ObjectId)
    IL_005a:  ret
  } // end of method ObjectDatabase::CreateBlob

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Tree 
          CreateTree(class LibGit2Sharp.TreeDefinition treeDefinition) cil managed
  {
    // Code size       24 (0x18)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "treeDefinition"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.1
    IL_000c:  ldarg.0
    IL_000d:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ObjectDatabase::repo
    IL_0012:  callvirt   instance class LibGit2Sharp.Tree LibGit2Sharp.TreeDefinition::Build(class LibGit2Sharp.Repository)
    IL_0017:  ret
  } // end of method ObjectDatabase::CreateTree

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Commit 
          CreateCommit(string message,
                       class LibGit2Sharp.Signature author,
                       class LibGit2Sharp.Signature committer,
                       class LibGit2Sharp.Tree tree,
                       class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> parents) cil managed
  {
    // Code size       15 (0xf)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  ldarg.s    tree
    IL_0006:  ldarg.s    parents
    IL_0008:  ldnull
    IL_0009:  call       instance class LibGit2Sharp.Commit LibGit2Sharp.ObjectDatabase::CreateCommit(string,
                                                                                                      class LibGit2Sharp.Signature,
                                                                                                      class LibGit2Sharp.Signature,
                                                                                                      class LibGit2Sharp.Tree,
                                                                                                      class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,
                                                                                                      string)
    IL_000e:  ret
  } // end of method ObjectDatabase::CreateCommit

  .method assembly hidebysig instance class LibGit2Sharp.Commit 
          CreateCommit(string message,
                       class LibGit2Sharp.Signature author,
                       class LibGit2Sharp.Signature committer,
                       class LibGit2Sharp.Tree tree,
                       class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> parents,
                       string referenceName) cil managed
  {
    // Code size       144 (0x90)
    .maxstack  7
    .locals init (string V_0,
             valuetype LibGit2Sharp.Core.GitOid[] V_1,
             class LibGit2Sharp.ObjectId V_2)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "message"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "author"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.3
    IL_0017:  ldstr      "committer"
    IL_001c:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0021:  ldarg.s    tree
    IL_0023:  ldstr      "tree"
    IL_0028:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_002d:  ldarg.s    parents
    IL_002f:  ldstr      "parents"
    IL_0034:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0039:  ldarg.1
    IL_003a:  call       string LibGit2Sharp.Core.Proxy::git_message_prettify(string)
    IL_003f:  stloc.0
    IL_0040:  ldarg.s    parents
    IL_0042:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Commit,valuetype LibGit2Sharp.Core.GitOid> LibGit2Sharp.ObjectDatabase::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_0047:  brtrue.s   IL_005a

    IL_0049:  ldnull
    IL_004a:  ldftn      valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectDatabase::'<CreateCommit>b__2'(class LibGit2Sharp.Commit)
    IL_0050:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Commit,valuetype LibGit2Sharp.Core.GitOid>::.ctor(object,
                                                                                                                                             native int)
    IL_0055:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Commit,valuetype LibGit2Sharp.Core.GitOid> LibGit2Sharp.ObjectDatabase::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_005a:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Commit,valuetype LibGit2Sharp.Core.GitOid> LibGit2Sharp.ObjectDatabase::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_005f:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!1> [System.Core]System.Linq.Enumerable::Select<class LibGit2Sharp.Commit,valuetype LibGit2Sharp.Core.GitOid>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                                                 class [System.Core]System.Func`2<!!0,!!1>)
    IL_0064:  call       !!0[] [System.Core]System.Linq.Enumerable::ToArray<valuetype LibGit2Sharp.Core.GitOid>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0069:  stloc.1
    IL_006a:  ldarg.0
    IL_006b:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ObjectDatabase::repo
    IL_0070:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0075:  ldarg.s    referenceName
    IL_0077:  ldarg.2
    IL_0078:  ldarg.3
    IL_0079:  ldloc.0
    IL_007a:  ldarg.s    tree
    IL_007c:  ldloc.1
    IL_007d:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_commit_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                string,
                                                                                                class LibGit2Sharp.Signature,
                                                                                                class LibGit2Sharp.Signature,
                                                                                                string,
                                                                                                class LibGit2Sharp.Tree,
                                                                                                valuetype LibGit2Sharp.Core.GitOid[])
    IL_0082:  stloc.2
    IL_0083:  ldarg.0
    IL_0084:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ObjectDatabase::repo
    IL_0089:  ldloc.2
    IL_008a:  call       !!0 LibGit2Sharp.RepositoryExtensions::Lookup<class LibGit2Sharp.Commit>(class LibGit2Sharp.IRepository,
                                                                                                  class LibGit2Sharp.ObjectId)
    IL_008f:  ret
  } // end of method ObjectDatabase::CreateCommit

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.TagAnnotation 
          CreateTag(string name,
                    class LibGit2Sharp.GitObject target,
                    class LibGit2Sharp.Signature tagger,
                    string message) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 7F 54 68 69 73 20 6D 65 74 68 6F 64 20 77   // ...This method w
                                                                                69 6C 6C 20 62 65 20 72 65 6D 6F 76 65 64 20 69   // ill be removed i
                                                                                6E 20 74 68 65 20 6E 65 78 74 20 72 65 6C 65 61   // n the next relea
                                                                                73 65 2E 20 50 6C 65 61 73 65 20 75 73 65 20 43   // se. Please use C
                                                                                72 65 61 74 65 54 61 67 41 6E 6E 6F 6E 74 61 74   // reateTagAnnontat
                                                                                69 6F 6E 28 73 74 72 69 6E 67 2C 20 47 69 74 4F   // ion(string, GitO
                                                                                62 6A 65 63 74 2C 20 53 69 67 6E 61 74 75 72 65   // bject, Signature
                                                                                2C 20 73 74 72 69 6E 67 29 20 69 6E 73 74 65 61   // , string) instea
                                                                                64 2E 00 00 )                                     // d...
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  ldarg.s    message
    IL_0006:  callvirt   instance class LibGit2Sharp.TagAnnotation LibGit2Sharp.ObjectDatabase::CreateTagAnnotation(string,
                                                                                                                    class LibGit2Sharp.GitObject,
                                                                                                                    class LibGit2Sharp.Signature,
                                                                                                                    string)
    IL_000b:  ret
  } // end of method ObjectDatabase::CreateTag

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.TagAnnotation 
          CreateTagAnnotation(string name,
                              class LibGit2Sharp.GitObject target,
                              class LibGit2Sharp.Signature tagger,
                              string message) cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  5
    .locals init (string V_0,
             class LibGit2Sharp.ObjectId V_1)
    IL_0000:  ldarg.s    message
    IL_0002:  call       string LibGit2Sharp.Core.Proxy::git_message_prettify(string)
    IL_0007:  stloc.0
    IL_0008:  ldarg.0
    IL_0009:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ObjectDatabase::repo
    IL_000e:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0013:  ldarg.1
    IL_0014:  ldarg.2
    IL_0015:  ldarg.3
    IL_0016:  ldloc.0
    IL_0017:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_tag_annotation_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                        string,
                                                                                                        class LibGit2Sharp.GitObject,
                                                                                                        class LibGit2Sharp.Signature,
                                                                                                        string)
    IL_001c:  stloc.1
    IL_001d:  ldarg.0
    IL_001e:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ObjectDatabase::repo
    IL_0023:  ldloc.1
    IL_0024:  call       !!0 LibGit2Sharp.RepositoryExtensions::Lookup<class LibGit2Sharp.TagAnnotation>(class LibGit2Sharp.IRepository,
                                                                                                         class LibGit2Sharp.ObjectId)
    IL_0029:  ret
  } // end of method ObjectDatabase::CreateTagAnnotation

  .method private hidebysig static bool  '<AddBackend>b__0'(int32 s) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       5 (0x5)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  cgt
    IL_0004:  ret
  } // end of method ObjectDatabase::'<AddBackend>b__0'

  .method private hidebysig static valuetype LibGit2Sharp.Core.GitOid 
          '<CreateCommit>b__2'(class LibGit2Sharp.Commit p) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0006:  callvirt   instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
    IL_000b:  ret
  } // end of method ObjectDatabase::'<CreateCommit>b__2'

} // end of class LibGit2Sharp.ObjectDatabase

.class public abstract auto ansi beforefieldinit LibGit2Sharp.OdbBackend
       extends [mscorlib]System.Object
{
  .class auto ansi sealed nested public ForEachCallback
         extends [mscorlib]System.MulticastDelegate
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(object 'object',
                                 native int 'method') runtime managed
    {
    } // end of method ForEachCallback::.ctor

    .method public hidebysig newslot virtual 
            instance int32  Invoke(uint8[] oid) runtime managed
    {
    } // end of method ForEachCallback::Invoke

    .method public hidebysig newslot virtual 
            instance class [mscorlib]System.IAsyncResult 
            BeginInvoke(uint8[] oid,
                        class [mscorlib]System.AsyncCallback callback,
                        object 'object') runtime managed
    {
    } // end of method ForEachCallback::BeginInvoke

    .method public hidebysig newslot virtual 
            instance int32  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
    {
    } // end of method ForEachCallback::EndInvoke

  } // end of class ForEachCallback

  .class abstract auto ansi sealed nested private beforefieldinit BackendEntryPoints
         extends [mscorlib]System.Object
  {
    .class auto ansi nested private beforefieldinit ForeachState
           extends [mscorlib]System.Object
    {
      .field public initonly class LibGit2Sharp.OdbBackend/ForEachCallback ManagedCallback
      .field private initonly class LibGit2Sharp.Core.GitOdbBackend/foreach_callback_callback cb
      .field private initonly native int data
      .method public hidebysig specialname rtspecialname 
              instance void  .ctor(class LibGit2Sharp.Core.GitOdbBackend/foreach_callback_callback cb,
                                   native int data) cil managed
      {
        // Code size       39 (0x27)
        .maxstack  8
        IL_0000:  ldarg.0
        IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
        IL_0006:  ldarg.0
        IL_0007:  ldarg.1
        IL_0008:  stfld      class LibGit2Sharp.Core.GitOdbBackend/foreach_callback_callback LibGit2Sharp.OdbBackend/BackendEntryPoints/ForeachState::cb
        IL_000d:  ldarg.0
        IL_000e:  ldarg.2
        IL_000f:  stfld      native int LibGit2Sharp.OdbBackend/BackendEntryPoints/ForeachState::data
        IL_0014:  ldarg.0
        IL_0015:  ldarg.0
        IL_0016:  ldftn      instance int32 LibGit2Sharp.OdbBackend/BackendEntryPoints/ForeachState::CallbackMethod(uint8[])
        IL_001c:  newobj     instance void LibGit2Sharp.OdbBackend/ForEachCallback::.ctor(object,
                                                                                          native int)
        IL_0021:  stfld      class LibGit2Sharp.OdbBackend/ForEachCallback LibGit2Sharp.OdbBackend/BackendEntryPoints/ForeachState::ManagedCallback
        IL_0026:  ret
      } // end of method ForeachState::.ctor

      .method private hidebysig instance int32 
              CallbackMethod(uint8[] oid) cil managed
      {
        // Code size       36 (0x24)
        .maxstack  3
        .locals init (valuetype LibGit2Sharp.Core.GitOid V_0)
        IL_0000:  ldloca.s   V_0
        IL_0002:  initobj    LibGit2Sharp.Core.GitOid
        IL_0008:  ldloca.s   V_0
        IL_000a:  ldarg.1
        IL_000b:  stfld      uint8[] LibGit2Sharp.Core.GitOid::Id
        IL_0010:  ldarg.0
        IL_0011:  ldfld      class LibGit2Sharp.Core.GitOdbBackend/foreach_callback_callback LibGit2Sharp.OdbBackend/BackendEntryPoints/ForeachState::cb
        IL_0016:  ldloca.s   V_0
        IL_0018:  ldarg.0
        IL_0019:  ldfld      native int LibGit2Sharp.OdbBackend/BackendEntryPoints/ForeachState::data
        IL_001e:  callvirt   instance int32 LibGit2Sharp.Core.GitOdbBackend/foreach_callback_callback::Invoke(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                                              native int)
        IL_0023:  ret
      } // end of method ForeachState::CallbackMethod

    } // end of class ForeachState

    .field public static initonly class LibGit2Sharp.Core.GitOdbBackend/read_callback ReadCallback
    .field public static initonly class LibGit2Sharp.Core.GitOdbBackend/read_prefix_callback ReadPrefixCallback
    .field public static initonly class LibGit2Sharp.Core.GitOdbBackend/read_header_callback ReadHeaderCallback
    .field public static initonly class LibGit2Sharp.Core.GitOdbBackend/readstream_callback ReadStreamCallback
    .field public static initonly class LibGit2Sharp.Core.GitOdbBackend/write_callback WriteCallback
    .field public static initonly class LibGit2Sharp.Core.GitOdbBackend/writestream_callback WriteStreamCallback
    .field public static initonly class LibGit2Sharp.Core.GitOdbBackend/exists_callback ExistsCallback
    .field public static initonly class LibGit2Sharp.Core.GitOdbBackend/foreach_callback ForEachCallback
    .field public static initonly class LibGit2Sharp.Core.GitOdbBackend/free_callback FreeCallback
    .method private hidebysig static int32 
            Read([out] native int& buffer_p,
                 [out] native uint& len_p,
                 [out] valuetype LibGit2Sharp.Core.GitObjectType& type_p,
                 native int backend,
                 valuetype LibGit2Sharp.Core.GitOid& oid) cil managed
    {
      // Code size       188 (0xbc)
      .maxstack  4
      .locals init (class LibGit2Sharp.OdbBackend V_0,
               class [mscorlib]System.IO.Stream V_1,
               valuetype LibGit2Sharp.ObjectType V_2,
               int32 V_3,
               class [mscorlib]System.IO.UnmanagedMemoryStream V_4,
               class [mscorlib]System.Exception V_5,
               int32 V_6,
               valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V_7)
      IL_0000:  ldarg.0
      IL_0001:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_0006:  stobj      [mscorlib]System.IntPtr
      IL_000b:  ldarg.1
      IL_000c:  ldsfld     native uint [mscorlib]System.UIntPtr::Zero
      IL_0011:  stobj      [mscorlib]System.UIntPtr
      IL_0016:  ldarg.2
      IL_0017:  ldc.i4.m1
      IL_0018:  stind.i4
      IL_0019:  ldarg.3
      IL_001a:  ldsfld     int32 LibGit2Sharp.Core.GitOdbBackend::GCHandleOffset
      IL_001f:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native int,
                                                                                                   int32)
      IL_0024:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
      IL_0029:  stloc.s    V_7
      IL_002b:  ldloca.s   V_7
      IL_002d:  call       instance object [mscorlib]System.Runtime.InteropServices.GCHandle::get_Target()
      IL_0032:  isinst     LibGit2Sharp.OdbBackend
      IL_0037:  stloc.0
      IL_0038:  ldloc.0
      IL_0039:  brfalse.s  IL_00b7

      IL_003b:  ldnull
      IL_003c:  stloc.1
      .try
      {
        .try
        {
          IL_003d:  ldloc.0
          IL_003e:  ldarg.s    oid
          IL_0040:  ldfld      uint8[] LibGit2Sharp.Core.GitOid::Id
          IL_0045:  ldloca.s   V_1
          IL_0047:  ldloca.s   V_2
          IL_0049:  callvirt   instance int32 LibGit2Sharp.OdbBackend::Read(uint8[],
                                                                            class [mscorlib]System.IO.Stream&,
                                                                            valuetype LibGit2Sharp.ObjectType&)
          IL_004e:  stloc.3
          IL_004f:  ldloc.3
          IL_0050:  brtrue.s   IL_009a

          IL_0052:  ldloc.1
          IL_0053:  isinst     [mscorlib]System.IO.UnmanagedMemoryStream
          IL_0058:  stloc.s    V_4
          IL_005a:  ldloc.s    V_4
          IL_005c:  brtrue.s   IL_0063

          IL_005e:  ldc.i4.m1
          IL_005f:  stloc.s    V_6
          IL_0061:  leave.s    IL_00b9

          IL_0063:  ldarg.1
          IL_0064:  ldloc.s    V_4
          IL_0066:  callvirt   instance int64 [mscorlib]System.IO.UnmanagedMemoryStream::get_Capacity()
          IL_006b:  newobj     instance void [mscorlib]System.UIntPtr::.ctor(uint64)
          IL_0070:  stobj      [mscorlib]System.UIntPtr
          IL_0075:  ldarg.2
          IL_0076:  ldloc.2
          IL_0077:  call       valuetype LibGit2Sharp.Core.GitObjectType LibGit2Sharp.ObjectTypeExtensions::ToGitObjectType(valuetype LibGit2Sharp.ObjectType)
          IL_007c:  stind.i4
          IL_007d:  ldloc.s    V_4
          IL_007f:  ldc.i4.0
          IL_0080:  conv.i8
          IL_0081:  ldc.i4.0
          IL_0082:  callvirt   instance int64 [mscorlib]System.IO.Stream::Seek(int64,
                                                                               valuetype [mscorlib]System.IO.SeekOrigin)
          IL_0087:  pop
          IL_0088:  ldarg.0
          IL_0089:  ldloc.s    V_4
          IL_008b:  callvirt   instance uint8* [mscorlib]System.IO.UnmanagedMemoryStream::get_PositionPointer()
          IL_0090:  newobj     instance void [mscorlib]System.IntPtr::.ctor(void*)
          IL_0095:  stobj      [mscorlib]System.IntPtr
          IL_009a:  ldloc.3
          IL_009b:  stloc.s    V_6
          IL_009d:  leave.s    IL_00b9

        }  // end .try
        catch [mscorlib]System.Exception 
        {
          IL_009f:  stloc.s    V_5
          IL_00a1:  ldc.i4.8
          IL_00a2:  ldloc.s    V_5
          IL_00a4:  call       void LibGit2Sharp.Core.Proxy::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                            class [mscorlib]System.Exception)
          IL_00a9:  leave.s    IL_00ab

        }  // end handler
        IL_00ab:  leave.s    IL_00b7

      }  // end .try
      finally
      {
        IL_00ad:  ldloc.1
        IL_00ae:  brfalse.s  IL_00b6

        IL_00b0:  ldloc.1
        IL_00b1:  callvirt   instance void [mscorlib]System.IO.Stream::Dispose()
        IL_00b6:  endfinally
      }  // end handler
      IL_00b7:  ldc.i4.m1
      IL_00b8:  ret

      IL_00b9:  ldloc.s    V_6
      IL_00bb:  ret
    } // end of method BackendEntryPoints::Read

    .method private hidebysig static int32 
            ReadPrefix([out] valuetype LibGit2Sharp.Core.GitOid& out_oid,
                       [out] native int& buffer_p,
                       [out] native uint& len_p,
                       [out] valuetype LibGit2Sharp.Core.GitObjectType& type_p,
                       native int backend,
                       valuetype LibGit2Sharp.Core.GitOid& short_oid,
                       native uint len) cil managed
    {
      // Code size       241 (0xf1)
      .maxstack  5
      .locals init (class LibGit2Sharp.OdbBackend V_0,
               uint8[] V_1,
               class [mscorlib]System.IO.Stream V_2,
               valuetype LibGit2Sharp.ObjectType V_3,
               uint8[] V_4,
               int32 V_5,
               class [mscorlib]System.IO.UnmanagedMemoryStream V_6,
               class [mscorlib]System.Exception V_7,
               int32 V_8,
               valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V_9)
      IL_0000:  ldarg.0
      IL_0001:  initobj    LibGit2Sharp.Core.GitOid
      IL_0007:  ldarg.1
      IL_0008:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_000d:  stobj      [mscorlib]System.IntPtr
      IL_0012:  ldarg.2
      IL_0013:  ldsfld     native uint [mscorlib]System.UIntPtr::Zero
      IL_0018:  stobj      [mscorlib]System.UIntPtr
      IL_001d:  ldarg.3
      IL_001e:  ldc.i4.m1
      IL_001f:  stind.i4
      IL_0020:  ldarg.s    backend
      IL_0022:  ldsfld     int32 LibGit2Sharp.Core.GitOdbBackend::GCHandleOffset
      IL_0027:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native int,
                                                                                                   int32)
      IL_002c:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
      IL_0031:  stloc.s    V_9
      IL_0033:  ldloca.s   V_9
      IL_0035:  call       instance object [mscorlib]System.Runtime.InteropServices.GCHandle::get_Target()
      IL_003a:  isinst     LibGit2Sharp.OdbBackend
      IL_003f:  stloc.0
      IL_0040:  ldloc.0
      IL_0041:  brfalse    IL_00ec

      IL_0046:  ldnull
      IL_0047:  stloc.2
      .try
      {
        .try
        {
          IL_0048:  ldarg.s    len
          IL_004a:  call       uint64 [mscorlib]System.UIntPtr::op_Explicit(native uint)
          IL_004f:  ldc.i4.1
          IL_0050:  shr
          IL_0051:  conv.ovf.i
          IL_0052:  newarr     [mscorlib]System.Byte
          IL_0057:  stloc.s    V_4
          IL_0059:  ldarg.s    short_oid
          IL_005b:  ldfld      uint8[] LibGit2Sharp.Core.GitOid::Id
          IL_0060:  ldloc.s    V_4
          IL_0062:  ldloc.s    V_4
          IL_0064:  ldlen
          IL_0065:  conv.i4
          IL_0066:  call       void [mscorlib]System.Array::Copy(class [mscorlib]System.Array,
                                                                 class [mscorlib]System.Array,
                                                                 int32)
          IL_006b:  ldloc.0
          IL_006c:  ldloc.s    V_4
          IL_006e:  ldloca.s   V_1
          IL_0070:  ldloca.s   V_2
          IL_0072:  ldloca.s   V_3
          IL_0074:  callvirt   instance int32 LibGit2Sharp.OdbBackend::ReadPrefix(uint8[],
                                                                                  uint8[]&,
                                                                                  class [mscorlib]System.IO.Stream&,
                                                                                  valuetype LibGit2Sharp.ObjectType&)
          IL_0079:  stloc.s    V_5
          IL_007b:  ldloc.s    V_5
          IL_007d:  brtrue.s   IL_00ce

          IL_007f:  ldloc.2
          IL_0080:  isinst     [mscorlib]System.IO.UnmanagedMemoryStream
          IL_0085:  stloc.s    V_6
          IL_0087:  ldloc.s    V_6
          IL_0089:  brtrue.s   IL_0090

          IL_008b:  ldc.i4.m1
          IL_008c:  stloc.s    V_8
          IL_008e:  leave.s    IL_00ee

          IL_0090:  ldarg.0
          IL_0091:  ldloc.1
          IL_0092:  stfld      uint8[] LibGit2Sharp.Core.GitOid::Id
          IL_0097:  ldarg.2
          IL_0098:  ldloc.s    V_6
          IL_009a:  callvirt   instance int64 [mscorlib]System.IO.UnmanagedMemoryStream::get_Capacity()
          IL_009f:  newobj     instance void [mscorlib]System.UIntPtr::.ctor(uint64)
          IL_00a4:  stobj      [mscorlib]System.UIntPtr
          IL_00a9:  ldarg.3
          IL_00aa:  ldloc.3
          IL_00ab:  call       valuetype LibGit2Sharp.Core.GitObjectType LibGit2Sharp.ObjectTypeExtensions::ToGitObjectType(valuetype LibGit2Sharp.ObjectType)
          IL_00b0:  stind.i4
          IL_00b1:  ldloc.s    V_6
          IL_00b3:  ldc.i4.0
          IL_00b4:  conv.i8
          IL_00b5:  ldc.i4.0
          IL_00b6:  callvirt   instance int64 [mscorlib]System.IO.Stream::Seek(int64,
                                                                               valuetype [mscorlib]System.IO.SeekOrigin)
          IL_00bb:  pop
          IL_00bc:  ldarg.1
          IL_00bd:  ldloc.s    V_6
          IL_00bf:  callvirt   instance uint8* [mscorlib]System.IO.UnmanagedMemoryStream::get_PositionPointer()
          IL_00c4:  newobj     instance void [mscorlib]System.IntPtr::.ctor(void*)
          IL_00c9:  stobj      [mscorlib]System.IntPtr
          IL_00ce:  ldloc.s    V_5
          IL_00d0:  stloc.s    V_8
          IL_00d2:  leave.s    IL_00ee

        }  // end .try
        catch [mscorlib]System.Exception 
        {
          IL_00d4:  stloc.s    V_7
          IL_00d6:  ldc.i4.8
          IL_00d7:  ldloc.s    V_7
          IL_00d9:  call       void LibGit2Sharp.Core.Proxy::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                            class [mscorlib]System.Exception)
          IL_00de:  leave.s    IL_00e0

        }  // end handler
        IL_00e0:  leave.s    IL_00ec

      }  // end .try
      finally
      {
        IL_00e2:  ldloc.2
        IL_00e3:  brfalse.s  IL_00eb

        IL_00e5:  ldloc.2
        IL_00e6:  callvirt   instance void [mscorlib]System.IO.Stream::Dispose()
        IL_00eb:  endfinally
      }  // end handler
      IL_00ec:  ldc.i4.m1
      IL_00ed:  ret

      IL_00ee:  ldloc.s    V_8
      IL_00f0:  ret
    } // end of method BackendEntryPoints::ReadPrefix

    .method private hidebysig static int32 
            ReadHeader([out] native uint& len_p,
                       [out] valuetype LibGit2Sharp.Core.GitObjectType& type_p,
                       native int backend,
                       valuetype LibGit2Sharp.Core.GitOid& oid) cil managed
    {
      // Code size       110 (0x6e)
      .maxstack  4
      .locals init (class LibGit2Sharp.OdbBackend V_0,
               int32 V_1,
               valuetype LibGit2Sharp.ObjectType V_2,
               int32 V_3,
               class [mscorlib]System.Exception V_4,
               int32 V_5,
               valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldsfld     native uint [mscorlib]System.UIntPtr::Zero
      IL_0006:  stobj      [mscorlib]System.UIntPtr
      IL_000b:  ldarg.1
      IL_000c:  ldc.i4.m1
      IL_000d:  stind.i4
      IL_000e:  ldarg.2
      IL_000f:  ldsfld     int32 LibGit2Sharp.Core.GitOdbBackend::GCHandleOffset
      IL_0014:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native int,
                                                                                                   int32)
      IL_0019:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
      IL_001e:  stloc.s    V_6
      IL_0020:  ldloca.s   V_6
      IL_0022:  call       instance object [mscorlib]System.Runtime.InteropServices.GCHandle::get_Target()
      IL_0027:  isinst     LibGit2Sharp.OdbBackend
      IL_002c:  stloc.0
      IL_002d:  ldloc.0
      IL_002e:  brfalse.s  IL_0069

      .try
      {
        IL_0030:  ldloc.0
        IL_0031:  ldarg.3
        IL_0032:  ldfld      uint8[] LibGit2Sharp.Core.GitOid::Id
        IL_0037:  ldloca.s   V_1
        IL_0039:  ldloca.s   V_2
        IL_003b:  callvirt   instance int32 LibGit2Sharp.OdbBackend::ReadHeader(uint8[],
                                                                                int32&,
                                                                                valuetype LibGit2Sharp.ObjectType&)
        IL_0040:  stloc.3
        IL_0041:  ldloc.3
        IL_0042:  brtrue.s   IL_0058

        IL_0044:  ldarg.0
        IL_0045:  ldloc.1
        IL_0046:  newobj     instance void [mscorlib]System.UIntPtr::.ctor(uint32)
        IL_004b:  stobj      [mscorlib]System.UIntPtr
        IL_0050:  ldarg.1
        IL_0051:  ldloc.2
        IL_0052:  call       valuetype LibGit2Sharp.Core.GitObjectType LibGit2Sharp.ObjectTypeExtensions::ToGitObjectType(valuetype LibGit2Sharp.ObjectType)
        IL_0057:  stind.i4
        IL_0058:  ldloc.3
        IL_0059:  stloc.s    V_5
        IL_005b:  leave.s    IL_006b

      }  // end .try
      catch [mscorlib]System.Exception 
      {
        IL_005d:  stloc.s    V_4
        IL_005f:  ldc.i4.8
        IL_0060:  ldloc.s    V_4
        IL_0062:  call       void LibGit2Sharp.Core.Proxy::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                          class [mscorlib]System.Exception)
        IL_0067:  leave.s    IL_0069

      }  // end handler
      IL_0069:  ldc.i4.m1
      IL_006a:  ret

      IL_006b:  ldloc.s    V_5
      IL_006d:  ret
    } // end of method BackendEntryPoints::ReadHeader

    .method private hidebysig static int32 
            Write(valuetype LibGit2Sharp.Core.GitOid& oid,
                  native int backend,
                  native int data,
                  native uint len,
                  valuetype LibGit2Sharp.Core.GitObjectType 'type') cil managed
    {
      // Code size       148 (0x94)
      .maxstack  6
      .locals init (class LibGit2Sharp.OdbBackend V_0,
               valuetype LibGit2Sharp.ObjectType V_1,
               class [mscorlib]System.IO.UnmanagedMemoryStream V_2,
               uint8[] V_3,
               int32 V_4,
               class [mscorlib]System.Exception V_5,
               int32 V_6,
               valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V_7)
      IL_0000:  ldarg.1
      IL_0001:  ldsfld     int32 LibGit2Sharp.Core.GitOdbBackend::GCHandleOffset
      IL_0006:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native int,
                                                                                                   int32)
      IL_000b:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
      IL_0010:  stloc.s    V_7
      IL_0012:  ldloca.s   V_7
      IL_0014:  call       instance object [mscorlib]System.Runtime.InteropServices.GCHandle::get_Target()
      IL_0019:  isinst     LibGit2Sharp.OdbBackend
      IL_001e:  stloc.0
      IL_001f:  ldarg.s    'type'
      IL_0021:  call       valuetype LibGit2Sharp.ObjectType LibGit2Sharp.Core.GitObjectTypeExtensions::ToObjectType(valuetype LibGit2Sharp.Core.GitObjectType)
      IL_0026:  stloc.1
      IL_0027:  ldloc.0
      IL_0028:  brfalse.s  IL_008f

      IL_002a:  ldarga.s   len
      IL_002c:  call       instance uint64 [mscorlib]System.UIntPtr::ToUInt64()
      IL_0031:  ldc.i8     0x7fffffffffffffff
      IL_003a:  bge.un.s   IL_008f

      .try
      {
        IL_003c:  ldarg.2
        IL_003d:  call       void* [mscorlib]System.IntPtr::op_Explicit(native int)
        IL_0042:  ldarga.s   len
        IL_0044:  call       instance uint64 [mscorlib]System.UIntPtr::ToUInt64()
        IL_0049:  newobj     instance void [mscorlib]System.IO.UnmanagedMemoryStream::.ctor(uint8*,
                                                                                            int64)
        IL_004e:  stloc.2
        .try
        {
          IL_004f:  ldloc.0
          IL_0050:  ldarg.0
          IL_0051:  ldfld      uint8[] LibGit2Sharp.Core.GitOid::Id
          IL_0056:  ldloc.2
          IL_0057:  ldarga.s   len
          IL_0059:  call       instance uint64 [mscorlib]System.UIntPtr::ToUInt64()
          IL_005e:  ldloc.1
          IL_005f:  ldloca.s   V_3
          IL_0061:  callvirt   instance int32 LibGit2Sharp.OdbBackend::Write(uint8[],
                                                                             class [mscorlib]System.IO.Stream,
                                                                             int64,
                                                                             valuetype LibGit2Sharp.ObjectType,
                                                                             uint8[]&)
          IL_0066:  stloc.s    V_4
          IL_0068:  ldloc.s    V_4
          IL_006a:  brtrue.s   IL_0073

          IL_006c:  ldarg.0
          IL_006d:  ldloc.3
          IL_006e:  stfld      uint8[] LibGit2Sharp.Core.GitOid::Id
          IL_0073:  ldloc.s    V_4
          IL_0075:  stloc.s    V_6
          IL_0077:  leave.s    IL_0091

        }  // end .try
        finally
        {
          IL_0079:  ldloc.2
          IL_007a:  brfalse.s  IL_0082

          IL_007c:  ldloc.2
          IL_007d:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          IL_0082:  endfinally
        }  // end handler
      }  // end .try
      catch [mscorlib]System.Exception 
      {
        IL_0083:  stloc.s    V_5
        IL_0085:  ldc.i4.8
        IL_0086:  ldloc.s    V_5
        IL_0088:  call       void LibGit2Sharp.Core.Proxy::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                          class [mscorlib]System.Exception)
        IL_008d:  leave.s    IL_008f

      }  // end handler
      IL_008f:  ldc.i4.m1
      IL_0090:  ret

      IL_0091:  ldloc.s    V_6
      IL_0093:  ret
    } // end of method BackendEntryPoints::Write

    .method private hidebysig static int32 
            WriteStream([out] native int& stream_out,
                        native int backend,
                        native uint length,
                        valuetype LibGit2Sharp.Core.GitObjectType 'type') cil managed
    {
      // Code size       124 (0x7c)
      .maxstack  4
      .locals init (class LibGit2Sharp.OdbBackend V_0,
               valuetype LibGit2Sharp.ObjectType V_1,
               class LibGit2Sharp.OdbBackendStream V_2,
               int32 V_3,
               class [mscorlib]System.Exception V_4,
               int32 V_5,
               valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_0006:  stobj      [mscorlib]System.IntPtr
      IL_000b:  ldarg.1
      IL_000c:  ldsfld     int32 LibGit2Sharp.Core.GitOdbBackend::GCHandleOffset
      IL_0011:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native int,
                                                                                                   int32)
      IL_0016:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
      IL_001b:  stloc.s    V_6
      IL_001d:  ldloca.s   V_6
      IL_001f:  call       instance object [mscorlib]System.Runtime.InteropServices.GCHandle::get_Target()
      IL_0024:  isinst     LibGit2Sharp.OdbBackend
      IL_0029:  stloc.0
      IL_002a:  ldarg.3
      IL_002b:  call       valuetype LibGit2Sharp.ObjectType LibGit2Sharp.Core.GitObjectTypeExtensions::ToObjectType(valuetype LibGit2Sharp.Core.GitObjectType)
      IL_0030:  stloc.1
      IL_0031:  ldloc.0
      IL_0032:  brfalse.s  IL_0077

      IL_0034:  ldarga.s   length
      IL_0036:  call       instance uint64 [mscorlib]System.UIntPtr::ToUInt64()
      IL_003b:  ldc.i8     0x7fffffffffffffff
      IL_0044:  bge.un.s   IL_0077

      .try
      {
        IL_0046:  ldloc.0
        IL_0047:  ldarga.s   length
        IL_0049:  call       instance uint64 [mscorlib]System.UIntPtr::ToUInt64()
        IL_004e:  ldloc.1
        IL_004f:  ldloca.s   V_2
        IL_0051:  callvirt   instance int32 LibGit2Sharp.OdbBackend::WriteStream(int64,
                                                                                 valuetype LibGit2Sharp.ObjectType,
                                                                                 class LibGit2Sharp.OdbBackendStream&)
        IL_0056:  stloc.3
        IL_0057:  ldloc.3
        IL_0058:  brtrue.s   IL_0066

        IL_005a:  ldarg.0
        IL_005b:  ldloc.2
        IL_005c:  callvirt   instance native int LibGit2Sharp.OdbBackendStream::get_GitOdbBackendStreamPointer()
        IL_0061:  stobj      [mscorlib]System.IntPtr
        IL_0066:  ldloc.3
        IL_0067:  stloc.s    V_5
        IL_0069:  leave.s    IL_0079

      }  // end .try
      catch [mscorlib]System.Exception 
      {
        IL_006b:  stloc.s    V_4
        IL_006d:  ldc.i4.8
        IL_006e:  ldloc.s    V_4
        IL_0070:  call       void LibGit2Sharp.Core.Proxy::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                          class [mscorlib]System.Exception)
        IL_0075:  leave.s    IL_0077

      }  // end handler
      IL_0077:  ldc.i4.m1
      IL_0078:  ret

      IL_0079:  ldloc.s    V_5
      IL_007b:  ret
    } // end of method BackendEntryPoints::WriteStream

    .method private hidebysig static int32 
            ReadStream([out] native int& stream_out,
                       native int backend,
                       valuetype LibGit2Sharp.Core.GitOid& oid) cil managed
    {
      // Code size       95 (0x5f)
      .maxstack  3
      .locals init (class LibGit2Sharp.OdbBackend V_0,
               class LibGit2Sharp.OdbBackendStream V_1,
               int32 V_2,
               class [mscorlib]System.Exception V_3,
               int32 V_4,
               valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldsfld     native int [mscorlib]System.IntPtr::Zero
      IL_0006:  stobj      [mscorlib]System.IntPtr
      IL_000b:  ldarg.1
      IL_000c:  ldsfld     int32 LibGit2Sharp.Core.GitOdbBackend::GCHandleOffset
      IL_0011:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native int,
                                                                                                   int32)
      IL_0016:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
      IL_001b:  stloc.s    V_5
      IL_001d:  ldloca.s   V_5
      IL_001f:  call       instance object [mscorlib]System.Runtime.InteropServices.GCHandle::get_Target()
      IL_0024:  isinst     LibGit2Sharp.OdbBackend
      IL_0029:  stloc.0
      IL_002a:  ldloc.0
      IL_002b:  brfalse.s  IL_005a

      .try
      {
        IL_002d:  ldloc.0
        IL_002e:  ldarg.2
        IL_002f:  ldfld      uint8[] LibGit2Sharp.Core.GitOid::Id
        IL_0034:  ldloca.s   V_1
        IL_0036:  callvirt   instance int32 LibGit2Sharp.OdbBackend::ReadStream(uint8[],
                                                                                class LibGit2Sharp.OdbBackendStream&)
        IL_003b:  stloc.2
        IL_003c:  ldloc.2
        IL_003d:  brtrue.s   IL_004b

        IL_003f:  ldarg.0
        IL_0040:  ldloc.1
        IL_0041:  callvirt   instance native int LibGit2Sharp.OdbBackendStream::get_GitOdbBackendStreamPointer()
        IL_0046:  stobj      [mscorlib]System.IntPtr
        IL_004b:  ldloc.2
        IL_004c:  stloc.s    V_4
        IL_004e:  leave.s    IL_005c

      }  // end .try
      catch [mscorlib]System.Exception 
      {
        IL_0050:  stloc.3
        IL_0051:  ldc.i4.8
        IL_0052:  ldloc.3
        IL_0053:  call       void LibGit2Sharp.Core.Proxy::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                          class [mscorlib]System.Exception)
        IL_0058:  leave.s    IL_005a

      }  // end handler
      IL_005a:  ldc.i4.m1
      IL_005b:  ret

      IL_005c:  ldloc.s    V_4
      IL_005e:  ret
    } // end of method BackendEntryPoints::ReadStream

    .method private hidebysig static bool 
            Exists(native int backend,
                   valuetype LibGit2Sharp.Core.GitOid& oid) cil managed
    {
      // Code size       62 (0x3e)
      .maxstack  2
      .locals init (class LibGit2Sharp.OdbBackend V_0,
               class [mscorlib]System.Exception V_1,
               bool V_2,
               valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V_3)
      IL_0000:  ldarg.0
      IL_0001:  ldsfld     int32 LibGit2Sharp.Core.GitOdbBackend::GCHandleOffset
      IL_0006:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native int,
                                                                                                   int32)
      IL_000b:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
      IL_0010:  stloc.3
      IL_0011:  ldloca.s   V_3
      IL_0013:  call       instance object [mscorlib]System.Runtime.InteropServices.GCHandle::get_Target()
      IL_0018:  isinst     LibGit2Sharp.OdbBackend
      IL_001d:  stloc.0
      IL_001e:  ldloc.0
      IL_001f:  brfalse.s  IL_003a

      .try
      {
        IL_0021:  ldloc.0
        IL_0022:  ldarg.1
        IL_0023:  ldfld      uint8[] LibGit2Sharp.Core.GitOid::Id
        IL_0028:  callvirt   instance bool LibGit2Sharp.OdbBackend::Exists(uint8[])
        IL_002d:  stloc.2
        IL_002e:  leave.s    IL_003c

      }  // end .try
      catch [mscorlib]System.Exception 
      {
        IL_0030:  stloc.1
        IL_0031:  ldc.i4.8
        IL_0032:  ldloc.1
        IL_0033:  call       void LibGit2Sharp.Core.Proxy::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                          class [mscorlib]System.Exception)
        IL_0038:  leave.s    IL_003a

      }  // end handler
      IL_003a:  ldc.i4.0
      IL_003b:  ret

      IL_003c:  ldloc.2
      IL_003d:  ret
    } // end of method BackendEntryPoints::Exists

    .method private hidebysig static int32 
            Foreach(native int backend,
                    class LibGit2Sharp.Core.GitOdbBackend/foreach_callback_callback cb,
                    native int data) cil managed
    {
      // Code size       68 (0x44)
      .maxstack  4
      .locals init (class LibGit2Sharp.OdbBackend V_0,
               class [mscorlib]System.Exception V_1,
               int32 V_2,
               valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V_3)
      IL_0000:  ldarg.0
      IL_0001:  ldsfld     int32 LibGit2Sharp.Core.GitOdbBackend::GCHandleOffset
      IL_0006:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native int,
                                                                                                   int32)
      IL_000b:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
      IL_0010:  stloc.3
      IL_0011:  ldloca.s   V_3
      IL_0013:  call       instance object [mscorlib]System.Runtime.InteropServices.GCHandle::get_Target()
      IL_0018:  isinst     LibGit2Sharp.OdbBackend
      IL_001d:  stloc.0
      IL_001e:  ldloc.0
      IL_001f:  brfalse.s  IL_0040

      .try
      {
        IL_0021:  ldloc.0
        IL_0022:  ldarg.1
        IL_0023:  ldarg.2
        IL_0024:  newobj     instance void LibGit2Sharp.OdbBackend/BackendEntryPoints/ForeachState::.ctor(class LibGit2Sharp.Core.GitOdbBackend/foreach_callback_callback,
                                                                                                          native int)
        IL_0029:  ldfld      class LibGit2Sharp.OdbBackend/ForEachCallback LibGit2Sharp.OdbBackend/BackendEntryPoints/ForeachState::ManagedCallback
        IL_002e:  callvirt   instance int32 LibGit2Sharp.OdbBackend::ForEach(class LibGit2Sharp.OdbBackend/ForEachCallback)
        IL_0033:  stloc.2
        IL_0034:  leave.s    IL_0042

      }  // end .try
      catch [mscorlib]System.Exception 
      {
        IL_0036:  stloc.1
        IL_0037:  ldc.i4.8
        IL_0038:  ldloc.1
        IL_0039:  call       void LibGit2Sharp.Core.Proxy::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                          class [mscorlib]System.Exception)
        IL_003e:  leave.s    IL_0040

      }  // end handler
      IL_0040:  ldc.i4.m1
      IL_0041:  ret

      IL_0042:  ldloc.2
      IL_0043:  ret
    } // end of method BackendEntryPoints::Foreach

    .method private hidebysig static void 
            Free(native int backend) cil managed
    {
      // Code size       52 (0x34)
      .maxstack  2
      .locals init (valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V_0,
               class LibGit2Sharp.OdbBackend V_1,
               class [mscorlib]System.Exception V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldsfld     int32 LibGit2Sharp.Core.GitOdbBackend::GCHandleOffset
      IL_0006:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native int,
                                                                                                   int32)
      IL_000b:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
      IL_0010:  stloc.0
      IL_0011:  ldloca.s   V_0
      IL_0013:  call       instance object [mscorlib]System.Runtime.InteropServices.GCHandle::get_Target()
      IL_0018:  isinst     LibGit2Sharp.OdbBackend
      IL_001d:  stloc.1
      IL_001e:  ldloc.1
      IL_001f:  brfalse.s  IL_0033

      .try
      {
        IL_0021:  ldloc.1
        IL_0022:  callvirt   instance void LibGit2Sharp.OdbBackend::Dispose()
        IL_0027:  leave.s    IL_0033

      }  // end .try
      catch [mscorlib]System.Exception 
      {
        IL_0029:  stloc.2
        IL_002a:  ldc.i4.8
        IL_002b:  ldloc.2
        IL_002c:  call       void LibGit2Sharp.Core.Proxy::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                          class [mscorlib]System.Exception)
        IL_0031:  leave.s    IL_0033

      }  // end handler
      IL_0033:  ret
    } // end of method BackendEntryPoints::Free

    .method private hidebysig specialname rtspecialname static 
            void  .cctor() cil managed
    {
      // Code size       154 (0x9a)
      .maxstack  3
      IL_0000:  ldnull
      IL_0001:  ldftn      int32 LibGit2Sharp.OdbBackend/BackendEntryPoints::Read(native int&,
                                                                                  native uint&,
                                                                                  valuetype LibGit2Sharp.Core.GitObjectType&,
                                                                                  native int,
                                                                                  valuetype LibGit2Sharp.Core.GitOid&)
      IL_0007:  newobj     instance void LibGit2Sharp.Core.GitOdbBackend/read_callback::.ctor(object,
                                                                                              native int)
      IL_000c:  stsfld     class LibGit2Sharp.Core.GitOdbBackend/read_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::ReadCallback
      IL_0011:  ldnull
      IL_0012:  ldftn      int32 LibGit2Sharp.OdbBackend/BackendEntryPoints::ReadPrefix(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                        native int&,
                                                                                        native uint&,
                                                                                        valuetype LibGit2Sharp.Core.GitObjectType&,
                                                                                        native int,
                                                                                        valuetype LibGit2Sharp.Core.GitOid&,
                                                                                        native uint)
      IL_0018:  newobj     instance void LibGit2Sharp.Core.GitOdbBackend/read_prefix_callback::.ctor(object,
                                                                                                     native int)
      IL_001d:  stsfld     class LibGit2Sharp.Core.GitOdbBackend/read_prefix_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::ReadPrefixCallback
      IL_0022:  ldnull
      IL_0023:  ldftn      int32 LibGit2Sharp.OdbBackend/BackendEntryPoints::ReadHeader(native uint&,
                                                                                        valuetype LibGit2Sharp.Core.GitObjectType&,
                                                                                        native int,
                                                                                        valuetype LibGit2Sharp.Core.GitOid&)
      IL_0029:  newobj     instance void LibGit2Sharp.Core.GitOdbBackend/read_header_callback::.ctor(object,
                                                                                                     native int)
      IL_002e:  stsfld     class LibGit2Sharp.Core.GitOdbBackend/read_header_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::ReadHeaderCallback
      IL_0033:  ldnull
      IL_0034:  ldftn      int32 LibGit2Sharp.OdbBackend/BackendEntryPoints::ReadStream(native int&,
                                                                                        native int,
                                                                                        valuetype LibGit2Sharp.Core.GitOid&)
      IL_003a:  newobj     instance void LibGit2Sharp.Core.GitOdbBackend/readstream_callback::.ctor(object,
                                                                                                    native int)
      IL_003f:  stsfld     class LibGit2Sharp.Core.GitOdbBackend/readstream_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::ReadStreamCallback
      IL_0044:  ldnull
      IL_0045:  ldftn      int32 LibGit2Sharp.OdbBackend/BackendEntryPoints::Write(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                   native int,
                                                                                   native int,
                                                                                   native uint,
                                                                                   valuetype LibGit2Sharp.Core.GitObjectType)
      IL_004b:  newobj     instance void LibGit2Sharp.Core.GitOdbBackend/write_callback::.ctor(object,
                                                                                               native int)
      IL_0050:  stsfld     class LibGit2Sharp.Core.GitOdbBackend/write_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::WriteCallback
      IL_0055:  ldnull
      IL_0056:  ldftn      int32 LibGit2Sharp.OdbBackend/BackendEntryPoints::WriteStream(native int&,
                                                                                         native int,
                                                                                         native uint,
                                                                                         valuetype LibGit2Sharp.Core.GitObjectType)
      IL_005c:  newobj     instance void LibGit2Sharp.Core.GitOdbBackend/writestream_callback::.ctor(object,
                                                                                                     native int)
      IL_0061:  stsfld     class LibGit2Sharp.Core.GitOdbBackend/writestream_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::WriteStreamCallback
      IL_0066:  ldnull
      IL_0067:  ldftn      bool LibGit2Sharp.OdbBackend/BackendEntryPoints::Exists(native int,
                                                                                   valuetype LibGit2Sharp.Core.GitOid&)
      IL_006d:  newobj     instance void LibGit2Sharp.Core.GitOdbBackend/exists_callback::.ctor(object,
                                                                                                native int)
      IL_0072:  stsfld     class LibGit2Sharp.Core.GitOdbBackend/exists_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::ExistsCallback
      IL_0077:  ldnull
      IL_0078:  ldftn      int32 LibGit2Sharp.OdbBackend/BackendEntryPoints::Foreach(native int,
                                                                                     class LibGit2Sharp.Core.GitOdbBackend/foreach_callback_callback,
                                                                                     native int)
      IL_007e:  newobj     instance void LibGit2Sharp.Core.GitOdbBackend/foreach_callback::.ctor(object,
                                                                                                 native int)
      IL_0083:  stsfld     class LibGit2Sharp.Core.GitOdbBackend/foreach_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::ForEachCallback
      IL_0088:  ldnull
      IL_0089:  ldftn      void LibGit2Sharp.OdbBackend/BackendEntryPoints::Free(native int)
      IL_008f:  newobj     instance void LibGit2Sharp.Core.GitOdbBackend/free_callback::.ctor(object,
                                                                                              native int)
      IL_0094:  stsfld     class LibGit2Sharp.Core.GitOdbBackend/free_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::FreeCallback
      IL_0099:  ret
    } // end of method BackendEntryPoints::.cctor

  } // end of class BackendEntryPoints

  .class auto ansi sealed nested family OdbBackendOperations
         extends [mscorlib]System.Enum
  {
    .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype LibGit2Sharp.OdbBackend/OdbBackendOperations Read = int32(0x00000001)
    .field public static literal valuetype LibGit2Sharp.OdbBackend/OdbBackendOperations ReadPrefix = int32(0x00000002)
    .field public static literal valuetype LibGit2Sharp.OdbBackend/OdbBackendOperations ReadHeader = int32(0x00000004)
    .field public static literal valuetype LibGit2Sharp.OdbBackend/OdbBackendOperations Write = int32(0x00000008)
    .field public static literal valuetype LibGit2Sharp.OdbBackend/OdbBackendOperations ReadStream = int32(0x00000010)
    .field public static literal valuetype LibGit2Sharp.OdbBackend/OdbBackendOperations WriteStream = int32(0x00000020)
    .field public static literal valuetype LibGit2Sharp.OdbBackend/OdbBackendOperations Exists = int32(0x00000040)
    .field public static literal valuetype LibGit2Sharp.OdbBackend/OdbBackendOperations ForEach = int32(0x00000080)
  } // end of class OdbBackendOperations

  .field private native int nativeBackendPointer
  .method family hidebysig newslot virtual 
          instance void  Dispose() cil managed
  {
    // Code size       70 (0x46)
    .maxstack  2
    .locals init (valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V_0)
    IL_0000:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0005:  ldarg.0
    IL_0006:  ldfld      native int LibGit2Sharp.OdbBackend::nativeBackendPointer
    IL_000b:  call       bool [mscorlib]System.IntPtr::op_Inequality(native int,
                                                                     native int)
    IL_0010:  brfalse.s  IL_0045

    IL_0012:  ldarg.0
    IL_0013:  ldfld      native int LibGit2Sharp.OdbBackend::nativeBackendPointer
    IL_0018:  ldsfld     int32 LibGit2Sharp.Core.GitOdbBackend::GCHandleOffset
    IL_001d:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native int,
                                                                                                 int32)
    IL_0022:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
    IL_0027:  stloc.0
    IL_0028:  ldloca.s   V_0
    IL_002a:  call       instance void [mscorlib]System.Runtime.InteropServices.GCHandle::Free()
    IL_002f:  ldarg.0
    IL_0030:  ldfld      native int LibGit2Sharp.OdbBackend::nativeBackendPointer
    IL_0035:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::FreeHGlobal(native int)
    IL_003a:  ldarg.0
    IL_003b:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0040:  stfld      native int LibGit2Sharp.OdbBackend::nativeBackendPointer
    IL_0045:  ret
  } // end of method OdbBackend::Dispose

  .method family hidebysig newslot specialname abstract virtual 
          instance valuetype LibGit2Sharp.OdbBackend/OdbBackendOperations 
          get_SupportedOperations() cil managed
  {
  } // end of method OdbBackend::get_SupportedOperations

  .method family hidebysig instance class [mscorlib]System.IO.Stream 
          Allocate(int64 bytes) cil managed
  {
    // Code size       67 (0x43)
    .maxstack  5
    .locals init (native int V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldc.i4.0
    IL_0002:  conv.i8
    IL_0003:  blt.s      IL_0016

    IL_0005:  call       int32 [mscorlib]System.UIntPtr::get_Size()
    IL_000a:  ldc.i4.4
    IL_000b:  bne.un.s   IL_0021

    IL_000d:  ldarg.1
    IL_000e:  ldc.i4     0x7fffffff
    IL_0013:  conv.i8
    IL_0014:  ble.s      IL_0021

    IL_0016:  ldstr      "bytes"
    IL_001b:  newobj     instance void [mscorlib]System.ArgumentOutOfRangeException::.ctor(string)
    IL_0020:  throw

    IL_0021:  ldarg.0
    IL_0022:  call       instance native int LibGit2Sharp.OdbBackend::get_GitOdbBackendPointer()
    IL_0027:  ldarg.1
    IL_0028:  newobj     instance void [mscorlib]System.UIntPtr::.ctor(uint64)
    IL_002d:  call       native int LibGit2Sharp.Core.Proxy::git_odb_backend_malloc(native int,
                                                                                    native uint)
    IL_0032:  stloc.0
    IL_0033:  ldloc.0
    IL_0034:  call       void* [mscorlib]System.IntPtr::op_Explicit(native int)
    IL_0039:  ldc.i4.0
    IL_003a:  conv.i8
    IL_003b:  ldarg.1
    IL_003c:  ldc.i4.3
    IL_003d:  newobj     instance void [mscorlib]System.IO.UnmanagedMemoryStream::.ctor(uint8*,
                                                                                        int64,
                                                                                        int64,
                                                                                        valuetype [mscorlib]System.IO.FileAccess)
    IL_0042:  ret
  } // end of method OdbBackend::Allocate

  .method public hidebysig newslot abstract virtual 
          instance int32  Read(uint8[] oid,
                               [out] class [mscorlib]System.IO.Stream& data,
                               [out] valuetype LibGit2Sharp.ObjectType& objectType) cil managed
  {
  } // end of method OdbBackend::Read

  .method public hidebysig newslot abstract virtual 
          instance int32  ReadPrefix(uint8[] shortOid,
                                     [out] uint8[]& oid,
                                     [out] class [mscorlib]System.IO.Stream& data,
                                     [out] valuetype LibGit2Sharp.ObjectType& objectType) cil managed
  {
  } // end of method OdbBackend::ReadPrefix

  .method public hidebysig newslot abstract virtual 
          instance int32  ReadHeader(uint8[] oid,
                                     [out] int32& length,
                                     [out] valuetype LibGit2Sharp.ObjectType& objectType) cil managed
  {
  } // end of method OdbBackend::ReadHeader

  .method public hidebysig newslot abstract virtual 
          instance int32  Write(uint8[] oid,
                                class [mscorlib]System.IO.Stream dataStream,
                                int64 length,
                                valuetype LibGit2Sharp.ObjectType objectType,
                                [out] uint8[]& finalOid) cil managed
  {
  } // end of method OdbBackend::Write

  .method public hidebysig newslot abstract virtual 
          instance int32  ReadStream(uint8[] oid,
                                     [out] class LibGit2Sharp.OdbBackendStream& 'stream') cil managed
  {
  } // end of method OdbBackend::ReadStream

  .method public hidebysig newslot abstract virtual 
          instance int32  WriteStream(int64 length,
                                      valuetype LibGit2Sharp.ObjectType objectType,
                                      [out] class LibGit2Sharp.OdbBackendStream& 'stream') cil managed
  {
  } // end of method OdbBackend::WriteStream

  .method public hidebysig newslot abstract virtual 
          instance bool  Exists(uint8[] oid) cil managed
  {
  } // end of method OdbBackend::Exists

  .method public hidebysig newslot abstract virtual 
          instance int32  ForEach(class LibGit2Sharp.OdbBackend/ForEachCallback callback) cil managed
  {
  } // end of method OdbBackend::ForEach

  .method assembly hidebysig specialname 
          instance native int  get_GitOdbBackendPointer() cil managed
  {
    // Code size       264 (0x108)
    .maxstack  3
    .locals init (valuetype LibGit2Sharp.Core.GitOdbBackend V_0,
             valuetype LibGit2Sharp.OdbBackend/OdbBackendOperations V_1)
    IL_0000:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0005:  ldarg.0
    IL_0006:  ldfld      native int LibGit2Sharp.OdbBackend::nativeBackendPointer
    IL_000b:  call       bool [mscorlib]System.IntPtr::op_Equality(native int,
                                                                   native int)
    IL_0010:  brfalse    IL_0101

    IL_0015:  ldloca.s   V_0
    IL_0017:  initobj    LibGit2Sharp.Core.GitOdbBackend
    IL_001d:  ldloca.s   V_0
    IL_001f:  ldc.i4.1
    IL_0020:  stfld      uint32 LibGit2Sharp.Core.GitOdbBackend::Version
    IL_0025:  ldloca.s   V_0
    IL_0027:  ldsfld     class LibGit2Sharp.Core.GitOdbBackend/free_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::FreeCallback
    IL_002c:  stfld      class LibGit2Sharp.Core.GitOdbBackend/free_callback LibGit2Sharp.Core.GitOdbBackend::Free
    IL_0031:  ldarg.0
    IL_0032:  callvirt   instance valuetype LibGit2Sharp.OdbBackend/OdbBackendOperations LibGit2Sharp.OdbBackend::get_SupportedOperations()
    IL_0037:  stloc.1
    IL_0038:  ldloc.1
    IL_0039:  ldc.i4.1
    IL_003a:  and
    IL_003b:  brfalse.s  IL_0049

    IL_003d:  ldloca.s   V_0
    IL_003f:  ldsfld     class LibGit2Sharp.Core.GitOdbBackend/read_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::ReadCallback
    IL_0044:  stfld      class LibGit2Sharp.Core.GitOdbBackend/read_callback LibGit2Sharp.Core.GitOdbBackend::Read
    IL_0049:  ldloc.1
    IL_004a:  ldc.i4.2
    IL_004b:  and
    IL_004c:  brfalse.s  IL_005a

    IL_004e:  ldloca.s   V_0
    IL_0050:  ldsfld     class LibGit2Sharp.Core.GitOdbBackend/read_prefix_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::ReadPrefixCallback
    IL_0055:  stfld      class LibGit2Sharp.Core.GitOdbBackend/read_prefix_callback LibGit2Sharp.Core.GitOdbBackend::ReadPrefix
    IL_005a:  ldloc.1
    IL_005b:  ldc.i4.4
    IL_005c:  and
    IL_005d:  brfalse.s  IL_006b

    IL_005f:  ldloca.s   V_0
    IL_0061:  ldsfld     class LibGit2Sharp.Core.GitOdbBackend/read_header_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::ReadHeaderCallback
    IL_0066:  stfld      class LibGit2Sharp.Core.GitOdbBackend/read_header_callback LibGit2Sharp.Core.GitOdbBackend::ReadHeader
    IL_006b:  ldloc.1
    IL_006c:  ldc.i4.s   16
    IL_006e:  and
    IL_006f:  brfalse.s  IL_007d

    IL_0071:  ldloca.s   V_0
    IL_0073:  ldsfld     class LibGit2Sharp.Core.GitOdbBackend/readstream_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::ReadStreamCallback
    IL_0078:  stfld      class LibGit2Sharp.Core.GitOdbBackend/readstream_callback LibGit2Sharp.Core.GitOdbBackend::ReadStream
    IL_007d:  ldloc.1
    IL_007e:  ldc.i4.8
    IL_007f:  and
    IL_0080:  brfalse.s  IL_008e

    IL_0082:  ldloca.s   V_0
    IL_0084:  ldsfld     class LibGit2Sharp.Core.GitOdbBackend/write_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::WriteCallback
    IL_0089:  stfld      class LibGit2Sharp.Core.GitOdbBackend/write_callback LibGit2Sharp.Core.GitOdbBackend::Write
    IL_008e:  ldloc.1
    IL_008f:  ldc.i4.s   32
    IL_0091:  and
    IL_0092:  brfalse.s  IL_00a0

    IL_0094:  ldloca.s   V_0
    IL_0096:  ldsfld     class LibGit2Sharp.Core.GitOdbBackend/writestream_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::WriteStreamCallback
    IL_009b:  stfld      class LibGit2Sharp.Core.GitOdbBackend/writestream_callback LibGit2Sharp.Core.GitOdbBackend::WriteStream
    IL_00a0:  ldloc.1
    IL_00a1:  ldc.i4.s   64
    IL_00a3:  and
    IL_00a4:  brfalse.s  IL_00b2

    IL_00a6:  ldloca.s   V_0
    IL_00a8:  ldsfld     class LibGit2Sharp.Core.GitOdbBackend/exists_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::ExistsCallback
    IL_00ad:  stfld      class LibGit2Sharp.Core.GitOdbBackend/exists_callback LibGit2Sharp.Core.GitOdbBackend::Exists
    IL_00b2:  ldloc.1
    IL_00b3:  ldc.i4     0x80
    IL_00b8:  and
    IL_00b9:  brfalse.s  IL_00c7

    IL_00bb:  ldloca.s   V_0
    IL_00bd:  ldsfld     class LibGit2Sharp.Core.GitOdbBackend/foreach_callback LibGit2Sharp.OdbBackend/BackendEntryPoints::ForEachCallback
    IL_00c2:  stfld      class LibGit2Sharp.Core.GitOdbBackend/foreach_callback LibGit2Sharp.Core.GitOdbBackend::Foreach
    IL_00c7:  ldloca.s   V_0
    IL_00c9:  ldarg.0
    IL_00ca:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::Alloc(object)
    IL_00cf:  call       native int [mscorlib]System.Runtime.InteropServices.GCHandle::ToIntPtr(valuetype [mscorlib]System.Runtime.InteropServices.GCHandle)
    IL_00d4:  stfld      native int LibGit2Sharp.Core.GitOdbBackend::GCHandle
    IL_00d9:  ldarg.0
    IL_00da:  ldloc.0
    IL_00db:  box        LibGit2Sharp.Core.GitOdbBackend
    IL_00e0:  call       int32 [mscorlib]System.Runtime.InteropServices.Marshal::SizeOf(object)
    IL_00e5:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::AllocHGlobal(int32)
    IL_00ea:  stfld      native int LibGit2Sharp.OdbBackend::nativeBackendPointer
    IL_00ef:  ldloc.0
    IL_00f0:  box        LibGit2Sharp.Core.GitOdbBackend
    IL_00f5:  ldarg.0
    IL_00f6:  ldfld      native int LibGit2Sharp.OdbBackend::nativeBackendPointer
    IL_00fb:  ldc.i4.0
    IL_00fc:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::StructureToPtr(object,
                                                                                               native int,
                                                                                               bool)
    IL_0101:  ldarg.0
    IL_0102:  ldfld      native int LibGit2Sharp.OdbBackend::nativeBackendPointer
    IL_0107:  ret
  } // end of method OdbBackend::get_GitOdbBackendPointer

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method OdbBackend::.ctor

  .property instance valuetype LibGit2Sharp.OdbBackend/OdbBackendOperations
          SupportedOperations()
  {
    .get instance valuetype LibGit2Sharp.OdbBackend/OdbBackendOperations LibGit2Sharp.OdbBackend::get_SupportedOperations()
  } // end of property OdbBackend::SupportedOperations
  .property instance native int GitOdbBackendPointer()
  {
    .get instance native int LibGit2Sharp.OdbBackend::get_GitOdbBackendPointer()
  } // end of property OdbBackend::GitOdbBackendPointer
} // end of class LibGit2Sharp.OdbBackend

.class public abstract auto ansi beforefieldinit LibGit2Sharp.OdbBackendStream
       extends [mscorlib]System.Object
{
  .class abstract auto ansi sealed nested private beforefieldinit BackendStreamEntryPoints
         extends [mscorlib]System.Object
  {
    .field public static initonly class LibGit2Sharp.Core.GitOdbBackendStream/read_callback ReadCallback
    .field public static initonly class LibGit2Sharp.Core.GitOdbBackendStream/write_callback WriteCallback
    .field public static initonly class LibGit2Sharp.Core.GitOdbBackendStream/finalize_write_callback FinalizeWriteCallback
    .field public static initonly class LibGit2Sharp.Core.GitOdbBackendStream/free_callback FreeCallback
    .method private hidebysig static int32 
            Read(native int 'stream',
                 native int buffer,
                 native uint len) cil managed
    {
      // Code size       117 (0x75)
      .maxstack  5
      .locals init (class LibGit2Sharp.OdbBackendStream V_0,
               class [mscorlib]System.IO.UnmanagedMemoryStream V_1,
               class [mscorlib]System.Exception V_2,
               int32 V_3,
               valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldsfld     int32 LibGit2Sharp.Core.GitOdbBackendStream::GCHandleOffset
      IL_0006:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native int,
                                                                                                   int32)
      IL_000b:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
      IL_0010:  stloc.s    V_4
      IL_0012:  ldloca.s   V_4
      IL_0014:  call       instance object [mscorlib]System.Runtime.InteropServices.GCHandle::get_Target()
      IL_0019:  isinst     LibGit2Sharp.OdbBackendStream
      IL_001e:  stloc.0
      IL_001f:  ldloc.0
      IL_0020:  brfalse.s  IL_0071

      IL_0022:  ldarga.s   len
      IL_0024:  call       instance uint64 [mscorlib]System.UIntPtr::ToUInt64()
      IL_0029:  ldc.i8     0x7fffffffffffffff
      IL_0032:  bge.un.s   IL_0071

      IL_0034:  ldarg.1
      IL_0035:  call       void* [mscorlib]System.IntPtr::op_Explicit(native int)
      IL_003a:  ldc.i4.0
      IL_003b:  conv.i8
      IL_003c:  ldarga.s   len
      IL_003e:  call       instance uint64 [mscorlib]System.UIntPtr::ToUInt64()
      IL_0043:  ldc.i4.3
      IL_0044:  newobj     instance void [mscorlib]System.IO.UnmanagedMemoryStream::.ctor(uint8*,
                                                                                          int64,
                                                                                          int64,
                                                                                          valuetype [mscorlib]System.IO.FileAccess)
      IL_0049:  stloc.1
      .try
      {
        .try
        {
          IL_004a:  ldloc.0
          IL_004b:  ldloc.1
          IL_004c:  ldarga.s   len
          IL_004e:  call       instance uint64 [mscorlib]System.UIntPtr::ToUInt64()
          IL_0053:  callvirt   instance int32 LibGit2Sharp.OdbBackendStream::Read(class [mscorlib]System.IO.Stream,
                                                                                  int64)
          IL_0058:  stloc.3
          IL_0059:  leave.s    IL_0073

        }  // end .try
        catch [mscorlib]System.Exception 
        {
          IL_005b:  stloc.2
          IL_005c:  ldc.i4.8
          IL_005d:  ldloc.2
          IL_005e:  call       void LibGit2Sharp.Core.Proxy::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                            class [mscorlib]System.Exception)
          IL_0063:  leave.s    IL_0065

        }  // end handler
        IL_0065:  leave.s    IL_0071

      }  // end .try
      finally
      {
        IL_0067:  ldloc.1
        IL_0068:  brfalse.s  IL_0070

        IL_006a:  ldloc.1
        IL_006b:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0070:  endfinally
      }  // end handler
      IL_0071:  ldc.i4.m1
      IL_0072:  ret

      IL_0073:  ldloc.3
      IL_0074:  ret
    } // end of method BackendStreamEntryPoints::Read

    .method private hidebysig static int32 
            Write(native int 'stream',
                  native int buffer,
                  native uint len) cil managed
    {
      // Code size       112 (0x70)
      .maxstack  3
      .locals init (class LibGit2Sharp.OdbBackendStream V_0,
               int64 V_1,
               class [mscorlib]System.IO.UnmanagedMemoryStream V_2,
               class [mscorlib]System.Exception V_3,
               int32 V_4,
               valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldsfld     int32 LibGit2Sharp.Core.GitOdbBackendStream::GCHandleOffset
      IL_0006:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native int,
                                                                                                   int32)
      IL_000b:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
      IL_0010:  stloc.s    V_5
      IL_0012:  ldloca.s   V_5
      IL_0014:  call       instance object [mscorlib]System.Runtime.InteropServices.GCHandle::get_Target()
      IL_0019:  isinst     LibGit2Sharp.OdbBackendStream
      IL_001e:  stloc.0
      IL_001f:  ldloc.0
      IL_0020:  brfalse.s  IL_006b

      IL_0022:  ldarga.s   len
      IL_0024:  call       instance uint64 [mscorlib]System.UIntPtr::ToUInt64()
      IL_0029:  ldc.i8     0x7fffffffffffffff
      IL_0032:  bge.un.s   IL_006b

      IL_0034:  ldarga.s   len
      IL_0036:  call       instance uint64 [mscorlib]System.UIntPtr::ToUInt64()
      IL_003b:  stloc.1
      IL_003c:  ldarg.1
      IL_003d:  call       void* [mscorlib]System.IntPtr::op_Explicit(native int)
      IL_0042:  ldloc.1
      IL_0043:  newobj     instance void [mscorlib]System.IO.UnmanagedMemoryStream::.ctor(uint8*,
                                                                                          int64)
      IL_0048:  stloc.2
      .try
      {
        .try
        {
          IL_0049:  ldloc.0
          IL_004a:  ldloc.2
          IL_004b:  ldloc.1
          IL_004c:  callvirt   instance int32 LibGit2Sharp.OdbBackendStream::Write(class [mscorlib]System.IO.Stream,
                                                                                   int64)
          IL_0051:  stloc.s    V_4
          IL_0053:  leave.s    IL_006d

        }  // end .try
        catch [mscorlib]System.Exception 
        {
          IL_0055:  stloc.3
          IL_0056:  ldc.i4.8
          IL_0057:  ldloc.3
          IL_0058:  call       void LibGit2Sharp.Core.Proxy::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                            class [mscorlib]System.Exception)
          IL_005d:  leave.s    IL_005f

        }  // end handler
        IL_005f:  leave.s    IL_006b

      }  // end .try
      finally
      {
        IL_0061:  ldloc.2
        IL_0062:  brfalse.s  IL_006a

        IL_0064:  ldloc.2
        IL_0065:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_006a:  endfinally
      }  // end handler
      IL_006b:  ldc.i4.m1
      IL_006c:  ret

      IL_006d:  ldloc.s    V_4
      IL_006f:  ret
    } // end of method BackendStreamEntryPoints::Write

    .method private hidebysig static int32 
            FinalizeWrite([out] valuetype LibGit2Sharp.Core.GitOid& oid_p,
                          native int 'stream') cil managed
    {
      // Code size       80 (0x50)
      .maxstack  2
      .locals init (class LibGit2Sharp.OdbBackendStream V_0,
               uint8[] V_1,
               int32 V_2,
               class [mscorlib]System.Exception V_3,
               int32 V_4,
               valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V_5)
      IL_0000:  ldarg.0
      IL_0001:  initobj    LibGit2Sharp.Core.GitOid
      IL_0007:  ldarg.1
      IL_0008:  ldsfld     int32 LibGit2Sharp.Core.GitOdbBackendStream::GCHandleOffset
      IL_000d:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native int,
                                                                                                   int32)
      IL_0012:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
      IL_0017:  stloc.s    V_5
      IL_0019:  ldloca.s   V_5
      IL_001b:  call       instance object [mscorlib]System.Runtime.InteropServices.GCHandle::get_Target()
      IL_0020:  isinst     LibGit2Sharp.OdbBackendStream
      IL_0025:  stloc.0
      IL_0026:  ldloc.0
      IL_0027:  brfalse.s  IL_004b

      .try
      {
        IL_0029:  ldloc.0
        IL_002a:  ldloca.s   V_1
        IL_002c:  callvirt   instance int32 LibGit2Sharp.OdbBackendStream::FinalizeWrite(uint8[]&)
        IL_0031:  stloc.2
        IL_0032:  ldloc.2
        IL_0033:  brtrue.s   IL_003c

        IL_0035:  ldarg.0
        IL_0036:  ldloc.1
        IL_0037:  stfld      uint8[] LibGit2Sharp.Core.GitOid::Id
        IL_003c:  ldloc.2
        IL_003d:  stloc.s    V_4
        IL_003f:  leave.s    IL_004d

      }  // end .try
      catch [mscorlib]System.Exception 
      {
        IL_0041:  stloc.3
        IL_0042:  ldc.i4.8
        IL_0043:  ldloc.3
        IL_0044:  call       void LibGit2Sharp.Core.Proxy::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                          class [mscorlib]System.Exception)
        IL_0049:  leave.s    IL_004b

      }  // end handler
      IL_004b:  ldc.i4.m1
      IL_004c:  ret

      IL_004d:  ldloc.s    V_4
      IL_004f:  ret
    } // end of method BackendStreamEntryPoints::FinalizeWrite

    .method private hidebysig static void 
            Free(native int 'stream') cil managed
    {
      // Code size       52 (0x34)
      .maxstack  2
      .locals init (class LibGit2Sharp.OdbBackendStream V_0,
               class [mscorlib]System.Exception V_1,
               valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldsfld     int32 LibGit2Sharp.Core.GitOdbBackendStream::GCHandleOffset
      IL_0006:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native int,
                                                                                                   int32)
      IL_000b:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
      IL_0010:  stloc.2
      IL_0011:  ldloca.s   V_2
      IL_0013:  call       instance object [mscorlib]System.Runtime.InteropServices.GCHandle::get_Target()
      IL_0018:  isinst     LibGit2Sharp.OdbBackendStream
      IL_001d:  stloc.0
      IL_001e:  ldloc.0
      IL_001f:  brfalse.s  IL_0033

      .try
      {
        IL_0021:  ldloc.0
        IL_0022:  callvirt   instance void LibGit2Sharp.OdbBackendStream::Dispose()
        IL_0027:  leave.s    IL_0033

      }  // end .try
      catch [mscorlib]System.Exception 
      {
        IL_0029:  stloc.1
        IL_002a:  ldc.i4.8
        IL_002b:  ldloc.1
        IL_002c:  call       void LibGit2Sharp.Core.Proxy::giterr_set_str(valuetype LibGit2Sharp.Core.GitErrorCategory,
                                                                          class [mscorlib]System.Exception)
        IL_0031:  leave.s    IL_0033

      }  // end handler
      IL_0033:  ret
    } // end of method BackendStreamEntryPoints::Free

    .method private hidebysig specialname rtspecialname static 
            void  .cctor() cil managed
    {
      // Code size       69 (0x45)
      .maxstack  3
      IL_0000:  ldnull
      IL_0001:  ldftn      int32 LibGit2Sharp.OdbBackendStream/BackendStreamEntryPoints::Read(native int,
                                                                                              native int,
                                                                                              native uint)
      IL_0007:  newobj     instance void LibGit2Sharp.Core.GitOdbBackendStream/read_callback::.ctor(object,
                                                                                                    native int)
      IL_000c:  stsfld     class LibGit2Sharp.Core.GitOdbBackendStream/read_callback LibGit2Sharp.OdbBackendStream/BackendStreamEntryPoints::ReadCallback
      IL_0011:  ldnull
      IL_0012:  ldftn      int32 LibGit2Sharp.OdbBackendStream/BackendStreamEntryPoints::Write(native int,
                                                                                               native int,
                                                                                               native uint)
      IL_0018:  newobj     instance void LibGit2Sharp.Core.GitOdbBackendStream/write_callback::.ctor(object,
                                                                                                     native int)
      IL_001d:  stsfld     class LibGit2Sharp.Core.GitOdbBackendStream/write_callback LibGit2Sharp.OdbBackendStream/BackendStreamEntryPoints::WriteCallback
      IL_0022:  ldnull
      IL_0023:  ldftn      int32 LibGit2Sharp.OdbBackendStream/BackendStreamEntryPoints::FinalizeWrite(valuetype LibGit2Sharp.Core.GitOid&,
                                                                                                       native int)
      IL_0029:  newobj     instance void LibGit2Sharp.Core.GitOdbBackendStream/finalize_write_callback::.ctor(object,
                                                                                                              native int)
      IL_002e:  stsfld     class LibGit2Sharp.Core.GitOdbBackendStream/finalize_write_callback LibGit2Sharp.OdbBackendStream/BackendStreamEntryPoints::FinalizeWriteCallback
      IL_0033:  ldnull
      IL_0034:  ldftn      void LibGit2Sharp.OdbBackendStream/BackendStreamEntryPoints::Free(native int)
      IL_003a:  newobj     instance void LibGit2Sharp.Core.GitOdbBackendStream/free_callback::.ctor(object,
                                                                                                    native int)
      IL_003f:  stsfld     class LibGit2Sharp.Core.GitOdbBackendStream/free_callback LibGit2Sharp.OdbBackendStream/BackendStreamEntryPoints::FreeCallback
      IL_0044:  ret
    } // end of method BackendStreamEntryPoints::.cctor

  } // end of class BackendStreamEntryPoints

  .field private initonly class LibGit2Sharp.OdbBackend backend
  .field private native int nativeBackendStreamPointer
  .method famorassem hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor()
    IL_000b:  throw
  } // end of method OdbBackendStream::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.OdbBackend backend) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.OdbBackend LibGit2Sharp.OdbBackendStream::backend
    IL_000d:  ret
  } // end of method OdbBackendStream::.ctor

  .method family hidebysig newslot virtual 
          instance void  Dispose() cil managed
  {
    // Code size       70 (0x46)
    .maxstack  2
    .locals init (valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V_0)
    IL_0000:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0005:  ldarg.0
    IL_0006:  ldfld      native int LibGit2Sharp.OdbBackendStream::nativeBackendStreamPointer
    IL_000b:  call       bool [mscorlib]System.IntPtr::op_Inequality(native int,
                                                                     native int)
    IL_0010:  brfalse.s  IL_0045

    IL_0012:  ldarg.0
    IL_0013:  ldfld      native int LibGit2Sharp.OdbBackendStream::nativeBackendStreamPointer
    IL_0018:  ldsfld     int32 LibGit2Sharp.Core.GitOdbBackendStream::GCHandleOffset
    IL_001d:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native int,
                                                                                                 int32)
    IL_0022:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
    IL_0027:  stloc.0
    IL_0028:  ldloca.s   V_0
    IL_002a:  call       instance void [mscorlib]System.Runtime.InteropServices.GCHandle::Free()
    IL_002f:  ldarg.0
    IL_0030:  ldfld      native int LibGit2Sharp.OdbBackendStream::nativeBackendStreamPointer
    IL_0035:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::FreeHGlobal(native int)
    IL_003a:  ldarg.0
    IL_003b:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0040:  stfld      native int LibGit2Sharp.OdbBackendStream::nativeBackendStreamPointer
    IL_0045:  ret
  } // end of method OdbBackendStream::Dispose

  .method public hidebysig newslot specialname abstract virtual 
          instance bool  get_CanRead() cil managed
  {
  } // end of method OdbBackendStream::get_CanRead

  .method public hidebysig newslot specialname abstract virtual 
          instance bool  get_CanWrite() cil managed
  {
  } // end of method OdbBackendStream::get_CanWrite

  .method public hidebysig newslot abstract virtual 
          instance int32  Read(class [mscorlib]System.IO.Stream dataStream,
                               int64 length) cil managed
  {
  } // end of method OdbBackendStream::Read

  .method public hidebysig newslot abstract virtual 
          instance int32  Write(class [mscorlib]System.IO.Stream dataStream,
                                int64 length) cil managed
  {
  } // end of method OdbBackendStream::Write

  .method public hidebysig newslot abstract virtual 
          instance int32  FinalizeWrite([out] uint8[]& oid) cil managed
  {
  } // end of method OdbBackendStream::FinalizeWrite

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.OdbBackend 
          get_Backend() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.OdbBackend LibGit2Sharp.OdbBackendStream::backend
    IL_0006:  ret
  } // end of method OdbBackendStream::get_Backend

  .method assembly hidebysig specialname 
          instance native int  get_GitOdbBackendStreamPointer() cil managed
  {
    // Code size       186 (0xba)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.GitOdbBackendStream V_0)
    IL_0000:  ldsfld     native int [mscorlib]System.IntPtr::Zero
    IL_0005:  ldarg.0
    IL_0006:  ldfld      native int LibGit2Sharp.OdbBackendStream::nativeBackendStreamPointer
    IL_000b:  call       bool [mscorlib]System.IntPtr::op_Equality(native int,
                                                                   native int)
    IL_0010:  brfalse    IL_00b3

    IL_0015:  newobj     instance void LibGit2Sharp.Core.GitOdbBackendStream::.ctor()
    IL_001a:  stloc.0
    IL_001b:  ldloc.0
    IL_001c:  ldarg.0
    IL_001d:  ldfld      class LibGit2Sharp.OdbBackend LibGit2Sharp.OdbBackendStream::backend
    IL_0022:  callvirt   instance native int LibGit2Sharp.OdbBackend::get_GitOdbBackendPointer()
    IL_0027:  stfld      native int LibGit2Sharp.Core.GitOdbBackendStream::Backend
    IL_002c:  ldloc.0
    IL_002d:  ldsfld     class LibGit2Sharp.Core.GitOdbBackendStream/free_callback LibGit2Sharp.OdbBackendStream/BackendStreamEntryPoints::FreeCallback
    IL_0032:  stfld      class LibGit2Sharp.Core.GitOdbBackendStream/free_callback LibGit2Sharp.Core.GitOdbBackendStream::Free
    IL_0037:  ldarg.0
    IL_0038:  callvirt   instance bool LibGit2Sharp.OdbBackendStream::get_CanRead()
    IL_003d:  brfalse.s  IL_0058

    IL_003f:  ldloc.0
    IL_0040:  ldsfld     class LibGit2Sharp.Core.GitOdbBackendStream/read_callback LibGit2Sharp.OdbBackendStream/BackendStreamEntryPoints::ReadCallback
    IL_0045:  stfld      class LibGit2Sharp.Core.GitOdbBackendStream/read_callback LibGit2Sharp.Core.GitOdbBackendStream::Read
    IL_004a:  ldloc.0
    IL_004b:  dup
    IL_004c:  ldfld      valuetype LibGit2Sharp.Core.GitOdbBackendStreamMode LibGit2Sharp.Core.GitOdbBackendStream::Mode
    IL_0051:  ldc.i4.2
    IL_0052:  or
    IL_0053:  stfld      valuetype LibGit2Sharp.Core.GitOdbBackendStreamMode LibGit2Sharp.Core.GitOdbBackendStream::Mode
    IL_0058:  ldarg.0
    IL_0059:  callvirt   instance bool LibGit2Sharp.OdbBackendStream::get_CanWrite()
    IL_005e:  brfalse.s  IL_0084

    IL_0060:  ldloc.0
    IL_0061:  ldsfld     class LibGit2Sharp.Core.GitOdbBackendStream/write_callback LibGit2Sharp.OdbBackendStream/BackendStreamEntryPoints::WriteCallback
    IL_0066:  stfld      class LibGit2Sharp.Core.GitOdbBackendStream/write_callback LibGit2Sharp.Core.GitOdbBackendStream::Write
    IL_006b:  ldloc.0
    IL_006c:  ldsfld     class LibGit2Sharp.Core.GitOdbBackendStream/finalize_write_callback LibGit2Sharp.OdbBackendStream/BackendStreamEntryPoints::FinalizeWriteCallback
    IL_0071:  stfld      class LibGit2Sharp.Core.GitOdbBackendStream/finalize_write_callback LibGit2Sharp.Core.GitOdbBackendStream::FinalizeWrite
    IL_0076:  ldloc.0
    IL_0077:  dup
    IL_0078:  ldfld      valuetype LibGit2Sharp.Core.GitOdbBackendStreamMode LibGit2Sharp.Core.GitOdbBackendStream::Mode
    IL_007d:  ldc.i4.4
    IL_007e:  or
    IL_007f:  stfld      valuetype LibGit2Sharp.Core.GitOdbBackendStreamMode LibGit2Sharp.Core.GitOdbBackendStream::Mode
    IL_0084:  ldloc.0
    IL_0085:  ldarg.0
    IL_0086:  call       valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::Alloc(object)
    IL_008b:  call       native int [mscorlib]System.Runtime.InteropServices.GCHandle::ToIntPtr(valuetype [mscorlib]System.Runtime.InteropServices.GCHandle)
    IL_0090:  stfld      native int LibGit2Sharp.Core.GitOdbBackendStream::GCHandle
    IL_0095:  ldarg.0
    IL_0096:  ldloc.0
    IL_0097:  call       int32 [mscorlib]System.Runtime.InteropServices.Marshal::SizeOf(object)
    IL_009c:  call       native int [mscorlib]System.Runtime.InteropServices.Marshal::AllocHGlobal(int32)
    IL_00a1:  stfld      native int LibGit2Sharp.OdbBackendStream::nativeBackendStreamPointer
    IL_00a6:  ldloc.0
    IL_00a7:  ldarg.0
    IL_00a8:  ldfld      native int LibGit2Sharp.OdbBackendStream::nativeBackendStreamPointer
    IL_00ad:  ldc.i4.0
    IL_00ae:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::StructureToPtr(object,
                                                                                               native int,
                                                                                               bool)
    IL_00b3:  ldarg.0
    IL_00b4:  ldfld      native int LibGit2Sharp.OdbBackendStream::nativeBackendStreamPointer
    IL_00b9:  ret
  } // end of method OdbBackendStream::get_GitOdbBackendStreamPointer

  .property instance bool CanRead()
  {
    .get instance bool LibGit2Sharp.OdbBackendStream::get_CanRead()
  } // end of property OdbBackendStream::CanRead
  .property instance bool CanWrite()
  {
    .get instance bool LibGit2Sharp.OdbBackendStream::get_CanWrite()
  } // end of property OdbBackendStream::CanWrite
  .property instance class LibGit2Sharp.OdbBackend
          Backend()
  {
    .get instance class LibGit2Sharp.OdbBackend LibGit2Sharp.OdbBackendStream::get_Backend()
  } // end of property OdbBackendStream::Backend
  .property instance native int GitOdbBackendStreamPointer()
  {
    .get instance native int LibGit2Sharp.OdbBackendStream::get_GitOdbBackendStreamPointer()
  } // end of property OdbBackendStream::GitOdbBackendStreamPointer
} // end of class LibGit2Sharp.OdbBackendStream

.class public auto ansi beforefieldinit LibGit2Sharp.ObjectId
       extends [mscorlib]System.Object
       implements class [mscorlib]System.IEquatable`1<class LibGit2Sharp.ObjectId>
{
  .field private static literal int32 rawSize = int32(0x00000014)
  .field static family literal int32 HexSize = int32(0x00000028)
  .field private static literal string hexDigits = "0123456789abcdef"
  .field private initonly valuetype LibGit2Sharp.Core.GitOid oid
  .field private initonly string sha
  .field private static initonly uint8[] reverseHexDigits
  .field private static initonly class [System.Core]System.Func`2<int32,uint8> byteConverter
  .field private static initonly class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.ObjectId> equalityHelper
  .field public static class LibGit2Sharp.ObjectId Zero
  .field private static class [System.Core]System.Func`2<uint8[],bool> 'CS$<>9__CachedAnonymousMethodDelegate2'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<char,bool> 'CS$<>9__CachedAnonymousMethodDelegate5'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<int32,uint8> 'CS$<>9__CachedAnonymousMethodDelegate8'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.ObjectId,object> 'CS$<>9__CachedAnonymousMethodDelegate9'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype LibGit2Sharp.Core.GitOid oid) cil managed
  {
    // Code size       32 (0x20)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::oid
    IL_000d:  ldarg.0
    IL_000e:  ldarga.s   oid
    IL_0010:  ldfld      uint8[] LibGit2Sharp.Core.GitOid::Id
    IL_0015:  call       string LibGit2Sharp.ObjectId::ToString(uint8[])
    IL_001a:  stfld      string LibGit2Sharp.ObjectId::sha
    IL_001f:  ret
  } // end of method ObjectId::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint8[] rawId) cil managed
  {
    // Code size       75 (0x4b)
    .maxstack  4
    .locals init (valuetype LibGit2Sharp.Core.GitOid V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldloca.s   V_0
    IL_0003:  initobj    LibGit2Sharp.Core.GitOid
    IL_0009:  ldloca.s   V_0
    IL_000b:  ldarg.1
    IL_000c:  stfld      uint8[] LibGit2Sharp.Core.GitOid::Id
    IL_0011:  ldloc.0
    IL_0012:  call       instance void LibGit2Sharp.ObjectId::.ctor(valuetype LibGit2Sharp.Core.GitOid)
    IL_0017:  ldarg.1
    IL_0018:  ldstr      "rawId"
    IL_001d:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0022:  ldarg.1
    IL_0023:  ldsfld     class [System.Core]System.Func`2<uint8[],bool> LibGit2Sharp.ObjectId::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0028:  brtrue.s   IL_003b

    IL_002a:  ldnull
    IL_002b:  ldftn      bool LibGit2Sharp.ObjectId::'<.ctor>b__1'(uint8[])
    IL_0031:  newobj     instance void class [System.Core]System.Func`2<uint8[],bool>::.ctor(object,
                                                                                             native int)
    IL_0036:  stsfld     class [System.Core]System.Func`2<uint8[],bool> LibGit2Sharp.ObjectId::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_003b:  ldsfld     class [System.Core]System.Func`2<uint8[],bool> LibGit2Sharp.ObjectId::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0040:  ldstr      "rawId"
    IL_0045:  call       void LibGit2Sharp.Core.Ensure::ArgumentConformsTo<uint8[]>(!!0,
                                                                                    class [System.Core]System.Func`2<!!0,bool>,
                                                                                    string)
    IL_004a:  ret
  } // end of method ObjectId::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string sha) cil managed
  {
    // Code size       77 (0x4d)
    .maxstack  5
    .locals init (valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid> V_0,
             object[] V_1)
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.1
    IL_0007:  ldc.i4.1
    IL_0008:  call       valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid> LibGit2Sharp.ObjectId::BuildOidFrom(string,
                                                                                                                                       bool)
    IL_000d:  stloc.0
    IL_000e:  ldloca.s   V_0
    IL_0010:  call       instance bool valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid>::get_HasValue()
    IL_0015:  brtrue.s   IL_0038

    IL_0017:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_001c:  ldstr      "'{0}' is not a valid Sha-1."
    IL_0021:  ldc.i4.1
    IL_0022:  newarr     [mscorlib]System.Object
    IL_0027:  stloc.1
    IL_0028:  ldloc.1
    IL_0029:  ldc.i4.0
    IL_002a:  ldarg.1
    IL_002b:  stelem.ref
    IL_002c:  ldloc.1
    IL_002d:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0032:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0037:  throw

    IL_0038:  ldarg.0
    IL_0039:  ldloca.s   V_0
    IL_003b:  call       instance !0 valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid>::get_Value()
    IL_0040:  stfld      valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::oid
    IL_0045:  ldarg.0
    IL_0046:  ldarg.1
    IL_0047:  stfld      string LibGit2Sharp.ObjectId::sha
    IL_004c:  ret
  } // end of method ObjectId::.ctor

  .method assembly hidebysig specialname 
          instance valuetype LibGit2Sharp.Core.GitOid 
          get_Oid() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::oid
    IL_0006:  ret
  } // end of method ObjectId::get_Oid

  .method public hidebysig specialname instance uint8[] 
          get_RawId() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::oid
    IL_0006:  ldfld      uint8[] LibGit2Sharp.Core.GitOid::Id
    IL_000b:  ret
  } // end of method ObjectId::get_RawId

  .method public hidebysig newslot specialname virtual 
          instance string  get_Sha() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.ObjectId::sha
    IL_0006:  ret
  } // end of method ObjectId::get_Sha

  .method public hidebysig static bool  TryParse(string sha,
                                                 [out] class LibGit2Sharp.ObjectId& result) cil managed
  {
    // Code size       23 (0x17)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  call       valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid> LibGit2Sharp.ObjectId::BuildOidFrom(string,
                                                                                                                                       bool)
    IL_0008:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid>)
    IL_000d:  stind.ref
    IL_000e:  ldarg.1
    IL_000f:  ldind.ref
    IL_0010:  ldnull
    IL_0011:  call       bool LibGit2Sharp.ObjectId::op_Inequality(class LibGit2Sharp.ObjectId,
                                                                   class LibGit2Sharp.ObjectId)
    IL_0016:  ret
  } // end of method ObjectId::TryParse

  .method private hidebysig static valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid> 
          BuildOidFrom(string sha,
                       bool shouldThrowIfInvalid) cil managed
  {
    // Code size       31 (0x1f)
    .maxstack  2
    .locals init (valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid> V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool LibGit2Sharp.ObjectId::LooksValid(string,
                                                                bool)
    IL_0007:  brtrue.s   IL_0013

    IL_0009:  ldloca.s   V_0
    IL_000b:  initobj    valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid>
    IL_0011:  ldloc.0
    IL_0012:  ret

    IL_0013:  ldarg.0
    IL_0014:  call       valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::ToOid(string)
    IL_0019:  newobj     instance void valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.Core.GitOid>::.ctor(!0)
    IL_001e:  ret
  } // end of method ObjectId::BuildOidFrom

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  isinst     LibGit2Sharp.ObjectId
    IL_0007:  call       instance bool LibGit2Sharp.ObjectId::Equals(class LibGit2Sharp.ObjectId)
    IL_000c:  ret
  } // end of method ObjectId::Equals

  .method public hidebysig newslot virtual final 
          instance bool  Equals(class LibGit2Sharp.ObjectId other) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.ObjectId::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance bool class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.ObjectId>::Equals(!0,
                                                                                                                           !0)
    IL_000c:  ret
  } // end of method ObjectId::Equals

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.ObjectId::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  callvirt   instance int32 class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.ObjectId>::GetHashCode(!0)
    IL_000b:  ret
  } // end of method ObjectId::GetHashCode

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
    IL_0006:  ret
  } // end of method ObjectId::ToString

  .method public hidebysig instance string 
          ToString(int32 prefixLength) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  4
    .locals init (int32 V_0)
    IL_0000:  ldarg.1
    IL_0001:  call       int32 LibGit2Sharp.ObjectId::NormalizeLength(int32)
    IL_0006:  stloc.0
    IL_0007:  ldarg.0
    IL_0008:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
    IL_000d:  ldc.i4.0
    IL_000e:  ldarg.0
    IL_000f:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
    IL_0014:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0019:  ldloc.0
    IL_001a:  call       int32 [mscorlib]System.Math::Min(int32,
                                                          int32)
    IL_001f:  callvirt   instance string [mscorlib]System.String::Substring(int32,
                                                                            int32)
    IL_0024:  ret
  } // end of method ObjectId::ToString

  .method private hidebysig static int32 
          NormalizeLength(int32 prefixLength) cil managed
  {
    // Code size       16 (0x10)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.1
    IL_0002:  bge.s      IL_0006

    IL_0004:  ldc.i4.1
    IL_0005:  ret

    IL_0006:  ldarg.0
    IL_0007:  ldc.i4.s   40
    IL_0009:  ble.s      IL_000e

    IL_000b:  ldc.i4.s   40
    IL_000d:  ret

    IL_000e:  ldarg.0
    IL_000f:  ret
  } // end of method ObjectId::NormalizeLength

  .method public hidebysig specialname static 
          bool  op_Equality(class LibGit2Sharp.ObjectId left,
                            class LibGit2Sharp.ObjectId right) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ret
  } // end of method ObjectId::op_Equality

  .method public hidebysig specialname static 
          bool  op_Inequality(class LibGit2Sharp.ObjectId left,
                              class LibGit2Sharp.ObjectId right) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  ret
  } // end of method ObjectId::op_Inequality

  .method public hidebysig specialname static 
          class LibGit2Sharp.ObjectId  op_Explicit(string sha) cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  brfalse.s  IL_000a

    IL_0003:  ldarg.0
    IL_0004:  newobj     instance void LibGit2Sharp.ObjectId::.ctor(string)
    IL_0009:  ret

    IL_000a:  ldnull
    IL_000b:  ret
  } // end of method ObjectId::op_Explicit

  .method private hidebysig static uint8[] 
          BuildReverseHexDigits() cil managed
  {
    // Code size       56 (0x38)
    .maxstack  3
    .locals init (uint8[] V_0,
             int32 V_1,
             int32 V_2)
    IL_0000:  ldc.i4.s   55
    IL_0002:  newarr     [mscorlib]System.Byte
    IL_0007:  stloc.0
    IL_0008:  ldc.i4.0
    IL_0009:  stloc.1
    IL_000a:  br.s       IL_0015

    IL_000c:  ldloc.0
    IL_000d:  ldloc.1
    IL_000e:  ldloc.1
    IL_000f:  conv.u1
    IL_0010:  stelem.i1
    IL_0011:  ldloc.1
    IL_0012:  ldc.i4.1
    IL_0013:  add
    IL_0014:  stloc.1
    IL_0015:  ldloc.1
    IL_0016:  ldc.i4.s   10
    IL_0018:  blt.s      IL_000c

    IL_001a:  ldc.i4.s   10
    IL_001c:  stloc.2
    IL_001d:  br.s       IL_0031

    IL_001f:  ldloc.0
    IL_0020:  ldloc.2
    IL_0021:  ldc.i4.s   97
    IL_0023:  add
    IL_0024:  ldc.i4.s   48
    IL_0026:  sub
    IL_0027:  ldc.i4.s   10
    IL_0029:  sub
    IL_002a:  ldloc.2
    IL_002b:  conv.u1
    IL_002c:  stelem.i1
    IL_002d:  ldloc.2
    IL_002e:  ldc.i4.1
    IL_002f:  add
    IL_0030:  stloc.2
    IL_0031:  ldloc.2
    IL_0032:  ldc.i4.s   16
    IL_0034:  blt.s      IL_001f

    IL_0036:  ldloc.0
    IL_0037:  ret
  } // end of method ObjectId::BuildReverseHexDigits

  .method private hidebysig static string 
          ToString(uint8[] id) cil managed
  {
    // Code size       136 (0x88)
    .maxstack  5
    .locals init (char[] V_0,
             int32 V_1,
             int32 V_2,
             uint8 V_3,
             object[] V_4)
    IL_0000:  ldarg.0
    IL_0001:  brfalse.s  IL_000a

    IL_0003:  ldarg.0
    IL_0004:  ldlen
    IL_0005:  conv.i4
    IL_0006:  ldc.i4.s   20
    IL_0008:  beq.s      IL_0039

    IL_000a:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_000f:  ldstr      "A non null array of {0} bytes is expected."
    IL_0014:  ldc.i4.1
    IL_0015:  newarr     [mscorlib]System.Object
    IL_001a:  stloc.s    V_4
    IL_001c:  ldloc.s    V_4
    IL_001e:  ldc.i4.0
    IL_001f:  ldc.i4.s   20
    IL_0021:  box        [mscorlib]System.Int32
    IL_0026:  stelem.ref
    IL_0027:  ldloc.s    V_4
    IL_0029:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_002e:  ldstr      "id"
    IL_0033:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string,
                                                                                 string)
    IL_0038:  throw

    IL_0039:  ldc.i4.s   40
    IL_003b:  newarr     [mscorlib]System.Char
    IL_0040:  stloc.0
    IL_0041:  ldc.i4.0
    IL_0042:  stloc.1
    IL_0043:  br.s       IL_007c

    IL_0045:  ldloc.1
    IL_0046:  ldc.i4.1
    IL_0047:  shr
    IL_0048:  stloc.2
    IL_0049:  ldarg.0
    IL_004a:  ldloc.2
    IL_004b:  ldelem.u1
    IL_004c:  ldc.i4.4
    IL_004d:  shr
    IL_004e:  conv.u1
    IL_004f:  stloc.3
    IL_0050:  ldloc.0
    IL_0051:  ldloc.1
    IL_0052:  dup
    IL_0053:  ldc.i4.1
    IL_0054:  add
    IL_0055:  stloc.1
    IL_0056:  ldstr      "0123456789abcdef"
    IL_005b:  ldloc.3
    IL_005c:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_0061:  stelem.i2
    IL_0062:  ldarg.0
    IL_0063:  ldloc.2
    IL_0064:  ldelem.u1
    IL_0065:  ldc.i4.s   15
    IL_0067:  and
    IL_0068:  conv.u1
    IL_0069:  stloc.3
    IL_006a:  ldloc.0
    IL_006b:  ldloc.1
    IL_006c:  ldstr      "0123456789abcdef"
    IL_0071:  ldloc.3
    IL_0072:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_0077:  stelem.i2
    IL_0078:  ldloc.1
    IL_0079:  ldc.i4.1
    IL_007a:  add
    IL_007b:  stloc.1
    IL_007c:  ldloc.1
    IL_007d:  ldc.i4.s   40
    IL_007f:  blt.s      IL_0045

    IL_0081:  ldloc.0
    IL_0082:  newobj     instance void [mscorlib]System.String::.ctor(char[])
    IL_0087:  ret
  } // end of method ObjectId::ToString

  .method private hidebysig static valuetype LibGit2Sharp.Core.GitOid 
          ToOid(string sha) cil managed
  {
    // Code size       123 (0x7b)
    .maxstack  5
    .locals init (uint8[] V_0,
             int32 V_1,
             int32 V_2,
             int32 V_3,
             valuetype LibGit2Sharp.Core.GitOid V_4,
             valuetype LibGit2Sharp.Core.GitOid V_5)
    IL_0000:  ldc.i4.s   20
    IL_0002:  newarr     [mscorlib]System.Byte
    IL_0007:  stloc.0
    IL_0008:  ldarg.0
    IL_0009:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_000e:  ldc.i4.1
    IL_000f:  and
    IL_0010:  ldc.i4.1
    IL_0011:  bne.un.s   IL_0020

    IL_0013:  ldarg.0
    IL_0014:  ldstr      "0"
    IL_0019:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_001e:  starg.s    sha
    IL_0020:  ldc.i4.0
    IL_0021:  stloc.1
    IL_0022:  br.s       IL_005b

    IL_0024:  ldsfld     class [System.Core]System.Func`2<int32,uint8> LibGit2Sharp.ObjectId::byteConverter
    IL_0029:  ldarg.0
    IL_002a:  ldloc.1
    IL_002b:  dup
    IL_002c:  ldc.i4.1
    IL_002d:  add
    IL_002e:  stloc.1
    IL_002f:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_0034:  callvirt   instance !1 class [System.Core]System.Func`2<int32,uint8>::Invoke(!0)
    IL_0039:  ldc.i4.4
    IL_003a:  shl
    IL_003b:  stloc.2
    IL_003c:  ldsfld     class [System.Core]System.Func`2<int32,uint8> LibGit2Sharp.ObjectId::byteConverter
    IL_0041:  ldarg.0
    IL_0042:  ldloc.1
    IL_0043:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_0048:  callvirt   instance !1 class [System.Core]System.Func`2<int32,uint8>::Invoke(!0)
    IL_004d:  stloc.3
    IL_004e:  ldloc.0
    IL_004f:  ldloc.1
    IL_0050:  ldc.i4.1
    IL_0051:  shr
    IL_0052:  ldloc.2
    IL_0053:  ldloc.3
    IL_0054:  add
    IL_0055:  conv.u1
    IL_0056:  stelem.i1
    IL_0057:  ldloc.1
    IL_0058:  ldc.i4.1
    IL_0059:  add
    IL_005a:  stloc.1
    IL_005b:  ldloc.1
    IL_005c:  ldarg.0
    IL_005d:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0062:  blt.s      IL_0024

    IL_0064:  ldloca.s   V_5
    IL_0066:  initobj    LibGit2Sharp.Core.GitOid
    IL_006c:  ldloca.s   V_5
    IL_006e:  ldloc.0
    IL_006f:  stfld      uint8[] LibGit2Sharp.Core.GitOid::Id
    IL_0074:  ldloc.s    V_5
    IL_0076:  stloc.s    V_4
    IL_0078:  ldloc.s    V_4
    IL_007a:  ret
  } // end of method ObjectId::ToOid

  .method private hidebysig static bool  LooksValid(string objectId,
                                                    bool throwIfInvalid) cil managed
  {
    // Code size       123 (0x7b)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
    IL_0006:  brfalse.s  IL_0018

    IL_0008:  ldarg.1
    IL_0009:  brtrue.s   IL_000d

    IL_000b:  ldc.i4.0
    IL_000c:  ret

    IL_000d:  ldarg.0
    IL_000e:  ldstr      "objectId"
    IL_0013:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0018:  ldarg.0
    IL_0019:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_001e:  ldc.i4.s   40
    IL_0020:  beq.s      IL_0057

    IL_0022:  ldarg.1
    IL_0023:  brtrue.s   IL_0027

    IL_0025:  ldc.i4.0
    IL_0026:  ret

    IL_0027:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_002c:  ldstr      "'{0}' is not a valid object identifier. Its length"
    + " should be {1}."
    IL_0031:  ldc.i4.2
    IL_0032:  newarr     [mscorlib]System.Object
    IL_0037:  stloc.0
    IL_0038:  ldloc.0
    IL_0039:  ldc.i4.0
    IL_003a:  ldarg.0
    IL_003b:  stelem.ref
    IL_003c:  ldloc.0
    IL_003d:  ldc.i4.1
    IL_003e:  ldc.i4.s   40
    IL_0040:  box        [mscorlib]System.Int32
    IL_0045:  stelem.ref
    IL_0046:  ldloc.0
    IL_0047:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_004c:  ldstr      "objectId"
    IL_0051:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string,
                                                                                 string)
    IL_0056:  throw

    IL_0057:  ldarg.0
    IL_0058:  ldsfld     class [System.Core]System.Func`2<char,bool> LibGit2Sharp.ObjectId::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_005d:  brtrue.s   IL_0070

    IL_005f:  ldnull
    IL_0060:  ldftn      bool LibGit2Sharp.ObjectId::'<LooksValid>b__4'(char)
    IL_0066:  newobj     instance void class [System.Core]System.Func`2<char,bool>::.ctor(object,
                                                                                          native int)
    IL_006b:  stsfld     class [System.Core]System.Func`2<char,bool> LibGit2Sharp.ObjectId::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0070:  ldsfld     class [System.Core]System.Func`2<char,bool> LibGit2Sharp.ObjectId::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0075:  call       bool [System.Core]System.Linq.Enumerable::All<char>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                             class [System.Core]System.Func`2<!!0,bool>)
    IL_007a:  ret
  } // end of method ObjectId::LooksValid

  .method private hidebysig static bool  '<.ctor>b__1'(uint8[] b) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldlen
    IL_0002:  conv.i4
    IL_0003:  ldc.i4.s   20
    IL_0005:  ceq
    IL_0007:  ret
  } // end of method ObjectId::'<.ctor>b__1'

  .method private hidebysig static bool  '<LooksValid>b__4'(char c) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       23 (0x17)
    .maxstack  8
    IL_0000:  ldstr      "0123456789abcdef"
    IL_0005:  ldarga.s   c
    IL_0007:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_000c:  call       instance string [mscorlib]System.Char::ToString(class [mscorlib]System.IFormatProvider)
    IL_0011:  callvirt   instance bool [mscorlib]System.String::Contains(string)
    IL_0016:  ret
  } // end of method ObjectId::'<LooksValid>b__4'

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       114 (0x72)
    .maxstack  5
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.ObjectId,object>[] V_0)
    IL_0000:  call       uint8[] LibGit2Sharp.ObjectId::BuildReverseHexDigits()
    IL_0005:  stsfld     uint8[] LibGit2Sharp.ObjectId::reverseHexDigits
    IL_000a:  ldsfld     class [System.Core]System.Func`2<int32,uint8> LibGit2Sharp.ObjectId::'CS$<>9__CachedAnonymousMethodDelegate8'
    IL_000f:  brtrue.s   IL_0022

    IL_0011:  ldnull
    IL_0012:  ldftn      uint8 LibGit2Sharp.ObjectId::'<.cctor>b__6'(int32)
    IL_0018:  newobj     instance void class [System.Core]System.Func`2<int32,uint8>::.ctor(object,
                                                                                            native int)
    IL_001d:  stsfld     class [System.Core]System.Func`2<int32,uint8> LibGit2Sharp.ObjectId::'CS$<>9__CachedAnonymousMethodDelegate8'
    IL_0022:  ldsfld     class [System.Core]System.Func`2<int32,uint8> LibGit2Sharp.ObjectId::'CS$<>9__CachedAnonymousMethodDelegate8'
    IL_0027:  stsfld     class [System.Core]System.Func`2<int32,uint8> LibGit2Sharp.ObjectId::byteConverter
    IL_002c:  ldc.i4.1
    IL_002d:  newarr     class [System.Core]System.Func`2<class LibGit2Sharp.ObjectId,object>
    IL_0032:  stloc.0
    IL_0033:  ldloc.0
    IL_0034:  ldc.i4.0
    IL_0035:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.ObjectId,object> LibGit2Sharp.ObjectId::'CS$<>9__CachedAnonymousMethodDelegate9'
    IL_003a:  brtrue.s   IL_004d

    IL_003c:  ldnull
    IL_003d:  ldftn      object LibGit2Sharp.ObjectId::'<.cctor>b__7'(class LibGit2Sharp.ObjectId)
    IL_0043:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.ObjectId,object>::.ctor(object,
                                                                                                                   native int)
    IL_0048:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.ObjectId,object> LibGit2Sharp.ObjectId::'CS$<>9__CachedAnonymousMethodDelegate9'
    IL_004d:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.ObjectId,object> LibGit2Sharp.ObjectId::'CS$<>9__CachedAnonymousMethodDelegate9'
    IL_0052:  stelem.ref
    IL_0053:  ldloc.0
    IL_0054:  newobj     instance void class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.ObjectId>::.ctor(class [System.Core]System.Func`2<!0,object>[])
    IL_0059:  stsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.ObjectId> LibGit2Sharp.ObjectId::equalityHelper
    IL_005e:  ldc.i4.s   48
    IL_0060:  ldc.i4.s   40
    IL_0062:  newobj     instance void [mscorlib]System.String::.ctor(char,
                                                                      int32)
    IL_0067:  newobj     instance void LibGit2Sharp.ObjectId::.ctor(string)
    IL_006c:  stsfld     class LibGit2Sharp.ObjectId LibGit2Sharp.ObjectId::Zero
    IL_0071:  ret
  } // end of method ObjectId::.cctor

  .method private hidebysig static uint8 
          '<.cctor>b__6'(int32 i) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldsfld     uint8[] LibGit2Sharp.ObjectId::reverseHexDigits
    IL_0005:  ldarg.0
    IL_0006:  ldc.i4.s   48
    IL_0008:  sub
    IL_0009:  ldelem.u1
    IL_000a:  ret
  } // end of method ObjectId::'<.cctor>b__6'

  .method private hidebysig static object 
          '<.cctor>b__7'(class LibGit2Sharp.ObjectId x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
    IL_0006:  ret
  } // end of method ObjectId::'<.cctor>b__7'

  .property instance valuetype LibGit2Sharp.Core.GitOid
          Oid()
  {
    .get instance valuetype LibGit2Sharp.Core.GitOid LibGit2Sharp.ObjectId::get_Oid()
  } // end of property ObjectId::Oid
  .property instance uint8[] RawId()
  {
    .get instance uint8[] LibGit2Sharp.ObjectId::get_RawId()
  } // end of property ObjectId::RawId
  .property instance string Sha()
  {
    .get instance string LibGit2Sharp.ObjectId::get_Sha()
  } // end of property ObjectId::Sha
} // end of class LibGit2Sharp.ObjectId

.class public auto ansi beforefieldinit LibGit2Sharp.ReferenceCollection
       extends [mscorlib]System.Object
       implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Reference>,
                  [mscorlib]System.Collections.IEnumerable
{
  .custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field assembly initonly class LibGit2Sharp.Repository repo
  .field private static class [System.Core]System.Func`3<class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,class LibGit2Sharp.Reference,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle> 'CS$<>9__CachedAnonymousMethodDelegate2'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ReferenceCollection::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
    IL_000d:  ret
  } // end of method ReferenceCollection::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Reference 
          get_Item(string name) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance !!0 LibGit2Sharp.ReferenceCollection::Resolve<class LibGit2Sharp.Reference>(string)
    IL_0007:  ret
  } // end of method ReferenceCollection::get_Item

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Reference> 
          GetEnumerator() cil managed
  {
    // Code size       39 (0x27)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  call       class [mscorlib]System.Collections.Generic.IList`1<string> LibGit2Sharp.Core.Proxy::git_reference_list(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0010:  ldarg.0
    IL_0011:  ldftn      instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::'<GetEnumerator>b__0'(string)
    IL_0017:  newobj     instance void class [System.Core]System.Func`2<string,class LibGit2Sharp.Reference>::.ctor(object,
                                                                                                                    native int)
    IL_001c:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!1> [System.Core]System.Linq.Enumerable::Select<string,class LibGit2Sharp.Reference>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                        class [System.Core]System.Func`2<!!0,!!1>)
    IL_0021:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Reference>::GetEnumerator()
    IL_0026:  ret
  } // end of method ReferenceCollection::GetEnumerator

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Reference> LibGit2Sharp.ReferenceCollection::GetEnumerator()
    IL_0006:  ret
  } // end of method ReferenceCollection::System.Collections.IEnumerable.GetEnumerator

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.DirectReference 
          Add(string name,
              class LibGit2Sharp.ObjectId targetId,
              [opt] bool allowOverwrite,
              [opt] string logMessage) cil managed
  {
    .param [3] = bool(false)
    .param [4] = nullref
    // Code size       86 (0x56)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0,
             class LibGit2Sharp.DirectReference V_1,
             class LibGit2Sharp.DirectReference V_2)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "targetId"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.0
    IL_0017:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
    IL_001c:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0021:  ldarg.1
    IL_0022:  ldarg.2
    IL_0023:  ldarg.3
    IL_0024:  call       class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.Core.Proxy::git_reference_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                           string,
                                                                                                                           class LibGit2Sharp.ObjectId,
                                                                                                                           bool)
    IL_0029:  stloc.0
    .try
    {
      IL_002a:  ldloc.0
      IL_002b:  ldarg.0
      IL_002c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
      IL_0031:  call       !!0 LibGit2Sharp.Reference::BuildFromPtr<class LibGit2Sharp.Reference>(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                                  class LibGit2Sharp.Repository)
      IL_0036:  castclass  LibGit2Sharp.DirectReference
      IL_003b:  stloc.1
      IL_003c:  ldarg.0
      IL_003d:  ldloc.1
      IL_003e:  ldarg.2
      IL_003f:  ldarg.s    logMessage
      IL_0041:  call       instance void LibGit2Sharp.ReferenceCollection::LogReference(class LibGit2Sharp.Reference,
                                                                                        class LibGit2Sharp.ObjectId,
                                                                                        string)
      IL_0046:  ldloc.1
      IL_0047:  stloc.2
      IL_0048:  leave.s    IL_0054

    }  // end .try
    finally
    {
      IL_004a:  ldloc.0
      IL_004b:  brfalse.s  IL_0053

      IL_004d:  ldloc.0
      IL_004e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0053:  endfinally
    }  // end handler
    IL_0054:  ldloc.2
    IL_0055:  ret
  } // end of method ReferenceCollection::Add

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.SymbolicReference 
          Add(string name,
              class LibGit2Sharp.Reference targetRef,
              [opt] bool allowOverwrite,
              [opt] string logMessage) cil managed
  {
    .param [3] = bool(false)
    .param [4] = nullref
    // Code size       91 (0x5b)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0,
             class LibGit2Sharp.SymbolicReference V_1,
             class LibGit2Sharp.SymbolicReference V_2)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "targetRef"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.0
    IL_0017:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
    IL_001c:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0021:  ldarg.1
    IL_0022:  ldarg.2
    IL_0023:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0028:  ldarg.3
    IL_0029:  call       class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.Core.Proxy::git_reference_symbolic_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                    string,
                                                                                                                                    string,
                                                                                                                                    bool)
    IL_002e:  stloc.0
    .try
    {
      IL_002f:  ldloc.0
      IL_0030:  ldarg.0
      IL_0031:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
      IL_0036:  call       !!0 LibGit2Sharp.Reference::BuildFromPtr<class LibGit2Sharp.Reference>(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                                  class LibGit2Sharp.Repository)
      IL_003b:  castclass  LibGit2Sharp.SymbolicReference
      IL_0040:  stloc.1
      IL_0041:  ldarg.0
      IL_0042:  ldloc.1
      IL_0043:  ldarg.2
      IL_0044:  ldarg.s    logMessage
      IL_0046:  call       instance void LibGit2Sharp.ReferenceCollection::LogReference(class LibGit2Sharp.Reference,
                                                                                        class LibGit2Sharp.Reference,
                                                                                        string)
      IL_004b:  ldloc.1
      IL_004c:  stloc.2
      IL_004d:  leave.s    IL_0059

    }  // end .try
    finally
    {
      IL_004f:  ldloc.0
      IL_0050:  brfalse.s  IL_0058

      IL_0052:  ldloc.0
      IL_0053:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0058:  endfinally
    }  // end handler
    IL_0059:  ldloc.2
    IL_005a:  ret
  } // end of method ReferenceCollection::Add

  .method public hidebysig newslot virtual 
          instance void  Remove(class LibGit2Sharp.Reference reference) cil managed
  {
    // Code size       44 (0x2c)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "reference"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0012:  ldc.i4.1
    IL_0013:  call       instance class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.ReferenceCollection::RetrieveReferencePtr(string,
                                                                                                                                             bool)
    IL_0018:  stloc.0
    .try
    {
      IL_0019:  ldloc.0
      IL_001a:  call       void LibGit2Sharp.Core.Proxy::git_reference_delete(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle)
      IL_001f:  leave.s    IL_002b

    }  // end .try
    finally
    {
      IL_0021:  ldloc.0
      IL_0022:  brfalse.s  IL_002a

      IL_0024:  ldloc.0
      IL_0025:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_002a:  endfinally
    }  // end handler
    IL_002b:  ret
  } // end of method ReferenceCollection::Remove

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Reference 
          Move(class LibGit2Sharp.Reference reference,
               string newName,
               [opt] bool allowOverwrite) cil managed
  {
    .param [3] = bool(false)
    // Code size       82 (0x52)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_1,
             class LibGit2Sharp.Reference V_2)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "reference"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "newName"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0016:  ldarg.0
    IL_0017:  ldarg.1
    IL_0018:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_001d:  ldc.i4.1
    IL_001e:  call       instance class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.ReferenceCollection::RetrieveReferencePtr(string,
                                                                                                                                             bool)
    IL_0023:  stloc.0
    .try
    {
      IL_0024:  ldloc.0
      IL_0025:  ldarg.2
      IL_0026:  ldarg.3
      IL_0027:  call       class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.Core.Proxy::git_reference_rename(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                                                             string,
                                                                                                                             bool)
      IL_002c:  stloc.1
      .try
      {
        IL_002d:  ldloc.1
        IL_002e:  ldarg.0
        IL_002f:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
        IL_0034:  call       !!0 LibGit2Sharp.Reference::BuildFromPtr<class LibGit2Sharp.Reference>(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                                    class LibGit2Sharp.Repository)
        IL_0039:  stloc.2
        IL_003a:  leave.s    IL_0050

      }  // end .try
      finally
      {
        IL_003c:  ldloc.1
        IL_003d:  brfalse.s  IL_0045

        IL_003f:  ldloc.1
        IL_0040:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0045:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_0046:  ldloc.0
      IL_0047:  brfalse.s  IL_004f

      IL_0049:  ldloc.0
      IL_004a:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_004f:  endfinally
    }  // end handler
    IL_0050:  ldloc.2
    IL_0051:  ret
  } // end of method ReferenceCollection::Move

  .method assembly hidebysig instance !!T 
          Resolve<(LibGit2Sharp.Reference) T>(string name) cil managed
  {
    // Code size       61 (0x3d)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0,
             !!T V_1,
             !!T V_2)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldarg.1
    IL_000d:  ldc.i4.0
    IL_000e:  call       instance class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.ReferenceCollection::RetrieveReferencePtr(string,
                                                                                                                                             bool)
    IL_0013:  stloc.0
    .try
    {
      IL_0014:  ldloc.0
      IL_0015:  brfalse.s  IL_0025

      IL_0017:  ldloc.0
      IL_0018:  ldarg.0
      IL_0019:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
      IL_001e:  call       !!0 LibGit2Sharp.Reference::BuildFromPtr<!!0>(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                         class LibGit2Sharp.Repository)
      IL_0023:  br.s       IL_002e

      IL_0025:  ldloca.s   V_2
      IL_0027:  initobj    !!T
      IL_002d:  ldloc.2
      IL_002e:  stloc.1
      IL_002f:  leave.s    IL_003b

    }  // end .try
    finally
    {
      IL_0031:  ldloc.0
      IL_0032:  brfalse.s  IL_003a

      IL_0034:  ldloc.0
      IL_0035:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_003a:  endfinally
    }  // end handler
    IL_003b:  ldloc.1
    IL_003c:  ret
  } // end of method ReferenceCollection::Resolve

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Reference 
          UpdateTarget(class LibGit2Sharp.Reference directRef,
                       class LibGit2Sharp.ObjectId targetId,
                       [opt] string logMessage) cil managed
  {
    .param [3] = nullref
    // Code size       54 (0x36)
    .maxstack  6
    .locals init (class LibGit2Sharp.Reference V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "directRef"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "targetId"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.0
    IL_0017:  ldarg.1
    IL_0018:  ldarg.2
    IL_0019:  ldnull
    IL_001a:  ldftn      class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.Core.Proxy::git_reference_set_target(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                                                               class LibGit2Sharp.ObjectId)
    IL_0020:  newobj     instance void class [System.Core]System.Func`3<class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,class LibGit2Sharp.ObjectId,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle>::.ctor(object,
                                                                                                                                                                                                                    native int)
    IL_0025:  call       instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::UpdateTarget<class LibGit2Sharp.ObjectId>(class LibGit2Sharp.Reference,
                                                                                                                                           !!0,
                                                                                                                                           class [System.Core]System.Func`3<class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,!!0,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle>)
    IL_002a:  stloc.0
    IL_002b:  ldarg.0
    IL_002c:  ldarg.1
    IL_002d:  ldarg.2
    IL_002e:  ldarg.3
    IL_002f:  call       instance void LibGit2Sharp.ReferenceCollection::LogReference(class LibGit2Sharp.Reference,
                                                                                      class LibGit2Sharp.ObjectId,
                                                                                      string)
    IL_0034:  ldloc.0
    IL_0035:  ret
  } // end of method ReferenceCollection::UpdateTarget

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Reference 
          UpdateTarget(class LibGit2Sharp.Reference symbolicRef,
                       class LibGit2Sharp.Reference targetRef,
                       [opt] string logMessage) cil managed
  {
    .param [3] = nullref
    // Code size       71 (0x47)
    .maxstack  6
    .locals init (class LibGit2Sharp.Reference V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "symbolicRef"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "targetRef"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.0
    IL_0017:  ldarg.1
    IL_0018:  ldarg.2
    IL_0019:  ldsfld     class [System.Core]System.Func`3<class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,class LibGit2Sharp.Reference,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle> LibGit2Sharp.ReferenceCollection::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_001e:  brtrue.s   IL_0031

    IL_0020:  ldnull
    IL_0021:  ldftn      class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.ReferenceCollection::'<UpdateTarget>b__1'(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                                                                    class LibGit2Sharp.Reference)
    IL_0027:  newobj     instance void class [System.Core]System.Func`3<class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,class LibGit2Sharp.Reference,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle>::.ctor(object,
                                                                                                                                                                                                                     native int)
    IL_002c:  stsfld     class [System.Core]System.Func`3<class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,class LibGit2Sharp.Reference,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle> LibGit2Sharp.ReferenceCollection::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0031:  ldsfld     class [System.Core]System.Func`3<class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,class LibGit2Sharp.Reference,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle> LibGit2Sharp.ReferenceCollection::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0036:  call       instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::UpdateTarget<class LibGit2Sharp.Reference>(class LibGit2Sharp.Reference,
                                                                                                                                            !!0,
                                                                                                                                            class [System.Core]System.Func`3<class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,!!0,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle>)
    IL_003b:  stloc.0
    IL_003c:  ldarg.0
    IL_003d:  ldarg.1
    IL_003e:  ldarg.2
    IL_003f:  ldarg.3
    IL_0040:  call       instance void LibGit2Sharp.ReferenceCollection::LogReference(class LibGit2Sharp.Reference,
                                                                                      class LibGit2Sharp.Reference,
                                                                                      string)
    IL_0045:  ldloc.0
    IL_0046:  ret
  } // end of method ReferenceCollection::UpdateTarget

  .method private hidebysig instance class LibGit2Sharp.Reference 
          UpdateTarget<T>(class LibGit2Sharp.Reference reference,
                          !!T target,
                          class [System.Core]System.Func`3<class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,!!T,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle> setter) cil managed
  {
    // Code size       237 (0xed)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_1,
             class LibGit2Sharp.Reference V_2,
             object[] V_3)
    IL_0000:  ldarg.1
    IL_0001:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0006:  ldstr      "HEAD"
    IL_000b:  call       bool [mscorlib]System.String::op_Equality(string,
                                                                   string)
    IL_0010:  brfalse    IL_00b1

    IL_0015:  ldarg.2
    IL_0016:  box        !!T
    IL_001b:  isinst     LibGit2Sharp.ObjectId
    IL_0020:  brfalse.s  IL_003b

    IL_0022:  ldarg.0
    IL_0023:  ldstr      "HEAD"
    IL_0028:  ldarg.2
    IL_0029:  box        !!T
    IL_002e:  isinst     LibGit2Sharp.ObjectId
    IL_0033:  ldc.i4.1
    IL_0034:  ldnull
    IL_0035:  callvirt   instance class LibGit2Sharp.DirectReference LibGit2Sharp.ReferenceCollection::Add(string,
                                                                                                           class LibGit2Sharp.ObjectId,
                                                                                                           bool,
                                                                                                           string)
    IL_003a:  ret

    IL_003b:  ldarg.2
    IL_003c:  box        !!T
    IL_0041:  isinst     LibGit2Sharp.DirectReference
    IL_0046:  brfalse.s  IL_0061

    IL_0048:  ldarg.0
    IL_0049:  ldstr      "HEAD"
    IL_004e:  ldarg.2
    IL_004f:  box        !!T
    IL_0054:  isinst     LibGit2Sharp.DirectReference
    IL_0059:  ldc.i4.1
    IL_005a:  ldnull
    IL_005b:  callvirt   instance class LibGit2Sharp.SymbolicReference LibGit2Sharp.ReferenceCollection::Add(string,
                                                                                                             class LibGit2Sharp.Reference,
                                                                                                             bool,
                                                                                                             string)
    IL_0060:  ret

    IL_0061:  ldarg.2
    IL_0062:  box        !!T
    IL_0067:  isinst     LibGit2Sharp.SymbolicReference
    IL_006c:  brfalse.s  IL_0087

    IL_006e:  ldarg.0
    IL_006f:  ldstr      "HEAD"
    IL_0074:  ldarg.2
    IL_0075:  box        !!T
    IL_007a:  isinst     LibGit2Sharp.SymbolicReference
    IL_007f:  ldc.i4.1
    IL_0080:  ldnull
    IL_0081:  callvirt   instance class LibGit2Sharp.SymbolicReference LibGit2Sharp.ReferenceCollection::Add(string,
                                                                                                             class LibGit2Sharp.Reference,
                                                                                                             bool,
                                                                                                             string)
    IL_0086:  ret

    IL_0087:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_008c:  ldstr      "'{0}' is not a valid target type."
    IL_0091:  ldc.i4.1
    IL_0092:  newarr     [mscorlib]System.Object
    IL_0097:  stloc.3
    IL_0098:  ldloc.3
    IL_0099:  ldc.i4.0
    IL_009a:  ldtoken    !!T
    IL_009f:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_00a4:  stelem.ref
    IL_00a5:  ldloc.3
    IL_00a6:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_00ab:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_00b0:  throw

    IL_00b1:  ldarg.0
    IL_00b2:  ldarg.1
    IL_00b3:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_00b8:  ldc.i4.1
    IL_00b9:  call       instance class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.ReferenceCollection::RetrieveReferencePtr(string,
                                                                                                                                             bool)
    IL_00be:  stloc.0
    .try
    {
      IL_00bf:  ldarg.3
      IL_00c0:  ldloc.0
      IL_00c1:  ldarg.2
      IL_00c2:  callvirt   instance !2 class [System.Core]System.Func`3<class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,!!T,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle>::Invoke(!0,
                                                                                                                                                                                             !1)
      IL_00c7:  stloc.1
      .try
      {
        IL_00c8:  ldloc.1
        IL_00c9:  ldarg.0
        IL_00ca:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
        IL_00cf:  call       !!0 LibGit2Sharp.Reference::BuildFromPtr<class LibGit2Sharp.Reference>(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                                    class LibGit2Sharp.Repository)
        IL_00d4:  stloc.2
        IL_00d5:  leave.s    IL_00eb

      }  // end .try
      finally
      {
        IL_00d7:  ldloc.1
        IL_00d8:  brfalse.s  IL_00e0

        IL_00da:  ldloc.1
        IL_00db:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_00e0:  endfinally
      }  // end handler
    }  // end .try
    finally
    {
      IL_00e1:  ldloc.0
      IL_00e2:  brfalse.s  IL_00ea

      IL_00e4:  ldloc.0
      IL_00e5:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_00ea:  endfinally
    }  // end handler
    IL_00eb:  ldloc.2
    IL_00ec:  ret
  } // end of method ReferenceCollection::UpdateTarget

  .method private hidebysig instance void 
          LogReference(class LibGit2Sharp.Reference reference,
                       class LibGit2Sharp.Reference target,
                       string logMessage) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  4
    .locals init (class LibGit2Sharp.DirectReference V_0)
    IL_0000:  ldarg.2
    IL_0001:  callvirt   instance class LibGit2Sharp.DirectReference LibGit2Sharp.Reference::ResolveToDirectReference()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldnull
    IL_0009:  call       bool LibGit2Sharp.Reference::op_Equality(class LibGit2Sharp.Reference,
                                                                  class LibGit2Sharp.Reference)
    IL_000e:  brfalse.s  IL_0011

    IL_0010:  ret

    IL_0011:  ldarg.0
    IL_0012:  ldarg.1
    IL_0013:  ldloc.0
    IL_0014:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.DirectReference::get_Target()
    IL_0019:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_001e:  ldarg.3
    IL_001f:  call       instance void LibGit2Sharp.ReferenceCollection::LogReference(class LibGit2Sharp.Reference,
                                                                                      class LibGit2Sharp.ObjectId,
                                                                                      string)
    IL_0024:  ret
  } // end of method ReferenceCollection::LogReference

  .method private hidebysig instance void 
          LogReference(class LibGit2Sharp.Reference reference,
                       class LibGit2Sharp.ObjectId target,
                       string logMessage) cil managed
  {
    // Code size       34 (0x22)
    .maxstack  8
    IL_0000:  ldarg.3
    IL_0001:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
    IL_0006:  brfalse.s  IL_0009

    IL_0008:  ret

    IL_0009:  ldarg.0
    IL_000a:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
    IL_000f:  callvirt   instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_0014:  ldarg.1
    IL_0015:  callvirt   instance class LibGit2Sharp.ReflogCollection LibGit2Sharp.ReferenceCollection::Log(class LibGit2Sharp.Reference)
    IL_001a:  ldarg.2
    IL_001b:  ldarg.3
    IL_001c:  callvirt   instance void LibGit2Sharp.ReflogCollection::Append(class LibGit2Sharp.ObjectId,
                                                                             string)
    IL_0021:  ret
  } // end of method ReferenceCollection::LogReference

  .method assembly hidebysig instance class LibGit2Sharp.Core.Handles.ReferenceSafeHandle 
          RetrieveReferencePtr(string referenceName,
                               [opt] bool shouldThrowIfNotFound) cil managed
  {
    .param [2] = bool(true)
    // Code size       21 (0x15)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  ldarg.1
    IL_000c:  ldarg.2
    IL_000d:  call       class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.Core.Proxy::git_reference_lookup(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                           string,
                                                                                                                           bool)
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ret
  } // end of method ReferenceCollection::RetrieveReferencePtr

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Reference> 
          FromGlob(string pattern) cil managed
  {
    // Code size       58 (0x3a)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "pattern"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
    IL_0011:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0016:  ldarg.1
    IL_0017:  ldnull
    IL_0018:  ldftn      string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
    IL_001e:  newobj     instance void class [System.Core]System.Func`2<native int,string>::.ctor(object,
                                                                                                  native int)
    IL_0023:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!0> LibGit2Sharp.Core.Proxy::git_reference_foreach_glob<string>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                                   string,
                                                                                                                                                   class [System.Core]System.Func`2<native int,!!0>)
    IL_0028:  ldarg.0
    IL_0029:  ldftn      instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::'<FromGlob>b__3'(string)
    IL_002f:  newobj     instance void class [System.Core]System.Func`2<string,class LibGit2Sharp.Reference>::.ctor(object,
                                                                                                                    native int)
    IL_0034:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!1> [System.Core]System.Linq.Enumerable::Select<string,class LibGit2Sharp.Reference>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                        class [System.Core]System.Func`2<!!0,!!1>)
    IL_0039:  ret
  } // end of method ReferenceCollection::FromGlob

  .method public hidebysig newslot virtual 
          instance bool  IsValidName(string canonicalName) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  call       bool LibGit2Sharp.Core.Proxy::git_reference_is_valid_name(string)
    IL_0006:  ret
  } // end of method ReferenceCollection::IsValidName

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Reference 
          get_Head() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "HEAD"
    IL_0006:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::get_Item(string)
    IL_000b:  ret
  } // end of method ReferenceCollection::get_Head

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       38 (0x26)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "Count = {0}"
    IL_000a:  ldc.i4.1
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  call       int32 [System.Core]System.Linq.Enumerable::Count<class LibGit2Sharp.Reference>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0019:  box        [mscorlib]System.Int32
    IL_001e:  stelem.ref
    IL_001f:  ldloc.0
    IL_0020:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0025:  ret
  } // end of method ReferenceCollection::get_DebuggerDisplay

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.ReflogCollection 
          Log(string canonicalName) cil managed
  {
    // Code size       24 (0x18)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "canonicalName"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
    IL_0011:  ldarg.1
    IL_0012:  newobj     instance void LibGit2Sharp.ReflogCollection::.ctor(class LibGit2Sharp.Repository,
                                                                            string)
    IL_0017:  ret
  } // end of method ReferenceCollection::Log

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.ReflogCollection 
          Log(class LibGit2Sharp.Reference reference) cil managed
  {
    // Code size       29 (0x1d)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "reference"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
    IL_0011:  ldarg.1
    IL_0012:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0017:  newobj     instance void LibGit2Sharp.ReflogCollection::.ctor(class LibGit2Sharp.Repository,
                                                                            string)
    IL_001c:  ret
  } // end of method ReferenceCollection::Log

  .method public hidebysig newslot virtual 
          instance void  RewriteHistory(class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> commitsToRewrite,
                                        [opt] class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.CommitRewriteInfo> commitHeaderRewriter,
                                        [opt] class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.TreeDefinition> commitTreeRewriter,
                                        [opt] class [System.Core]System.Func`4<string,bool,class LibGit2Sharp.GitObject,string> tagNameRewriter,
                                        [opt] class [System.Core]System.Func`2<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>> commitParentsRewriter,
                                        [opt] string backupRefsNamespace) cil managed
  {
    .param [2] = nullref
    .param [3] = nullref
    .param [4] = nullref
    .param [5] = nullref
    .param [6] = "refs/original/"
    // Code size       95 (0x5f)
    .maxstack  8
    .locals init (class [mscorlib]System.Collections.Generic.IList`1<class LibGit2Sharp.Reference> V_0,
             class LibGit2Sharp.Core.HistoryRewriter V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "commitsToRewrite"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.s    backupRefsNamespace
    IL_000d:  ldstr      "backupRefsNamespace"
    IL_0012:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0017:  ldarg.s    backupRefsNamespace
    IL_0019:  ldstr      "/"
    IL_001e:  callvirt   instance bool [mscorlib]System.String::EndsWith(string)
    IL_0023:  brtrue.s   IL_0033

    IL_0025:  ldarg.s    backupRefsNamespace
    IL_0027:  ldstr      "/"
    IL_002c:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0031:  starg.s    backupRefsNamespace
    IL_0033:  ldarg.0
    IL_0034:  call       class [mscorlib]System.Collections.Generic.List`1<!!0> [System.Core]System.Linq.Enumerable::ToList<class LibGit2Sharp.Reference>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0039:  stloc.0
    IL_003a:  ldloc.0
    IL_003b:  callvirt   instance int32 class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.Reference>::get_Count()
    IL_0040:  brtrue.s   IL_0043

    IL_0042:  ret

    IL_0043:  ldarg.0
    IL_0044:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.ReferenceCollection::repo
    IL_0049:  ldarg.1
    IL_004a:  ldarg.2
    IL_004b:  ldarg.3
    IL_004c:  ldarg.s    commitParentsRewriter
    IL_004e:  ldarg.s    tagNameRewriter
    IL_0050:  ldarg.s    backupRefsNamespace
    IL_0052:  newobj     instance void LibGit2Sharp.Core.HistoryRewriter::.ctor(class LibGit2Sharp.Repository,
                                                                                class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,
                                                                                class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.CommitRewriteInfo>,
                                                                                class [System.Core]System.Func`2<class LibGit2Sharp.Commit,class LibGit2Sharp.TreeDefinition>,
                                                                                class [System.Core]System.Func`2<class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>>,
                                                                                class [System.Core]System.Func`4<string,bool,class LibGit2Sharp.GitObject,string>,
                                                                                string)
    IL_0057:  stloc.1
    IL_0058:  ldloc.1
    IL_0059:  callvirt   instance void LibGit2Sharp.Core.HistoryRewriter::Execute()
    IL_005e:  ret
  } // end of method ReferenceCollection::RewriteHistory

  .method private hidebysig instance class LibGit2Sharp.Reference 
          '<GetEnumerator>b__0'(string n) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::get_Item(string)
    IL_0007:  ret
  } // end of method ReferenceCollection::'<GetEnumerator>b__0'

  .method private hidebysig static class LibGit2Sharp.Core.Handles.ReferenceSafeHandle 
          '<UpdateTarget>b__1'(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle h,
                               class LibGit2Sharp.Reference r) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0007:  call       class LibGit2Sharp.Core.Handles.ReferenceSafeHandle LibGit2Sharp.Core.Proxy::git_reference_symbolic_set_target(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                                                                        string)
    IL_000c:  ret
  } // end of method ReferenceCollection::'<UpdateTarget>b__1'

  .method private hidebysig instance class LibGit2Sharp.Reference 
          '<FromGlob>b__3'(string n) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::get_Item(string)
    IL_0007:  ret
  } // end of method ReferenceCollection::'<FromGlob>b__3'

  .property instance class LibGit2Sharp.Reference
          Item(string)
  {
    .get instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::get_Item(string)
  } // end of property ReferenceCollection::Item
  .property instance class LibGit2Sharp.Reference
          Head()
  {
    .get instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::get_Head()
  } // end of property ReferenceCollection::Head
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.ReferenceCollection::get_DebuggerDisplay()
  } // end of property ReferenceCollection::DebuggerDisplay
} // end of class LibGit2Sharp.ReferenceCollection

.class public auto ansi beforefieldinit LibGit2Sharp.Remote
       extends [mscorlib]System.Object
       implements class [mscorlib]System.IEquatable`1<class LibGit2Sharp.Remote>
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field private static initonly class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Remote> equalityHelper
  .field private initonly class LibGit2Sharp.Repository repository
  .field private string '<Name>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private string '<Url>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private valuetype LibGit2Sharp.TagFetchMode '<TagFetchMode>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Remote,object> 'CS$<>9__CachedAnonymousMethodDelegate2'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Remote,object> 'CS$<>9__CachedAnonymousMethodDelegate3'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method Remote::.ctor

  .method private hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repository,
                               string name,
                               string url,
                               valuetype LibGit2Sharp.TagFetchMode tagFetchMode) cil managed
  {
    // Code size       36 (0x24)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Remote::repository
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  call       instance void LibGit2Sharp.Remote::set_Name(string)
    IL_0014:  ldarg.0
    IL_0015:  ldarg.3
    IL_0016:  call       instance void LibGit2Sharp.Remote::set_Url(string)
    IL_001b:  ldarg.0
    IL_001c:  ldarg.s    tagFetchMode
    IL_001e:  call       instance void LibGit2Sharp.Remote::set_TagFetchMode(valuetype LibGit2Sharp.TagFetchMode)
    IL_0023:  ret
  } // end of method Remote::.ctor

  .method assembly hidebysig static class LibGit2Sharp.Remote 
          BuildFromPtr(class LibGit2Sharp.Core.Handles.RemoteSafeHandle handle,
                       class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       33 (0x21)
    .maxstack  5
    .locals init (string V_0,
             string V_1,
             valuetype LibGit2Sharp.TagFetchMode V_2,
             class LibGit2Sharp.Remote V_3)
    IL_0000:  ldarg.0
    IL_0001:  call       string LibGit2Sharp.Core.Proxy::git_remote_name(class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
    IL_0006:  stloc.0
    IL_0007:  ldarg.0
    IL_0008:  call       string LibGit2Sharp.Core.Proxy::git_remote_url(class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
    IL_000d:  stloc.1
    IL_000e:  ldarg.0
    IL_000f:  call       valuetype LibGit2Sharp.TagFetchMode LibGit2Sharp.Core.Proxy::git_remote_autotag(class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
    IL_0014:  stloc.2
    IL_0015:  ldarg.1
    IL_0016:  ldloc.0
    IL_0017:  ldloc.1
    IL_0018:  ldloc.2
    IL_0019:  newobj     instance void LibGit2Sharp.Remote::.ctor(class LibGit2Sharp.Repository,
                                                                  string,
                                                                  string,
                                                                  valuetype LibGit2Sharp.TagFetchMode)
    IL_001e:  stloc.3
    IL_001f:  ldloc.3
    IL_0020:  ret
  } // end of method Remote::BuildFromPtr

  .method public hidebysig newslot specialname virtual 
          instance string  get_Name() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Remote::'<Name>k__BackingField'
    IL_0006:  ret
  } // end of method Remote::get_Name

  .method private hidebysig specialname instance void 
          set_Name(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.Remote::'<Name>k__BackingField'
    IL_0007:  ret
  } // end of method Remote::set_Name

  .method public hidebysig newslot specialname virtual 
          instance string  get_Url() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Remote::'<Url>k__BackingField'
    IL_0006:  ret
  } // end of method Remote::get_Url

  .method private hidebysig specialname instance void 
          set_Url(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.Remote::'<Url>k__BackingField'
    IL_0007:  ret
  } // end of method Remote::set_Url

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.TagFetchMode 
          get_TagFetchMode() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.TagFetchMode LibGit2Sharp.Remote::'<TagFetchMode>k__BackingField'
    IL_0006:  ret
  } // end of method Remote::get_TagFetchMode

  .method private hidebysig specialname instance void 
          set_TagFetchMode(valuetype LibGit2Sharp.TagFetchMode 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      valuetype LibGit2Sharp.TagFetchMode LibGit2Sharp.Remote::'<TagFetchMode>k__BackingField'
    IL_0007:  ret
  } // end of method Remote::set_TagFetchMode

  .method assembly hidebysig instance string 
          FetchSpecTransformToSource(string reference) cil managed
  {
    // Code size       54 (0x36)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.RemoteSafeHandle V_0,
             class LibGit2Sharp.Core.Handles.GitRefSpecHandle V_1,
             string V_2)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Remote::repository
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  ldarg.0
    IL_000c:  callvirt   instance string LibGit2Sharp.Remote::get_Name()
    IL_0011:  ldc.i4.1
    IL_0012:  call       class LibGit2Sharp.Core.Handles.RemoteSafeHandle LibGit2Sharp.Core.Proxy::git_remote_load(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                   string,
                                                                                                                   bool)
    IL_0017:  stloc.0
    .try
    {
      IL_0018:  ldloc.0
      IL_0019:  ldc.i4.0
      IL_001a:  call       class LibGit2Sharp.Core.Handles.GitRefSpecHandle LibGit2Sharp.Core.Proxy::git_remote_get_refspec(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                                                            int32)
      IL_001f:  stloc.1
      IL_0020:  ldloc.1
      IL_0021:  ldarg.1
      IL_0022:  call       string LibGit2Sharp.Core.Proxy::git_refspec_rtransform(class LibGit2Sharp.Core.Handles.GitRefSpecHandle,
                                                                                  string)
      IL_0027:  stloc.2
      IL_0028:  leave.s    IL_0034

    }  // end .try
    finally
    {
      IL_002a:  ldloc.0
      IL_002b:  brfalse.s  IL_0033

      IL_002d:  ldloc.0
      IL_002e:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0033:  endfinally
    }  // end handler
    IL_0034:  ldloc.2
    IL_0035:  ret
  } // end of method Remote::FetchSpecTransformToSource

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  isinst     LibGit2Sharp.Remote
    IL_0007:  call       instance bool LibGit2Sharp.Remote::Equals(class LibGit2Sharp.Remote)
    IL_000c:  ret
  } // end of method Remote::Equals

  .method public hidebysig newslot virtual final 
          instance bool  Equals(class LibGit2Sharp.Remote other) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Remote> LibGit2Sharp.Remote::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance bool class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Remote>::Equals(!0,
                                                                                                                         !0)
    IL_000c:  ret
  } // end of method Remote::Equals

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Remote> LibGit2Sharp.Remote::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  callvirt   instance int32 class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Remote>::GetHashCode(!0)
    IL_000b:  ret
  } // end of method Remote::GetHashCode

  .method public hidebysig specialname static 
          bool  op_Equality(class LibGit2Sharp.Remote left,
                            class LibGit2Sharp.Remote right) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ret
  } // end of method Remote::op_Equality

  .method public hidebysig specialname static 
          bool  op_Inequality(class LibGit2Sharp.Remote left,
                              class LibGit2Sharp.Remote right) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  ret
  } // end of method Remote::op_Inequality

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "{0} => {1}"
    IL_000a:  ldc.i4.2
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance string LibGit2Sharp.Remote::get_Name()
    IL_0019:  stelem.ref
    IL_001a:  ldloc.0
    IL_001b:  ldc.i4.1
    IL_001c:  ldarg.0
    IL_001d:  callvirt   instance string LibGit2Sharp.Remote::get_Url()
    IL_0022:  stelem.ref
    IL_0023:  ldloc.0
    IL_0024:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0029:  ret
  } // end of method Remote::get_DebuggerDisplay

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       83 (0x53)
    .maxstack  5
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.Remote,object>[] V_0)
    IL_0000:  ldc.i4.2
    IL_0001:  newarr     class [System.Core]System.Func`2<class LibGit2Sharp.Remote,object>
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldc.i4.0
    IL_0009:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Remote,object> LibGit2Sharp.Remote::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_000e:  brtrue.s   IL_0021

    IL_0010:  ldnull
    IL_0011:  ldftn      object LibGit2Sharp.Remote::'<.cctor>b__0'(class LibGit2Sharp.Remote)
    IL_0017:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Remote,object>::.ctor(object,
                                                                                                                 native int)
    IL_001c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Remote,object> LibGit2Sharp.Remote::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0021:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Remote,object> LibGit2Sharp.Remote::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0026:  stelem.ref
    IL_0027:  ldloc.0
    IL_0028:  ldc.i4.1
    IL_0029:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Remote,object> LibGit2Sharp.Remote::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_002e:  brtrue.s   IL_0041

    IL_0030:  ldnull
    IL_0031:  ldftn      object LibGit2Sharp.Remote::'<.cctor>b__1'(class LibGit2Sharp.Remote)
    IL_0037:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Remote,object>::.ctor(object,
                                                                                                                 native int)
    IL_003c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Remote,object> LibGit2Sharp.Remote::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_0041:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Remote,object> LibGit2Sharp.Remote::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_0046:  stelem.ref
    IL_0047:  ldloc.0
    IL_0048:  newobj     instance void class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Remote>::.ctor(class [System.Core]System.Func`2<!0,object>[])
    IL_004d:  stsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Remote> LibGit2Sharp.Remote::equalityHelper
    IL_0052:  ret
  } // end of method Remote::.cctor

  .method private hidebysig static object 
          '<.cctor>b__0'(class LibGit2Sharp.Remote x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Remote::get_Name()
    IL_0006:  ret
  } // end of method Remote::'<.cctor>b__0'

  .method private hidebysig static object 
          '<.cctor>b__1'(class LibGit2Sharp.Remote x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Remote::get_Url()
    IL_0006:  ret
  } // end of method Remote::'<.cctor>b__1'

  .property instance string Name()
  {
    .get instance string LibGit2Sharp.Remote::get_Name()
    .set instance void LibGit2Sharp.Remote::set_Name(string)
  } // end of property Remote::Name
  .property instance string Url()
  {
    .set instance void LibGit2Sharp.Remote::set_Url(string)
    .get instance string LibGit2Sharp.Remote::get_Url()
  } // end of property Remote::Url
  .property instance valuetype LibGit2Sharp.TagFetchMode
          TagFetchMode()
  {
    .get instance valuetype LibGit2Sharp.TagFetchMode LibGit2Sharp.Remote::get_TagFetchMode()
    .set instance void LibGit2Sharp.Remote::set_TagFetchMode(valuetype LibGit2Sharp.TagFetchMode)
  } // end of property Remote::TagFetchMode
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.Remote::get_DebuggerDisplay()
  } // end of property Remote::DebuggerDisplay
} // end of class LibGit2Sharp.Remote

.class public auto ansi beforefieldinit LibGit2Sharp.RemoteCollection
       extends [mscorlib]System.Object
       implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Remote>,
                  [mscorlib]System.Collections.IEnumerable
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .field private initonly class LibGit2Sharp.Repository repository
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method RemoteCollection::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repository) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.RemoteCollection::repository
    IL_000d:  ret
  } // end of method RemoteCollection::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Remote 
          get_Item(string name) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.0
    IL_0003:  call       instance class LibGit2Sharp.Remote LibGit2Sharp.RemoteCollection::RemoteForName(string,
                                                                                                         bool)
    IL_0008:  ret
  } // end of method RemoteCollection::get_Item

  .method assembly hidebysig instance class LibGit2Sharp.Remote 
          RemoteForName(string name,
                        [opt] bool shouldThrowIfNotFound) cil managed
  {
    .param [2] = bool(true)
    // Code size       63 (0x3f)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.RemoteSafeHandle V_0,
             class LibGit2Sharp.Remote V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.RemoteCollection::repository
    IL_0011:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0016:  ldarg.1
    IL_0017:  ldarg.2
    IL_0018:  call       class LibGit2Sharp.Core.Handles.RemoteSafeHandle LibGit2Sharp.Core.Proxy::git_remote_load(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                   string,
                                                                                                                   bool)
    IL_001d:  stloc.0
    .try
    {
      IL_001e:  ldloc.0
      IL_001f:  brfalse.s  IL_002f

      IL_0021:  ldloc.0
      IL_0022:  ldarg.0
      IL_0023:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.RemoteCollection::repository
      IL_0028:  call       class LibGit2Sharp.Remote LibGit2Sharp.Remote::BuildFromPtr(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                       class LibGit2Sharp.Repository)
      IL_002d:  br.s       IL_0030

      IL_002f:  ldnull
      IL_0030:  stloc.1
      IL_0031:  leave.s    IL_003d

    }  // end .try
    finally
    {
      IL_0033:  ldloc.0
      IL_0034:  brfalse.s  IL_003c

      IL_0036:  ldloc.0
      IL_0037:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_003c:  endfinally
    }  // end handler
    IL_003d:  ldloc.1
    IL_003e:  ret
  } // end of method RemoteCollection::RemoteForName

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Remote 
          Update(class LibGit2Sharp.Remote remote,
                 class [mscorlib]System.Action`1<class LibGit2Sharp.RemoteUpdater>[] actions) cil managed
  {
    .param [2]
    .custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       53 (0x35)
    .maxstack  3
    .locals init (class LibGit2Sharp.RemoteUpdater V_0,
             class [mscorlib]System.Action`1<class LibGit2Sharp.RemoteUpdater> V_1,
             class [mscorlib]System.Action`1<class LibGit2Sharp.RemoteUpdater>[] V_2,
             int32 V_3)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.RemoteCollection::repository
    IL_0006:  ldarg.1
    IL_0007:  newobj     instance void LibGit2Sharp.RemoteUpdater::.ctor(class LibGit2Sharp.Repository,
                                                                         class LibGit2Sharp.Remote)
    IL_000c:  stloc.0
    IL_000d:  ldarg.2
    IL_000e:  stloc.2
    IL_000f:  ldc.i4.0
    IL_0010:  stloc.3
    IL_0011:  br.s       IL_0022

    IL_0013:  ldloc.2
    IL_0014:  ldloc.3
    IL_0015:  ldelem.ref
    IL_0016:  stloc.1
    IL_0017:  ldloc.1
    IL_0018:  ldloc.0
    IL_0019:  callvirt   instance void class [mscorlib]System.Action`1<class LibGit2Sharp.RemoteUpdater>::Invoke(!0)
    IL_001e:  ldloc.3
    IL_001f:  ldc.i4.1
    IL_0020:  add
    IL_0021:  stloc.3
    IL_0022:  ldloc.3
    IL_0023:  ldloc.2
    IL_0024:  ldlen
    IL_0025:  conv.i4
    IL_0026:  blt.s      IL_0013

    IL_0028:  ldarg.0
    IL_0029:  ldarg.1
    IL_002a:  callvirt   instance string LibGit2Sharp.Remote::get_Name()
    IL_002f:  callvirt   instance class LibGit2Sharp.Remote LibGit2Sharp.RemoteCollection::get_Item(string)
    IL_0034:  ret
  } // end of method RemoteCollection::Update

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Remote> 
          GetEnumerator() cil managed
  {
    // Code size       39 (0x27)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.RemoteCollection::repository
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  call       class [mscorlib]System.Collections.Generic.IList`1<string> LibGit2Sharp.Core.Proxy::git_remote_list(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0010:  ldarg.0
    IL_0011:  ldftn      instance class LibGit2Sharp.Remote LibGit2Sharp.RemoteCollection::'<GetEnumerator>b__0'(string)
    IL_0017:  newobj     instance void class [System.Core]System.Func`2<string,class LibGit2Sharp.Remote>::.ctor(object,
                                                                                                                 native int)
    IL_001c:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!1> [System.Core]System.Linq.Enumerable::Select<string,class LibGit2Sharp.Remote>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                     class [System.Core]System.Func`2<!!0,!!1>)
    IL_0021:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Remote>::GetEnumerator()
    IL_0026:  ret
  } // end of method RemoteCollection::GetEnumerator

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Remote> LibGit2Sharp.RemoteCollection::GetEnumerator()
    IL_0006:  ret
  } // end of method RemoteCollection::System.Collections.IEnumerable.GetEnumerator

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Remote 
          Add(string name,
              string url) cil managed
  {
    // Code size       68 (0x44)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.RemoteSafeHandle V_0,
             class LibGit2Sharp.Remote V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "url"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.0
    IL_0017:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.RemoteCollection::repository
    IL_001c:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0021:  ldarg.1
    IL_0022:  ldarg.2
    IL_0023:  call       class LibGit2Sharp.Core.Handles.RemoteSafeHandle LibGit2Sharp.Core.Proxy::git_remote_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                     string,
                                                                                                                     string)
    IL_0028:  stloc.0
    .try
    {
      IL_0029:  ldloc.0
      IL_002a:  ldarg.0
      IL_002b:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.RemoteCollection::repository
      IL_0030:  call       class LibGit2Sharp.Remote LibGit2Sharp.Remote::BuildFromPtr(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                       class LibGit2Sharp.Repository)
      IL_0035:  stloc.1
      IL_0036:  leave.s    IL_0042

    }  // end .try
    finally
    {
      IL_0038:  ldloc.0
      IL_0039:  brfalse.s  IL_0041

      IL_003b:  ldloc.0
      IL_003c:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0041:  endfinally
    }  // end handler
    IL_0042:  ldloc.1
    IL_0043:  ret
  } // end of method RemoteCollection::Add

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Remote 
          Add(string name,
              string url,
              string fetchRefSpec) cil managed
  {
    // Code size       92 (0x5c)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.RemoteSafeHandle V_0,
             class LibGit2Sharp.Remote V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "url"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.3
    IL_0017:  ldstr      "fetchRefSpec"
    IL_001c:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0021:  ldarg.0
    IL_0022:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.RemoteCollection::repository
    IL_0027:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_002c:  ldarg.1
    IL_002d:  ldarg.2
    IL_002e:  call       class LibGit2Sharp.Core.Handles.RemoteSafeHandle LibGit2Sharp.Core.Proxy::git_remote_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                     string,
                                                                                                                     string)
    IL_0033:  stloc.0
    .try
    {
      IL_0034:  ldloc.0
      IL_0035:  ldarg.3
      IL_0036:  call       void LibGit2Sharp.Core.Proxy::git_remote_add_fetch(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                              string)
      IL_003b:  ldloc.0
      IL_003c:  call       void LibGit2Sharp.Core.Proxy::git_remote_save(class LibGit2Sharp.Core.Handles.RemoteSafeHandle)
      IL_0041:  ldloc.0
      IL_0042:  ldarg.0
      IL_0043:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.RemoteCollection::repository
      IL_0048:  call       class LibGit2Sharp.Remote LibGit2Sharp.Remote::BuildFromPtr(class LibGit2Sharp.Core.Handles.RemoteSafeHandle,
                                                                                       class LibGit2Sharp.Repository)
      IL_004d:  stloc.1
      IL_004e:  leave.s    IL_005a

    }  // end .try
    finally
    {
      IL_0050:  ldloc.0
      IL_0051:  brfalse.s  IL_0059

      IL_0053:  ldloc.0
      IL_0054:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0059:  endfinally
    }  // end handler
    IL_005a:  ldloc.1
    IL_005b:  ret
  } // end of method RemoteCollection::Add

  .method public hidebysig newslot virtual 
          instance bool  IsValidName(string name) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  call       bool LibGit2Sharp.Core.Proxy::git_remote_is_valid_name(string)
    IL_0006:  ret
  } // end of method RemoteCollection::IsValidName

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       38 (0x26)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "Count = {0}"
    IL_000a:  ldc.i4.1
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  call       int32 [System.Core]System.Linq.Enumerable::Count<class LibGit2Sharp.Remote>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0019:  box        [mscorlib]System.Int32
    IL_001e:  stelem.ref
    IL_001f:  ldloc.0
    IL_0020:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0025:  ret
  } // end of method RemoteCollection::get_DebuggerDisplay

  .method private hidebysig instance class LibGit2Sharp.Remote 
          '<GetEnumerator>b__0'(string n) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance class LibGit2Sharp.Remote LibGit2Sharp.RemoteCollection::get_Item(string)
    IL_0007:  ret
  } // end of method RemoteCollection::'<GetEnumerator>b__0'

  .property instance class LibGit2Sharp.Remote
          Item(string)
  {
    .get instance class LibGit2Sharp.Remote LibGit2Sharp.RemoteCollection::get_Item(string)
  } // end of property RemoteCollection::Item
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.RemoteCollection::get_DebuggerDisplay()
  } // end of property RemoteCollection::DebuggerDisplay
} // end of class LibGit2Sharp.RemoteCollection

.class public auto ansi beforefieldinit LibGit2Sharp.Repository
       extends [mscorlib]System.Object
       implements LibGit2Sharp.IRepository,
                  [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClassd'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Repository '<>4__this'
    .field public class LibGit2Sharp.RepositoryOptions options
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClassd'::.ctor

    .method public hidebysig instance class LibGit2Sharp.Index 
            '<.ctor>b__1'() cil managed
    {
      // Code size       23 (0x17)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Repository/'<>c__DisplayClassd'::'<>4__this'
      IL_0006:  ldarg.0
      IL_0007:  ldfld      class LibGit2Sharp.RepositoryOptions LibGit2Sharp.Repository/'<>c__DisplayClassd'::options
      IL_000c:  callvirt   instance string LibGit2Sharp.RepositoryOptions::get_IndexPath()
      IL_0011:  newobj     instance void LibGit2Sharp.Index::.ctor(class LibGit2Sharp.Repository,
                                                                   string)
      IL_0016:  ret
    } // end of method '<>c__DisplayClassd'::'<.ctor>b__1'

  } // end of class '<>c__DisplayClassd'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClassf'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Repository/'<>c__DisplayClassd' 'CS$<>8__localse'
    .field public string configurationGlobalFilePath
    .field public string configurationXDGFilePath
    .field public string configurationSystemFilePath
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClassf'::.ctor

    .method public hidebysig instance class LibGit2Sharp.Configuration 
            '<.ctor>b__3'() cil managed
    {
      // Code size       51 (0x33)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Repository/'<>c__DisplayClassd' LibGit2Sharp.Repository/'<>c__DisplayClassf'::'CS$<>8__localse'
      IL_0006:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Repository/'<>c__DisplayClassd'::'<>4__this'
      IL_000b:  ldarg.0
      IL_000c:  ldfld      class LibGit2Sharp.Repository/'<>c__DisplayClassd' LibGit2Sharp.Repository/'<>c__DisplayClassf'::'CS$<>8__localse'
      IL_0011:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Repository/'<>c__DisplayClassd'::'<>4__this'
      IL_0016:  ldarg.0
      IL_0017:  ldfld      string LibGit2Sharp.Repository/'<>c__DisplayClassf'::configurationGlobalFilePath
      IL_001c:  ldarg.0
      IL_001d:  ldfld      string LibGit2Sharp.Repository/'<>c__DisplayClassf'::configurationXDGFilePath
      IL_0022:  ldarg.0
      IL_0023:  ldfld      string LibGit2Sharp.Repository/'<>c__DisplayClassf'::configurationSystemFilePath
      IL_0028:  newobj     instance void LibGit2Sharp.Configuration::.ctor(class LibGit2Sharp.Repository,
                                                                           string,
                                                                           string,
                                                                           string)
      IL_002d:  call       instance !!0 LibGit2Sharp.Repository::RegisterForCleanup<class LibGit2Sharp.Configuration>(!!0)
      IL_0032:  ret
    } // end of method '<>c__DisplayClassf'::'<.ctor>b__3'

  } // end of class '<>c__DisplayClassf'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass14'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Credentials credentials
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass14'::.ctor

    .method public hidebysig instance int32 
            '<Clone>b__12'([out] native int& cred,
                           native int url,
                           native int username_from_url,
                           uint32 types,
                           native int payload) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      class LibGit2Sharp.Credentials LibGit2Sharp.Repository/'<>c__DisplayClass14'::credentials
      IL_0007:  callvirt   instance string LibGit2Sharp.Credentials::get_Username()
      IL_000c:  ldarg.0
      IL_000d:  ldfld      class LibGit2Sharp.Credentials LibGit2Sharp.Repository/'<>c__DisplayClass14'::credentials
      IL_0012:  callvirt   instance string LibGit2Sharp.Credentials::get_Password()
      IL_0017:  call       int32 LibGit2Sharp.Core.NativeMethods::git_cred_userpass_plaintext_new(native int&,
                                                                                                  string,
                                                                                                  string)
      IL_001c:  ret
    } // end of method '<>c__DisplayClass14'::'<Clone>b__12'

  } // end of class '<>c__DisplayClass14'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass1c'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public int32 i
    .field public class LibGit2Sharp.Repository '<>4__this'
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass1c'::.ctor

    .method public hidebysig instance class LibGit2Sharp.MergeHead 
            '<get_MergeHeads>b__1b'(valuetype LibGit2Sharp.Core.GitOid commitId) cil managed
    {
      // Code size       35 (0x23)
      .maxstack  5
      .locals init (int32 V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.Repository/'<>c__DisplayClass1c'::'<>4__this'
      IL_0006:  ldarg.1
      IL_0007:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.GitOid::op_Implicit(valuetype LibGit2Sharp.Core.GitOid)
      IL_000c:  ldarg.0
      IL_000d:  dup
      IL_000e:  ldfld      int32 LibGit2Sharp.Repository/'<>c__DisplayClass1c'::i
      IL_0013:  dup
      IL_0014:  stloc.0
      IL_0015:  ldc.i4.1
      IL_0016:  add
      IL_0017:  stfld      int32 LibGit2Sharp.Repository/'<>c__DisplayClass1c'::i
      IL_001c:  ldloc.0
      IL_001d:  newobj     instance void LibGit2Sharp.MergeHead::.ctor(class LibGit2Sharp.Repository,
                                                                       class LibGit2Sharp.ObjectId,
                                                                       int32)
      IL_0022:  ret
    } // end of method '<>c__DisplayClass1c'::'<get_MergeHeads>b__1b'

  } // end of class '<>c__DisplayClass1c'

  .field private initonly bool isBare
  .field private initonly class LibGit2Sharp.BranchCollection branches
  .field private initonly class LibGit2Sharp.CommitLog commits
  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Configuration> config
  .field private initonly class LibGit2Sharp.Core.Handles.RepositorySafeHandle handle
  .field private initonly class LibGit2Sharp.Index index
  .field private initonly class LibGit2Sharp.ReferenceCollection refs
  .field private initonly class LibGit2Sharp.TagCollection tags
  .field private initonly class LibGit2Sharp.StashCollection stashes
  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.RepositoryInformation> info
  .field private initonly class LibGit2Sharp.Diff diff
  .field private initonly class LibGit2Sharp.NoteCollection notes
  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.ObjectDatabase> odb
  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Network> network
  .field private initonly class [System]System.Collections.Generic.Stack`1<class [mscorlib]System.IDisposable> toCleanup
  .field private initonly class LibGit2Sharp.Ignore ignore
  .field private initonly class LibGit2Sharp.SubmoduleCollection submodules
  .field private static initonly class LibGit2Sharp.Core.Compat.Lazy`1<string> versionRetriever
  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Core.PathCase> pathCase
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.MergeHead,class LibGit2Sharp.Commit> 'CS$<>9__CachedAnonymousMethodDelegate19'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string path,
                               [opt] class LibGit2Sharp.RepositoryOptions options) cil managed
  {
    .param [2] = nullref
    // Code size       656 (0x290)
    .maxstack  4
    .locals init (class [System.Core]System.Func`1<class LibGit2Sharp.Index> V_0,
             bool V_1,
             bool V_2,
             class LibGit2Sharp.Repository/'<>c__DisplayClassf' V_3,
             class [System.Core]System.Func`1<class LibGit2Sharp.Index> V_4,
             class [System.Core]System.Func`1<class LibGit2Sharp.Index> V_5,
             class [System.Core]System.Func`1<class LibGit2Sharp.RepositoryInformation> V_6,
             class [System.Core]System.Func`1<class LibGit2Sharp.ObjectDatabase> V_7,
             class [System.Core]System.Func`1<class LibGit2Sharp.Network> V_8,
             class [System.Core]System.Func`1<class LibGit2Sharp.Core.PathCase> V_9,
             class LibGit2Sharp.Repository/'<>c__DisplayClassd' V_10)
    IL_0000:  ldnull
    IL_0001:  stloc.s    V_4
    IL_0003:  ldnull
    IL_0004:  stloc.s    V_5
    IL_0006:  ldnull
    IL_0007:  stloc.s    V_6
    IL_0009:  ldnull
    IL_000a:  stloc.s    V_7
    IL_000c:  ldnull
    IL_000d:  stloc.s    V_8
    IL_000f:  ldnull
    IL_0010:  stloc.s    V_9
    IL_0012:  newobj     instance void LibGit2Sharp.Repository/'<>c__DisplayClassd'::.ctor()
    IL_0017:  stloc.s    V_10
    IL_0019:  ldloc.s    V_10
    IL_001b:  ldarg.2
    IL_001c:  stfld      class LibGit2Sharp.RepositoryOptions LibGit2Sharp.Repository/'<>c__DisplayClassd'::options
    IL_0021:  ldarg.0
    IL_0022:  newobj     instance void class [System]System.Collections.Generic.Stack`1<class [mscorlib]System.IDisposable>::.ctor()
    IL_0027:  stfld      class [System]System.Collections.Generic.Stack`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Repository::toCleanup
    IL_002c:  ldarg.0
    IL_002d:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0032:  ldloc.s    V_10
    IL_0034:  ldarg.0
    IL_0035:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Repository/'<>c__DisplayClassd'::'<>4__this'
    IL_003a:  ldarg.1
    IL_003b:  ldstr      "path"
    IL_0040:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    .try
    {
      IL_0045:  newobj     instance void LibGit2Sharp.Repository/'<>c__DisplayClassf'::.ctor()
      IL_004a:  stloc.3
      IL_004b:  ldloc.3
      IL_004c:  ldloc.s    V_10
      IL_004e:  stfld      class LibGit2Sharp.Repository/'<>c__DisplayClassd' LibGit2Sharp.Repository/'<>c__DisplayClassf'::'CS$<>8__localse'
      IL_0053:  ldarg.0
      IL_0054:  ldarg.1
      IL_0055:  call       class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Core.Proxy::git_repository_open(string)
      IL_005a:  stfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::handle
      IL_005f:  ldarg.0
      IL_0060:  ldarg.0
      IL_0061:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::handle
      IL_0066:  call       instance !!0 LibGit2Sharp.Repository::RegisterForCleanup<class LibGit2Sharp.Core.Handles.RepositorySafeHandle>(!!0)
      IL_006b:  pop
      IL_006c:  ldarg.0
      IL_006d:  ldarg.0
      IL_006e:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::handle
      IL_0073:  call       bool LibGit2Sharp.Core.Proxy::git_repository_is_bare(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_0078:  stfld      bool LibGit2Sharp.Repository::isBare
      IL_007d:  ldloc.s    V_4
      IL_007f:  brtrue.s   IL_008f

      IL_0081:  ldarg.0
      IL_0082:  ldftn      instance class LibGit2Sharp.Index LibGit2Sharp.Repository::'<.ctor>b__0'()
      IL_0088:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.Index>::.ctor(object,
                                                                                                           native int)
      IL_008d:  stloc.s    V_4
      IL_008f:  ldloc.s    V_4
      IL_0091:  stloc.0
      IL_0092:  ldloc.3
      IL_0093:  ldnull
      IL_0094:  stfld      string LibGit2Sharp.Repository/'<>c__DisplayClassf'::configurationGlobalFilePath
      IL_0099:  ldloc.3
      IL_009a:  ldnull
      IL_009b:  stfld      string LibGit2Sharp.Repository/'<>c__DisplayClassf'::configurationXDGFilePath
      IL_00a0:  ldloc.3
      IL_00a1:  ldnull
      IL_00a2:  stfld      string LibGit2Sharp.Repository/'<>c__DisplayClassf'::configurationSystemFilePath
      IL_00a7:  ldloc.s    V_10
      IL_00a9:  ldfld      class LibGit2Sharp.RepositoryOptions LibGit2Sharp.Repository/'<>c__DisplayClassd'::options
      IL_00ae:  brfalse    IL_0164

      IL_00b3:  ldloc.s    V_10
      IL_00b5:  ldfld      class LibGit2Sharp.RepositoryOptions LibGit2Sharp.Repository/'<>c__DisplayClassd'::options
      IL_00ba:  callvirt   instance string LibGit2Sharp.RepositoryOptions::get_WorkingDirectoryPath()
      IL_00bf:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
      IL_00c4:  stloc.1
      IL_00c5:  ldloc.s    V_10
      IL_00c7:  ldfld      class LibGit2Sharp.RepositoryOptions LibGit2Sharp.Repository/'<>c__DisplayClassd'::options
      IL_00cc:  callvirt   instance string LibGit2Sharp.RepositoryOptions::get_IndexPath()
      IL_00d1:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
      IL_00d6:  stloc.2
      IL_00d7:  ldarg.0
      IL_00d8:  ldfld      bool LibGit2Sharp.Repository::isBare
      IL_00dd:  brfalse.s  IL_00ef

      IL_00df:  ldloc.1
      IL_00e0:  ldloc.2
      IL_00e1:  xor
      IL_00e2:  brfalse.s  IL_00ef

      IL_00e4:  ldstr      "When overriding the opening of a bare repository, "
      + "both RepositoryOptions.WorkingDirectoryPath an RepositoryOptions.IndexP"
      + "ath have to be provided."
      IL_00e9:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
      IL_00ee:  throw

      IL_00ef:  ldarg.0
      IL_00f0:  ldc.i4.0
      IL_00f1:  stfld      bool LibGit2Sharp.Repository::isBare
      IL_00f6:  ldloc.2
      IL_00f7:  brtrue.s   IL_010f

      IL_00f9:  ldloc.s    V_5
      IL_00fb:  brtrue.s   IL_010c

      IL_00fd:  ldloc.s    V_10
      IL_00ff:  ldftn      instance class LibGit2Sharp.Index LibGit2Sharp.Repository/'<>c__DisplayClassd'::'<.ctor>b__1'()
      IL_0105:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.Index>::.ctor(object,
                                                                                                           native int)
      IL_010a:  stloc.s    V_5
      IL_010c:  ldloc.s    V_5
      IL_010e:  stloc.0
      IL_010f:  ldloc.1
      IL_0110:  brtrue.s   IL_012e

      IL_0112:  ldarg.0
      IL_0113:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::handle
      IL_0118:  ldloc.s    V_10
      IL_011a:  ldfld      class LibGit2Sharp.RepositoryOptions LibGit2Sharp.Repository/'<>c__DisplayClassd'::options
      IL_011f:  callvirt   instance string LibGit2Sharp.RepositoryOptions::get_WorkingDirectoryPath()
      IL_0124:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
      IL_0129:  call       void LibGit2Sharp.Core.Proxy::git_repository_set_workdir(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                    class LibGit2Sharp.Core.FilePath)
      IL_012e:  ldloc.3
      IL_012f:  ldloc.s    V_10
      IL_0131:  ldfld      class LibGit2Sharp.RepositoryOptions LibGit2Sharp.Repository/'<>c__DisplayClassd'::options
      IL_0136:  callvirt   instance string LibGit2Sharp.RepositoryOptions::get_GlobalConfigurationLocation()
      IL_013b:  stfld      string LibGit2Sharp.Repository/'<>c__DisplayClassf'::configurationGlobalFilePath
      IL_0140:  ldloc.3
      IL_0141:  ldloc.s    V_10
      IL_0143:  ldfld      class LibGit2Sharp.RepositoryOptions LibGit2Sharp.Repository/'<>c__DisplayClassd'::options
      IL_0148:  callvirt   instance string LibGit2Sharp.RepositoryOptions::get_XdgConfigurationLocation()
      IL_014d:  stfld      string LibGit2Sharp.Repository/'<>c__DisplayClassf'::configurationXDGFilePath
      IL_0152:  ldloc.3
      IL_0153:  ldloc.s    V_10
      IL_0155:  ldfld      class LibGit2Sharp.RepositoryOptions LibGit2Sharp.Repository/'<>c__DisplayClassd'::options
      IL_015a:  callvirt   instance string LibGit2Sharp.RepositoryOptions::get_SystemConfigurationLocation()
      IL_015f:  stfld      string LibGit2Sharp.Repository/'<>c__DisplayClassf'::configurationSystemFilePath
      IL_0164:  ldarg.0
      IL_0165:  ldfld      bool LibGit2Sharp.Repository::isBare
      IL_016a:  brtrue.s   IL_0178

      IL_016c:  ldarg.0
      IL_016d:  ldloc.0
      IL_016e:  callvirt   instance !0 class [System.Core]System.Func`1<class LibGit2Sharp.Index>::Invoke()
      IL_0173:  stfld      class LibGit2Sharp.Index LibGit2Sharp.Repository::index
      IL_0178:  ldarg.0
      IL_0179:  ldarg.0
      IL_017a:  newobj     instance void LibGit2Sharp.CommitLog::.ctor(class LibGit2Sharp.Repository)
      IL_017f:  stfld      class LibGit2Sharp.CommitLog LibGit2Sharp.Repository::commits
      IL_0184:  ldarg.0
      IL_0185:  ldarg.0
      IL_0186:  newobj     instance void LibGit2Sharp.ReferenceCollection::.ctor(class LibGit2Sharp.Repository)
      IL_018b:  stfld      class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::refs
      IL_0190:  ldarg.0
      IL_0191:  ldarg.0
      IL_0192:  newobj     instance void LibGit2Sharp.BranchCollection::.ctor(class LibGit2Sharp.Repository)
      IL_0197:  stfld      class LibGit2Sharp.BranchCollection LibGit2Sharp.Repository::branches
      IL_019c:  ldarg.0
      IL_019d:  ldarg.0
      IL_019e:  newobj     instance void LibGit2Sharp.TagCollection::.ctor(class LibGit2Sharp.Repository)
      IL_01a3:  stfld      class LibGit2Sharp.TagCollection LibGit2Sharp.Repository::tags
      IL_01a8:  ldarg.0
      IL_01a9:  ldarg.0
      IL_01aa:  newobj     instance void LibGit2Sharp.StashCollection::.ctor(class LibGit2Sharp.Repository)
      IL_01af:  stfld      class LibGit2Sharp.StashCollection LibGit2Sharp.Repository::stashes
      IL_01b4:  ldarg.0
      IL_01b5:  ldloc.s    V_6
      IL_01b7:  brtrue.s   IL_01c7

      IL_01b9:  ldarg.0
      IL_01ba:  ldftn      instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::'<.ctor>b__2'()
      IL_01c0:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.RepositoryInformation>::.ctor(object,
                                                                                                                           native int)
      IL_01c5:  stloc.s    V_6
      IL_01c7:  ldloc.s    V_6
      IL_01c9:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.RepositoryInformation>::.ctor(class [System.Core]System.Func`1<!0>)
      IL_01ce:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.RepositoryInformation> LibGit2Sharp.Repository::info
      IL_01d3:  ldarg.0
      IL_01d4:  ldloc.3
      IL_01d5:  ldftn      instance class LibGit2Sharp.Configuration LibGit2Sharp.Repository/'<>c__DisplayClassf'::'<.ctor>b__3'()
      IL_01db:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.Configuration>::.ctor(object,
                                                                                                                   native int)
      IL_01e0:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Configuration>::.ctor(class [System.Core]System.Func`1<!0>)
      IL_01e5:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Configuration> LibGit2Sharp.Repository::config
      IL_01ea:  ldarg.0
      IL_01eb:  ldloc.s    V_7
      IL_01ed:  brtrue.s   IL_01fd

      IL_01ef:  ldarg.0
      IL_01f0:  ldftn      instance class LibGit2Sharp.ObjectDatabase LibGit2Sharp.Repository::'<.ctor>b__4'()
      IL_01f6:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.ObjectDatabase>::.ctor(object,
                                                                                                                    native int)
      IL_01fb:  stloc.s    V_7
      IL_01fd:  ldloc.s    V_7
      IL_01ff:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.ObjectDatabase>::.ctor(class [System.Core]System.Func`1<!0>)
      IL_0204:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.ObjectDatabase> LibGit2Sharp.Repository::odb
      IL_0209:  ldarg.0
      IL_020a:  ldarg.0
      IL_020b:  newobj     instance void LibGit2Sharp.Diff::.ctor(class LibGit2Sharp.Repository)
      IL_0210:  stfld      class LibGit2Sharp.Diff LibGit2Sharp.Repository::diff
      IL_0215:  ldarg.0
      IL_0216:  ldarg.0
      IL_0217:  newobj     instance void LibGit2Sharp.NoteCollection::.ctor(class LibGit2Sharp.Repository)
      IL_021c:  stfld      class LibGit2Sharp.NoteCollection LibGit2Sharp.Repository::notes
      IL_0221:  ldarg.0
      IL_0222:  ldarg.0
      IL_0223:  newobj     instance void LibGit2Sharp.Ignore::.ctor(class LibGit2Sharp.Repository)
      IL_0228:  stfld      class LibGit2Sharp.Ignore LibGit2Sharp.Repository::ignore
      IL_022d:  ldarg.0
      IL_022e:  ldloc.s    V_8
      IL_0230:  brtrue.s   IL_0240

      IL_0232:  ldarg.0
      IL_0233:  ldftn      instance class LibGit2Sharp.Network LibGit2Sharp.Repository::'<.ctor>b__5'()
      IL_0239:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.Network>::.ctor(object,
                                                                                                             native int)
      IL_023e:  stloc.s    V_8
      IL_0240:  ldloc.s    V_8
      IL_0242:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Network>::.ctor(class [System.Core]System.Func`1<!0>)
      IL_0247:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Network> LibGit2Sharp.Repository::network
      IL_024c:  ldarg.0
      IL_024d:  ldloc.s    V_9
      IL_024f:  brtrue.s   IL_025f

      IL_0251:  ldarg.0
      IL_0252:  ldftn      instance class LibGit2Sharp.Core.PathCase LibGit2Sharp.Repository::'<.ctor>b__6'()
      IL_0258:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.Core.PathCase>::.ctor(object,
                                                                                                                   native int)
      IL_025d:  stloc.s    V_9
      IL_025f:  ldloc.s    V_9
      IL_0261:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Core.PathCase>::.ctor(class [System.Core]System.Func`1<!0>)
      IL_0266:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Core.PathCase> LibGit2Sharp.Repository::pathCase
      IL_026b:  ldarg.0
      IL_026c:  ldarg.0
      IL_026d:  newobj     instance void LibGit2Sharp.SubmoduleCollection::.ctor(class LibGit2Sharp.Repository)
      IL_0272:  stfld      class LibGit2Sharp.SubmoduleCollection LibGit2Sharp.Repository::submodules
      IL_0277:  ldarg.0
      IL_0278:  ldloc.s    V_10
      IL_027a:  ldfld      class LibGit2Sharp.RepositoryOptions LibGit2Sharp.Repository/'<>c__DisplayClassd'::options
      IL_027f:  call       instance void LibGit2Sharp.Repository::EagerlyLoadTheConfigIfAnyPathHaveBeenPassed(class LibGit2Sharp.RepositoryOptions)
      IL_0284:  leave.s    IL_028f

    }  // end .try
    catch [mscorlib]System.Object 
    {
      IL_0286:  pop
      IL_0287:  ldarg.0
      IL_0288:  call       instance void LibGit2Sharp.Repository::CleanupDisposableDependencies()
      IL_028d:  rethrow
    }  // end handler
    IL_028f:  ret
  } // end of method Repository::.ctor

  .method public hidebysig static bool  IsValid(string path) cil managed
  {
    // Code size       30 (0x1e)
    .maxstack  3
    .locals init (bool V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "path"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    .try
    {
      IL_000b:  ldarg.0
      IL_000c:  ldc.i4.1
      IL_000d:  ldnull
      IL_000e:  call       void LibGit2Sharp.Core.Proxy::git_repository_open_ext(string,
                                                                                 valuetype LibGit2Sharp.Core.RepositoryOpenFlags,
                                                                                 string)
      IL_0013:  leave.s    IL_001a

    }  // end .try
    catch LibGit2Sharp.RepositoryNotFoundException 
    {
      IL_0015:  pop
      IL_0016:  ldc.i4.0
      IL_0017:  stloc.0
      IL_0018:  leave.s    IL_001c

    }  // end handler
    IL_001a:  ldc.i4.1
    IL_001b:  ret

    IL_001c:  ldloc.0
    IL_001d:  ret
  } // end of method Repository::IsValid

  .method private hidebysig instance void 
          EagerlyLoadTheConfigIfAnyPathHaveBeenPassed(class LibGit2Sharp.RepositoryOptions options) cil managed
  {
    // Code size       55 (0x37)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brtrue.s   IL_0004

    IL_0003:  ret

    IL_0004:  ldarg.1
    IL_0005:  callvirt   instance string LibGit2Sharp.RepositoryOptions::get_GlobalConfigurationLocation()
    IL_000a:  brtrue.s   IL_001d

    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance string LibGit2Sharp.RepositoryOptions::get_XdgConfigurationLocation()
    IL_0012:  brtrue.s   IL_001d

    IL_0014:  ldarg.1
    IL_0015:  callvirt   instance string LibGit2Sharp.RepositoryOptions::get_SystemConfigurationLocation()
    IL_001a:  brtrue.s   IL_001d

    IL_001c:  ret

    IL_001d:  ldarg.0
    IL_001e:  call       instance class LibGit2Sharp.Configuration LibGit2Sharp.Repository::get_Config()
    IL_0023:  ldc.i4.4
    IL_0024:  callvirt   instance bool LibGit2Sharp.Configuration::HasConfig(valuetype LibGit2Sharp.ConfigurationLevel)
    IL_0029:  brtrue.s   IL_0036

    IL_002b:  ldstr      "Unexpected state."
    IL_0030:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor(string)
    IL_0035:  throw

    IL_0036:  ret
  } // end of method Repository::EagerlyLoadTheConfigIfAnyPathHaveBeenPassed

  .method assembly hidebysig specialname 
          instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle 
          get_Handle() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::handle
    IL_0006:  ret
  } // end of method Repository::get_Handle

  .method public hidebysig newslot specialname virtual final 
          instance class LibGit2Sharp.Branch 
          get_Head() cil managed
  {
    // Code size       56 (0x38)
    .maxstack  3
    .locals init (class LibGit2Sharp.Reference V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_0006:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::get_Head()
    IL_000b:  stloc.0
    IL_000c:  ldloc.0
    IL_000d:  ldnull
    IL_000e:  call       bool LibGit2Sharp.Reference::op_Equality(class LibGit2Sharp.Reference,
                                                                  class LibGit2Sharp.Reference)
    IL_0013:  brfalse.s  IL_0020

    IL_0015:  ldstr      "Corrupt repository. The 'HEAD' reference is missing."
    IL_001a:  newobj     instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_001f:  throw

    IL_0020:  ldloc.0
    IL_0021:  isinst     LibGit2Sharp.SymbolicReference
    IL_0026:  brfalse.s  IL_0030

    IL_0028:  ldarg.0
    IL_0029:  ldloc.0
    IL_002a:  newobj     instance void LibGit2Sharp.Branch::.ctor(class LibGit2Sharp.Repository,
                                                                  class LibGit2Sharp.Reference)
    IL_002f:  ret

    IL_0030:  ldarg.0
    IL_0031:  ldloc.0
    IL_0032:  newobj     instance void LibGit2Sharp.DetachedHead::.ctor(class LibGit2Sharp.Repository,
                                                                        class LibGit2Sharp.Reference)
    IL_0037:  ret
  } // end of method Repository::get_Head

  .method public hidebysig newslot specialname virtual final 
          instance class LibGit2Sharp.Configuration 
          get_Config() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Configuration> LibGit2Sharp.Repository::config
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Configuration>::get_Value()
    IL_000b:  ret
  } // end of method Repository::get_Config

  .method public hidebysig newslot specialname virtual final 
          instance class LibGit2Sharp.Index 
          get_Index() cil managed
  {
    // Code size       26 (0x1a)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      bool LibGit2Sharp.Repository::isBare
    IL_0006:  brfalse.s  IL_0013

    IL_0008:  ldstr      "Index is not available in a bare repository."
    IL_000d:  newobj     instance void LibGit2Sharp.BareRepositoryException::.ctor(string)
    IL_0012:  throw

    IL_0013:  ldarg.0
    IL_0014:  ldfld      class LibGit2Sharp.Index LibGit2Sharp.Repository::index
    IL_0019:  ret
  } // end of method Repository::get_Index

  .method public hidebysig specialname instance class LibGit2Sharp.Ignore 
          get_Ignore() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Ignore LibGit2Sharp.Repository::ignore
    IL_0006:  ret
  } // end of method Repository::get_Ignore

  .method public hidebysig newslot specialname virtual final 
          instance class LibGit2Sharp.Network 
          get_Network() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Network> LibGit2Sharp.Repository::network
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Network>::get_Value()
    IL_000b:  ret
  } // end of method Repository::get_Network

  .method public hidebysig newslot specialname virtual final 
          instance class LibGit2Sharp.ObjectDatabase 
          get_ObjectDatabase() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.ObjectDatabase> LibGit2Sharp.Repository::odb
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.ObjectDatabase>::get_Value()
    IL_000b:  ret
  } // end of method Repository::get_ObjectDatabase

  .method public hidebysig newslot specialname virtual final 
          instance class LibGit2Sharp.ReferenceCollection 
          get_Refs() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::refs
    IL_0006:  ret
  } // end of method Repository::get_Refs

  .method public hidebysig newslot specialname virtual final 
          instance class LibGit2Sharp.IQueryableCommitLog 
          get_Commits() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.CommitLog LibGit2Sharp.Repository::commits
    IL_0006:  ret
  } // end of method Repository::get_Commits

  .method public hidebysig newslot specialname virtual final 
          instance class LibGit2Sharp.BranchCollection 
          get_Branches() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.BranchCollection LibGit2Sharp.Repository::branches
    IL_0006:  ret
  } // end of method Repository::get_Branches

  .method public hidebysig newslot specialname virtual final 
          instance class LibGit2Sharp.TagCollection 
          get_Tags() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.TagCollection LibGit2Sharp.Repository::tags
    IL_0006:  ret
  } // end of method Repository::get_Tags

  .method public hidebysig specialname instance class LibGit2Sharp.StashCollection 
          get_Stashes() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.StashCollection LibGit2Sharp.Repository::stashes
    IL_0006:  ret
  } // end of method Repository::get_Stashes

  .method public hidebysig newslot specialname virtual final 
          instance class LibGit2Sharp.RepositoryInformation 
          get_Info() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.RepositoryInformation> LibGit2Sharp.Repository::info
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.RepositoryInformation>::get_Value()
    IL_000b:  ret
  } // end of method Repository::get_Info

  .method public hidebysig newslot specialname virtual final 
          instance class LibGit2Sharp.Diff 
          get_Diff() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Diff LibGit2Sharp.Repository::diff
    IL_0006:  ret
  } // end of method Repository::get_Diff

  .method public hidebysig newslot specialname virtual final 
          instance class LibGit2Sharp.NoteCollection 
          get_Notes() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.NoteCollection LibGit2Sharp.Repository::notes
    IL_0006:  ret
  } // end of method Repository::get_Notes

  .method public hidebysig newslot specialname virtual final 
          instance class LibGit2Sharp.SubmoduleCollection 
          get_Submodules() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.SubmoduleCollection LibGit2Sharp.Repository::submodules
    IL_0006:  ret
  } // end of method Repository::get_Submodules

  .method public hidebysig newslot virtual final 
          instance void  Dispose() cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.1
    IL_0002:  callvirt   instance void LibGit2Sharp.Repository::Dispose(bool)
    IL_0007:  ldarg.0
    IL_0008:  call       void [mscorlib]System.GC::SuppressFinalize(object)
    IL_000d:  ret
  } // end of method Repository::Dispose

  .method family hidebysig newslot virtual 
          instance void  Dispose(bool disposing) cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Repository::CleanupDisposableDependencies()
    IL_0006:  ret
  } // end of method Repository::Dispose

  .method public hidebysig static class LibGit2Sharp.Repository 
          Init(string path,
               bool isBare,
               class LibGit2Sharp.RepositoryOptions options) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 57 54 68 69 73 20 6D 65 74 68 6F 64 20 77   // ..WThis method w
                                                                                69 6C 6C 20 62 65 20 72 65 6D 6F 76 65 64 20 69   // ill be removed i
                                                                                6E 20 74 68 65 20 6E 65 78 74 20 72 65 6C 65 61   // n the next relea
                                                                                73 65 2E 20 50 6C 65 61 73 65 20 75 73 65 20 49   // se. Please use I
                                                                                6E 69 74 28 73 74 72 69 6E 67 2C 20 62 6F 6F 6C   // nit(string, bool
                                                                                29 20 69 6E 73 74 65 61 64 2E 00 00 )             // ) instead...
    // Code size       16 (0x10)
    .maxstack  3
    .locals init (string V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       string LibGit2Sharp.Repository::Init(string,
                                                              bool)
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  ldarg.2
    IL_000a:  newobj     instance void LibGit2Sharp.Repository::.ctor(string,
                                                                      class LibGit2Sharp.RepositoryOptions)
    IL_000f:  ret
  } // end of method Repository::Init

  .method public hidebysig static string 
          Init(string path,
               [opt] bool isBare) cil managed
  {
    .param [2] = bool(false)
    // Code size       53 (0x35)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Handles.RepositorySafeHandle V_0,
             class LibGit2Sharp.Core.FilePath V_1,
             string V_2)
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "path"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldnull
    IL_000c:  ldarg.0
    IL_000d:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0012:  ldarg.1
    IL_0013:  call       class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Core.Proxy::git_repository_init_ext(class LibGit2Sharp.Core.FilePath,
                                                                                                                               class LibGit2Sharp.Core.FilePath,
                                                                                                                               bool)
    IL_0018:  stloc.0
    .try
    {
      IL_0019:  ldloc.0
      IL_001a:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.Proxy::git_repository_path(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_001f:  stloc.1
      IL_0020:  ldloc.1
      IL_0021:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
      IL_0026:  stloc.2
      IL_0027:  leave.s    IL_0033

    }  // end .try
    finally
    {
      IL_0029:  ldloc.0
      IL_002a:  brfalse.s  IL_0032

      IL_002c:  ldloc.0
      IL_002d:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0032:  endfinally
    }  // end handler
    IL_0033:  ldloc.2
    IL_0034:  ret
  } // end of method Repository::Init

  .method public hidebysig static string 
          Init(string workingDirectoryPath,
               string gitDirectoryPath) cil managed
  {
    // Code size       76 (0x4c)
    .maxstack  3
    .locals init (string V_0,
             class LibGit2Sharp.Core.Handles.RepositorySafeHandle V_1,
             class LibGit2Sharp.Core.FilePath V_2,
             string V_3)
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "workingDirectoryPath"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.1
    IL_000c:  ldstr      "gitDirectoryPath"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0016:  ldarg.0
    IL_0017:  call       string [mscorlib]System.IO.Path::GetFullPath(string)
    IL_001c:  stloc.0
    IL_001d:  ldloc.0
    IL_001e:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0023:  ldarg.1
    IL_0024:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0029:  ldc.i4.0
    IL_002a:  call       class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Core.Proxy::git_repository_init_ext(class LibGit2Sharp.Core.FilePath,
                                                                                                                               class LibGit2Sharp.Core.FilePath,
                                                                                                                               bool)
    IL_002f:  stloc.1
    .try
    {
      IL_0030:  ldloc.1
      IL_0031:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.Proxy::git_repository_path(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_0036:  stloc.2
      IL_0037:  ldloc.2
      IL_0038:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
      IL_003d:  stloc.3
      IL_003e:  leave.s    IL_004a

    }  // end .try
    finally
    {
      IL_0040:  ldloc.1
      IL_0041:  brfalse.s  IL_0049

      IL_0043:  ldloc.1
      IL_0044:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0049:  endfinally
    }  // end handler
    IL_004a:  ldloc.3
    IL_004b:  ret
  } // end of method Repository::Init

  .method public hidebysig newslot virtual final 
          instance class LibGit2Sharp.GitObject 
          Lookup(class LibGit2Sharp.ObjectId id) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.s   -2
    IL_0004:  ldnull
    IL_0005:  call       instance class LibGit2Sharp.GitObject LibGit2Sharp.Repository::LookupInternal(class LibGit2Sharp.ObjectId,
                                                                                                       valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                                       class LibGit2Sharp.Core.FilePath)
    IL_000a:  ret
  } // end of method Repository::Lookup

  .method public hidebysig newslot virtual final 
          instance class LibGit2Sharp.GitObject 
          Lookup(string objectish) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.s   -2
    IL_0004:  ldc.i4.0
    IL_0005:  call       instance class LibGit2Sharp.GitObject LibGit2Sharp.Repository::Lookup(string,
                                                                                               valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                               valuetype LibGit2Sharp.Core.LookUpOptions)
    IL_000a:  ret
  } // end of method Repository::Lookup

  .method public hidebysig newslot virtual final 
          instance class LibGit2Sharp.GitObject 
          Lookup(class LibGit2Sharp.ObjectId id,
                 valuetype LibGit2Sharp.ObjectType 'type') cil managed
  {
    // Code size       15 (0xf)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       valuetype LibGit2Sharp.Core.GitObjectType LibGit2Sharp.ObjectTypeExtensions::ToGitObjectType(valuetype LibGit2Sharp.ObjectType)
    IL_0008:  ldnull
    IL_0009:  call       instance class LibGit2Sharp.GitObject LibGit2Sharp.Repository::LookupInternal(class LibGit2Sharp.ObjectId,
                                                                                                       valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                                       class LibGit2Sharp.Core.FilePath)
    IL_000e:  ret
  } // end of method Repository::Lookup

  .method public hidebysig newslot virtual final 
          instance class LibGit2Sharp.GitObject 
          Lookup(string objectish,
                 valuetype LibGit2Sharp.ObjectType 'type') cil managed
  {
    // Code size       15 (0xf)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       valuetype LibGit2Sharp.Core.GitObjectType LibGit2Sharp.ObjectTypeExtensions::ToGitObjectType(valuetype LibGit2Sharp.ObjectType)
    IL_0008:  ldc.i4.0
    IL_0009:  call       instance class LibGit2Sharp.GitObject LibGit2Sharp.Repository::Lookup(string,
                                                                                               valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                               valuetype LibGit2Sharp.Core.LookUpOptions)
    IL_000e:  ret
  } // end of method Repository::Lookup

  .method assembly hidebysig instance class LibGit2Sharp.GitObject 
          LookupInternal(class LibGit2Sharp.ObjectId id,
                         valuetype LibGit2Sharp.Core.GitObjectType 'type',
                         class LibGit2Sharp.Core.FilePath knownPath) cil managed
  {
    // Code size       60 (0x3c)
    .maxstack  4
    .locals init (class LibGit2Sharp.Core.Handles.GitObjectSafeHandle V_0,
             class LibGit2Sharp.GitObject V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "id"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldnull
    IL_000c:  stloc.0
    .try
    {
      IL_000d:  ldarg.0
      IL_000e:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::handle
      IL_0013:  ldarg.1
      IL_0014:  ldarg.2
      IL_0015:  call       class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.Proxy::git_object_lookup(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                          class LibGit2Sharp.ObjectId,
                                                                                                                          valuetype LibGit2Sharp.Core.GitObjectType)
      IL_001a:  stloc.0
      IL_001b:  ldloc.0
      IL_001c:  brtrue.s   IL_0022

      IL_001e:  ldnull
      IL_001f:  stloc.1
      IL_0020:  leave.s    IL_003a

      IL_0022:  ldarg.0
      IL_0023:  ldarg.1
      IL_0024:  ldloc.0
      IL_0025:  call       valuetype LibGit2Sharp.Core.GitObjectType LibGit2Sharp.Core.Proxy::git_object_type(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
      IL_002a:  ldarg.3
      IL_002b:  call       class LibGit2Sharp.GitObject LibGit2Sharp.GitObject::BuildFrom(class LibGit2Sharp.Repository,
                                                                                          class LibGit2Sharp.ObjectId,
                                                                                          valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                          class LibGit2Sharp.Core.FilePath)
      IL_0030:  stloc.1
      IL_0031:  leave.s    IL_003a

    }  // end .try
    finally
    {
      IL_0033:  ldloc.0
      IL_0034:  call       void LibGit2Sharp.Core.Handles.SafeHandleExtensions::SafeDispose(class LibGit2Sharp.Core.Handles.SafeHandleBase)
      IL_0039:  endfinally
    }  // end handler
    IL_003a:  ldloc.1
    IL_003b:  ret
  } // end of method Repository::LookupInternal

  .method private hidebysig static string 
          PathFromRevparseSpec(string spec) cil managed
  {
    // Code size       77 (0x4d)
    .maxstack  3
    .locals init (class [System]System.Text.RegularExpressions.Match V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldstr      ":/"
    IL_0006:  ldc.i4.4
    IL_0007:  callvirt   instance bool [mscorlib]System.String::StartsWith(string,
                                                                           valuetype [mscorlib]System.StringComparison)
    IL_000c:  brfalse.s  IL_0010

    IL_000e:  ldnull
    IL_000f:  ret

    IL_0010:  ldarg.0
    IL_0011:  ldstr      "^:.*:"
    IL_0016:  call       bool [System]System.Text.RegularExpressions.Regex::IsMatch(string,
                                                                                    string)
    IL_001b:  brfalse.s  IL_001f

    IL_001d:  ldnull
    IL_001e:  ret

    IL_001f:  ldarg.0
    IL_0020:  ldstr      "[^@^ ]*:(.*)"
    IL_0025:  call       class [System]System.Text.RegularExpressions.Match [System]System.Text.RegularExpressions.Regex::Match(string,
                                                                                                                                string)
    IL_002a:  stloc.0
    IL_002b:  ldloc.0
    IL_002c:  callvirt   instance class [System]System.Text.RegularExpressions.GroupCollection [System]System.Text.RegularExpressions.Match::get_Groups()
    IL_0031:  callvirt   instance int32 [System]System.Text.RegularExpressions.GroupCollection::get_Count()
    IL_0036:  ldc.i4.1
    IL_0037:  bgt.s      IL_003b

    IL_0039:  ldnull
    IL_003a:  ret

    IL_003b:  ldloc.0
    IL_003c:  callvirt   instance class [System]System.Text.RegularExpressions.GroupCollection [System]System.Text.RegularExpressions.Match::get_Groups()
    IL_0041:  ldc.i4.1
    IL_0042:  callvirt   instance class [System]System.Text.RegularExpressions.Group [System]System.Text.RegularExpressions.GroupCollection::get_Item(int32)
    IL_0047:  callvirt   instance string [System]System.Text.RegularExpressions.Capture::get_Value()
    IL_004c:  ret
  } // end of method Repository::PathFromRevparseSpec

  .method assembly hidebysig instance class LibGit2Sharp.GitObject 
          Lookup(string objectish,
                 valuetype LibGit2Sharp.Core.GitObjectType 'type',
                 valuetype LibGit2Sharp.Core.LookUpOptions lookUpOptions) cil managed
  {
    // Code size       146 (0x92)
    .maxstack  4
    .locals init (class LibGit2Sharp.GitObject V_0,
             class LibGit2Sharp.Core.Handles.GitObjectSafeHandle V_1,
             valuetype LibGit2Sharp.Core.GitObjectType V_2,
             class LibGit2Sharp.GitObject V_3)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "commitOrBranchSpec"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::handle
    IL_0011:  ldarg.1
    IL_0012:  call       class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.Proxy::git_revparse_single(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                          string)
    IL_0017:  stloc.1
    .try
    {
      IL_0018:  ldloc.1
      IL_0019:  brtrue.s   IL_0034

      IL_001b:  ldarg.3
      IL_001c:  box        LibGit2Sharp.Core.LookUpOptions
      IL_0021:  ldc.i4.1
      IL_0022:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.Core.LookUpOptions>(class [mscorlib]System.Enum,
                                                                                                                            !!0)
      IL_0027:  brfalse.s  IL_0030

      IL_0029:  ldnull
      IL_002a:  ldarg.1
      IL_002b:  call       void LibGit2Sharp.Core.Ensure::GitObjectIsNotNull(class LibGit2Sharp.GitObject,
                                                                             string)
      IL_0030:  ldnull
      IL_0031:  stloc.3
      IL_0032:  leave.s    IL_0090

      IL_0034:  ldloc.1
      IL_0035:  call       valuetype LibGit2Sharp.Core.GitObjectType LibGit2Sharp.Core.Proxy::git_object_type(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
      IL_003a:  stloc.2
      IL_003b:  ldarg.2
      IL_003c:  ldc.i4.s   -2
      IL_003e:  beq.s      IL_0048

      IL_0040:  ldloc.2
      IL_0041:  ldarg.2
      IL_0042:  beq.s      IL_0048

      IL_0044:  ldnull
      IL_0045:  stloc.3
      IL_0046:  leave.s    IL_0090

      IL_0048:  ldarg.0
      IL_0049:  ldloc.1
      IL_004a:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_object_id(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
      IL_004f:  ldloc.2
      IL_0050:  ldarg.1
      IL_0051:  call       string LibGit2Sharp.Repository::PathFromRevparseSpec(string)
      IL_0056:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
      IL_005b:  call       class LibGit2Sharp.GitObject LibGit2Sharp.GitObject::BuildFrom(class LibGit2Sharp.Repository,
                                                                                          class LibGit2Sharp.ObjectId,
                                                                                          valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                          class LibGit2Sharp.Core.FilePath)
      IL_0060:  stloc.0
      IL_0061:  leave.s    IL_006d

    }  // end .try
    finally
    {
      IL_0063:  ldloc.1
      IL_0064:  brfalse.s  IL_006c

      IL_0066:  ldloc.1
      IL_0067:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_006c:  endfinally
    }  // end handler
    IL_006d:  ldarg.3
    IL_006e:  box        LibGit2Sharp.Core.LookUpOptions
    IL_0073:  ldc.i4.2
    IL_0074:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.Core.LookUpOptions>(class [mscorlib]System.Enum,
                                                                                                                          !!0)
    IL_0079:  brfalse.s  IL_008e

    IL_007b:  ldloc.0
    IL_007c:  ldarg.3
    IL_007d:  box        LibGit2Sharp.Core.LookUpOptions
    IL_0082:  ldc.i4.4
    IL_0083:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.Core.LookUpOptions>(class [mscorlib]System.Enum,
                                                                                                                          !!0)
    IL_0088:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.GitObject::DereferenceToCommit(bool)
    IL_008d:  ret

    IL_008e:  ldloc.0
    IL_008f:  ret

    IL_0090:  ldloc.3
    IL_0091:  ret
  } // end of method Repository::Lookup

  .method assembly hidebysig instance class LibGit2Sharp.Commit 
          LookupCommit(string committish) cil managed
  {
    // Code size       16 (0x10)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.s   -2
    IL_0004:  ldc.i4.7
    IL_0005:  call       instance class LibGit2Sharp.GitObject LibGit2Sharp.Repository::Lookup(string,
                                                                                               valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                               valuetype LibGit2Sharp.Core.LookUpOptions)
    IL_000a:  castclass  LibGit2Sharp.Commit
    IL_000f:  ret
  } // end of method Repository::LookupCommit

  .method public hidebysig static string 
          Discover(string startingPath) cil managed
  {
    // Code size       24 (0x18)
    .maxstack  1
    .locals init (class LibGit2Sharp.Core.FilePath V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0006:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.Proxy::git_repository_discover(class LibGit2Sharp.Core.FilePath)
    IL_000b:  stloc.0
    IL_000c:  ldloc.0
    IL_000d:  brtrue.s   IL_0011

    IL_000f:  ldnull
    IL_0010:  ret

    IL_0011:  ldloc.0
    IL_0012:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
    IL_0017:  ret
  } // end of method Repository::Discover

  .method public hidebysig static class LibGit2Sharp.Repository 
          Clone(string sourceUrl,
                string workdirPath,
                bool bare,
                bool checkout,
                class LibGit2Sharp.Handlers.TransferProgressHandler onTransferProgress,
                class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress,
                class LibGit2Sharp.RepositoryOptions options,
                class LibGit2Sharp.Credentials credentials) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 80 A5 54 68 69 73 20 6D 65 74 68 6F 64 20   // ....This method 
                                                                                77 69 6C 6C 20 62 65 20 72 65 6D 6F 76 65 64 20   // will be removed 
                                                                                69 6E 20 74 68 65 20 6E 65 78 74 20 72 65 6C 65   // in the next rele
                                                                                61 73 65 2E 20 50 6C 65 61 73 65 20 75 73 65 20   // ase. Please use 
                                                                                43 6C 6F 6E 65 28 73 74 72 69 6E 67 2C 20 73 74   // Clone(string, st
                                                                                72 69 6E 67 2C 20 62 6F 6F 6C 2C 20 62 6F 6F 6C   // ring, bool, bool
                                                                                2C 20 54 72 61 6E 73 66 65 72 50 72 6F 67 72 65   // , TransferProgre
                                                                                73 73 48 61 6E 64 6C 65 72 2C 20 43 68 65 63 6B   // ssHandler, Check
                                                                                6F 75 74 50 72 6F 67 72 65 73 73 48 61 6E 64 6C   // outProgressHandl
                                                                                65 72 2C 20 43 72 65 64 65 6E 74 69 61 6C 73 29   // er, Credentials)
                                                                                20 69 6E 73 74 65 61 64 2E 00 00 )                //  instead...
    // Code size       25 (0x19)
    .maxstack  7
    .locals init (string V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  ldarg.s    onTransferProgress
    IL_0006:  ldarg.s    onCheckoutProgress
    IL_0008:  ldarg.s    credentials
    IL_000a:  call       string LibGit2Sharp.Repository::Clone(string,
                                                               string,
                                                               bool,
                                                               bool,
                                                               class LibGit2Sharp.Handlers.TransferProgressHandler,
                                                               class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                               class LibGit2Sharp.Credentials)
    IL_000f:  stloc.0
    IL_0010:  ldloc.0
    IL_0011:  ldarg.s    options
    IL_0013:  newobj     instance void LibGit2Sharp.Repository::.ctor(string,
                                                                      class LibGit2Sharp.RepositoryOptions)
    IL_0018:  ret
  } // end of method Repository::Clone

  .method public hidebysig static string 
          Clone(string sourceUrl,
                string workdirPath,
                [opt] bool bare,
                [opt] bool checkout,
                [opt] class LibGit2Sharp.Handlers.TransferProgressHandler onTransferProgress,
                [opt] class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress,
                [opt] class LibGit2Sharp.Credentials credentials) cil managed
  {
    .param [3] = bool(false)
    .param [4] = bool(true)
    .param [5] = nullref
    .param [6] = nullref
    .param [7] = nullref
    // Code size       198 (0xc6)
    .maxstack  4
    .locals init (class LibGit2Sharp.CheckoutCallbacks V_0,
             class LibGit2Sharp.Core.GitCloneOptions V_1,
             class LibGit2Sharp.Core.FilePath V_2,
             class LibGit2Sharp.Core.Handles.RepositorySafeHandle V_3,
             class LibGit2Sharp.Core.GitCloneOptions V_4,
             class LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb V_5,
             class LibGit2Sharp.Repository/'<>c__DisplayClass14' V_6)
    IL_0000:  ldnull
    IL_0001:  stloc.s    V_5
    IL_0003:  newobj     instance void LibGit2Sharp.Repository/'<>c__DisplayClass14'::.ctor()
    IL_0008:  stloc.s    V_6
    IL_000a:  ldloc.s    V_6
    IL_000c:  ldarg.s    credentials
    IL_000e:  stfld      class LibGit2Sharp.Credentials LibGit2Sharp.Repository/'<>c__DisplayClass14'::credentials
    IL_0013:  ldarg.s    onCheckoutProgress
    IL_0015:  ldnull
    IL_0016:  call       class LibGit2Sharp.CheckoutCallbacks LibGit2Sharp.CheckoutCallbacks::GenerateCheckoutCallbacks(class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                                                                        class LibGit2Sharp.Handlers.CheckoutNotifyHandler)
    IL_001b:  stloc.0
    IL_001c:  newobj     instance void LibGit2Sharp.Core.GitCloneOptions::.ctor()
    IL_0021:  stloc.s    V_4
    IL_0023:  ldloc.s    V_4
    IL_0025:  ldarg.2
    IL_0026:  brtrue.s   IL_002b

    IL_0028:  ldc.i4.0
    IL_0029:  br.s       IL_002c

    IL_002b:  ldc.i4.1
    IL_002c:  stfld      int32 LibGit2Sharp.Core.GitCloneOptions::Bare
    IL_0031:  ldloc.s    V_4
    IL_0033:  ldarg.s    onTransferProgress
    IL_0035:  call       class LibGit2Sharp.Core.NativeMethods/git_transfer_progress_callback LibGit2Sharp.TransferCallbacks::GenerateCallback(class LibGit2Sharp.Handlers.TransferProgressHandler)
    IL_003a:  stfld      class LibGit2Sharp.Core.NativeMethods/git_transfer_progress_callback LibGit2Sharp.Core.GitCloneOptions::TransferProgressCallback
    IL_003f:  ldloc.s    V_4
    IL_0041:  ldflda     valuetype LibGit2Sharp.Core.GitCheckoutOpts LibGit2Sharp.Core.GitCloneOptions::CheckoutOpts
    IL_0046:  ldc.i4.1
    IL_0047:  stfld      uint32 LibGit2Sharp.Core.GitCheckoutOpts::version
    IL_004c:  ldloc.s    V_4
    IL_004e:  ldflda     valuetype LibGit2Sharp.Core.GitCheckoutOpts LibGit2Sharp.Core.GitCloneOptions::CheckoutOpts
    IL_0053:  ldloc.0
    IL_0054:  callvirt   instance class LibGit2Sharp.Core.progress_cb LibGit2Sharp.CheckoutCallbacks::get_CheckoutProgressCallback()
    IL_0059:  stfld      class LibGit2Sharp.Core.progress_cb LibGit2Sharp.Core.GitCheckoutOpts::progress_cb
    IL_005e:  ldloc.s    V_4
    IL_0060:  ldflda     valuetype LibGit2Sharp.Core.GitCheckoutOpts LibGit2Sharp.Core.GitCloneOptions::CheckoutOpts
    IL_0065:  ldarg.3
    IL_0066:  brtrue.s   IL_006b

    IL_0068:  ldc.i4.0
    IL_0069:  br.s       IL_006c

    IL_006b:  ldc.i4.2
    IL_006c:  stfld      valuetype LibGit2Sharp.Core.CheckoutStrategy LibGit2Sharp.Core.GitCheckoutOpts::checkout_strategy
    IL_0071:  ldloc.s    V_4
    IL_0073:  stloc.1
    IL_0074:  ldloc.s    V_6
    IL_0076:  ldfld      class LibGit2Sharp.Credentials LibGit2Sharp.Repository/'<>c__DisplayClass14'::credentials
    IL_007b:  brfalse.s  IL_0098

    IL_007d:  ldloc.1
    IL_007e:  ldloc.s    V_5
    IL_0080:  brtrue.s   IL_0091

    IL_0082:  ldloc.s    V_6
    IL_0084:  ldftn      instance int32 LibGit2Sharp.Repository/'<>c__DisplayClass14'::'<Clone>b__12'(native int&,
                                                                                                      native int,
                                                                                                      native int,
                                                                                                      uint32,
                                                                                                      native int)
    IL_008a:  newobj     instance void LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb::.ctor(object,
                                                                                                  native int)
    IL_008f:  stloc.s    V_5
    IL_0091:  ldloc.s    V_5
    IL_0093:  stfld      class LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb LibGit2Sharp.Core.GitCloneOptions::CredAcquireCallback
    IL_0098:  ldarg.0
    IL_0099:  ldarg.1
    IL_009a:  ldloc.1
    IL_009b:  call       class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Core.Proxy::git_clone(string,
                                                                                                                 string,
                                                                                                                 class LibGit2Sharp.Core.GitCloneOptions)
    IL_00a0:  stloc.3
    .try
    {
      IL_00a1:  ldloc.3
      IL_00a2:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.Proxy::git_repository_path(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
      IL_00a7:  stloc.2
      IL_00a8:  leave.s    IL_00b4

    }  // end .try
    finally
    {
      IL_00aa:  ldloc.3
      IL_00ab:  brfalse.s  IL_00b3

      IL_00ad:  ldloc.3
      IL_00ae:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_00b3:  endfinally
    }  // end handler
    IL_00b4:  ldloc.1
    IL_00b5:  ldfld      class LibGit2Sharp.Core.NativeMethods/git_cred_acquire_cb LibGit2Sharp.Core.GitCloneOptions::CredAcquireCallback
    IL_00ba:  call       void [mscorlib]System.GC::KeepAlive(object)
    IL_00bf:  ldloc.2
    IL_00c0:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
    IL_00c5:  ret
  } // end of method Repository::Clone

  .method public hidebysig newslot virtual final 
          instance class LibGit2Sharp.Branch 
          Checkout(string committishOrBranchSpec,
                   valuetype LibGit2Sharp.CheckoutOptions checkoutOptions,
                   class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 80 9E 54 68 69 73 20 6D 65 74 68 6F 64 20   // ....This method 
                                                                                77 69 6C 6C 20 62 65 20 72 65 6D 6F 76 65 64 20   // will be removed 
                                                                                69 6E 20 74 68 65 20 6E 65 78 74 20 72 65 6C 65   // in the next rele
                                                                                61 73 65 2E 20 50 6C 65 61 73 65 20 75 73 65 20   // ase. Please use 
                                                                                43 68 65 63 6B 6F 75 74 28 73 74 72 69 6E 67 2C   // Checkout(string,
                                                                                20 43 68 65 63 6B 6F 75 74 4D 6F 64 69 66 69 65   //  CheckoutModifie
                                                                                72 73 2C 20 43 68 65 63 6B 6F 75 74 50 72 6F 67   // rs, CheckoutProg
                                                                                72 65 73 73 48 61 6E 64 6C 65 72 2C 20 43 68 65   // ressHandler, Che
                                                                                63 6B 6F 75 74 4E 6F 74 69 66 69 63 61 74 69 6F   // ckoutNotificatio
                                                                                6E 4F 70 74 69 6F 6E 73 29 20 69 6E 73 74 65 61   // nOptions) instea
                                                                                64 2E 00 00 )                                     // d...
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  ldnull
    IL_0005:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::Checkout(string,
                                                                                              valuetype LibGit2Sharp.CheckoutModifiers,
                                                                                              class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                                              class LibGit2Sharp.CheckoutNotificationOptions)
    IL_000a:  ret
  } // end of method Repository::Checkout

  .method public hidebysig newslot virtual final 
          instance class LibGit2Sharp.Branch 
          Checkout(string committishOrBranchSpec,
                   valuetype LibGit2Sharp.CheckoutModifiers checkoutModifiers,
                   class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress,
                   class LibGit2Sharp.CheckoutNotificationOptions checkoutNotifications) cil managed
  {
    // Code size       215 (0xd7)
    .maxstack  9
    .locals init (class LibGit2Sharp.Core.Compat.Tuple`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle> V_0,
             class LibGit2Sharp.Core.Handles.GitObjectSafeHandle V_1,
             class LibGit2Sharp.Core.Handles.ReferenceSafeHandle V_2,
             class LibGit2Sharp.GitObject V_3,
             class LibGit2Sharp.Reference V_4,
             class LibGit2Sharp.Branch V_5,
             class LibGit2Sharp.Commit V_6,
             class LibGit2Sharp.Branch V_7)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "committishOrBranchSpec"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  call       instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0011:  ldarg.1
    IL_0012:  call       class LibGit2Sharp.Core.Compat.Tuple`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle> LibGit2Sharp.Core.Proxy::git_revparse_ext(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                                                                                                   string)
    IL_0017:  stloc.0
    IL_0018:  ldloc.0
    IL_0019:  brtrue.s   IL_0022

    IL_001b:  ldnull
    IL_001c:  ldarg.1
    IL_001d:  call       void LibGit2Sharp.Core.Ensure::GitObjectIsNotNull(class LibGit2Sharp.GitObject,
                                                                           string)
    IL_0022:  ldloc.0
    IL_0023:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle>::get_Item1()
    IL_0028:  stloc.1
    IL_0029:  ldloc.0
    IL_002a:  callvirt   instance !1 class LibGit2Sharp.Core.Compat.Tuple`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Core.Handles.ReferenceSafeHandle>::get_Item2()
    IL_002f:  stloc.2
    .try
    {
      IL_0030:  ldloc.2
      IL_0031:  callvirt   instance bool [mscorlib]System.Runtime.InteropServices.SafeHandle::get_IsInvalid()
      IL_0036:  brtrue.s   IL_006e

      IL_0038:  ldloc.2
      IL_0039:  ldarg.0
      IL_003a:  call       !!0 LibGit2Sharp.Reference::BuildFromPtr<class LibGit2Sharp.Reference>(class LibGit2Sharp.Core.Handles.ReferenceSafeHandle,
                                                                                                  class LibGit2Sharp.Repository)
      IL_003f:  stloc.s    V_4
      IL_0041:  ldloc.s    V_4
      IL_0043:  call       bool LibGit2Sharp.ReferenceExtensions::IsLocalBranch(class LibGit2Sharp.Reference)
      IL_0048:  brfalse.s  IL_006e

      IL_004a:  ldarg.0
      IL_004b:  call       instance class LibGit2Sharp.BranchCollection LibGit2Sharp.Repository::get_Branches()
      IL_0050:  ldloc.s    V_4
      IL_0052:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
      IL_0057:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::get_Item(string)
      IL_005c:  stloc.s    V_5
      IL_005e:  ldarg.0
      IL_005f:  ldloc.s    V_5
      IL_0061:  ldarg.2
      IL_0062:  ldarg.3
      IL_0063:  ldarg.s    checkoutNotifications
      IL_0065:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::Checkout(class LibGit2Sharp.Branch,
                                                                                                valuetype LibGit2Sharp.CheckoutModifiers,
                                                                                                class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                                                class LibGit2Sharp.CheckoutNotificationOptions)
      IL_006a:  stloc.s    V_7
      IL_006c:  leave.s    IL_00d4

      IL_006e:  ldarg.0
      IL_006f:  ldloc.1
      IL_0070:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_object_id(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
      IL_0075:  ldloc.1
      IL_0076:  call       valuetype LibGit2Sharp.Core.GitObjectType LibGit2Sharp.Core.Proxy::git_object_type(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
      IL_007b:  ldarg.1
      IL_007c:  call       string LibGit2Sharp.Repository::PathFromRevparseSpec(string)
      IL_0081:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
      IL_0086:  call       class LibGit2Sharp.GitObject LibGit2Sharp.GitObject::BuildFrom(class LibGit2Sharp.Repository,
                                                                                          class LibGit2Sharp.ObjectId,
                                                                                          valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                          class LibGit2Sharp.Core.FilePath)
      IL_008b:  stloc.3
      IL_008c:  leave.s    IL_009b

    }  // end .try
    finally
    {
      IL_008e:  ldloc.1
      IL_008f:  callvirt   instance void [mscorlib]System.Runtime.InteropServices.SafeHandle::Dispose()
      IL_0094:  ldloc.2
      IL_0095:  callvirt   instance void [mscorlib]System.Runtime.InteropServices.SafeHandle::Dispose()
      IL_009a:  endfinally
    }  // end handler
    IL_009b:  ldloc.3
    IL_009c:  ldc.i4.1
    IL_009d:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.GitObject::DereferenceToCommit(bool)
    IL_00a2:  stloc.s    V_6
    IL_00a4:  ldarg.0
    IL_00a5:  ldloc.s    V_6
    IL_00a7:  callvirt   instance class LibGit2Sharp.Tree LibGit2Sharp.Commit::get_Tree()
    IL_00ac:  ldarg.2
    IL_00ad:  ldarg.3
    IL_00ae:  ldarg.s    checkoutNotifications
    IL_00b0:  ldloc.s    V_6
    IL_00b2:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_00b7:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
    IL_00bc:  ldarg.1
    IL_00bd:  ldarg.1
    IL_00be:  ldstr      "HEAD"
    IL_00c3:  call       bool [mscorlib]System.String::op_Inequality(string,
                                                                     string)
    IL_00c8:  call       instance void LibGit2Sharp.Repository::Checkout(class LibGit2Sharp.Tree,
                                                                         valuetype LibGit2Sharp.CheckoutModifiers,
                                                                         class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                         class LibGit2Sharp.CheckoutNotificationOptions,
                                                                         string,
                                                                         string,
                                                                         bool)
    IL_00cd:  ldarg.0
    IL_00ce:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::get_Head()
    IL_00d3:  ret

    IL_00d4:  ldloc.s    V_7
    IL_00d6:  ret
  } // end of method Repository::Checkout

  .method public hidebysig newslot virtual final 
          instance class LibGit2Sharp.Branch 
          Checkout(class LibGit2Sharp.Branch branch,
                   valuetype LibGit2Sharp.CheckoutOptions checkoutOptions,
                   class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 80 9E 54 68 69 73 20 6D 65 74 68 6F 64 20   // ....This method 
                                                                                77 69 6C 6C 20 62 65 20 72 65 6D 6F 76 65 64 20   // will be removed 
                                                                                69 6E 20 74 68 65 20 6E 65 78 74 20 72 65 6C 65   // in the next rele
                                                                                61 73 65 2E 20 50 6C 65 61 73 65 20 75 73 65 20   // ase. Please use 
                                                                                43 68 65 63 6B 6F 75 74 28 42 72 61 6E 63 68 2C   // Checkout(Branch,
                                                                                20 43 68 65 63 6B 6F 75 74 4D 6F 64 69 66 69 65   //  CheckoutModifie
                                                                                72 73 2C 20 43 68 65 63 6B 6F 75 74 50 72 6F 67   // rs, CheckoutProg
                                                                                72 65 73 73 48 61 6E 64 6C 65 72 2C 20 43 68 65   // ressHandler, Che
                                                                                63 6B 6F 75 74 4E 6F 74 69 66 69 63 61 74 69 6F   // ckoutNotificatio
                                                                                6E 4F 70 74 69 6F 6E 73 29 20 69 6E 73 74 65 61   // nOptions) instea
                                                                                64 2E 00 00 )                                     // d...
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  ldnull
    IL_0005:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::Checkout(class LibGit2Sharp.Branch,
                                                                                              valuetype LibGit2Sharp.CheckoutModifiers,
                                                                                              class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                                              class LibGit2Sharp.CheckoutNotificationOptions)
    IL_000a:  ret
  } // end of method Repository::Checkout

  .method public hidebysig newslot virtual final 
          instance class LibGit2Sharp.Branch 
          Checkout(class LibGit2Sharp.Branch branch,
                   valuetype LibGit2Sharp.CheckoutModifiers checkoutModifiers,
                   class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress,
                   class LibGit2Sharp.CheckoutNotificationOptions checkoutNotificationOptions) cil managed
  {
    // Code size       225 (0xe1)
    .maxstack  9
    .locals init (bool V_0,
             object[] V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "branch"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.1
    IL_000c:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_0011:  ldnull
    IL_0012:  call       bool LibGit2Sharp.GitObject::op_Equality(class LibGit2Sharp.GitObject,
                                                                  class LibGit2Sharp.GitObject)
    IL_0017:  brfalse.s  IL_003f

    IL_0019:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_001e:  ldstr      "The tip of branch '{0}' is null. There's nothing t"
    + "o checkout."
    IL_0023:  ldc.i4.1
    IL_0024:  newarr     [mscorlib]System.Object
    IL_0029:  stloc.1
    IL_002a:  ldloc.1
    IL_002b:  ldc.i4.0
    IL_002c:  ldarg.1
    IL_002d:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_Name()
    IL_0032:  stelem.ref
    IL_0033:  ldloc.1
    IL_0034:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0039:  newobj     instance void LibGit2Sharp.OrphanedHeadException::.ctor(string)
    IL_003e:  throw

    IL_003f:  ldarg.1
    IL_0040:  callvirt   instance bool LibGit2Sharp.Branch::get_IsCurrentRepositoryHead()
    IL_0045:  stloc.0
    IL_0046:  ldarg.1
    IL_0047:  callvirt   instance bool LibGit2Sharp.Branch::get_IsRemote()
    IL_004c:  brtrue.s   IL_00ab

    IL_004e:  ldarg.1
    IL_004f:  isinst     LibGit2Sharp.DetachedHead
    IL_0054:  brtrue.s   IL_00ab

    IL_0056:  ldarg.0
    IL_0057:  call       instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_005c:  ldarg.1
    IL_005d:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_0062:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::get_Item(string)
    IL_0067:  callvirt   instance string LibGit2Sharp.Reference::get_TargetIdentifier()
    IL_006c:  ldarg.1
    IL_006d:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_0072:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0077:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
    IL_007c:  ldc.i4.5
    IL_007d:  call       bool [mscorlib]System.String::Equals(string,
                                                              string,
                                                              valuetype [mscorlib]System.StringComparison)
    IL_0082:  brfalse.s  IL_00ab

    IL_0084:  ldarg.0
    IL_0085:  ldarg.1
    IL_0086:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_008b:  callvirt   instance class LibGit2Sharp.Tree LibGit2Sharp.Commit::get_Tree()
    IL_0090:  ldarg.2
    IL_0091:  ldarg.3
    IL_0092:  ldarg.s    checkoutNotificationOptions
    IL_0094:  ldarg.1
    IL_0095:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_009a:  ldarg.1
    IL_009b:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_Name()
    IL_00a0:  ldloc.0
    IL_00a1:  ldc.i4.0
    IL_00a2:  ceq
    IL_00a4:  call       instance void LibGit2Sharp.Repository::Checkout(class LibGit2Sharp.Tree,
                                                                         valuetype LibGit2Sharp.CheckoutModifiers,
                                                                         class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                         class LibGit2Sharp.CheckoutNotificationOptions,
                                                                         string,
                                                                         string,
                                                                         bool)
    IL_00a9:  br.s       IL_00da

    IL_00ab:  ldarg.0
    IL_00ac:  ldarg.1
    IL_00ad:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_00b2:  callvirt   instance class LibGit2Sharp.Tree LibGit2Sharp.Commit::get_Tree()
    IL_00b7:  ldarg.2
    IL_00b8:  ldarg.3
    IL_00b9:  ldarg.s    checkoutNotificationOptions
    IL_00bb:  ldarg.1
    IL_00bc:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_00c1:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_00c6:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
    IL_00cb:  ldarg.1
    IL_00cc:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_Name()
    IL_00d1:  ldloc.0
    IL_00d2:  ldc.i4.0
    IL_00d3:  ceq
    IL_00d5:  call       instance void LibGit2Sharp.Repository::Checkout(class LibGit2Sharp.Tree,
                                                                         valuetype LibGit2Sharp.CheckoutModifiers,
                                                                         class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                         class LibGit2Sharp.CheckoutNotificationOptions,
                                                                         string,
                                                                         string,
                                                                         bool)
    IL_00da:  ldarg.0
    IL_00db:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::get_Head()
    IL_00e0:  ret
  } // end of method Repository::Checkout

  .method public hidebysig newslot virtual final 
          instance class LibGit2Sharp.Branch 
          Checkout(class LibGit2Sharp.Commit commit,
                   valuetype LibGit2Sharp.CheckoutOptions checkoutOptions,
                   class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = ( 01 00 80 9E 54 68 69 73 20 6D 65 74 68 6F 64 20   // ....This method 
                                                                                77 69 6C 6C 20 62 65 20 72 65 6D 6F 76 65 64 20   // will be removed 
                                                                                69 6E 20 74 68 65 20 6E 65 78 74 20 72 65 6C 65   // in the next rele
                                                                                61 73 65 2E 20 50 6C 65 61 73 65 20 75 73 65 20   // ase. Please use 
                                                                                43 68 65 63 6B 6F 75 74 28 43 6F 6D 6D 69 74 2C   // Checkout(Commit,
                                                                                20 43 68 65 63 6B 6F 75 74 4D 6F 64 69 66 69 65   //  CheckoutModifie
                                                                                72 73 2C 20 43 68 65 63 6B 6F 75 74 50 72 6F 67   // rs, CheckoutProg
                                                                                72 65 73 73 48 61 6E 64 6C 65 72 2C 20 43 68 65   // ressHandler, Che
                                                                                63 6B 6F 75 74 4E 6F 74 69 66 69 63 61 74 69 6F   // ckoutNotificatio
                                                                                6E 4F 70 74 69 6F 6E 73 29 20 69 6E 73 74 65 61   // nOptions) instea
                                                                                64 2E 00 00 )                                     // d...
    // Code size       45 (0x2d)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance class LibGit2Sharp.Tree LibGit2Sharp.Commit::get_Tree()
    IL_0007:  ldarg.2
    IL_0008:  ldarg.3
    IL_0009:  ldnull
    IL_000a:  ldarg.1
    IL_000b:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0010:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
    IL_0015:  ldarg.1
    IL_0016:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_001b:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
    IL_0020:  ldc.i4.1
    IL_0021:  call       instance void LibGit2Sharp.Repository::Checkout(class LibGit2Sharp.Tree,
                                                                         valuetype LibGit2Sharp.CheckoutModifiers,
                                                                         class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                         class LibGit2Sharp.CheckoutNotificationOptions,
                                                                         string,
                                                                         string,
                                                                         bool)
    IL_0026:  ldarg.0
    IL_0027:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::get_Head()
    IL_002c:  ret
  } // end of method Repository::Checkout

  .method public hidebysig newslot virtual final 
          instance class LibGit2Sharp.Branch 
          Checkout(class LibGit2Sharp.Commit commit,
                   valuetype LibGit2Sharp.CheckoutModifiers checkoutModifiers,
                   class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress,
                   class LibGit2Sharp.CheckoutNotificationOptions checkoutNotificationOptions) cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance class LibGit2Sharp.Tree LibGit2Sharp.Commit::get_Tree()
    IL_0007:  ldarg.2
    IL_0008:  ldarg.3
    IL_0009:  ldarg.s    checkoutNotificationOptions
    IL_000b:  ldarg.1
    IL_000c:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0011:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
    IL_0016:  ldarg.1
    IL_0017:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_001c:  callvirt   instance string LibGit2Sharp.ObjectId::get_Sha()
    IL_0021:  ldc.i4.1
    IL_0022:  call       instance void LibGit2Sharp.Repository::Checkout(class LibGit2Sharp.Tree,
                                                                         valuetype LibGit2Sharp.CheckoutModifiers,
                                                                         class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                         class LibGit2Sharp.CheckoutNotificationOptions,
                                                                         string,
                                                                         string,
                                                                         bool)
    IL_0027:  ldarg.0
    IL_0028:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::get_Head()
    IL_002d:  ret
  } // end of method Repository::Checkout

  .method private hidebysig instance void 
          LogCheckout(string previousHeadName,
                      class LibGit2Sharp.ObjectId newHeadTip,
                      string newHeadSpec) cil managed
  {
    // Code size       43 (0x2b)
    .maxstack  3
    .locals init (string V_0)
    IL_0000:  ldstr      "checkout: moving from {0} to {1}"
    IL_0005:  ldarg.1
    IL_0006:  ldarg.3
    IL_0007:  call       string [mscorlib]System.String::Format(string,
                                                                object,
                                                                object)
    IL_000c:  stloc.0
    IL_000d:  ldarg.0
    IL_000e:  call       instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_0013:  ldarg.0
    IL_0014:  call       instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_0019:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::get_Head()
    IL_001e:  callvirt   instance class LibGit2Sharp.ReflogCollection LibGit2Sharp.ReferenceCollection::Log(class LibGit2Sharp.Reference)
    IL_0023:  ldarg.2
    IL_0024:  ldloc.0
    IL_0025:  callvirt   instance void LibGit2Sharp.ReflogCollection::Append(class LibGit2Sharp.ObjectId,
                                                                             string)
    IL_002a:  ret
  } // end of method Repository::LogCheckout

  .method private hidebysig instance void 
          Checkout(class LibGit2Sharp.Tree tree,
                   valuetype LibGit2Sharp.CheckoutModifiers checkoutModifiers,
                   class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress,
                   class LibGit2Sharp.CheckoutNotificationOptions checkoutNotificationOptions,
                   string headTarget,
                   string refLogHeadSpec,
                   bool writeReflogEntry) cil managed
  {
    // Code size       105 (0x69)
    .maxstack  6
    .locals init (string V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_0006:  callvirt   instance bool LibGit2Sharp.RepositoryInformation::get_IsHeadDetached()
    IL_000b:  brtrue.s   IL_001a

    IL_000d:  ldarg.0
    IL_000e:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::get_Head()
    IL_0013:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_Name()
    IL_0018:  br.s       IL_002a

    IL_001a:  ldarg.0
    IL_001b:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::get_Head()
    IL_0020:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_0025:  callvirt   instance string LibGit2Sharp.GitObject::get_Sha()
    IL_002a:  stloc.0
    IL_002b:  ldarg.0
    IL_002c:  ldarg.1
    IL_002d:  ldnull
    IL_002e:  ldarg.2
    IL_002f:  ldarg.3
    IL_0030:  ldarg.s    checkoutNotificationOptions
    IL_0032:  call       instance void LibGit2Sharp.Repository::CheckoutTree(class LibGit2Sharp.Tree,
                                                                             class [mscorlib]System.Collections.Generic.IList`1<string>,
                                                                             valuetype LibGit2Sharp.CheckoutModifiers,
                                                                             class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                             class LibGit2Sharp.CheckoutNotificationOptions)
    IL_0037:  ldarg.0
    IL_0038:  call       instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_003d:  ldstr      "HEAD"
    IL_0042:  ldarg.s    headTarget
    IL_0044:  ldnull
    IL_0045:  call       class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollectionExtensions::UpdateTarget(class LibGit2Sharp.ReferenceCollection,
                                                                                                               string,
                                                                                                               string,
                                                                                                               string)
    IL_004a:  pop
    IL_004b:  ldarg.s    writeReflogEntry
    IL_004d:  brfalse.s  IL_0068

    IL_004f:  ldarg.0
    IL_0050:  ldloc.0
    IL_0051:  ldarg.0
    IL_0052:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::get_Head()
    IL_0057:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_005c:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0061:  ldarg.s    refLogHeadSpec
    IL_0063:  call       instance void LibGit2Sharp.Repository::LogCheckout(string,
                                                                            class LibGit2Sharp.ObjectId,
                                                                            string)
    IL_0068:  ret
  } // end of method Repository::Checkout

  .method private hidebysig instance void 
          CheckoutTree(class LibGit2Sharp.Tree tree,
                       class [mscorlib]System.Collections.Generic.IList`1<string> paths,
                       valuetype LibGit2Sharp.CheckoutModifiers checkoutModifiers,
                       class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress,
                       class LibGit2Sharp.CheckoutNotificationOptions checkoutNotificationOptions) cil managed
  {
    // Code size       189 (0xbd)
    .maxstack  3
    .locals init (class LibGit2Sharp.Handlers.CheckoutNotifyHandler V_0,
             valuetype LibGit2Sharp.CheckoutNotifyFlags V_1,
             class LibGit2Sharp.CheckoutCallbacks V_2,
             class LibGit2Sharp.Core.GitStrArrayIn V_3,
             valuetype LibGit2Sharp.Core.GitCheckoutOpts V_4,
             valuetype LibGit2Sharp.Core.GitCheckoutOpts V_5)
    IL_0000:  ldarg.s    checkoutNotificationOptions
    IL_0002:  brtrue.s   IL_0007

    IL_0004:  ldnull
    IL_0005:  br.s       IL_000e

    IL_0007:  ldarg.s    checkoutNotificationOptions
    IL_0009:  callvirt   instance class LibGit2Sharp.Handlers.CheckoutNotifyHandler LibGit2Sharp.CheckoutNotificationOptions::get_CheckoutNotifyHandler()
    IL_000e:  stloc.0
    IL_000f:  ldarg.s    checkoutNotificationOptions
    IL_0011:  brtrue.s   IL_0016

    IL_0013:  ldc.i4.0
    IL_0014:  br.s       IL_001d

    IL_0016:  ldarg.s    checkoutNotificationOptions
    IL_0018:  callvirt   instance valuetype LibGit2Sharp.CheckoutNotifyFlags LibGit2Sharp.CheckoutNotificationOptions::get_NotifyFlags()
    IL_001d:  stloc.1
    IL_001e:  ldarg.s    onCheckoutProgress
    IL_0020:  ldloc.0
    IL_0021:  call       class LibGit2Sharp.CheckoutCallbacks LibGit2Sharp.CheckoutCallbacks::GenerateCheckoutCallbacks(class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                                                                        class LibGit2Sharp.Handlers.CheckoutNotifyHandler)
    IL_0026:  stloc.2
    IL_0027:  ldarg.2
    IL_0028:  brfalse.s  IL_0033

    IL_002a:  ldarg.2
    IL_002b:  callvirt   instance int32 class [mscorlib]System.Collections.Generic.ICollection`1<string>::get_Count()
    IL_0030:  ldc.i4.0
    IL_0031:  bgt.s      IL_0036

    IL_0033:  ldnull
    IL_0034:  br.s       IL_0042

    IL_0036:  ldarg.0
    IL_0037:  ldarg.2
    IL_0038:  call       instance class LibGit2Sharp.Core.FilePath[] LibGit2Sharp.Repository::ToFilePaths(class [mscorlib]System.Collections.Generic.IEnumerable`1<string>)
    IL_003d:  call       class LibGit2Sharp.Core.GitStrArrayIn LibGit2Sharp.Core.GitStrArrayIn::BuildFrom(class LibGit2Sharp.Core.FilePath[])
    IL_0042:  stloc.3
    IL_0043:  ldloca.s   V_5
    IL_0045:  initobj    LibGit2Sharp.Core.GitCheckoutOpts
    IL_004b:  ldloca.s   V_5
    IL_004d:  ldc.i4.1
    IL_004e:  stfld      uint32 LibGit2Sharp.Core.GitCheckoutOpts::version
    IL_0053:  ldloca.s   V_5
    IL_0055:  ldc.i4.1
    IL_0056:  stfld      valuetype LibGit2Sharp.Core.CheckoutStrategy LibGit2Sharp.Core.GitCheckoutOpts::checkout_strategy
    IL_005b:  ldloca.s   V_5
    IL_005d:  ldloc.2
    IL_005e:  callvirt   instance class LibGit2Sharp.Core.progress_cb LibGit2Sharp.CheckoutCallbacks::get_CheckoutProgressCallback()
    IL_0063:  stfld      class LibGit2Sharp.Core.progress_cb LibGit2Sharp.Core.GitCheckoutOpts::progress_cb
    IL_0068:  ldloca.s   V_5
    IL_006a:  ldloc.2
    IL_006b:  callvirt   instance class LibGit2Sharp.Core.checkout_notify_cb LibGit2Sharp.CheckoutCallbacks::get_CheckoutNotifyCallback()
    IL_0070:  stfld      class LibGit2Sharp.Core.checkout_notify_cb LibGit2Sharp.Core.GitCheckoutOpts::notify_cb
    IL_0075:  ldloca.s   V_5
    IL_0077:  ldloc.1
    IL_0078:  stfld      valuetype LibGit2Sharp.CheckoutNotifyFlags LibGit2Sharp.Core.GitCheckoutOpts::notify_flags
    IL_007d:  ldloca.s   V_5
    IL_007f:  ldloc.3
    IL_0080:  stfld      class LibGit2Sharp.Core.GitStrArrayIn LibGit2Sharp.Core.GitCheckoutOpts::paths
    IL_0085:  ldloc.s    V_5
    IL_0087:  stloc.s    V_4
    .try
    {
      IL_0089:  ldarg.3
      IL_008a:  box        LibGit2Sharp.CheckoutModifiers
      IL_008f:  ldc.i4.1
      IL_0090:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.CheckoutModifiers>(class [mscorlib]System.Enum,
                                                                                                                           !!0)
      IL_0095:  brfalse.s  IL_009f

      IL_0097:  ldloca.s   V_4
      IL_0099:  ldc.i4.4
      IL_009a:  stfld      valuetype LibGit2Sharp.Core.CheckoutStrategy LibGit2Sharp.Core.GitCheckoutOpts::checkout_strategy
      IL_009f:  ldarg.0
      IL_00a0:  call       instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
      IL_00a5:  ldarg.1
      IL_00a6:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
      IL_00ab:  ldloca.s   V_4
      IL_00ad:  call       void LibGit2Sharp.Core.Proxy::git_checkout_tree(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                           class LibGit2Sharp.ObjectId,
                                                                           valuetype LibGit2Sharp.Core.GitCheckoutOpts&)
      IL_00b2:  leave.s    IL_00bc

    }  // end .try
    finally
    {
      IL_00b4:  ldloca.s   V_4
      IL_00b6:  call       instance void LibGit2Sharp.Core.GitCheckoutOpts::Dispose()
      IL_00bb:  endfinally
    }  // end handler
    IL_00bc:  ret
  } // end of method Repository::CheckoutTree

  .method public hidebysig newslot virtual final 
          instance void  Reset(valuetype LibGit2Sharp.ResetOptions resetOptions,
                               class LibGit2Sharp.Commit commit) cil managed
  {
    // Code size       79 (0x4f)
    .maxstack  4
    IL_0000:  ldarg.2
    IL_0001:  ldstr      "commit"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::handle
    IL_0011:  ldarg.2
    IL_0012:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0017:  ldarg.1
    IL_0018:  call       void LibGit2Sharp.Core.Proxy::git_reset(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                 class LibGit2Sharp.ObjectId,
                                                                 valuetype LibGit2Sharp.ResetOptions)
    IL_001d:  ldarg.0
    IL_001e:  call       instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_0023:  ldarg.0
    IL_0024:  call       instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_0029:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::get_Head()
    IL_002e:  callvirt   instance class LibGit2Sharp.ReflogCollection LibGit2Sharp.ReferenceCollection::Log(class LibGit2Sharp.Reference)
    IL_0033:  ldarg.2
    IL_0034:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0039:  ldstr      "reset: moving to {0}"
    IL_003e:  ldarg.2
    IL_003f:  callvirt   instance string LibGit2Sharp.GitObject::get_Sha()
    IL_0044:  call       string [mscorlib]System.String::Format(string,
                                                                object)
    IL_0049:  callvirt   instance void LibGit2Sharp.ReflogCollection::Append(class LibGit2Sharp.ObjectId,
                                                                             string)
    IL_004e:  ret
  } // end of method Repository::Reset

  .method public hidebysig newslot virtual final 
          instance void  CheckoutPaths(string committishOrBranchSpec,
                                       class [mscorlib]System.Collections.Generic.IList`1<string> paths,
                                       valuetype LibGit2Sharp.CheckoutModifiers checkoutOptions,
                                       class LibGit2Sharp.Handlers.CheckoutProgressHandler onCheckoutProgress,
                                       class LibGit2Sharp.CheckoutNotificationOptions checkoutNotificationOptions) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  6
    .locals init (class LibGit2Sharp.Commit V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "committishOrBranchSpec"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldarg.1
    IL_000d:  call       instance class LibGit2Sharp.Commit LibGit2Sharp.Repository::LookupCommit(string)
    IL_0012:  stloc.0
    IL_0013:  ldarg.0
    IL_0014:  ldloc.0
    IL_0015:  callvirt   instance class LibGit2Sharp.Tree LibGit2Sharp.Commit::get_Tree()
    IL_001a:  ldarg.2
    IL_001b:  ldarg.3
    IL_001c:  ldarg.s    onCheckoutProgress
    IL_001e:  ldarg.s    checkoutNotificationOptions
    IL_0020:  call       instance void LibGit2Sharp.Repository::CheckoutTree(class LibGit2Sharp.Tree,
                                                                             class [mscorlib]System.Collections.Generic.IList`1<string>,
                                                                             valuetype LibGit2Sharp.CheckoutModifiers,
                                                                             class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                             class LibGit2Sharp.CheckoutNotificationOptions)
    IL_0025:  ret
  } // end of method Repository::CheckoutPaths

  .method public hidebysig newslot virtual final 
          instance void  Reset(class LibGit2Sharp.Commit commit,
                               [opt] class [mscorlib]System.Collections.Generic.IEnumerable`1<string> paths,
                               [opt] class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions) cil managed
  {
    .param [2] = nullref
    .param [3] = nullref
    // Code size       70 (0x46)
    .maxstack  6
    .locals init (class LibGit2Sharp.TreeChanges V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_0006:  callvirt   instance bool LibGit2Sharp.RepositoryInformation::get_IsBare()
    IL_000b:  brfalse.s  IL_0018

    IL_000d:  ldstr      "Reset is not allowed in a bare repository"
    IL_0012:  newobj     instance void LibGit2Sharp.BareRepositoryException::.ctor(string)
    IL_0017:  throw

    IL_0018:  ldarg.1
    IL_0019:  ldstr      "commit"
    IL_001e:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0023:  ldarg.0
    IL_0024:  call       instance class LibGit2Sharp.Diff LibGit2Sharp.Repository::get_Diff()
    IL_0029:  ldarg.1
    IL_002a:  callvirt   instance class LibGit2Sharp.Tree LibGit2Sharp.Commit::get_Tree()
    IL_002f:  ldc.i4.1
    IL_0030:  ldarg.2
    IL_0031:  ldarg.3
    IL_0032:  ldnull
    IL_0033:  callvirt   instance class LibGit2Sharp.TreeChanges LibGit2Sharp.Diff::Compare(class LibGit2Sharp.Tree,
                                                                                            valuetype LibGit2Sharp.DiffTargets,
                                                                                            class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                                            class LibGit2Sharp.ExplicitPathsOptions,
                                                                                            class LibGit2Sharp.CompareOptions)
    IL_0038:  stloc.0
    IL_0039:  ldarg.0
    IL_003a:  call       instance class LibGit2Sharp.Index LibGit2Sharp.Repository::get_Index()
    IL_003f:  ldloc.0
    IL_0040:  callvirt   instance void LibGit2Sharp.Index::Reset(class LibGit2Sharp.TreeChanges)
    IL_0045:  ret
  } // end of method Repository::Reset

  .method public hidebysig newslot virtual final 
          instance class LibGit2Sharp.Commit 
          Commit(string message,
                 class LibGit2Sharp.Signature author,
                 class LibGit2Sharp.Signature committer,
                 [opt] bool amendPreviousCommit) cil managed
  {
    .param [4] = bool(false)
    // Code size       116 (0x74)
    .maxstack  7
    .locals init (bool V_0,
             class LibGit2Sharp.ObjectId V_1,
             class LibGit2Sharp.Tree V_2,
             class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> V_3,
             class LibGit2Sharp.Commit V_4)
    IL_0000:  ldarg.0
    IL_0001:  call       instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_0006:  callvirt   instance bool LibGit2Sharp.RepositoryInformation::get_IsHeadOrphaned()
    IL_000b:  stloc.0
    IL_000c:  ldarg.s    amendPreviousCommit
    IL_000e:  brfalse.s  IL_001e

    IL_0010:  ldloc.0
    IL_0011:  brfalse.s  IL_001e

    IL_0013:  ldstr      "Can not amend anything. The Head doesn't point at "
    + "any commit."
    IL_0018:  newobj     instance void LibGit2Sharp.OrphanedHeadException::.ctor(string)
    IL_001d:  throw

    IL_001e:  ldarg.0
    IL_001f:  call       instance class LibGit2Sharp.Index LibGit2Sharp.Repository::get_Index()
    IL_0024:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_tree_create_fromindex(class LibGit2Sharp.Index)
    IL_0029:  stloc.1
    IL_002a:  ldarg.0
    IL_002b:  ldloc.1
    IL_002c:  call       !!0 LibGit2Sharp.RepositoryExtensions::Lookup<class LibGit2Sharp.Tree>(class LibGit2Sharp.IRepository,
                                                                                                class LibGit2Sharp.ObjectId)
    IL_0031:  stloc.2
    IL_0032:  ldarg.0
    IL_0033:  ldarg.s    amendPreviousCommit
    IL_0035:  call       instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> LibGit2Sharp.Repository::RetrieveParentsOfTheCommitBeingCreated(bool)
    IL_003a:  stloc.3
    IL_003b:  ldarg.0
    IL_003c:  call       instance class LibGit2Sharp.ObjectDatabase LibGit2Sharp.Repository::get_ObjectDatabase()
    IL_0041:  ldarg.1
    IL_0042:  ldarg.2
    IL_0043:  ldarg.3
    IL_0044:  ldloc.2
    IL_0045:  ldloc.3
    IL_0046:  ldstr      "HEAD"
    IL_004b:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.ObjectDatabase::CreateCommit(string,
                                                                                                      class LibGit2Sharp.Signature,
                                                                                                      class LibGit2Sharp.Signature,
                                                                                                      class LibGit2Sharp.Tree,
                                                                                                      class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit>,
                                                                                                      string)
    IL_0050:  stloc.s    V_4
    IL_0052:  ldarg.0
    IL_0053:  ldfld      class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::handle
    IL_0058:  call       void LibGit2Sharp.Core.Proxy::git_repository_merge_cleanup(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_005d:  ldarg.0
    IL_005e:  ldloc.s    V_4
    IL_0060:  ldarg.s    amendPreviousCommit
    IL_0062:  ldloc.0
    IL_0063:  ldloc.3
    IL_0064:  call       int32 [System.Core]System.Linq.Enumerable::Count<class LibGit2Sharp.Commit>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0069:  ldc.i4.1
    IL_006a:  cgt
    IL_006c:  call       instance void LibGit2Sharp.Repository::LogCommit(class LibGit2Sharp.Commit,
                                                                          bool,
                                                                          bool,
                                                                          bool)
    IL_0071:  ldloc.s    V_4
    IL_0073:  ret
  } // end of method Repository::Commit

  .method private hidebysig instance void 
          LogCommit(class LibGit2Sharp.Commit commit,
                    bool amendPreviousCommit,
                    bool isHeadOrphaned,
                    bool isMergeCommit) cil managed
  {
    // Code size       160 (0xa0)
    .maxstack  4
    .locals init (string V_0,
             class LibGit2Sharp.Reference V_1)
    IL_0000:  ldstr      "commit"
    IL_0005:  stloc.0
    IL_0006:  ldarg.3
    IL_0007:  brfalse.s  IL_0017

    IL_0009:  ldloc.0
    IL_000a:  ldstr      " (initial)"
    IL_000f:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0014:  stloc.0
    IL_0015:  br.s       IL_0038

    IL_0017:  ldarg.2
    IL_0018:  brfalse.s  IL_0028

    IL_001a:  ldloc.0
    IL_001b:  ldstr      " (amend)"
    IL_0020:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0025:  stloc.0
    IL_0026:  br.s       IL_0038

    IL_0028:  ldarg.s    isMergeCommit
    IL_002a:  brfalse.s  IL_0038

    IL_002c:  ldloc.0
    IL_002d:  ldstr      " (merge)"
    IL_0032:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0037:  stloc.0
    IL_0038:  ldstr      "{0}: {1}"
    IL_003d:  ldloc.0
    IL_003e:  ldarg.1
    IL_003f:  callvirt   instance string LibGit2Sharp.Commit::get_MessageShort()
    IL_0044:  call       string [mscorlib]System.String::Format(string,
                                                                object,
                                                                object)
    IL_0049:  stloc.0
    IL_004a:  ldarg.0
    IL_004b:  call       instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_0050:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.ReferenceCollection::get_Head()
    IL_0055:  stloc.1
    IL_0056:  ldloc.1
    IL_0057:  isinst     LibGit2Sharp.SymbolicReference
    IL_005c:  brfalse.s  IL_0081

    IL_005e:  ldarg.0
    IL_005f:  call       instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_0064:  ldloc.1
    IL_0065:  callvirt   instance class LibGit2Sharp.DirectReference LibGit2Sharp.Reference::ResolveToDirectReference()
    IL_006a:  callvirt   instance class LibGit2Sharp.ReflogCollection LibGit2Sharp.ReferenceCollection::Log(class LibGit2Sharp.Reference)
    IL_006f:  ldarg.1
    IL_0070:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0075:  ldloc.0
    IL_0076:  ldarg.1
    IL_0077:  callvirt   instance class LibGit2Sharp.Signature LibGit2Sharp.Commit::get_Committer()
    IL_007c:  callvirt   instance void LibGit2Sharp.ReflogCollection::Append(class LibGit2Sharp.ObjectId,
                                                                             string,
                                                                             class LibGit2Sharp.Signature)
    IL_0081:  ldarg.0
    IL_0082:  call       instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_0087:  ldloc.1
    IL_0088:  callvirt   instance class LibGit2Sharp.ReflogCollection LibGit2Sharp.ReferenceCollection::Log(class LibGit2Sharp.Reference)
    IL_008d:  ldarg.1
    IL_008e:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0093:  ldloc.0
    IL_0094:  ldarg.1
    IL_0095:  callvirt   instance class LibGit2Sharp.Signature LibGit2Sharp.Commit::get_Committer()
    IL_009a:  callvirt   instance void LibGit2Sharp.ReflogCollection::Append(class LibGit2Sharp.ObjectId,
                                                                             string,
                                                                             class LibGit2Sharp.Signature)
    IL_009f:  ret
  } // end of method Repository::LogCommit

  .method private hidebysig instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> 
          RetrieveParentsOfTheCommitBeingCreated(bool amendPreviousCommit) cil managed
  {
    // Code size       126 (0x7e)
    .maxstack  5
    .locals init (class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Commit> V_0,
             class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Commit> V_1)
    IL_0000:  ldarg.1
    IL_0001:  brfalse.s  IL_0014

    IL_0003:  ldarg.0
    IL_0004:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::get_Head()
    IL_0009:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_000e:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Commit> LibGit2Sharp.Commit::get_Parents()
    IL_0013:  ret

    IL_0014:  ldarg.0
    IL_0015:  call       instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_001a:  callvirt   instance bool LibGit2Sharp.RepositoryInformation::get_IsHeadOrphaned()
    IL_001f:  brfalse.s  IL_0027

    IL_0021:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> [System.Core]System.Linq.Enumerable::Empty<class LibGit2Sharp.Commit>()
    IL_0026:  ret

    IL_0027:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Commit>::.ctor()
    IL_002c:  stloc.1
    IL_002d:  ldloc.1
    IL_002e:  ldarg.0
    IL_002f:  call       instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::get_Head()
    IL_0034:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_0039:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Commit>::Add(!0)
    IL_003e:  ldloc.1
    IL_003f:  stloc.0
    IL_0040:  ldarg.0
    IL_0041:  call       instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_0046:  callvirt   instance valuetype LibGit2Sharp.CurrentOperation LibGit2Sharp.RepositoryInformation::get_CurrentOperation()
    IL_004b:  ldc.i4.1
    IL_004c:  bne.un.s   IL_007c

    IL_004e:  ldloc.0
    IL_004f:  ldarg.0
    IL_0050:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.MergeHead> LibGit2Sharp.Repository::get_MergeHeads()
    IL_0055:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.MergeHead,class LibGit2Sharp.Commit> LibGit2Sharp.Repository::'CS$<>9__CachedAnonymousMethodDelegate19'
    IL_005a:  brtrue.s   IL_006d

    IL_005c:  ldnull
    IL_005d:  ldftn      class LibGit2Sharp.Commit LibGit2Sharp.Repository::'<RetrieveParentsOfTheCommitBeingCreated>b__18'(class LibGit2Sharp.MergeHead)
    IL_0063:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.MergeHead,class LibGit2Sharp.Commit>::.ctor(object,
                                                                                                                                       native int)
    IL_0068:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.MergeHead,class LibGit2Sharp.Commit> LibGit2Sharp.Repository::'CS$<>9__CachedAnonymousMethodDelegate19'
    IL_006d:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.MergeHead,class LibGit2Sharp.Commit> LibGit2Sharp.Repository::'CS$<>9__CachedAnonymousMethodDelegate19'
    IL_0072:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!1> [System.Core]System.Linq.Enumerable::Select<class LibGit2Sharp.MergeHead,class LibGit2Sharp.Commit>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                                           class [System.Core]System.Func`2<!!0,!!1>)
    IL_0077:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Commit>::AddRange(class [mscorlib]System.Collections.Generic.IEnumerable`1<!0>)
    IL_007c:  ldloc.0
    IL_007d:  ret
  } // end of method Repository::RetrieveParentsOfTheCommitBeingCreated

  .method public hidebysig newslot virtual 
          instance void  RemoveUntrackedFiles() cil managed
  {
    // Code size       56 (0x38)
    .maxstack  3
    .locals init (valuetype LibGit2Sharp.Core.GitCheckoutOpts V_0,
             valuetype LibGit2Sharp.Core.GitCheckoutOpts V_1)
    IL_0000:  ldloca.s   V_1
    IL_0002:  initobj    LibGit2Sharp.Core.GitCheckoutOpts
    IL_0008:  ldloca.s   V_1
    IL_000a:  ldc.i4.1
    IL_000b:  stfld      uint32 LibGit2Sharp.Core.GitCheckoutOpts::version
    IL_0010:  ldloca.s   V_1
    IL_0012:  ldc.i4.s   48
    IL_0014:  stfld      valuetype LibGit2Sharp.Core.CheckoutStrategy LibGit2Sharp.Core.GitCheckoutOpts::checkout_strategy
    IL_0019:  ldloc.1
    IL_001a:  stloc.0
    .try
    {
      IL_001b:  ldarg.0
      IL_001c:  call       instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
      IL_0021:  newobj     instance void LibGit2Sharp.Core.Handles.NullGitObjectSafeHandle::.ctor()
      IL_0026:  ldloca.s   V_0
      IL_0028:  call       void LibGit2Sharp.Core.Proxy::git_checkout_index(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                            class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                            valuetype LibGit2Sharp.Core.GitCheckoutOpts&)
      IL_002d:  leave.s    IL_0037

    }  // end .try
    finally
    {
      IL_002f:  ldloca.s   V_0
      IL_0031:  call       instance void LibGit2Sharp.Core.GitCheckoutOpts::Dispose()
      IL_0036:  endfinally
    }  // end handler
    IL_0037:  ret
  } // end of method Repository::RemoveUntrackedFiles

  .method private hidebysig instance void 
          CleanupDisposableDependencies() cil managed
  {
    // Code size       33 (0x21)
    .maxstack  8
    IL_0000:  br.s       IL_0012

    IL_0002:  ldarg.0
    IL_0003:  ldfld      class [System]System.Collections.Generic.Stack`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Repository::toCleanup
    IL_0008:  callvirt   instance !0 class [System]System.Collections.Generic.Stack`1<class [mscorlib]System.IDisposable>::Pop()
    IL_000d:  call       void LibGit2Sharp.Core.Handles.SafeHandleExtensions::SafeDispose(class [mscorlib]System.IDisposable)
    IL_0012:  ldarg.0
    IL_0013:  ldfld      class [System]System.Collections.Generic.Stack`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Repository::toCleanup
    IL_0018:  callvirt   instance int32 class [System]System.Collections.Generic.Stack`1<class [mscorlib]System.IDisposable>::get_Count()
    IL_001d:  ldc.i4.0
    IL_001e:  bgt.s      IL_0002

    IL_0020:  ret
  } // end of method Repository::CleanupDisposableDependencies

  .method assembly hidebysig instance !!T 
          RegisterForCleanup<([mscorlib]System.IDisposable) T>(!!T disposable) cil managed
  {
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [System]System.Collections.Generic.Stack`1<class [mscorlib]System.IDisposable> LibGit2Sharp.Repository::toCleanup
    IL_0006:  ldarg.1
    IL_0007:  box        !!T
    IL_000c:  callvirt   instance void class [System]System.Collections.Generic.Stack`1<class [mscorlib]System.IDisposable>::Push(!0)
    IL_0011:  ldarg.1
    IL_0012:  ret
  } // end of method Repository::RegisterForCleanup

  .method public hidebysig specialname static 
          string  get_Version() cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.Compat.Lazy`1<string> LibGit2Sharp.Repository::versionRetriever
    IL_0005:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<string>::get_Value()
    IL_000a:  ret
  } // end of method Repository::get_Version

  .method private hidebysig static string 
          RetrieveVersion() cil managed
  {
    // Code size       122 (0x7a)
    .maxstack  7
    .locals init (class [mscorlib]System.Reflection.Assembly V_0,
             class [mscorlib]System.Version V_1,
             string V_2,
             string V_3,
             object[] V_4)
    IL_0000:  ldtoken    LibGit2Sharp.Repository
    IL_0005:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_000a:  callvirt   instance class [mscorlib]System.Reflection.Assembly [mscorlib]System.Type::get_Assembly()
    IL_000f:  stloc.0
    IL_0010:  ldloc.0
    IL_0011:  callvirt   instance class [mscorlib]System.Reflection.AssemblyName [mscorlib]System.Reflection.Assembly::GetName()
    IL_0016:  callvirt   instance class [mscorlib]System.Version [mscorlib]System.Reflection.AssemblyName::get_Version()
    IL_001b:  stloc.1
    IL_001c:  ldloc.0
    IL_001d:  ldstr      "libgit2_hash.txt"
    IL_0022:  call       string LibGit2Sharp.Repository::ReadContentFromResource(class [mscorlib]System.Reflection.Assembly,
                                                                                 string)
    IL_0027:  stloc.2
    IL_0028:  ldloc.0
    IL_0029:  ldstr      "libgit2sharp_hash.txt"
    IL_002e:  call       string LibGit2Sharp.Repository::ReadContentFromResource(class [mscorlib]System.Reflection.Assembly,
                                                                                 string)
    IL_0033:  stloc.3
    IL_0034:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0039:  ldstr      "{0}-{1}-{2} ({3})"
    IL_003e:  ldc.i4.4
    IL_003f:  newarr     [mscorlib]System.Object
    IL_0044:  stloc.s    V_4
    IL_0046:  ldloc.s    V_4
    IL_0048:  ldc.i4.0
    IL_0049:  ldloc.1
    IL_004a:  ldc.i4.3
    IL_004b:  callvirt   instance string [mscorlib]System.Version::ToString(int32)
    IL_0050:  stelem.ref
    IL_0051:  ldloc.s    V_4
    IL_0053:  ldc.i4.1
    IL_0054:  ldloc.3
    IL_0055:  ldc.i4.0
    IL_0056:  ldc.i4.7
    IL_0057:  callvirt   instance string [mscorlib]System.String::Substring(int32,
                                                                            int32)
    IL_005c:  stelem.ref
    IL_005d:  ldloc.s    V_4
    IL_005f:  ldc.i4.2
    IL_0060:  ldloc.2
    IL_0061:  ldc.i4.0
    IL_0062:  ldc.i4.7
    IL_0063:  callvirt   instance string [mscorlib]System.String::Substring(int32,
                                                                            int32)
    IL_0068:  stelem.ref
    IL_0069:  ldloc.s    V_4
    IL_006b:  ldc.i4.3
    IL_006c:  call       string LibGit2Sharp.Core.NativeMethods::get_ProcessorArchitecture()
    IL_0071:  stelem.ref
    IL_0072:  ldloc.s    V_4
    IL_0074:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0079:  ret
  } // end of method Repository::RetrieveVersion

  .method private hidebysig static string 
          ReadContentFromResource(class [mscorlib]System.Reflection.Assembly 'assembly',
                                  string partialResourceName) cil managed
  {
    // Code size       62 (0x3e)
    .maxstack  5
    .locals init (string V_0,
             class [mscorlib]System.IO.StreamReader V_1,
             string V_2,
             object[] V_3)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "LibGit2Sharp.{0}"
    IL_000a:  ldc.i4.1
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.3
    IL_0011:  ldloc.3
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.1
    IL_0014:  stelem.ref
    IL_0015:  ldloc.3
    IL_0016:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_001b:  stloc.0
    IL_001c:  ldarg.0
    IL_001d:  ldloc.0
    IL_001e:  callvirt   instance class [mscorlib]System.IO.Stream [mscorlib]System.Reflection.Assembly::GetManifestResourceStream(string)
    IL_0023:  newobj     instance void [mscorlib]System.IO.StreamReader::.ctor(class [mscorlib]System.IO.Stream)
    IL_0028:  stloc.1
    .try
    {
      IL_0029:  ldloc.1
      IL_002a:  callvirt   instance string [mscorlib]System.IO.TextReader::ReadLine()
      IL_002f:  stloc.2
      IL_0030:  leave.s    IL_003c

    }  // end .try
    finally
    {
      IL_0032:  ldloc.1
      IL_0033:  brfalse.s  IL_003b

      IL_0035:  ldloc.1
      IL_0036:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_003b:  endfinally
    }  // end handler
    IL_003c:  ldloc.2
    IL_003d:  ret
  } // end of method Repository::ReadContentFromResource

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.MergeHead> 
          get_MergeHeads() cil managed
  {
    // Code size       44 (0x2c)
    .maxstack  4
    .locals init (class LibGit2Sharp.Repository/'<>c__DisplayClass1c' V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.Repository/'<>c__DisplayClass1c'::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.Repository/'<>c__DisplayClass1c'::'<>4__this'
    IL_000d:  ldloc.0
    IL_000e:  ldc.i4.0
    IL_000f:  stfld      int32 LibGit2Sharp.Repository/'<>c__DisplayClass1c'::i
    IL_0014:  ldarg.0
    IL_0015:  call       instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_001a:  ldloc.0
    IL_001b:  ldftn      instance class LibGit2Sharp.MergeHead LibGit2Sharp.Repository/'<>c__DisplayClass1c'::'<get_MergeHeads>b__1b'(valuetype LibGit2Sharp.Core.GitOid)
    IL_0021:  newobj     instance void class [System.Core]System.Func`2<valuetype LibGit2Sharp.Core.GitOid,class LibGit2Sharp.MergeHead>::.ctor(object,
                                                                                                                                                native int)
    IL_0026:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!0> LibGit2Sharp.Core.Proxy::git_repository_mergehead_foreach<class LibGit2Sharp.MergeHead>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                                                               class [System.Core]System.Func`2<valuetype LibGit2Sharp.Core.GitOid,!!0>)
    IL_002b:  ret
  } // end of method Repository::get_MergeHeads

  .method assembly hidebysig specialname 
          instance class [mscorlib]System.StringComparer 
          get_PathComparer() cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Core.PathCase> LibGit2Sharp.Repository::pathCase
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Core.PathCase>::get_Value()
    IL_000b:  callvirt   instance class [mscorlib]System.StringComparer LibGit2Sharp.Core.PathCase::get_Comparer()
    IL_0010:  ret
  } // end of method Repository::get_PathComparer

  .method assembly hidebysig instance bool 
          PathStartsWith(string path,
                         string 'value') cil managed
  {
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Core.PathCase> LibGit2Sharp.Repository::pathCase
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.Core.PathCase>::get_Value()
    IL_000b:  ldarg.1
    IL_000c:  ldarg.2
    IL_000d:  callvirt   instance bool LibGit2Sharp.Core.PathCase::StartsWith(string,
                                                                              string)
    IL_0012:  ret
  } // end of method Repository::PathStartsWith

  .method assembly hidebysig instance class LibGit2Sharp.Core.FilePath[] 
          ToFilePaths(class [mscorlib]System.Collections.Generic.IEnumerable`1<string> paths) cil managed
  {
    // Code size       120 (0x78)
    .maxstack  3
    .locals init (class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath> V_0,
             string V_1,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<string> V_2)
    IL_0000:  ldarg.1
    IL_0001:  brtrue.s   IL_0005

    IL_0003:  ldnull
    IL_0004:  ret

    IL_0005:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath>::.ctor()
    IL_000a:  stloc.0
    IL_000b:  ldarg.1
    IL_000c:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<string>::GetEnumerator()
    IL_0011:  stloc.2
    .try
    {
      IL_0012:  br.s       IL_0045

      IL_0014:  ldloc.2
      IL_0015:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<string>::get_Current()
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
      IL_0021:  brfalse.s  IL_0033

      IL_0023:  ldstr      "At least one provided path is either null or empty."
      IL_0028:  ldstr      "paths"
      IL_002d:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string,
                                                                                   string)
      IL_0032:  throw

      IL_0033:  ldloc.0
      IL_0034:  ldarg.0
      IL_0035:  ldloc.1
      IL_0036:  call       string LibGit2Sharp.RepositoryExtensions::BuildRelativePathFrom(class LibGit2Sharp.Repository,
                                                                                           string)
      IL_003b:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
      IL_0040:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath>::Add(!0)
      IL_0045:  ldloc.2
      IL_0046:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_004b:  brtrue.s   IL_0014

      IL_004d:  leave.s    IL_0059

    }  // end .try
    finally
    {
      IL_004f:  ldloc.2
      IL_0050:  brfalse.s  IL_0058

      IL_0052:  ldloc.2
      IL_0053:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0058:  endfinally
    }  // end handler
    IL_0059:  ldloc.0
    IL_005a:  callvirt   instance int32 class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath>::get_Count()
    IL_005f:  brtrue.s   IL_0071

    IL_0061:  ldstr      "No path has been provided."
    IL_0066:  ldstr      "paths"
    IL_006b:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string,
                                                                                 string)
    IL_0070:  throw

    IL_0071:  ldloc.0
    IL_0072:  callvirt   instance !0[] class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.FilePath>::ToArray()
    IL_0077:  ret
  } // end of method Repository::ToFilePaths

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       92 (0x5c)
    .maxstack  6
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "{0} = \"{1}\""
    IL_000a:  ldc.i4.2
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  call       instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_0019:  callvirt   instance bool LibGit2Sharp.RepositoryInformation::get_IsBare()
    IL_001e:  brtrue.s   IL_0027

    IL_0020:  ldstr      "Workdir"
    IL_0025:  br.s       IL_002c

    IL_0027:  ldstr      "Gitdir"
    IL_002c:  stelem.ref
    IL_002d:  ldloc.0
    IL_002e:  ldc.i4.1
    IL_002f:  ldarg.0
    IL_0030:  call       instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_0035:  callvirt   instance bool LibGit2Sharp.RepositoryInformation::get_IsBare()
    IL_003a:  brtrue.s   IL_0049

    IL_003c:  ldarg.0
    IL_003d:  call       instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_0042:  callvirt   instance string LibGit2Sharp.RepositoryInformation::get_WorkingDirectory()
    IL_0047:  br.s       IL_0054

    IL_0049:  ldarg.0
    IL_004a:  call       instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_004f:  callvirt   instance string LibGit2Sharp.RepositoryInformation::get_Path()
    IL_0054:  stelem.ref
    IL_0055:  ldloc.0
    IL_0056:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_005b:  ret
  } // end of method Repository::get_DebuggerDisplay

  .method private hidebysig instance class LibGit2Sharp.Index 
          '<.ctor>b__0'() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void LibGit2Sharp.Index::.ctor(class LibGit2Sharp.Repository)
    IL_0006:  ret
  } // end of method Repository::'<.ctor>b__0'

  .method private hidebysig instance class LibGit2Sharp.RepositoryInformation 
          '<.ctor>b__2'() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool LibGit2Sharp.Repository::isBare
    IL_0007:  newobj     instance void LibGit2Sharp.RepositoryInformation::.ctor(class LibGit2Sharp.Repository,
                                                                                 bool)
    IL_000c:  ret
  } // end of method Repository::'<.ctor>b__2'

  .method private hidebysig instance class LibGit2Sharp.ObjectDatabase 
          '<.ctor>b__4'() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void LibGit2Sharp.ObjectDatabase::.ctor(class LibGit2Sharp.Repository)
    IL_0006:  ret
  } // end of method Repository::'<.ctor>b__4'

  .method private hidebysig instance class LibGit2Sharp.Network 
          '<.ctor>b__5'() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void LibGit2Sharp.Network::.ctor(class LibGit2Sharp.Repository)
    IL_0006:  ret
  } // end of method Repository::'<.ctor>b__5'

  .method private hidebysig instance class LibGit2Sharp.Core.PathCase 
          '<.ctor>b__6'() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void LibGit2Sharp.Core.PathCase::.ctor(class LibGit2Sharp.IRepository)
    IL_0006:  ret
  } // end of method Repository::'<.ctor>b__6'

  .method private hidebysig static class LibGit2Sharp.Commit 
          '<RetrieveParentsOfTheCommitBeingCreated>b__18'(class LibGit2Sharp.MergeHead mh) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.MergeHead::get_Tip()
    IL_0006:  ret
  } // end of method Repository::'<RetrieveParentsOfTheCommitBeingCreated>b__18'

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       23 (0x17)
    .maxstack  8
    IL_0000:  ldnull
    IL_0001:  ldftn      string LibGit2Sharp.Repository::RetrieveVersion()
    IL_0007:  newobj     instance void class [System.Core]System.Func`1<string>::.ctor(object,
                                                                                       native int)
    IL_000c:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<string>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_0011:  stsfld     class LibGit2Sharp.Core.Compat.Lazy`1<string> LibGit2Sharp.Repository::versionRetriever
    IL_0016:  ret
  } // end of method Repository::.cctor

  .property instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle
          Handle()
  {
    .get instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
  } // end of property Repository::Handle
  .property instance class LibGit2Sharp.Branch
          Head()
  {
    .get instance class LibGit2Sharp.Branch LibGit2Sharp.Repository::get_Head()
  } // end of property Repository::Head
  .property instance class LibGit2Sharp.Configuration
          Config()
  {
    .get instance class LibGit2Sharp.Configuration LibGit2Sharp.Repository::get_Config()
  } // end of property Repository::Config
  .property instance class LibGit2Sharp.Index
          Index()
  {
    .get instance class LibGit2Sharp.Index LibGit2Sharp.Repository::get_Index()
  } // end of property Repository::Index
  .property instance class LibGit2Sharp.Ignore
          Ignore()
  {
    .get instance class LibGit2Sharp.Ignore LibGit2Sharp.Repository::get_Ignore()
  } // end of property Repository::Ignore
  .property instance class LibGit2Sharp.Network
          Network()
  {
    .get instance class LibGit2Sharp.Network LibGit2Sharp.Repository::get_Network()
  } // end of property Repository::Network
  .property instance class LibGit2Sharp.ObjectDatabase
          ObjectDatabase()
  {
    .get instance class LibGit2Sharp.ObjectDatabase LibGit2Sharp.Repository::get_ObjectDatabase()
  } // end of property Repository::ObjectDatabase
  .property instance class LibGit2Sharp.ReferenceCollection
          Refs()
  {
    .get instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
  } // end of property Repository::Refs
  .property instance class LibGit2Sharp.IQueryableCommitLog
          Commits()
  {
    .get instance class LibGit2Sharp.IQueryableCommitLog LibGit2Sharp.Repository::get_Commits()
  } // end of property Repository::Commits
  .property instance class LibGit2Sharp.BranchCollection
          Branches()
  {
    .get instance class LibGit2Sharp.BranchCollection LibGit2Sharp.Repository::get_Branches()
  } // end of property Repository::Branches
  .property instance class LibGit2Sharp.TagCollection
          Tags()
  {
    .get instance class LibGit2Sharp.TagCollection LibGit2Sharp.Repository::get_Tags()
  } // end of property Repository::Tags
  .property instance class LibGit2Sharp.StashCollection
          Stashes()
  {
    .get instance class LibGit2Sharp.StashCollection LibGit2Sharp.Repository::get_Stashes()
  } // end of property Repository::Stashes
  .property instance class LibGit2Sharp.RepositoryInformation
          Info()
  {
    .get instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
  } // end of property Repository::Info
  .property instance class LibGit2Sharp.Diff
          Diff()
  {
    .get instance class LibGit2Sharp.Diff LibGit2Sharp.Repository::get_Diff()
  } // end of property Repository::Diff
  .property instance class LibGit2Sharp.NoteCollection
          Notes()
  {
    .get instance class LibGit2Sharp.NoteCollection LibGit2Sharp.Repository::get_Notes()
  } // end of property Repository::Notes
  .property instance class LibGit2Sharp.SubmoduleCollection
          Submodules()
  {
    .get instance class LibGit2Sharp.SubmoduleCollection LibGit2Sharp.Repository::get_Submodules()
  } // end of property Repository::Submodules
  .property string Version()
  {
    .get string LibGit2Sharp.Repository::get_Version()
  } // end of property Repository::Version
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.MergeHead>
          MergeHeads()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.MergeHead> LibGit2Sharp.Repository::get_MergeHeads()
  } // end of property Repository::MergeHeads
  .property instance class [mscorlib]System.StringComparer
          PathComparer()
  {
    .get instance class [mscorlib]System.StringComparer LibGit2Sharp.Repository::get_PathComparer()
  } // end of property Repository::PathComparer
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.Repository::get_DebuggerDisplay()
  } // end of property Repository::DebuggerDisplay
} // end of class LibGit2Sharp.Repository

.class public auto ansi beforefieldinit LibGit2Sharp.RepositoryInformation
       extends [mscorlib]System.Object
{
  .field private initonly class LibGit2Sharp.Repository repo
  .field private string '<Path>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private string '<WorkingDirectory>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private bool '<IsBare>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private bool '<IsShallow>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method RepositoryInformation::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               bool isBare) cil managed
  {
    // Code size       92 (0x5c)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.FilePath V_0,
             class LibGit2Sharp.Core.FilePath V_1)
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.RepositoryInformation::repo
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  call       instance void LibGit2Sharp.RepositoryInformation::set_IsBare(bool)
    IL_0014:  ldarg.1
    IL_0015:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_001a:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.Proxy::git_repository_path(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_001f:  stloc.0
    IL_0020:  ldarg.1
    IL_0021:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0026:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.Proxy::git_repository_workdir(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_002b:  stloc.1
    IL_002c:  ldarg.0
    IL_002d:  ldloc.0
    IL_002e:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
    IL_0033:  call       instance void LibGit2Sharp.RepositoryInformation::set_Path(string)
    IL_0038:  ldarg.0
    IL_0039:  ldloc.1
    IL_003a:  brfalse.s  IL_0044

    IL_003c:  ldloc.1
    IL_003d:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
    IL_0042:  br.s       IL_0045

    IL_0044:  ldnull
    IL_0045:  call       instance void LibGit2Sharp.RepositoryInformation::set_WorkingDirectory(string)
    IL_004a:  ldarg.0
    IL_004b:  ldarg.1
    IL_004c:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0051:  call       bool LibGit2Sharp.Core.Proxy::git_repository_is_shallow(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0056:  call       instance void LibGit2Sharp.RepositoryInformation::set_IsShallow(bool)
    IL_005b:  ret
  } // end of method RepositoryInformation::.ctor

  .method public hidebysig newslot specialname virtual 
          instance string  get_Path() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.RepositoryInformation::'<Path>k__BackingField'
    IL_0006:  ret
  } // end of method RepositoryInformation::get_Path

  .method private hidebysig specialname instance void 
          set_Path(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.RepositoryInformation::'<Path>k__BackingField'
    IL_0007:  ret
  } // end of method RepositoryInformation::set_Path

  .method public hidebysig newslot specialname virtual 
          instance string  get_WorkingDirectory() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.RepositoryInformation::'<WorkingDirectory>k__BackingField'
    IL_0006:  ret
  } // end of method RepositoryInformation::get_WorkingDirectory

  .method private hidebysig specialname instance void 
          set_WorkingDirectory(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.RepositoryInformation::'<WorkingDirectory>k__BackingField'
    IL_0007:  ret
  } // end of method RepositoryInformation::set_WorkingDirectory

  .method public hidebysig newslot specialname virtual 
          instance bool  get_IsBare() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      bool LibGit2Sharp.RepositoryInformation::'<IsBare>k__BackingField'
    IL_0006:  ret
  } // end of method RepositoryInformation::get_IsBare

  .method private hidebysig specialname instance void 
          set_IsBare(bool 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      bool LibGit2Sharp.RepositoryInformation::'<IsBare>k__BackingField'
    IL_0007:  ret
  } // end of method RepositoryInformation::set_IsBare

  .method public hidebysig newslot specialname virtual 
          instance bool  get_IsShallow() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      bool LibGit2Sharp.RepositoryInformation::'<IsShallow>k__BackingField'
    IL_0006:  ret
  } // end of method RepositoryInformation::get_IsShallow

  .method private hidebysig specialname instance void 
          set_IsShallow(bool 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      bool LibGit2Sharp.RepositoryInformation::'<IsShallow>k__BackingField'
    IL_0007:  ret
  } // end of method RepositoryInformation::set_IsShallow

  .method public hidebysig newslot specialname virtual 
          instance bool  get_IsHeadDetached() cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.RepositoryInformation::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  call       bool LibGit2Sharp.Core.Proxy::git_repository_head_detached(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0010:  ret
  } // end of method RepositoryInformation::get_IsHeadDetached

  .method public hidebysig newslot specialname virtual 
          instance bool  get_IsHeadOrphaned() cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.RepositoryInformation::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  call       bool LibGit2Sharp.Core.Proxy::git_repository_head_orphan(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0010:  ret
  } // end of method RepositoryInformation::get_IsHeadOrphaned

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.CurrentOperation 
          get_CurrentOperation() cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.RepositoryInformation::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  call       valuetype LibGit2Sharp.CurrentOperation LibGit2Sharp.Core.Proxy::git_repository_state(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0010:  ret
  } // end of method RepositoryInformation::get_CurrentOperation

  .method public hidebysig newslot specialname virtual 
          instance string  get_Message() cil managed
  {
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.RepositoryInformation::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  call       string LibGit2Sharp.Core.Proxy::git_repository_message(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0010:  ret
  } // end of method RepositoryInformation::get_Message

  .property instance string Path()
  {
    .get instance string LibGit2Sharp.RepositoryInformation::get_Path()
    .set instance void LibGit2Sharp.RepositoryInformation::set_Path(string)
  } // end of property RepositoryInformation::Path
  .property instance string WorkingDirectory()
  {
    .set instance void LibGit2Sharp.RepositoryInformation::set_WorkingDirectory(string)
    .get instance string LibGit2Sharp.RepositoryInformation::get_WorkingDirectory()
  } // end of property RepositoryInformation::WorkingDirectory
  .property instance bool IsBare()
  {
    .get instance bool LibGit2Sharp.RepositoryInformation::get_IsBare()
    .set instance void LibGit2Sharp.RepositoryInformation::set_IsBare(bool)
  } // end of property RepositoryInformation::IsBare
  .property instance bool IsShallow()
  {
    .get instance bool LibGit2Sharp.RepositoryInformation::get_IsShallow()
    .set instance void LibGit2Sharp.RepositoryInformation::set_IsShallow(bool)
  } // end of property RepositoryInformation::IsShallow
  .property instance bool IsHeadDetached()
  {
    .get instance bool LibGit2Sharp.RepositoryInformation::get_IsHeadDetached()
  } // end of property RepositoryInformation::IsHeadDetached
  .property instance bool IsHeadOrphaned()
  {
    .get instance bool LibGit2Sharp.RepositoryInformation::get_IsHeadOrphaned()
  } // end of property RepositoryInformation::IsHeadOrphaned
  .property instance valuetype LibGit2Sharp.CurrentOperation
          CurrentOperation()
  {
    .get instance valuetype LibGit2Sharp.CurrentOperation LibGit2Sharp.RepositoryInformation::get_CurrentOperation()
  } // end of property RepositoryInformation::CurrentOperation
  .property instance string Message()
  {
    .get instance string LibGit2Sharp.RepositoryInformation::get_Message()
  } // end of property RepositoryInformation::Message
} // end of class LibGit2Sharp.RepositoryInformation

.class public abstract auto ansi sealed beforefieldinit LibGit2Sharp.RepositoryExtensions
       extends [mscorlib]System.Object
{
  .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static !!T  Lookup<(LibGit2Sharp.GitObject) T>(class LibGit2Sharp.IRepository repository,
                                                                          string objectish) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       73 (0x49)
    .maxstack  4
    IL_0000:  call       void LibGit2Sharp.RepositoryExtensions::EnsureNoGitLink<!!0>()
    IL_0005:  ldtoken    !!T
    IL_000a:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_000f:  ldtoken    LibGit2Sharp.GitObject
    IL_0014:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0019:  bne.un.s   IL_0028

    IL_001b:  ldarg.0
    IL_001c:  ldarg.1
    IL_001d:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.IRepository::Lookup(string)
    IL_0022:  unbox.any  !!T
    IL_0027:  ret

    IL_0028:  ldarg.0
    IL_0029:  ldarg.1
    IL_002a:  ldsfld     class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,valuetype LibGit2Sharp.ObjectType> LibGit2Sharp.GitObject::TypeToKindMap
    IL_002f:  ldtoken    !!T
    IL_0034:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0039:  callvirt   instance !1 class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,valuetype LibGit2Sharp.ObjectType>::get_Item(!0)
    IL_003e:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.IRepository::Lookup(string,
                                                                                                valuetype LibGit2Sharp.ObjectType)
    IL_0043:  unbox.any  !!T
    IL_0048:  ret
  } // end of method RepositoryExtensions::Lookup

  .method public hidebysig static !!T  Lookup<(LibGit2Sharp.GitObject) T>(class LibGit2Sharp.IRepository repository,
                                                                          class LibGit2Sharp.ObjectId id) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       73 (0x49)
    .maxstack  4
    IL_0000:  call       void LibGit2Sharp.RepositoryExtensions::EnsureNoGitLink<!!0>()
    IL_0005:  ldtoken    !!T
    IL_000a:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_000f:  ldtoken    LibGit2Sharp.GitObject
    IL_0014:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0019:  bne.un.s   IL_0028

    IL_001b:  ldarg.0
    IL_001c:  ldarg.1
    IL_001d:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.IRepository::Lookup(class LibGit2Sharp.ObjectId)
    IL_0022:  unbox.any  !!T
    IL_0027:  ret

    IL_0028:  ldarg.0
    IL_0029:  ldarg.1
    IL_002a:  ldsfld     class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,valuetype LibGit2Sharp.ObjectType> LibGit2Sharp.GitObject::TypeToKindMap
    IL_002f:  ldtoken    !!T
    IL_0034:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0039:  callvirt   instance !1 class [mscorlib]System.Collections.Generic.IDictionary`2<class [mscorlib]System.Type,valuetype LibGit2Sharp.ObjectType>::get_Item(!0)
    IL_003e:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.IRepository::Lookup(class LibGit2Sharp.ObjectId,
                                                                                                valuetype LibGit2Sharp.ObjectType)
    IL_0043:  unbox.any  !!T
    IL_0048:  ret
  } // end of method RepositoryExtensions::Lookup

  .method private hidebysig static void  EnsureNoGitLink<(LibGit2Sharp.GitObject) T>() cil managed
  {
    // Code size       34 (0x22)
    .maxstack  8
    IL_0000:  ldtoken    !!T
    IL_0005:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_000a:  ldtoken    LibGit2Sharp.GitLink
    IL_000f:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0014:  beq.s      IL_0017

    IL_0016:  ret

    IL_0017:  ldstr      "A GitObject of type 'GitLink' cannot be looked up."
    IL_001c:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0021:  throw
  } // end of method RepositoryExtensions::EnsureNoGitLink

  .method public hidebysig static class LibGit2Sharp.Tag 
          ApplyTag(class LibGit2Sharp.IRepository repository,
                   string tagName) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.0
    IL_0003:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.IRepository::get_Head()
    IL_0008:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_000d:  call       class LibGit2Sharp.Tag LibGit2Sharp.RepositoryExtensions::ApplyTag(class LibGit2Sharp.IRepository,
                                                                                            string,
                                                                                            string)
    IL_0012:  ret
  } // end of method RepositoryExtensions::ApplyTag

  .method public hidebysig static class LibGit2Sharp.Tag 
          ApplyTag(class LibGit2Sharp.IRepository repository,
                   string tagName,
                   string objectish) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       15 (0xf)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.TagCollection LibGit2Sharp.IRepository::get_Tags()
    IL_0006:  ldarg.1
    IL_0007:  ldarg.2
    IL_0008:  ldc.i4.0
    IL_0009:  call       class LibGit2Sharp.Tag LibGit2Sharp.TagCollectionExtensions::Add(class LibGit2Sharp.TagCollection,
                                                                                          string,
                                                                                          string,
                                                                                          bool)
    IL_000e:  ret
  } // end of method RepositoryExtensions::ApplyTag

  .method public hidebysig static class LibGit2Sharp.Tag 
          ApplyTag(class LibGit2Sharp.IRepository repository,
                   string tagName,
                   class LibGit2Sharp.Signature tagger,
                   string message) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       21 (0x15)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.0
    IL_0003:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.IRepository::get_Head()
    IL_0008:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.Commit>::get_CanonicalName()
    IL_000d:  ldarg.2
    IL_000e:  ldarg.3
    IL_000f:  call       class LibGit2Sharp.Tag LibGit2Sharp.RepositoryExtensions::ApplyTag(class LibGit2Sharp.IRepository,
                                                                                            string,
                                                                                            string,
                                                                                            class LibGit2Sharp.Signature,
                                                                                            string)
    IL_0014:  ret
  } // end of method RepositoryExtensions::ApplyTag

  .method public hidebysig static class LibGit2Sharp.Tag 
          ApplyTag(class LibGit2Sharp.IRepository repository,
                   string tagName,
                   string objectish,
                   class LibGit2Sharp.Signature tagger,
                   string message) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.TagCollection LibGit2Sharp.IRepository::get_Tags()
    IL_0006:  ldarg.1
    IL_0007:  ldarg.2
    IL_0008:  ldarg.3
    IL_0009:  ldarg.s    message
    IL_000b:  ldc.i4.0
    IL_000c:  call       class LibGit2Sharp.Tag LibGit2Sharp.TagCollectionExtensions::Add(class LibGit2Sharp.TagCollection,
                                                                                          string,
                                                                                          string,
                                                                                          class LibGit2Sharp.Signature,
                                                                                          string,
                                                                                          bool)
    IL_0011:  ret
  } // end of method RepositoryExtensions::ApplyTag

  .method public hidebysig static class LibGit2Sharp.Branch 
          CreateBranch(class LibGit2Sharp.IRepository repository,
                       string branchName) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.0
    IL_0003:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.IRepository::get_Head()
    IL_0008:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.Branch::get_Tip()
    IL_000d:  call       class LibGit2Sharp.Branch LibGit2Sharp.RepositoryExtensions::CreateBranch(class LibGit2Sharp.IRepository,
                                                                                                   string,
                                                                                                   class LibGit2Sharp.Commit)
    IL_0012:  ret
  } // end of method RepositoryExtensions::CreateBranch

  .method public hidebysig static class LibGit2Sharp.Branch 
          CreateBranch(class LibGit2Sharp.IRepository repository,
                       string branchName,
                       class LibGit2Sharp.Commit target) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       15 (0xf)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.BranchCollection LibGit2Sharp.IRepository::get_Branches()
    IL_0006:  ldarg.1
    IL_0007:  ldarg.2
    IL_0008:  ldc.i4.0
    IL_0009:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.BranchCollection::Add(string,
                                                                                               class LibGit2Sharp.Commit,
                                                                                               bool)
    IL_000e:  ret
  } // end of method RepositoryExtensions::CreateBranch

  .method public hidebysig static class LibGit2Sharp.Branch 
          CreateBranch(class LibGit2Sharp.IRepository repository,
                       string branchName,
                       string committish) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       15 (0xf)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.BranchCollection LibGit2Sharp.IRepository::get_Branches()
    IL_0006:  ldarg.1
    IL_0007:  ldarg.2
    IL_0008:  ldc.i4.0
    IL_0009:  call       class LibGit2Sharp.Branch LibGit2Sharp.BranchCollectionExtensions::Add(class LibGit2Sharp.BranchCollection,
                                                                                                string,
                                                                                                string,
                                                                                                bool)
    IL_000e:  ret
  } // end of method RepositoryExtensions::CreateBranch

  .method public hidebysig static void  Reset(class LibGit2Sharp.IRepository repository,
                                              valuetype LibGit2Sharp.ResetOptions resetOptions,
                                              [opt] string committish) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [3] = "HEAD"
    // Code size       28 (0x1c)
    .maxstack  3
    .locals init (class LibGit2Sharp.Commit V_0)
    IL_0000:  ldarg.2
    IL_0001:  ldstr      "committish"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldarg.2
    IL_000d:  call       class LibGit2Sharp.Commit LibGit2Sharp.RepositoryExtensions::LookUpCommit(class LibGit2Sharp.IRepository,
                                                                                                   string)
    IL_0012:  stloc.0
    IL_0013:  ldarg.0
    IL_0014:  ldarg.1
    IL_0015:  ldloc.0
    IL_0016:  callvirt   instance void LibGit2Sharp.IRepository::Reset(valuetype LibGit2Sharp.ResetOptions,
                                                                       class LibGit2Sharp.Commit)
    IL_001b:  ret
  } // end of method RepositoryExtensions::Reset

  .method public hidebysig static void  Reset(class LibGit2Sharp.IRepository repository,
                                              [opt] string committish,
                                              [opt] class [mscorlib]System.Collections.Generic.IEnumerable`1<string> paths,
                                              [opt] class LibGit2Sharp.ExplicitPathsOptions explicitPathsOptions) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [2] = "HEAD"
    .param [3] = nullref
    .param [4] = nullref
    // Code size       53 (0x35)
    .maxstack  4
    .locals init (class LibGit2Sharp.Commit V_0)
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.IRepository::get_Info()
    IL_0006:  callvirt   instance bool LibGit2Sharp.RepositoryInformation::get_IsBare()
    IL_000b:  brfalse.s  IL_0018

    IL_000d:  ldstr      "Reset is not allowed in a bare repository"
    IL_0012:  newobj     instance void LibGit2Sharp.BareRepositoryException::.ctor(string)
    IL_0017:  throw

    IL_0018:  ldarg.1
    IL_0019:  ldstr      "committish"
    IL_001e:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0023:  ldarg.0
    IL_0024:  ldarg.1
    IL_0025:  call       class LibGit2Sharp.Commit LibGit2Sharp.RepositoryExtensions::LookUpCommit(class LibGit2Sharp.IRepository,
                                                                                                   string)
    IL_002a:  stloc.0
    IL_002b:  ldarg.0
    IL_002c:  ldloc.0
    IL_002d:  ldarg.2
    IL_002e:  ldarg.3
    IL_002f:  callvirt   instance void LibGit2Sharp.IRepository::Reset(class LibGit2Sharp.Commit,
                                                                       class [mscorlib]System.Collections.Generic.IEnumerable`1<string>,
                                                                       class LibGit2Sharp.ExplicitPathsOptions)
    IL_0034:  ret
  } // end of method RepositoryExtensions::Reset

  .method private hidebysig static class LibGit2Sharp.Commit 
          LookUpCommit(class LibGit2Sharp.IRepository repository,
                       string committish) cil managed
  {
    // Code size       23 (0x17)
    .maxstack  2
    .locals init (class LibGit2Sharp.GitObject V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.IRepository::Lookup(string)
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  ldarg.1
    IL_000a:  call       void LibGit2Sharp.Core.Ensure::GitObjectIsNotNull(class LibGit2Sharp.GitObject,
                                                                           string)
    IL_000f:  ldloc.0
    IL_0010:  ldc.i4.1
    IL_0011:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.GitObject::DereferenceToCommit(bool)
    IL_0016:  ret
  } // end of method RepositoryExtensions::LookUpCommit

  .method public hidebysig static class LibGit2Sharp.Commit 
          Commit(class LibGit2Sharp.IRepository repository,
                 string message,
                 [opt] bool amendPreviousCommit) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [3] = bool(false)
    // Code size       28 (0x1c)
    .maxstack  4
    .locals init (class LibGit2Sharp.Signature V_0)
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.Configuration LibGit2Sharp.IRepository::get_Config()
    IL_0006:  call       valuetype [mscorlib]System.DateTimeOffset [mscorlib]System.DateTimeOffset::get_Now()
    IL_000b:  ldc.i4.1
    IL_000c:  callvirt   instance class LibGit2Sharp.Signature LibGit2Sharp.Configuration::BuildSignatureFromGlobalConfiguration(valuetype [mscorlib]System.DateTimeOffset,
                                                                                                                                 bool)
    IL_0011:  stloc.0
    IL_0012:  ldarg.0
    IL_0013:  ldarg.1
    IL_0014:  ldloc.0
    IL_0015:  ldarg.2
    IL_0016:  call       class LibGit2Sharp.Commit LibGit2Sharp.RepositoryExtensions::Commit(class LibGit2Sharp.IRepository,
                                                                                             string,
                                                                                             class LibGit2Sharp.Signature,
                                                                                             bool)
    IL_001b:  ret
  } // end of method RepositoryExtensions::Commit

  .method public hidebysig static class LibGit2Sharp.Commit 
          Commit(class LibGit2Sharp.IRepository repository,
                 string message,
                 class LibGit2Sharp.Signature author,
                 [opt] bool amendPreviousCommit) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [4] = bool(false)
    // Code size       29 (0x1d)
    .maxstack  5
    .locals init (class LibGit2Sharp.Signature V_0)
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.Configuration LibGit2Sharp.IRepository::get_Config()
    IL_0006:  call       valuetype [mscorlib]System.DateTimeOffset [mscorlib]System.DateTimeOffset::get_Now()
    IL_000b:  ldc.i4.1
    IL_000c:  callvirt   instance class LibGit2Sharp.Signature LibGit2Sharp.Configuration::BuildSignatureFromGlobalConfiguration(valuetype [mscorlib]System.DateTimeOffset,
                                                                                                                                 bool)
    IL_0011:  stloc.0
    IL_0012:  ldarg.0
    IL_0013:  ldarg.1
    IL_0014:  ldarg.2
    IL_0015:  ldloc.0
    IL_0016:  ldarg.3
    IL_0017:  callvirt   instance class LibGit2Sharp.Commit LibGit2Sharp.IRepository::Commit(string,
                                                                                             class LibGit2Sharp.Signature,
                                                                                             class LibGit2Sharp.Signature,
                                                                                             bool)
    IL_001c:  ret
  } // end of method RepositoryExtensions::Commit

  .method public hidebysig static void  Fetch(class LibGit2Sharp.IRepository repository,
                                              string remoteName,
                                              [opt] valuetype LibGit2Sharp.TagFetchMode tagFetchMode,
                                              [opt] class LibGit2Sharp.Handlers.ProgressHandler onProgress,
                                              [opt] class LibGit2Sharp.Handlers.CompletionHandler onCompletion,
                                              [opt] class LibGit2Sharp.Handlers.UpdateTipsHandler onUpdateTips,
                                              [opt] class LibGit2Sharp.Handlers.TransferProgressHandler onTransferProgress,
                                              [opt] class LibGit2Sharp.Credentials credentials) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    .param [3] = int32(0x00000000)
    .param [4] = nullref
    .param [5] = nullref
    .param [6] = nullref
    .param [7] = nullref
    .param [8] = nullref
    // Code size       69 (0x45)
    .maxstack  8
    .locals init (class LibGit2Sharp.Remote V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "repository"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.1
    IL_000c:  ldstr      "remoteName"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_0016:  ldarg.0
    IL_0017:  callvirt   instance class LibGit2Sharp.Network LibGit2Sharp.IRepository::get_Network()
    IL_001c:  callvirt   instance class LibGit2Sharp.RemoteCollection LibGit2Sharp.Network::get_Remotes()
    IL_0021:  ldarg.1
    IL_0022:  ldc.i4.1
    IL_0023:  callvirt   instance class LibGit2Sharp.Remote LibGit2Sharp.RemoteCollection::RemoteForName(string,
                                                                                                         bool)
    IL_0028:  stloc.0
    IL_0029:  ldarg.0
    IL_002a:  callvirt   instance class LibGit2Sharp.Network LibGit2Sharp.IRepository::get_Network()
    IL_002f:  ldloc.0
    IL_0030:  ldarg.2
    IL_0031:  newobj     instance void valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.TagFetchMode>::.ctor(!0)
    IL_0036:  ldarg.3
    IL_0037:  ldarg.s    onCompletion
    IL_0039:  ldarg.s    onUpdateTips
    IL_003b:  ldarg.s    onTransferProgress
    IL_003d:  ldarg.s    credentials
    IL_003f:  callvirt   instance void LibGit2Sharp.Network::Fetch(class LibGit2Sharp.Remote,
                                                                   valuetype [mscorlib]System.Nullable`1<valuetype LibGit2Sharp.TagFetchMode>,
                                                                   class LibGit2Sharp.Handlers.ProgressHandler,
                                                                   class LibGit2Sharp.Handlers.CompletionHandler,
                                                                   class LibGit2Sharp.Handlers.UpdateTipsHandler,
                                                                   class LibGit2Sharp.Handlers.TransferProgressHandler,
                                                                   class LibGit2Sharp.Credentials)
    IL_0044:  ret
  } // end of method RepositoryExtensions::Fetch

  .method public hidebysig static class LibGit2Sharp.Branch 
          Checkout(class LibGit2Sharp.IRepository repository,
                   string commitOrBranchSpec) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.0
    IL_0003:  ldnull
    IL_0004:  ldnull
    IL_0005:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.IRepository::Checkout(string,
                                                                                               valuetype LibGit2Sharp.CheckoutModifiers,
                                                                                               class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                                               class LibGit2Sharp.CheckoutNotificationOptions)
    IL_000a:  ret
  } // end of method RepositoryExtensions::Checkout

  .method public hidebysig static class LibGit2Sharp.Branch 
          Checkout(class LibGit2Sharp.IRepository repository,
                   class LibGit2Sharp.Branch branch) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.0
    IL_0003:  ldnull
    IL_0004:  ldnull
    IL_0005:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.IRepository::Checkout(class LibGit2Sharp.Branch,
                                                                                               valuetype LibGit2Sharp.CheckoutModifiers,
                                                                                               class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                                               class LibGit2Sharp.CheckoutNotificationOptions)
    IL_000a:  ret
  } // end of method RepositoryExtensions::Checkout

  .method public hidebysig static class LibGit2Sharp.Branch 
          Checkout(class LibGit2Sharp.IRepository repository,
                   class LibGit2Sharp.Commit commit) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.0
    IL_0003:  ldnull
    IL_0004:  ldnull
    IL_0005:  callvirt   instance class LibGit2Sharp.Branch LibGit2Sharp.IRepository::Checkout(class LibGit2Sharp.Commit,
                                                                                               valuetype LibGit2Sharp.CheckoutModifiers,
                                                                                               class LibGit2Sharp.Handlers.CheckoutProgressHandler,
                                                                                               class LibGit2Sharp.CheckoutNotificationOptions)
    IL_000a:  ret
  } // end of method RepositoryExtensions::Checkout

  .method assembly hidebysig static string 
          BuildRelativePathFrom(class LibGit2Sharp.Repository repo,
                                string path) cil managed
  {
    .custom instance void [System.Core]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       107 (0x6b)
    .maxstack  5
    .locals init (string V_0,
             object[] V_1)
    IL_0000:  ldarg.1
    IL_0001:  call       bool [mscorlib]System.IO.Path::IsPathRooted(string)
    IL_0006:  brtrue.s   IL_000a

    IL_0008:  ldarg.1
    IL_0009:  ret

    IL_000a:  ldarg.1
    IL_000b:  call       string [mscorlib]System.IO.Path::GetFullPath(string)
    IL_0010:  stloc.0
    IL_0011:  ldarg.0
    IL_0012:  ldloc.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_0019:  callvirt   instance string LibGit2Sharp.RepositoryInformation::get_WorkingDirectory()
    IL_001e:  callvirt   instance bool LibGit2Sharp.Repository::PathStartsWith(string,
                                                                               string)
    IL_0023:  brtrue.s   IL_0054

    IL_0025:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_002a:  ldstr      "Unable to process file '{0}'. This file is not loc"
    + "ated under the working directory of the repository ('{1}')."
    IL_002f:  ldc.i4.2
    IL_0030:  newarr     [mscorlib]System.Object
    IL_0035:  stloc.1
    IL_0036:  ldloc.1
    IL_0037:  ldc.i4.0
    IL_0038:  ldloc.0
    IL_0039:  stelem.ref
    IL_003a:  ldloc.1
    IL_003b:  ldc.i4.1
    IL_003c:  ldarg.0
    IL_003d:  callvirt   instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_0042:  callvirt   instance string LibGit2Sharp.RepositoryInformation::get_WorkingDirectory()
    IL_0047:  stelem.ref
    IL_0048:  ldloc.1
    IL_0049:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_004e:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0053:  throw

    IL_0054:  ldloc.0
    IL_0055:  ldarg.0
    IL_0056:  callvirt   instance class LibGit2Sharp.RepositoryInformation LibGit2Sharp.Repository::get_Info()
    IL_005b:  callvirt   instance string LibGit2Sharp.RepositoryInformation::get_WorkingDirectory()
    IL_0060:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0065:  callvirt   instance string [mscorlib]System.String::Substring(int32)
    IL_006a:  ret
  } // end of method RepositoryExtensions::BuildRelativePathFrom

} // end of class LibGit2Sharp.RepositoryExtensions

.class private auto ansi beforefieldinit LibGit2Sharp.Core.Handles.RepositorySafeHandle
       extends LibGit2Sharp.Core.Handles.SafeHandleBase
{
  .method family hidebysig virtual instance bool 
          ReleaseHandleImpl() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      native int [mscorlib]System.Runtime.InteropServices.SafeHandle::handle
    IL_0006:  call       void LibGit2Sharp.Core.Proxy::git_repository_free(native int)
    IL_000b:  ldc.i4.1
    IL_000c:  ret
  } // end of method RepositorySafeHandle::ReleaseHandleImpl

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Core.Handles.SafeHandleBase::.ctor()
    IL_0006:  ret
  } // end of method RepositorySafeHandle::.ctor

} // end of class LibGit2Sharp.Core.Handles.RepositorySafeHandle

.class public auto ansi beforefieldinit LibGit2Sharp.RepositoryOptions
       extends [mscorlib]System.Object
{
  .field private string '<WorkingDirectoryPath>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private string '<IndexPath>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private string '<GlobalConfigurationLocation>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private string '<XdgConfigurationLocation>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private string '<SystemConfigurationLocation>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig specialname instance string 
          get_WorkingDirectoryPath() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.RepositoryOptions::'<WorkingDirectoryPath>k__BackingField'
    IL_0006:  ret
  } // end of method RepositoryOptions::get_WorkingDirectoryPath

  .method public hidebysig specialname instance void 
          set_WorkingDirectoryPath(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.RepositoryOptions::'<WorkingDirectoryPath>k__BackingField'
    IL_0007:  ret
  } // end of method RepositoryOptions::set_WorkingDirectoryPath

  .method public hidebysig specialname instance string 
          get_IndexPath() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.RepositoryOptions::'<IndexPath>k__BackingField'
    IL_0006:  ret
  } // end of method RepositoryOptions::get_IndexPath

  .method public hidebysig specialname instance void 
          set_IndexPath(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.RepositoryOptions::'<IndexPath>k__BackingField'
    IL_0007:  ret
  } // end of method RepositoryOptions::set_IndexPath

  .method public hidebysig specialname instance string 
          get_GlobalConfigurationLocation() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.RepositoryOptions::'<GlobalConfigurationLocation>k__BackingField'
    IL_0006:  ret
  } // end of method RepositoryOptions::get_GlobalConfigurationLocation

  .method public hidebysig specialname instance void 
          set_GlobalConfigurationLocation(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.RepositoryOptions::'<GlobalConfigurationLocation>k__BackingField'
    IL_0007:  ret
  } // end of method RepositoryOptions::set_GlobalConfigurationLocation

  .method public hidebysig specialname instance string 
          get_XdgConfigurationLocation() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.RepositoryOptions::'<XdgConfigurationLocation>k__BackingField'
    IL_0006:  ret
  } // end of method RepositoryOptions::get_XdgConfigurationLocation

  .method public hidebysig specialname instance void 
          set_XdgConfigurationLocation(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.RepositoryOptions::'<XdgConfigurationLocation>k__BackingField'
    IL_0007:  ret
  } // end of method RepositoryOptions::set_XdgConfigurationLocation

  .method public hidebysig specialname instance string 
          get_SystemConfigurationLocation() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.RepositoryOptions::'<SystemConfigurationLocation>k__BackingField'
    IL_0006:  ret
  } // end of method RepositoryOptions::get_SystemConfigurationLocation

  .method public hidebysig specialname instance void 
          set_SystemConfigurationLocation(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.RepositoryOptions::'<SystemConfigurationLocation>k__BackingField'
    IL_0007:  ret
  } // end of method RepositoryOptions::set_SystemConfigurationLocation

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method RepositoryOptions::.ctor

  .property instance string WorkingDirectoryPath()
  {
    .get instance string LibGit2Sharp.RepositoryOptions::get_WorkingDirectoryPath()
    .set instance void LibGit2Sharp.RepositoryOptions::set_WorkingDirectoryPath(string)
  } // end of property RepositoryOptions::WorkingDirectoryPath
  .property instance string IndexPath()
  {
    .get instance string LibGit2Sharp.RepositoryOptions::get_IndexPath()
    .set instance void LibGit2Sharp.RepositoryOptions::set_IndexPath(string)
  } // end of property RepositoryOptions::IndexPath
  .property instance string GlobalConfigurationLocation()
  {
    .set instance void LibGit2Sharp.RepositoryOptions::set_GlobalConfigurationLocation(string)
    .get instance string LibGit2Sharp.RepositoryOptions::get_GlobalConfigurationLocation()
  } // end of property RepositoryOptions::GlobalConfigurationLocation
  .property instance string XdgConfigurationLocation()
  {
    .set instance void LibGit2Sharp.RepositoryOptions::set_XdgConfigurationLocation(string)
    .get instance string LibGit2Sharp.RepositoryOptions::get_XdgConfigurationLocation()
  } // end of property RepositoryOptions::XdgConfigurationLocation
  .property instance string SystemConfigurationLocation()
  {
    .get instance string LibGit2Sharp.RepositoryOptions::get_SystemConfigurationLocation()
    .set instance void LibGit2Sharp.RepositoryOptions::set_SystemConfigurationLocation(string)
  } // end of property RepositoryOptions::SystemConfigurationLocation
} // end of class LibGit2Sharp.RepositoryOptions

.class public auto ansi beforefieldinit LibGit2Sharp.RepositoryStatus
       extends [mscorlib]System.Object
       implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.StatusEntry>,
                  [mscorlib]System.Collections.IEnumerable
{
  .custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass12'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public string path
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass12'::.ctor

    .method public hidebysig instance bool 
            '<get_Item>b__11'(class LibGit2Sharp.StatusEntry e) cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  callvirt   instance string LibGit2Sharp.StatusEntry::get_FilePath()
      IL_0006:  ldarg.0
      IL_0007:  ldfld      string LibGit2Sharp.RepositoryStatus/'<>c__DisplayClass12'::path
      IL_000c:  ldc.i4.4
      IL_000d:  call       bool [mscorlib]System.String::Equals(string,
                                                                string,
                                                                valuetype [mscorlib]System.StringComparison)
      IL_0012:  ret
    } // end of method '<>c__DisplayClass12'::'<get_Item>b__11'

  } // end of class '<>c__DisplayClass12'

  .field private initonly class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.StatusEntry> statusEntries
  .field private initonly class [mscorlib]System.Collections.Generic.List`1<string> added
  .field private initonly class [mscorlib]System.Collections.Generic.List`1<string> staged
  .field private initonly class [mscorlib]System.Collections.Generic.List`1<string> removed
  .field private initonly class [mscorlib]System.Collections.Generic.List`1<string> missing
  .field private initonly class [mscorlib]System.Collections.Generic.List`1<string> modified
  .field private initonly class [mscorlib]System.Collections.Generic.List`1<string> untracked
  .field private initonly class [mscorlib]System.Collections.Generic.List`1<string> ignored
  .field private initonly bool isDirty
  .field private initonly class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>> dispatcher
  .field private static class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> 'CS$<>9__CachedAnonymousMethodDelegate8'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> 'CS$<>9__CachedAnonymousMethodDelegate9'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> 'CS$<>9__CachedAnonymousMethodDelegatea'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> 'CS$<>9__CachedAnonymousMethodDelegateb'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> 'CS$<>9__CachedAnonymousMethodDelegatec'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> 'CS$<>9__CachedAnonymousMethodDelegated'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> 'CS$<>9__CachedAnonymousMethodDelegatee'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,bool> 'CS$<>9__CachedAnonymousMethodDelegate10'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method private hidebysig static class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>> 
          Build() cil managed
  {
    // Code size       276 (0x114)
    .maxstack  5
    .locals init (class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>> V_0)
    IL_0000:  newobj     instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>>::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldc.i4     0x80
    IL_000c:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegate8'
    IL_0011:  brtrue.s   IL_0024

    IL_0013:  ldnull
    IL_0014:  ldftn      void LibGit2Sharp.RepositoryStatus::'<Build>b__1'(class LibGit2Sharp.RepositoryStatus,
                                                                           string)
    IL_001a:  newobj     instance void class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>::.ctor(object,
                                                                                                                             native int)
    IL_001f:  stsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegate8'
    IL_0024:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegate8'
    IL_0029:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>>::Add(!0,
                                                                                                                                                                                                                      !1)
    IL_002e:  ldloc.0
    IL_002f:  ldc.i4     0x100
    IL_0034:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegate9'
    IL_0039:  brtrue.s   IL_004c

    IL_003b:  ldnull
    IL_003c:  ldftn      void LibGit2Sharp.RepositoryStatus::'<Build>b__2'(class LibGit2Sharp.RepositoryStatus,
                                                                           string)
    IL_0042:  newobj     instance void class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>::.ctor(object,
                                                                                                                             native int)
    IL_0047:  stsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegate9'
    IL_004c:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegate9'
    IL_0051:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>>::Add(!0,
                                                                                                                                                                                                                      !1)
    IL_0056:  ldloc.0
    IL_0057:  ldc.i4     0x200
    IL_005c:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegatea'
    IL_0061:  brtrue.s   IL_0074

    IL_0063:  ldnull
    IL_0064:  ldftn      void LibGit2Sharp.RepositoryStatus::'<Build>b__3'(class LibGit2Sharp.RepositoryStatus,
                                                                           string)
    IL_006a:  newobj     instance void class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>::.ctor(object,
                                                                                                                             native int)
    IL_006f:  stsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegatea'
    IL_0074:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegatea'
    IL_0079:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>>::Add(!0,
                                                                                                                                                                                                                      !1)
    IL_007e:  ldloc.0
    IL_007f:  ldc.i4.1
    IL_0080:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegateb'
    IL_0085:  brtrue.s   IL_0098

    IL_0087:  ldnull
    IL_0088:  ldftn      void LibGit2Sharp.RepositoryStatus::'<Build>b__4'(class LibGit2Sharp.RepositoryStatus,
                                                                           string)
    IL_008e:  newobj     instance void class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>::.ctor(object,
                                                                                                                             native int)
    IL_0093:  stsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegateb'
    IL_0098:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegateb'
    IL_009d:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>>::Add(!0,
                                                                                                                                                                                                                      !1)
    IL_00a2:  ldloc.0
    IL_00a3:  ldc.i4.2
    IL_00a4:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegatec'
    IL_00a9:  brtrue.s   IL_00bc

    IL_00ab:  ldnull
    IL_00ac:  ldftn      void LibGit2Sharp.RepositoryStatus::'<Build>b__5'(class LibGit2Sharp.RepositoryStatus,
                                                                           string)
    IL_00b2:  newobj     instance void class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>::.ctor(object,
                                                                                                                             native int)
    IL_00b7:  stsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegatec'
    IL_00bc:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegatec'
    IL_00c1:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>>::Add(!0,
                                                                                                                                                                                                                      !1)
    IL_00c6:  ldloc.0
    IL_00c7:  ldc.i4.4
    IL_00c8:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegated'
    IL_00cd:  brtrue.s   IL_00e0

    IL_00cf:  ldnull
    IL_00d0:  ldftn      void LibGit2Sharp.RepositoryStatus::'<Build>b__6'(class LibGit2Sharp.RepositoryStatus,
                                                                           string)
    IL_00d6:  newobj     instance void class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>::.ctor(object,
                                                                                                                             native int)
    IL_00db:  stsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegated'
    IL_00e0:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegated'
    IL_00e5:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>>::Add(!0,
                                                                                                                                                                                                                      !1)
    IL_00ea:  ldloc.0
    IL_00eb:  ldc.i4     0x4000
    IL_00f0:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegatee'
    IL_00f5:  brtrue.s   IL_0108

    IL_00f7:  ldnull
    IL_00f8:  ldftn      void LibGit2Sharp.RepositoryStatus::'<Build>b__7'(class LibGit2Sharp.RepositoryStatus,
                                                                           string)
    IL_00fe:  newobj     instance void class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>::.ctor(object,
                                                                                                                             native int)
    IL_0103:  stsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegatee'
    IL_0108:  ldsfld     class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegatee'
    IL_010d:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>>::Add(!0,
                                                                                                                                                                                                                      !1)
    IL_0112:  ldloc.0
    IL_0113:  ret
  } // end of method RepositoryStatus::Build

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       95 (0x5f)
    .maxstack  2
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_0006:  stfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::added
    IL_000b:  ldarg.0
    IL_000c:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_0011:  stfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::staged
    IL_0016:  ldarg.0
    IL_0017:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_001c:  stfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::removed
    IL_0021:  ldarg.0
    IL_0022:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_0027:  stfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::missing
    IL_002c:  ldarg.0
    IL_002d:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_0032:  stfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::modified
    IL_0037:  ldarg.0
    IL_0038:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_003d:  stfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::untracked
    IL_0042:  ldarg.0
    IL_0043:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_0048:  stfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::ignored
    IL_004d:  ldarg.0
    IL_004e:  call       class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>> LibGit2Sharp.RepositoryStatus::Build()
    IL_0053:  stfld      class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>> LibGit2Sharp.RepositoryStatus::dispatcher
    IL_0058:  ldarg.0
    IL_0059:  call       instance void [mscorlib]System.Object::.ctor()
    IL_005e:  ret
  } // end of method RepositoryStatus::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       170 (0xaa)
    .maxstack  5
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_0006:  stfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::added
    IL_000b:  ldarg.0
    IL_000c:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_0011:  stfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::staged
    IL_0016:  ldarg.0
    IL_0017:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_001c:  stfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::removed
    IL_0021:  ldarg.0
    IL_0022:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_0027:  stfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::missing
    IL_002c:  ldarg.0
    IL_002d:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_0032:  stfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::modified
    IL_0037:  ldarg.0
    IL_0038:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_003d:  stfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::untracked
    IL_0042:  ldarg.0
    IL_0043:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_0048:  stfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::ignored
    IL_004d:  ldarg.0
    IL_004e:  call       class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>> LibGit2Sharp.RepositoryStatus::Build()
    IL_0053:  stfld      class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>> LibGit2Sharp.RepositoryStatus::dispatcher
    IL_0058:  ldarg.0
    IL_0059:  call       instance void [mscorlib]System.Object::.ctor()
    IL_005e:  ldarg.0
    IL_005f:  ldarg.1
    IL_0060:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0065:  ldarg.0
    IL_0066:  ldftn      instance class LibGit2Sharp.StatusEntry LibGit2Sharp.RepositoryStatus::StateChanged(native int,
                                                                                                             uint32)
    IL_006c:  newobj     instance void class [System.Core]System.Func`3<native int,uint32,class LibGit2Sharp.StatusEntry>::.ctor(object,
                                                                                                                                 native int)
    IL_0071:  call       class [mscorlib]System.Collections.Generic.ICollection`1<!!0> LibGit2Sharp.Core.Proxy::git_status_foreach<class LibGit2Sharp.StatusEntry>(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                                                   class [System.Core]System.Func`3<native int,uint32,!!0>)
    IL_0076:  stfld      class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.StatusEntry> LibGit2Sharp.RepositoryStatus::statusEntries
    IL_007b:  ldarg.0
    IL_007c:  ldarg.0
    IL_007d:  ldfld      class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.StatusEntry> LibGit2Sharp.RepositoryStatus::statusEntries
    IL_0082:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,bool> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegate10'
    IL_0087:  brtrue.s   IL_009a

    IL_0089:  ldnull
    IL_008a:  ldftn      bool LibGit2Sharp.RepositoryStatus::'<.ctor>b__f'(class LibGit2Sharp.StatusEntry)
    IL_0090:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,bool>::.ctor(object,
                                                                                                                    native int)
    IL_0095:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,bool> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegate10'
    IL_009a:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,bool> LibGit2Sharp.RepositoryStatus::'CS$<>9__CachedAnonymousMethodDelegate10'
    IL_009f:  call       bool [System.Core]System.Linq.Enumerable::Any<class LibGit2Sharp.StatusEntry>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                       class [System.Core]System.Func`2<!!0,bool>)
    IL_00a4:  stfld      bool LibGit2Sharp.RepositoryStatus::isDirty
    IL_00a9:  ret
  } // end of method RepositoryStatus::.ctor

  .method private hidebysig instance class LibGit2Sharp.StatusEntry 
          StateChanged(native int filePathPtr,
                       uint32 state) cil managed
  {
    // Code size       102 (0x66)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.FilePath V_0,
             valuetype LibGit2Sharp.FileStatus V_1,
             valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>> V_2,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>>> V_3)
    IL_0000:  ldarg.1
    IL_0001:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePathMarshaler::FromNative(native int)
    IL_0006:  stloc.0
    IL_0007:  ldarg.2
    IL_0008:  stloc.1
    IL_0009:  ldarg.0
    IL_000a:  ldfld      class [mscorlib]System.Collections.Generic.IDictionary`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>> LibGit2Sharp.RepositoryStatus::dispatcher
    IL_000f:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>>>::GetEnumerator()
    IL_0014:  stloc.3
    .try
    {
      IL_0015:  br.s       IL_0045

      IL_0017:  ldloc.3
      IL_0018:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>>>::get_Current()
      IL_001d:  stloc.2
      IL_001e:  ldloc.1
      IL_001f:  box        LibGit2Sharp.FileStatus
      IL_0024:  ldloca.s   V_2
      IL_0026:  call       instance !0 valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>>::get_Key()
      IL_002b:  call       bool LibGit2Sharp.Core.Compat.EnumExtensions::HasFlag<valuetype LibGit2Sharp.FileStatus>(class [mscorlib]System.Enum,
                                                                                                                    !!0)
      IL_0030:  brfalse.s  IL_0045

      IL_0032:  ldloca.s   V_2
      IL_0034:  call       instance !1 valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<valuetype LibGit2Sharp.FileStatus,class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>>::get_Value()
      IL_0039:  ldarg.0
      IL_003a:  ldloc.0
      IL_003b:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
      IL_0040:  callvirt   instance void class [System.Core]System.Action`2<class LibGit2Sharp.RepositoryStatus,string>::Invoke(!0,
                                                                                                                                !1)
      IL_0045:  ldloc.3
      IL_0046:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_004b:  brtrue.s   IL_0017

      IL_004d:  leave.s    IL_0059

    }  // end .try
    finally
    {
      IL_004f:  ldloc.3
      IL_0050:  brfalse.s  IL_0058

      IL_0052:  ldloc.3
      IL_0053:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0058:  endfinally
    }  // end handler
    IL_0059:  ldloc.0
    IL_005a:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
    IL_005f:  ldloc.1
    IL_0060:  newobj     instance void LibGit2Sharp.StatusEntry::.ctor(string,
                                                                       valuetype LibGit2Sharp.FileStatus)
    IL_0065:  ret
  } // end of method RepositoryStatus::StateChanged

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.FileStatus 
          get_Item(string path) cil managed
  {
    // Code size       84 (0x54)
    .maxstack  4
    .locals init (class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.StatusEntry> V_0,
             class LibGit2Sharp.RepositoryStatus/'<>c__DisplayClass12' V_1)
    IL_0000:  newobj     instance void LibGit2Sharp.RepositoryStatus/'<>c__DisplayClass12'::.ctor()
    IL_0005:  stloc.1
    IL_0006:  ldloc.1
    IL_0007:  ldarg.1
    IL_0008:  stfld      string LibGit2Sharp.RepositoryStatus/'<>c__DisplayClass12'::path
    IL_000d:  ldloc.1
    IL_000e:  ldfld      string LibGit2Sharp.RepositoryStatus/'<>c__DisplayClass12'::path
    IL_0013:  ldstr      "path"
    IL_0018:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_001d:  ldarg.0
    IL_001e:  ldfld      class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.StatusEntry> LibGit2Sharp.RepositoryStatus::statusEntries
    IL_0023:  ldloc.1
    IL_0024:  ldftn      instance bool LibGit2Sharp.RepositoryStatus/'<>c__DisplayClass12'::'<get_Item>b__11'(class LibGit2Sharp.StatusEntry)
    IL_002a:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,bool>::.ctor(object,
                                                                                                                    native int)
    IL_002f:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> [System.Core]System.Linq.Enumerable::Where<class LibGit2Sharp.StatusEntry>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                  class [System.Core]System.Func`2<!!0,bool>)
    IL_0034:  call       class [mscorlib]System.Collections.Generic.List`1<!!0> [System.Core]System.Linq.Enumerable::ToList<class LibGit2Sharp.StatusEntry>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0039:  stloc.0
    IL_003a:  ldloc.0
    IL_003b:  callvirt   instance int32 class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.StatusEntry>::get_Count()
    IL_0040:  brtrue.s   IL_0048

    IL_0042:  ldc.i4     0x80000000
    IL_0047:  ret

    IL_0048:  ldloc.0
    IL_0049:  call       !!0 [System.Core]System.Linq.Enumerable::Single<class LibGit2Sharp.StatusEntry>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_004e:  callvirt   instance valuetype LibGit2Sharp.FileStatus LibGit2Sharp.StatusEntry::get_State()
    IL_0053:  ret
  } // end of method RepositoryStatus::get_Item

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.StatusEntry> 
          GetEnumerator() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.ICollection`1<class LibGit2Sharp.StatusEntry> LibGit2Sharp.RepositoryStatus::statusEntries
    IL_0006:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.StatusEntry>::GetEnumerator()
    IL_000b:  ret
  } // end of method RepositoryStatus::GetEnumerator

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.StatusEntry> LibGit2Sharp.RepositoryStatus::GetEnumerator()
    IL_0006:  ret
  } // end of method RepositoryStatus::System.Collections.IEnumerable.GetEnumerator

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> 
          get_Added() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::added
    IL_0006:  ret
  } // end of method RepositoryStatus::get_Added

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> 
          get_Staged() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::staged
    IL_0006:  ret
  } // end of method RepositoryStatus::get_Staged

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> 
          get_Removed() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::removed
    IL_0006:  ret
  } // end of method RepositoryStatus::get_Removed

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> 
          get_Missing() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::missing
    IL_0006:  ret
  } // end of method RepositoryStatus::get_Missing

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> 
          get_Modified() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::modified
    IL_0006:  ret
  } // end of method RepositoryStatus::get_Modified

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> 
          get_Untracked() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::untracked
    IL_0006:  ret
  } // end of method RepositoryStatus::get_Untracked

  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> 
          get_Ignored() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::ignored
    IL_0006:  ret
  } // end of method RepositoryStatus::get_Ignored

  .method public hidebysig newslot specialname virtual 
          instance bool  get_IsDirty() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      bool LibGit2Sharp.RepositoryStatus::isDirty
    IL_0006:  ret
  } // end of method RepositoryStatus::get_IsDirty

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       157 (0x9d)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "+{0} ~{1} -{2} | +{3} ~{4} -{5} | i{6}"
    IL_000a:  ldc.i4.7
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.RepositoryStatus::get_Added()
    IL_0019:  call       int32 [System.Core]System.Linq.Enumerable::Count<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_001e:  box        [mscorlib]System.Int32
    IL_0023:  stelem.ref
    IL_0024:  ldloc.0
    IL_0025:  ldc.i4.1
    IL_0026:  ldarg.0
    IL_0027:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.RepositoryStatus::get_Staged()
    IL_002c:  call       int32 [System.Core]System.Linq.Enumerable::Count<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0031:  box        [mscorlib]System.Int32
    IL_0036:  stelem.ref
    IL_0037:  ldloc.0
    IL_0038:  ldc.i4.2
    IL_0039:  ldarg.0
    IL_003a:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.RepositoryStatus::get_Removed()
    IL_003f:  call       int32 [System.Core]System.Linq.Enumerable::Count<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0044:  box        [mscorlib]System.Int32
    IL_0049:  stelem.ref
    IL_004a:  ldloc.0
    IL_004b:  ldc.i4.3
    IL_004c:  ldarg.0
    IL_004d:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.RepositoryStatus::get_Untracked()
    IL_0052:  call       int32 [System.Core]System.Linq.Enumerable::Count<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0057:  box        [mscorlib]System.Int32
    IL_005c:  stelem.ref
    IL_005d:  ldloc.0
    IL_005e:  ldc.i4.4
    IL_005f:  ldarg.0
    IL_0060:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.RepositoryStatus::get_Modified()
    IL_0065:  call       int32 [System.Core]System.Linq.Enumerable::Count<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_006a:  box        [mscorlib]System.Int32
    IL_006f:  stelem.ref
    IL_0070:  ldloc.0
    IL_0071:  ldc.i4.5
    IL_0072:  ldarg.0
    IL_0073:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.RepositoryStatus::get_Missing()
    IL_0078:  call       int32 [System.Core]System.Linq.Enumerable::Count<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_007d:  box        [mscorlib]System.Int32
    IL_0082:  stelem.ref
    IL_0083:  ldloc.0
    IL_0084:  ldc.i4.6
    IL_0085:  ldarg.0
    IL_0086:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.RepositoryStatus::get_Ignored()
    IL_008b:  call       int32 [System.Core]System.Linq.Enumerable::Count<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0090:  box        [mscorlib]System.Int32
    IL_0095:  stelem.ref
    IL_0096:  ldloc.0
    IL_0097:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_009c:  ret
  } // end of method RepositoryStatus::get_DebuggerDisplay

  .method private hidebysig static void  '<Build>b__1'(class LibGit2Sharp.RepositoryStatus rs,
                                                       string s) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::untracked
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<string>::Add(!0)
    IL_000c:  ret
  } // end of method RepositoryStatus::'<Build>b__1'

  .method private hidebysig static void  '<Build>b__2'(class LibGit2Sharp.RepositoryStatus rs,
                                                       string s) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::modified
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<string>::Add(!0)
    IL_000c:  ret
  } // end of method RepositoryStatus::'<Build>b__2'

  .method private hidebysig static void  '<Build>b__3'(class LibGit2Sharp.RepositoryStatus rs,
                                                       string s) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::missing
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<string>::Add(!0)
    IL_000c:  ret
  } // end of method RepositoryStatus::'<Build>b__3'

  .method private hidebysig static void  '<Build>b__4'(class LibGit2Sharp.RepositoryStatus rs,
                                                       string s) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::added
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<string>::Add(!0)
    IL_000c:  ret
  } // end of method RepositoryStatus::'<Build>b__4'

  .method private hidebysig static void  '<Build>b__5'(class LibGit2Sharp.RepositoryStatus rs,
                                                       string s) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::staged
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<string>::Add(!0)
    IL_000c:  ret
  } // end of method RepositoryStatus::'<Build>b__5'

  .method private hidebysig static void  '<Build>b__6'(class LibGit2Sharp.RepositoryStatus rs,
                                                       string s) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::removed
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<string>::Add(!0)
    IL_000c:  ret
  } // end of method RepositoryStatus::'<Build>b__6'

  .method private hidebysig static void  '<Build>b__7'(class LibGit2Sharp.RepositoryStatus rs,
                                                       string s) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.List`1<string> LibGit2Sharp.RepositoryStatus::ignored
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<string>::Add(!0)
    IL_000c:  ret
  } // end of method RepositoryStatus::'<Build>b__7'

  .method private hidebysig static bool  '<.ctor>b__f'(class LibGit2Sharp.StatusEntry entry) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance valuetype LibGit2Sharp.FileStatus LibGit2Sharp.StatusEntry::get_State()
    IL_0006:  ldc.i4     0x4000
    IL_000b:  ceq
    IL_000d:  ldc.i4.0
    IL_000e:  ceq
    IL_0010:  ret
  } // end of method RepositoryStatus::'<.ctor>b__f'

  .property instance valuetype LibGit2Sharp.FileStatus
          Item(string)
  {
    .get instance valuetype LibGit2Sharp.FileStatus LibGit2Sharp.RepositoryStatus::get_Item(string)
  } // end of property RepositoryStatus::Item
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string>
          Added()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.RepositoryStatus::get_Added()
  } // end of property RepositoryStatus::Added
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string>
          Staged()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.RepositoryStatus::get_Staged()
  } // end of property RepositoryStatus::Staged
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string>
          Removed()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.RepositoryStatus::get_Removed()
  } // end of property RepositoryStatus::Removed
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string>
          Missing()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.RepositoryStatus::get_Missing()
  } // end of property RepositoryStatus::Missing
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string>
          Modified()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.RepositoryStatus::get_Modified()
  } // end of property RepositoryStatus::Modified
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string>
          Untracked()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.RepositoryStatus::get_Untracked()
  } // end of property RepositoryStatus::Untracked
  .property instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string>
          Ignored()
  {
    .get instance class [mscorlib]System.Collections.Generic.IEnumerable`1<string> LibGit2Sharp.RepositoryStatus::get_Ignored()
  } // end of property RepositoryStatus::Ignored
  .property instance bool IsDirty()
  {
    .get instance bool LibGit2Sharp.RepositoryStatus::get_IsDirty()
  } // end of property RepositoryStatus::IsDirty
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.RepositoryStatus::get_DebuggerDisplay()
  } // end of property RepositoryStatus::DebuggerDisplay
} // end of class LibGit2Sharp.RepositoryStatus

.class public auto ansi sealed LibGit2Sharp.ResetOptions
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype LibGit2Sharp.ResetOptions Soft = int32(0x00000001)
  .field public static literal valuetype LibGit2Sharp.ResetOptions Mixed = int32(0x00000002)
  .field public static literal valuetype LibGit2Sharp.ResetOptions Hard = int32(0x00000003)
} // end of class LibGit2Sharp.ResetOptions

.class public auto ansi beforefieldinit LibGit2Sharp.Signature
       extends [mscorlib]System.Object
       implements class [mscorlib]System.IEquatable`1<class LibGit2Sharp.Signature>
{
  .field private initonly valuetype [mscorlib]System.DateTimeOffset when
  .field private initonly string name
  .field private initonly string email
  .field private static initonly class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Signature> equalityHelper
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object> 'CS$<>9__CachedAnonymousMethodDelegate3'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object> 'CS$<>9__CachedAnonymousMethodDelegate4'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object> 'CS$<>9__CachedAnonymousMethodDelegate5'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(native int signaturePtr) cil managed
  {
    // Code size       87 (0x57)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.GitSignature V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  newobj     instance void LibGit2Sharp.Core.GitSignature::.ctor()
    IL_000b:  stloc.0
    IL_000c:  ldarg.1
    IL_000d:  ldloc.0
    IL_000e:  call       void [mscorlib]System.Runtime.InteropServices.Marshal::PtrToStructure(native int,
                                                                                               object)
    IL_0013:  ldarg.0
    IL_0014:  ldloc.0
    IL_0015:  ldfld      native int LibGit2Sharp.Core.GitSignature::Name
    IL_001a:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
    IL_001f:  stfld      string LibGit2Sharp.Signature::name
    IL_0024:  ldarg.0
    IL_0025:  ldloc.0
    IL_0026:  ldfld      native int LibGit2Sharp.Core.GitSignature::Email
    IL_002b:  call       string LibGit2Sharp.Core.Utf8Marshaler::FromNative(native int)
    IL_0030:  stfld      string LibGit2Sharp.Signature::email
    IL_0035:  ldarg.0
    IL_0036:  ldloc.0
    IL_0037:  ldfld      class LibGit2Sharp.Core.GitTime LibGit2Sharp.Core.GitSignature::When
    IL_003c:  ldfld      int64 LibGit2Sharp.Core.GitTime::Time
    IL_0041:  ldloc.0
    IL_0042:  ldfld      class LibGit2Sharp.Core.GitTime LibGit2Sharp.Core.GitSignature::When
    IL_0047:  ldfld      int32 LibGit2Sharp.Core.GitTime::Offset
    IL_004c:  call       valuetype [mscorlib]System.DateTimeOffset LibGit2Sharp.Core.Epoch::ToDateTimeOffset(int64,
                                                                                                             int32)
    IL_0051:  stfld      valuetype [mscorlib]System.DateTimeOffset LibGit2Sharp.Signature::when
    IL_0056:  ret
  } // end of method Signature::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string name,
                               string email,
                               valuetype [mscorlib]System.DateTimeOffset when) cil managed
  {
    // Code size       28 (0x1c)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      string LibGit2Sharp.Signature::name
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  stfld      string LibGit2Sharp.Signature::email
    IL_0014:  ldarg.0
    IL_0015:  ldarg.3
    IL_0016:  stfld      valuetype [mscorlib]System.DateTimeOffset LibGit2Sharp.Signature::when
    IL_001b:  ret
  } // end of method Signature::.ctor

  .method assembly hidebysig instance class LibGit2Sharp.Core.Handles.SignatureSafeHandle 
          BuildHandle() cil managed
  {
    // Code size       24 (0x18)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Signature::name
    IL_0006:  ldarg.0
    IL_0007:  ldfld      string LibGit2Sharp.Signature::email
    IL_000c:  ldarg.0
    IL_000d:  ldfld      valuetype [mscorlib]System.DateTimeOffset LibGit2Sharp.Signature::when
    IL_0012:  call       class LibGit2Sharp.Core.Handles.SignatureSafeHandle LibGit2Sharp.Core.Proxy::git_signature_new(string,
                                                                                                                        string,
                                                                                                                        valuetype [mscorlib]System.DateTimeOffset)
    IL_0017:  ret
  } // end of method Signature::BuildHandle

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Signature::name
    IL_0006:  ret
  } // end of method Signature::get_Name

  .method public hidebysig specialname instance string 
          get_Email() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.Signature::email
    IL_0006:  ret
  } // end of method Signature::get_Email

  .method public hidebysig specialname instance valuetype [mscorlib]System.DateTimeOffset 
          get_When() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype [mscorlib]System.DateTimeOffset LibGit2Sharp.Signature::when
    IL_0006:  ret
  } // end of method Signature::get_When

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  isinst     LibGit2Sharp.Signature
    IL_0007:  call       instance bool LibGit2Sharp.Signature::Equals(class LibGit2Sharp.Signature)
    IL_000c:  ret
  } // end of method Signature::Equals

  .method public hidebysig newslot virtual final 
          instance bool  Equals(class LibGit2Sharp.Signature other) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Signature> LibGit2Sharp.Signature::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance bool class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Signature>::Equals(!0,
                                                                                                                            !0)
    IL_000c:  ret
  } // end of method Signature::Equals

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Signature> LibGit2Sharp.Signature::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  callvirt   instance int32 class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Signature>::GetHashCode(!0)
    IL_000b:  ret
  } // end of method Signature::GetHashCode

  .method public hidebysig specialname static 
          bool  op_Equality(class LibGit2Sharp.Signature left,
                            class LibGit2Sharp.Signature right) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ret
  } // end of method Signature::op_Equality

  .method public hidebysig specialname static 
          bool  op_Inequality(class LibGit2Sharp.Signature left,
                              class LibGit2Sharp.Signature right) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  ret
  } // end of method Signature::op_Inequality

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       115 (0x73)
    .maxstack  5
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object>[] V_0)
    IL_0000:  ldc.i4.3
    IL_0001:  newarr     class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object>
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldc.i4.0
    IL_0009:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object> LibGit2Sharp.Signature::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_000e:  brtrue.s   IL_0021

    IL_0010:  ldnull
    IL_0011:  ldftn      object LibGit2Sharp.Signature::'<.cctor>b__0'(class LibGit2Sharp.Signature)
    IL_0017:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object>::.ctor(object,
                                                                                                                    native int)
    IL_001c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object> LibGit2Sharp.Signature::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_0021:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object> LibGit2Sharp.Signature::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_0026:  stelem.ref
    IL_0027:  ldloc.0
    IL_0028:  ldc.i4.1
    IL_0029:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object> LibGit2Sharp.Signature::'CS$<>9__CachedAnonymousMethodDelegate4'
    IL_002e:  brtrue.s   IL_0041

    IL_0030:  ldnull
    IL_0031:  ldftn      object LibGit2Sharp.Signature::'<.cctor>b__1'(class LibGit2Sharp.Signature)
    IL_0037:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object>::.ctor(object,
                                                                                                                    native int)
    IL_003c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object> LibGit2Sharp.Signature::'CS$<>9__CachedAnonymousMethodDelegate4'
    IL_0041:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object> LibGit2Sharp.Signature::'CS$<>9__CachedAnonymousMethodDelegate4'
    IL_0046:  stelem.ref
    IL_0047:  ldloc.0
    IL_0048:  ldc.i4.2
    IL_0049:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object> LibGit2Sharp.Signature::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_004e:  brtrue.s   IL_0061

    IL_0050:  ldnull
    IL_0051:  ldftn      object LibGit2Sharp.Signature::'<.cctor>b__2'(class LibGit2Sharp.Signature)
    IL_0057:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object>::.ctor(object,
                                                                                                                    native int)
    IL_005c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object> LibGit2Sharp.Signature::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0061:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.Signature,object> LibGit2Sharp.Signature::'CS$<>9__CachedAnonymousMethodDelegate5'
    IL_0066:  stelem.ref
    IL_0067:  ldloc.0
    IL_0068:  newobj     instance void class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Signature>::.ctor(class [System.Core]System.Func`2<!0,object>[])
    IL_006d:  stsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.Signature> LibGit2Sharp.Signature::equalityHelper
    IL_0072:  ret
  } // end of method Signature::.cctor

  .method private hidebysig static object 
          '<.cctor>b__0'(class LibGit2Sharp.Signature x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Signature::get_Name()
    IL_0006:  ret
  } // end of method Signature::'<.cctor>b__0'

  .method private hidebysig static object 
          '<.cctor>b__1'(class LibGit2Sharp.Signature x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Signature::get_Email()
    IL_0006:  ret
  } // end of method Signature::'<.cctor>b__1'

  .method private hidebysig static object 
          '<.cctor>b__2'(class LibGit2Sharp.Signature x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance valuetype [mscorlib]System.DateTimeOffset LibGit2Sharp.Signature::get_When()
    IL_0006:  box        [mscorlib]System.DateTimeOffset
    IL_000b:  ret
  } // end of method Signature::'<.cctor>b__2'

  .property instance string Name()
  {
    .get instance string LibGit2Sharp.Signature::get_Name()
  } // end of property Signature::Name
  .property instance string Email()
  {
    .get instance string LibGit2Sharp.Signature::get_Email()
  } // end of property Signature::Email
  .property instance valuetype [mscorlib]System.DateTimeOffset
          When()
  {
    .get instance valuetype [mscorlib]System.DateTimeOffset LibGit2Sharp.Signature::get_When()
  } // end of property Signature::When
} // end of class LibGit2Sharp.Signature

.class public auto ansi beforefieldinit LibGit2Sharp.StatusEntry
       extends [mscorlib]System.Object
       implements class [mscorlib]System.IEquatable`1<class LibGit2Sharp.StatusEntry>
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field private initonly string filePath
  .field private initonly valuetype LibGit2Sharp.FileStatus state
  .field private static initonly class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.StatusEntry> equalityHelper
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,object> 'CS$<>9__CachedAnonymousMethodDelegate2'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,object> 'CS$<>9__CachedAnonymousMethodDelegate3'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method StatusEntry::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string filePath,
                               valuetype LibGit2Sharp.FileStatus state) cil managed
  {
    // Code size       21 (0x15)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      string LibGit2Sharp.StatusEntry::filePath
    IL_000d:  ldarg.0
    IL_000e:  ldarg.2
    IL_000f:  stfld      valuetype LibGit2Sharp.FileStatus LibGit2Sharp.StatusEntry::state
    IL_0014:  ret
  } // end of method StatusEntry::.ctor

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.FileStatus 
          get_State() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.FileStatus LibGit2Sharp.StatusEntry::state
    IL_0006:  ret
  } // end of method StatusEntry::get_State

  .method public hidebysig newslot specialname virtual 
          instance string  get_FilePath() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.StatusEntry::filePath
    IL_0006:  ret
  } // end of method StatusEntry::get_FilePath

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  isinst     LibGit2Sharp.StatusEntry
    IL_0007:  call       instance bool LibGit2Sharp.StatusEntry::Equals(class LibGit2Sharp.StatusEntry)
    IL_000c:  ret
  } // end of method StatusEntry::Equals

  .method public hidebysig newslot virtual final 
          instance bool  Equals(class LibGit2Sharp.StatusEntry other) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.StatusEntry> LibGit2Sharp.StatusEntry::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance bool class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.StatusEntry>::Equals(!0,
                                                                                                                              !0)
    IL_000c:  ret
  } // end of method StatusEntry::Equals

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.StatusEntry> LibGit2Sharp.StatusEntry::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  callvirt   instance int32 class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.StatusEntry>::GetHashCode(!0)
    IL_000b:  ret
  } // end of method StatusEntry::GetHashCode

  .method public hidebysig specialname static 
          bool  op_Equality(class LibGit2Sharp.StatusEntry left,
                            class LibGit2Sharp.StatusEntry right) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ret
  } // end of method StatusEntry::op_Equality

  .method public hidebysig specialname static 
          bool  op_Inequality(class LibGit2Sharp.StatusEntry left,
                              class LibGit2Sharp.StatusEntry right) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  ret
  } // end of method StatusEntry::op_Inequality

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       28 (0x1c)
    .maxstack  8
    IL_0000:  ldstr      "{0}: {1}"
    IL_0005:  ldarg.0
    IL_0006:  callvirt   instance valuetype LibGit2Sharp.FileStatus LibGit2Sharp.StatusEntry::get_State()
    IL_000b:  box        LibGit2Sharp.FileStatus
    IL_0010:  ldarg.0
    IL_0011:  callvirt   instance string LibGit2Sharp.StatusEntry::get_FilePath()
    IL_0016:  call       string [mscorlib]System.String::Format(string,
                                                                object,
                                                                object)
    IL_001b:  ret
  } // end of method StatusEntry::get_DebuggerDisplay

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       83 (0x53)
    .maxstack  5
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,object>[] V_0)
    IL_0000:  ldc.i4.2
    IL_0001:  newarr     class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,object>
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldc.i4.0
    IL_0009:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,object> LibGit2Sharp.StatusEntry::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_000e:  brtrue.s   IL_0021

    IL_0010:  ldnull
    IL_0011:  ldftn      object LibGit2Sharp.StatusEntry::'<.cctor>b__0'(class LibGit2Sharp.StatusEntry)
    IL_0017:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,object>::.ctor(object,
                                                                                                                      native int)
    IL_001c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,object> LibGit2Sharp.StatusEntry::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0021:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,object> LibGit2Sharp.StatusEntry::'CS$<>9__CachedAnonymousMethodDelegate2'
    IL_0026:  stelem.ref
    IL_0027:  ldloc.0
    IL_0028:  ldc.i4.1
    IL_0029:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,object> LibGit2Sharp.StatusEntry::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_002e:  brtrue.s   IL_0041

    IL_0030:  ldnull
    IL_0031:  ldftn      object LibGit2Sharp.StatusEntry::'<.cctor>b__1'(class LibGit2Sharp.StatusEntry)
    IL_0037:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,object>::.ctor(object,
                                                                                                                      native int)
    IL_003c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,object> LibGit2Sharp.StatusEntry::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_0041:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.StatusEntry,object> LibGit2Sharp.StatusEntry::'CS$<>9__CachedAnonymousMethodDelegate3'
    IL_0046:  stelem.ref
    IL_0047:  ldloc.0
    IL_0048:  newobj     instance void class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.StatusEntry>::.ctor(class [System.Core]System.Func`2<!0,object>[])
    IL_004d:  stsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.StatusEntry> LibGit2Sharp.StatusEntry::equalityHelper
    IL_0052:  ret
  } // end of method StatusEntry::.cctor

  .method private hidebysig static object 
          '<.cctor>b__0'(class LibGit2Sharp.StatusEntry x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.StatusEntry::get_FilePath()
    IL_0006:  ret
  } // end of method StatusEntry::'<.cctor>b__0'

  .method private hidebysig static object 
          '<.cctor>b__1'(class LibGit2Sharp.StatusEntry x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance valuetype LibGit2Sharp.FileStatus LibGit2Sharp.StatusEntry::get_State()
    IL_0006:  box        LibGit2Sharp.FileStatus
    IL_000b:  ret
  } // end of method StatusEntry::'<.cctor>b__1'

  .property instance valuetype LibGit2Sharp.FileStatus
          State()
  {
    .get instance valuetype LibGit2Sharp.FileStatus LibGit2Sharp.StatusEntry::get_State()
  } // end of property StatusEntry::State
  .property instance string FilePath()
  {
    .get instance string LibGit2Sharp.StatusEntry::get_FilePath()
  } // end of property StatusEntry::FilePath
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.StatusEntry::get_DebuggerDisplay()
  } // end of property StatusEntry::DebuggerDisplay
} // end of class LibGit2Sharp.StatusEntry

.class public auto ansi beforefieldinit LibGit2Sharp.SymbolicReference
       extends LibGit2Sharp.Reference
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .field private initonly class LibGit2Sharp.Reference target
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.Reference::.ctor()
    IL_0006:  ret
  } // end of method SymbolicReference::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string canonicalName,
                               string targetIdentifier,
                               class LibGit2Sharp.Reference target) cil managed
  {
    // Code size       16 (0x10)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.Reference::.ctor(string,
                                                                     string)
    IL_0008:  ldarg.0
    IL_0009:  ldarg.3
    IL_000a:  stfld      class LibGit2Sharp.Reference LibGit2Sharp.SymbolicReference::target
    IL_000f:  ret
  } // end of method SymbolicReference::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Reference 
          get_Target() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Reference LibGit2Sharp.SymbolicReference::target
    IL_0006:  ret
  } // end of method SymbolicReference::get_Target

  .method public hidebysig virtual instance class LibGit2Sharp.DirectReference 
          ResolveToDirectReference() cil managed
  {
    // Code size       28 (0x1c)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.SymbolicReference::get_Target()
    IL_0006:  ldnull
    IL_0007:  call       bool LibGit2Sharp.Reference::op_Equality(class LibGit2Sharp.Reference,
                                                                  class LibGit2Sharp.Reference)
    IL_000c:  brtrue.s   IL_001a

    IL_000e:  ldarg.0
    IL_000f:  callvirt   instance class LibGit2Sharp.Reference LibGit2Sharp.SymbolicReference::get_Target()
    IL_0014:  callvirt   instance class LibGit2Sharp.DirectReference LibGit2Sharp.Reference::ResolveToDirectReference()
    IL_0019:  ret

    IL_001a:  ldnull
    IL_001b:  ret
  } // end of method SymbolicReference::ResolveToDirectReference

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       74 (0x4a)
    .maxstack  6
    .locals init (class LibGit2Sharp.DirectReference V_0,
             object[] V_1)
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.DirectReference LibGit2Sharp.Reference::ResolveToDirectReference()
    IL_0006:  stloc.0
    IL_0007:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_000c:  ldstr      "{0} => {1} => \"{2}\""
    IL_0011:  ldc.i4.3
    IL_0012:  newarr     [mscorlib]System.Object
    IL_0017:  stloc.1
    IL_0018:  ldloc.1
    IL_0019:  ldc.i4.0
    IL_001a:  ldarg.0
    IL_001b:  callvirt   instance string LibGit2Sharp.Reference::get_CanonicalName()
    IL_0020:  stelem.ref
    IL_0021:  ldloc.1
    IL_0022:  ldc.i4.1
    IL_0023:  ldarg.0
    IL_0024:  callvirt   instance string LibGit2Sharp.Reference::get_TargetIdentifier()
    IL_0029:  stelem.ref
    IL_002a:  ldloc.1
    IL_002b:  ldc.i4.2
    IL_002c:  ldloc.0
    IL_002d:  ldnull
    IL_002e:  call       bool LibGit2Sharp.Reference::op_Inequality(class LibGit2Sharp.Reference,
                                                                    class LibGit2Sharp.Reference)
    IL_0033:  brtrue.s   IL_003c

    IL_0035:  ldstr      "\?"
    IL_003a:  br.s       IL_0042

    IL_003c:  ldloc.0
    IL_003d:  callvirt   instance string LibGit2Sharp.Reference::get_TargetIdentifier()
    IL_0042:  stelem.ref
    IL_0043:  ldloc.1
    IL_0044:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0049:  ret
  } // end of method SymbolicReference::get_DebuggerDisplay

  .property instance class LibGit2Sharp.Reference
          Target()
  {
    .get instance class LibGit2Sharp.Reference LibGit2Sharp.SymbolicReference::get_Target()
  } // end of property SymbolicReference::Target
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.SymbolicReference::get_DebuggerDisplay()
  } // end of property SymbolicReference::DebuggerDisplay
} // end of class LibGit2Sharp.SymbolicReference

.class public auto ansi beforefieldinit LibGit2Sharp.Tag
       extends class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.GitObject>
{
  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass2'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public string canonicalName
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass2'::.ctor

    .method public hidebysig instance string 
            '<.ctor>b__0'(class LibGit2Sharp.Reference _) cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      string LibGit2Sharp.Tag/'<>c__DisplayClass2'::canonicalName
      IL_0006:  ret
    } // end of method '<>c__DisplayClass2'::'<.ctor>b__0'

  } // end of class '<>c__DisplayClass2'

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.GitObject>::.ctor()
    IL_0006:  ret
  } // end of method Tag::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.Reference reference,
                               string canonicalName) cil managed
  {
    // Code size       41 (0x29)
    .maxstack  6
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string> V_0,
             class LibGit2Sharp.Tag/'<>c__DisplayClass2' V_1)
    IL_0000:  ldnull
    IL_0001:  stloc.0
    IL_0002:  newobj     instance void LibGit2Sharp.Tag/'<>c__DisplayClass2'::.ctor()
    IL_0007:  stloc.1
    IL_0008:  ldloc.1
    IL_0009:  ldarg.3
    IL_000a:  stfld      string LibGit2Sharp.Tag/'<>c__DisplayClass2'::canonicalName
    IL_000f:  ldarg.0
    IL_0010:  ldarg.1
    IL_0011:  ldarg.2
    IL_0012:  ldloc.0
    IL_0013:  brtrue.s   IL_0022

    IL_0015:  ldloc.1
    IL_0016:  ldftn      instance string LibGit2Sharp.Tag/'<>c__DisplayClass2'::'<.ctor>b__0'(class LibGit2Sharp.Reference)
    IL_001c:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string>::.ctor(object,
                                                                                                                    native int)
    IL_0021:  stloc.0
    IL_0022:  ldloc.0
    IL_0023:  call       instance void class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.GitObject>::.ctor(class LibGit2Sharp.Repository,
                                                                                                                  class LibGit2Sharp.Reference,
                                                                                                                  class [System.Core]System.Func`2<class LibGit2Sharp.Reference,string>)
    IL_0028:  ret
  } // end of method Tag::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.TagAnnotation 
          get_Annotation() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance !0 class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.GitObject>::get_TargetObject()
    IL_0006:  isinst     LibGit2Sharp.TagAnnotation
    IL_000b:  ret
  } // end of method Tag::get_Annotation

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.GitObject 
          get_Target() cil managed
  {
    // Code size       32 (0x20)
    .maxstack  2
    .locals init (class LibGit2Sharp.GitObject V_0,
             class LibGit2Sharp.TagAnnotation V_1)
    IL_0000:  ldarg.0
    IL_0001:  call       instance !0 class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.GitObject>::get_TargetObject()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  isinst     LibGit2Sharp.TagAnnotation
    IL_000d:  stloc.1
    IL_000e:  ldloc.1
    IL_000f:  ldnull
    IL_0010:  call       bool LibGit2Sharp.GitObject::op_Equality(class LibGit2Sharp.GitObject,
                                                                  class LibGit2Sharp.GitObject)
    IL_0015:  brtrue.s   IL_001e

    IL_0017:  ldloc.1
    IL_0018:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.TagAnnotation::get_Target()
    IL_001d:  ret

    IL_001e:  ldloc.0
    IL_001f:  ret
  } // end of method Tag::get_Target

  .method public hidebysig newslot specialname virtual 
          instance bool  get_IsAnnotated() cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.TagAnnotation LibGit2Sharp.Tag::get_Annotation()
    IL_0006:  ldnull
    IL_0007:  call       bool LibGit2Sharp.GitObject::op_Inequality(class LibGit2Sharp.GitObject,
                                                                    class LibGit2Sharp.GitObject)
    IL_000c:  ret
  } // end of method Tag::get_IsAnnotated

  .method family hidebysig virtual instance string 
          Shorten() cil managed
  {
    // Code size       22 (0x16)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.GitObject>::get_CanonicalName()
    IL_0006:  call       string LibGit2Sharp.Reference::get_TagPrefix()
    IL_000b:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0010:  callvirt   instance string [mscorlib]System.String::Substring(int32)
    IL_0015:  ret
  } // end of method Tag::Shorten

  .property instance class LibGit2Sharp.TagAnnotation
          Annotation()
  {
    .get instance class LibGit2Sharp.TagAnnotation LibGit2Sharp.Tag::get_Annotation()
  } // end of property Tag::Annotation
  .property instance class LibGit2Sharp.GitObject
          Target()
  {
    .get instance class LibGit2Sharp.GitObject LibGit2Sharp.Tag::get_Target()
  } // end of property Tag::Target
  .property instance bool IsAnnotated()
  {
    .get instance bool LibGit2Sharp.Tag::get_IsAnnotated()
  } // end of property Tag::IsAnnotated
} // end of class LibGit2Sharp.Tag

.class public auto ansi beforefieldinit LibGit2Sharp.TagAnnotation
       extends LibGit2Sharp.GitObject
{
  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass2'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.TagAnnotation '<>4__this'
    .field public class LibGit2Sharp.Repository repo
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass2'::.ctor

    .method public hidebysig instance class LibGit2Sharp.GitObject 
            '<.ctor>b__0'(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle obj) cil managed
    {
      // Code size       25 (0x19)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.TagAnnotation/'<>c__DisplayClass2'::repo
      IL_0006:  ldarg.1
      IL_0007:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_tag_target_oid(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
      IL_000c:  ldarg.1
      IL_000d:  call       valuetype LibGit2Sharp.Core.GitObjectType LibGit2Sharp.Core.Proxy::git_tag_target_type(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
      IL_0012:  ldnull
      IL_0013:  call       class LibGit2Sharp.GitObject LibGit2Sharp.GitObject::BuildFrom(class LibGit2Sharp.Repository,
                                                                                          class LibGit2Sharp.ObjectId,
                                                                                          valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                          class LibGit2Sharp.Core.FilePath)
      IL_0018:  ret
    } // end of method '<>c__DisplayClass2'::'<.ctor>b__0'

  } // end of class '<>c__DisplayClass2'

  .field private initonly class LibGit2Sharp.Core.GitObjectLazyGroup group
  .field private initonly class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.GitObject> lazyTarget
  .field private initonly class LibGit2Sharp.Core.ILazy`1<string> lazyName
  .field private initonly class LibGit2Sharp.Core.ILazy`1<string> lazyMessage
  .field private initonly class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Signature> lazyTagger
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.GitObject::.ctor()
    IL_0006:  ret
  } // end of method TagAnnotation::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.ObjectId id) cil managed
  {
    // Code size       177 (0xb1)
    .maxstack  6
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.GitObject> V_0,
             class LibGit2Sharp.TagAnnotation/'<>c__DisplayClass2' V_1)
    IL_0000:  ldnull
    IL_0001:  stloc.0
    IL_0002:  newobj     instance void LibGit2Sharp.TagAnnotation/'<>c__DisplayClass2'::.ctor()
    IL_0007:  stloc.1
    IL_0008:  ldloc.1
    IL_0009:  ldarg.1
    IL_000a:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.TagAnnotation/'<>c__DisplayClass2'::repo
    IL_000f:  ldarg.0
    IL_0010:  ldloc.1
    IL_0011:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.TagAnnotation/'<>c__DisplayClass2'::repo
    IL_0016:  ldarg.2
    IL_0017:  call       instance void LibGit2Sharp.GitObject::.ctor(class LibGit2Sharp.Repository,
                                                                     class LibGit2Sharp.ObjectId)
    IL_001c:  ldloc.1
    IL_001d:  ldarg.0
    IL_001e:  stfld      class LibGit2Sharp.TagAnnotation LibGit2Sharp.TagAnnotation/'<>c__DisplayClass2'::'<>4__this'
    IL_0023:  ldarg.0
    IL_0024:  ldloc.1
    IL_0025:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.TagAnnotation/'<>c__DisplayClass2'::repo
    IL_002a:  ldarg.2
    IL_002b:  ldnull
    IL_002c:  ldftn      string LibGit2Sharp.Core.Proxy::git_tag_name(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0032:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,string>::.ctor(object,
                                                                                                                                           native int)
    IL_0037:  call       class LibGit2Sharp.Core.ILazy`1<!!0> LibGit2Sharp.Core.GitObjectLazyGroup::Singleton<string>(class LibGit2Sharp.Repository,
                                                                                                                      class LibGit2Sharp.ObjectId,
                                                                                                                      class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,!!0>)
    IL_003c:  stfld      class LibGit2Sharp.Core.ILazy`1<string> LibGit2Sharp.TagAnnotation::lazyName
    IL_0041:  ldarg.0
    IL_0042:  ldloc.1
    IL_0043:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.TagAnnotation/'<>c__DisplayClass2'::repo
    IL_0048:  ldarg.2
    IL_0049:  ldloc.0
    IL_004a:  brtrue.s   IL_0059

    IL_004c:  ldloc.1
    IL_004d:  ldftn      instance class LibGit2Sharp.GitObject LibGit2Sharp.TagAnnotation/'<>c__DisplayClass2'::'<.ctor>b__0'(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0053:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.GitObject>::.ctor(object,
                                                                                                                                                                 native int)
    IL_0058:  stloc.0
    IL_0059:  ldloc.0
    IL_005a:  call       class LibGit2Sharp.Core.ILazy`1<!!0> LibGit2Sharp.Core.GitObjectLazyGroup::Singleton<class LibGit2Sharp.GitObject>(class LibGit2Sharp.Repository,
                                                                                                                                            class LibGit2Sharp.ObjectId,
                                                                                                                                            class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,!!0>)
    IL_005f:  stfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.GitObject> LibGit2Sharp.TagAnnotation::lazyTarget
    IL_0064:  ldarg.0
    IL_0065:  ldloc.1
    IL_0066:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.TagAnnotation/'<>c__DisplayClass2'::repo
    IL_006b:  ldarg.2
    IL_006c:  newobj     instance void LibGit2Sharp.Core.GitObjectLazyGroup::.ctor(class LibGit2Sharp.Repository,
                                                                                   class LibGit2Sharp.ObjectId)
    IL_0071:  stfld      class LibGit2Sharp.Core.GitObjectLazyGroup LibGit2Sharp.TagAnnotation::group
    IL_0076:  ldarg.0
    IL_0077:  ldarg.0
    IL_0078:  ldfld      class LibGit2Sharp.Core.GitObjectLazyGroup LibGit2Sharp.TagAnnotation::group
    IL_007d:  ldnull
    IL_007e:  ldftn      class LibGit2Sharp.Signature LibGit2Sharp.Core.Proxy::git_tag_tagger(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0084:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,class LibGit2Sharp.Signature>::.ctor(object,
                                                                                                                                                                 native int)
    IL_0089:  callvirt   instance class LibGit2Sharp.Core.ILazy`1<!!0> class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle>::AddLazy<class LibGit2Sharp.Signature>(class [System.Core]System.Func`2<!0,!!0>)
    IL_008e:  stfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Signature> LibGit2Sharp.TagAnnotation::lazyTagger
    IL_0093:  ldarg.0
    IL_0094:  ldarg.0
    IL_0095:  ldfld      class LibGit2Sharp.Core.GitObjectLazyGroup LibGit2Sharp.TagAnnotation::group
    IL_009a:  ldnull
    IL_009b:  ldftn      string LibGit2Sharp.Core.Proxy::git_tag_message(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_00a1:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,string>::.ctor(object,
                                                                                                                                           native int)
    IL_00a6:  callvirt   instance class LibGit2Sharp.Core.ILazy`1<!!0> class LibGit2Sharp.Core.LazyGroup`1<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle>::AddLazy<string>(class [System.Core]System.Func`2<!0,!!0>)
    IL_00ab:  stfld      class LibGit2Sharp.Core.ILazy`1<string> LibGit2Sharp.TagAnnotation::lazyMessage
    IL_00b0:  ret
  } // end of method TagAnnotation::.ctor

  .method public hidebysig newslot specialname virtual 
          instance string  get_Name() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<string> LibGit2Sharp.TagAnnotation::lazyName
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<string>::get_Value()
    IL_000b:  ret
  } // end of method TagAnnotation::get_Name

  .method public hidebysig newslot specialname virtual 
          instance string  get_Message() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<string> LibGit2Sharp.TagAnnotation::lazyMessage
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<string>::get_Value()
    IL_000b:  ret
  } // end of method TagAnnotation::get_Message

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.GitObject 
          get_Target() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.GitObject> LibGit2Sharp.TagAnnotation::lazyTarget
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.GitObject>::get_Value()
    IL_000b:  ret
  } // end of method TagAnnotation::get_Target

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Signature 
          get_Tagger() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Signature> LibGit2Sharp.TagAnnotation::lazyTagger
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<class LibGit2Sharp.Signature>::get_Value()
    IL_000b:  ret
  } // end of method TagAnnotation::get_Tagger

  .property instance string Name()
  {
    .get instance string LibGit2Sharp.TagAnnotation::get_Name()
  } // end of property TagAnnotation::Name
  .property instance string Message()
  {
    .get instance string LibGit2Sharp.TagAnnotation::get_Message()
  } // end of property TagAnnotation::Message
  .property instance class LibGit2Sharp.GitObject
          Target()
  {
    .get instance class LibGit2Sharp.GitObject LibGit2Sharp.TagAnnotation::get_Target()
  } // end of property TagAnnotation::Target
  .property instance class LibGit2Sharp.Signature
          Tagger()
  {
    .get instance class LibGit2Sharp.Signature LibGit2Sharp.TagAnnotation::get_Tagger()
  } // end of property TagAnnotation::Tagger
} // end of class LibGit2Sharp.TagAnnotation

.class public auto ansi beforefieldinit LibGit2Sharp.TagCollection
       extends [mscorlib]System.Object
       implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Tag>,
                  [mscorlib]System.Collections.IEnumerable
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .field assembly initonly class LibGit2Sharp.Repository repo
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method TagCollection::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.TagCollection::repo
    IL_000d:  ret
  } // end of method TagCollection::.ctor

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.Tag 
          get_Item(string name) cil managed
  {
    // Code size       61 (0x3d)
    .maxstack  4
    .locals init (string V_0,
             class LibGit2Sharp.Reference V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.1
    IL_000c:  call       string LibGit2Sharp.TagCollection::NormalizeToCanonicalName(string)
    IL_0011:  stloc.0
    IL_0012:  ldarg.0
    IL_0013:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.TagCollection::repo
    IL_0018:  callvirt   instance class LibGit2Sharp.ReferenceCollection LibGit2Sharp.Repository::get_Refs()
    IL_001d:  ldloc.0
    IL_001e:  callvirt   instance !!0 LibGit2Sharp.ReferenceCollection::Resolve<class LibGit2Sharp.Reference>(string)
    IL_0023:  stloc.1
    IL_0024:  ldloc.1
    IL_0025:  ldnull
    IL_0026:  call       bool LibGit2Sharp.Reference::op_Equality(class LibGit2Sharp.Reference,
                                                                  class LibGit2Sharp.Reference)
    IL_002b:  brtrue.s   IL_003b

    IL_002d:  ldarg.0
    IL_002e:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.TagCollection::repo
    IL_0033:  ldloc.1
    IL_0034:  ldloc.0
    IL_0035:  newobj     instance void LibGit2Sharp.Tag::.ctor(class LibGit2Sharp.Repository,
                                                               class LibGit2Sharp.Reference,
                                                               string)
    IL_003a:  ret

    IL_003b:  ldnull
    IL_003c:  ret
  } // end of method TagCollection::get_Item

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Tag> 
          GetEnumerator() cil managed
  {
    // Code size       39 (0x27)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.TagCollection::repo
    IL_0006:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_000b:  call       class [mscorlib]System.Collections.Generic.IList`1<string> LibGit2Sharp.Core.Proxy::git_tag_list(class LibGit2Sharp.Core.Handles.RepositorySafeHandle)
    IL_0010:  ldarg.0
    IL_0011:  ldftn      instance class LibGit2Sharp.Tag LibGit2Sharp.TagCollection::'<GetEnumerator>b__0'(string)
    IL_0017:  newobj     instance void class [System.Core]System.Func`2<string,class LibGit2Sharp.Tag>::.ctor(object,
                                                                                                              native int)
    IL_001c:  call       class [mscorlib]System.Collections.Generic.IEnumerable`1<!!1> [System.Core]System.Linq.Enumerable::Select<string,class LibGit2Sharp.Tag>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
                                                                                                                                                                  class [System.Core]System.Func`2<!!0,!!1>)
    IL_0021:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.Tag>::GetEnumerator()
    IL_0026:  ret
  } // end of method TagCollection::GetEnumerator

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.Tag> LibGit2Sharp.TagCollection::GetEnumerator()
    IL_0006:  ret
  } // end of method TagCollection::System.Collections.IEnumerable.GetEnumerator

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Tag 
          Add(string name,
              class LibGit2Sharp.GitObject target,
              class LibGit2Sharp.Signature tagger,
              string message,
              [opt] bool allowOverwrite) cil managed
  {
    .param [5] = bool(false)
    // Code size       84 (0x54)
    .maxstack  6
    .locals init (string V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "target"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.3
    IL_0017:  ldstr      "tagger"
    IL_001c:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0021:  ldarg.s    message
    IL_0023:  ldstr      "message"
    IL_0028:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_002d:  ldarg.s    message
    IL_002f:  call       string LibGit2Sharp.Core.Proxy::git_message_prettify(string)
    IL_0034:  stloc.0
    IL_0035:  ldarg.0
    IL_0036:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.TagCollection::repo
    IL_003b:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0040:  ldarg.1
    IL_0041:  ldarg.2
    IL_0042:  ldarg.3
    IL_0043:  ldloc.0
    IL_0044:  ldarg.s    allowOverwrite
    IL_0046:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_tag_create(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                             string,
                                                                                             class LibGit2Sharp.GitObject,
                                                                                             class LibGit2Sharp.Signature,
                                                                                             string,
                                                                                             bool)
    IL_004b:  pop
    IL_004c:  ldarg.0
    IL_004d:  ldarg.1
    IL_004e:  callvirt   instance class LibGit2Sharp.Tag LibGit2Sharp.TagCollection::get_Item(string)
    IL_0053:  ret
  } // end of method TagCollection::Add

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.Tag 
          Add(string name,
              class LibGit2Sharp.GitObject target,
              [opt] bool allowOverwrite) cil managed
  {
    .param [3] = bool(false)
    // Code size       50 (0x32)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "target"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.0
    IL_0017:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.TagCollection::repo
    IL_001c:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0021:  ldarg.1
    IL_0022:  ldarg.2
    IL_0023:  ldarg.3
    IL_0024:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_tag_create_lightweight(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                         string,
                                                                                                         class LibGit2Sharp.GitObject,
                                                                                                         bool)
    IL_0029:  pop
    IL_002a:  ldarg.0
    IL_002b:  ldarg.1
    IL_002c:  callvirt   instance class LibGit2Sharp.Tag LibGit2Sharp.TagCollection::get_Item(string)
    IL_0031:  ret
  } // end of method TagCollection::Add

  .method public hidebysig newslot virtual 
          instance void  Remove(class LibGit2Sharp.Tag tag) cil managed
  {
    // Code size       24 (0x18)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "tag"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance string class LibGit2Sharp.ReferenceWrapper`1<class LibGit2Sharp.GitObject>::get_CanonicalName()
    IL_0012:  call       void LibGit2Sharp.TagCollectionExtensions::Remove(class LibGit2Sharp.TagCollection,
                                                                           string)
    IL_0017:  ret
  } // end of method TagCollection::Remove

  .method private hidebysig static string 
          NormalizeToCanonicalName(string name) cil managed
  {
    // Code size       33 (0x21)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  call       bool LibGit2Sharp.ReferenceExtensions::LooksLikeTag(string)
    IL_0011:  brfalse.s  IL_0015

    IL_0013:  ldarg.0
    IL_0014:  ret

    IL_0015:  call       string LibGit2Sharp.Reference::get_TagPrefix()
    IL_001a:  ldarg.0
    IL_001b:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0020:  ret
  } // end of method TagCollection::NormalizeToCanonicalName

  .method assembly hidebysig static string 
          UnCanonicalizeName(string name) cil managed
  {
    // Code size       38 (0x26)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "name"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  call       bool LibGit2Sharp.ReferenceExtensions::LooksLikeTag(string)
    IL_0011:  brtrue.s   IL_0015

    IL_0013:  ldarg.0
    IL_0014:  ret

    IL_0015:  ldarg.0
    IL_0016:  call       string LibGit2Sharp.Reference::get_TagPrefix()
    IL_001b:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0020:  callvirt   instance string [mscorlib]System.String::Substring(int32)
    IL_0025:  ret
  } // end of method TagCollection::UnCanonicalizeName

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       38 (0x26)
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "Count = {0}"
    IL_000a:  ldc.i4.1
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  call       int32 [System.Core]System.Linq.Enumerable::Count<class LibGit2Sharp.Tag>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_0019:  box        [mscorlib]System.Int32
    IL_001e:  stelem.ref
    IL_001f:  ldloc.0
    IL_0020:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0025:  ret
  } // end of method TagCollection::get_DebuggerDisplay

  .method private hidebysig instance class LibGit2Sharp.Tag 
          '<GetEnumerator>b__0'(string n) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance class LibGit2Sharp.Tag LibGit2Sharp.TagCollection::get_Item(string)
    IL_0007:  ret
  } // end of method TagCollection::'<GetEnumerator>b__0'

  .property instance class LibGit2Sharp.Tag
          Item(string)
  {
    .get instance class LibGit2Sharp.Tag LibGit2Sharp.TagCollection::get_Item(string)
  } // end of property TagCollection::Item
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.TagCollection::get_DebuggerDisplay()
  } // end of property TagCollection::DebuggerDisplay
} // end of class LibGit2Sharp.TagCollection

.class public auto ansi beforefieldinit LibGit2Sharp.Tree
       extends LibGit2Sharp.GitObject
       implements class [mscorlib]System.Collections.Generic.IEnumerable`1<class LibGit2Sharp.TreeEntry>,
                  [mscorlib]System.Collections.IEnumerable
{
  .custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 14 7B 44 65 62 75 67 67 65 72 44 69 73 70   // ...{DebuggerDisp
                                                                                                 6C 61 79 2C 6E 71 7D 00 00 )                      // lay,nq}..
  .custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .class auto ansi sealed nested private beforefieldinit '<GetEnumerator>d__0'
         extends [mscorlib]System.Object
         implements class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntry>,
                    [mscorlib]System.Collections.IEnumerator,
                    [mscorlib]System.IDisposable
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field private class LibGit2Sharp.TreeEntry '<>2__current'
    .field private int32 '<>1__state'
    .field public class LibGit2Sharp.Tree '<>4__this'
    .field public class LibGit2Sharp.Core.ObjectSafeWrapper '<obj>5__1'
    .field public uint32 '<i>5__2'
    .field public class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle '<handle>5__3'
    .method private hidebysig newslot virtual final 
            instance bool  MoveNext() cil managed
    {
      .override [mscorlib]System.Collections.IEnumerator::MoveNext
      // Code size       246 (0xf6)
      .maxstack  6
      .locals init (bool V_0,
               int32 V_1)
      .try
      {
        IL_0000:  ldarg.0
        IL_0001:  ldfld      int32 LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>1__state'
        IL_0006:  stloc.1
        IL_0007:  ldloc.1
        IL_0008:  switch     ( 
                              IL_001e,
                              IL_00e9,
                              IL_00b6)
        IL_0019:  br         IL_00e9

        IL_001e:  ldarg.0
        IL_001f:  ldc.i4.m1
        IL_0020:  stfld      int32 LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>1__state'
        IL_0025:  ldarg.0
        IL_0026:  ldarg.0
        IL_0027:  ldfld      class LibGit2Sharp.Tree LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>4__this'
        IL_002c:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
        IL_0031:  ldarg.0
        IL_0032:  ldfld      class LibGit2Sharp.Tree LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>4__this'
        IL_0037:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.GitObject::repo
        IL_003c:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
        IL_0041:  ldc.i4.0
        IL_0042:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                      class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                      bool)
        IL_0047:  stfld      class LibGit2Sharp.Core.ObjectSafeWrapper LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<obj>5__1'
        IL_004c:  ldarg.0
        IL_004d:  ldc.i4.1
        IL_004e:  stfld      int32 LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>1__state'
        IL_0053:  ldarg.0
        IL_0054:  ldc.i4.0
        IL_0055:  stfld      uint32 LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<i>5__2'
        IL_005a:  br.s       IL_00cb

        IL_005c:  ldarg.0
        IL_005d:  ldarg.0
        IL_005e:  ldfld      class LibGit2Sharp.Core.ObjectSafeWrapper LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<obj>5__1'
        IL_0063:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
        IL_0068:  ldarg.0
        IL_0069:  ldfld      uint32 LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<i>5__2'
        IL_006e:  conv.u8
        IL_006f:  call       class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle LibGit2Sharp.Core.Proxy::git_tree_entry_byindex(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,
                                                                                                                                 int64)
        IL_0074:  stfld      class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<handle>5__3'
        IL_0079:  ldarg.0
        IL_007a:  ldarg.0
        IL_007b:  ldfld      class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<handle>5__3'
        IL_0080:  ldarg.0
        IL_0081:  ldfld      class LibGit2Sharp.Tree LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>4__this'
        IL_0086:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
        IL_008b:  ldarg.0
        IL_008c:  ldfld      class LibGit2Sharp.Tree LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>4__this'
        IL_0091:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.GitObject::repo
        IL_0096:  ldarg.0
        IL_0097:  ldfld      class LibGit2Sharp.Tree LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>4__this'
        IL_009c:  ldfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.Tree::path
        IL_00a1:  newobj     instance void LibGit2Sharp.TreeEntry::.ctor(class [mscorlib]System.Runtime.InteropServices.SafeHandle,
                                                                         class LibGit2Sharp.ObjectId,
                                                                         class LibGit2Sharp.Repository,
                                                                         class LibGit2Sharp.Core.FilePath)
        IL_00a6:  stfld      class LibGit2Sharp.TreeEntry LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>2__current'
        IL_00ab:  ldarg.0
        IL_00ac:  ldc.i4.2
        IL_00ad:  stfld      int32 LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>1__state'
        IL_00b2:  ldc.i4.1
        IL_00b3:  stloc.0
        IL_00b4:  leave.s    IL_00f4

        IL_00b6:  ldarg.0
        IL_00b7:  ldc.i4.1
        IL_00b8:  stfld      int32 LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>1__state'
        IL_00bd:  ldarg.0
        IL_00be:  dup
        IL_00bf:  ldfld      uint32 LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<i>5__2'
        IL_00c4:  ldc.i4.1
        IL_00c5:  add
        IL_00c6:  stfld      uint32 LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<i>5__2'
        IL_00cb:  ldarg.0
        IL_00cc:  ldfld      uint32 LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<i>5__2'
        IL_00d1:  conv.u8
        IL_00d2:  ldarg.0
        IL_00d3:  ldfld      class LibGit2Sharp.Tree LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>4__this'
        IL_00d8:  callvirt   instance int32 LibGit2Sharp.Tree::get_Count()
        IL_00dd:  conv.i8
        IL_00de:  blt        IL_005c

        IL_00e3:  ldarg.0
        IL_00e4:  call       instance void LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>m__Finally4'()
        IL_00e9:  ldc.i4.0
        IL_00ea:  stloc.0
        IL_00eb:  leave.s    IL_00f4

      }  // end .try
      fault
      {
        IL_00ed:  ldarg.0
        IL_00ee:  call       instance void LibGit2Sharp.Tree/'<GetEnumerator>d__0'::System.IDisposable.Dispose()
        IL_00f3:  endfinally
      }  // end handler
      IL_00f4:  ldloc.0
      IL_00f5:  ret
    } // end of method '<GetEnumerator>d__0'::MoveNext

    .method private hidebysig newslot specialname virtual final 
            instance class LibGit2Sharp.TreeEntry 
            'System.Collections.Generic.IEnumerator<LibGit2Sharp.TreeEntry>.get_Current'() cil managed
    {
      .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
      .override  method instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntry>::get_Current()
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.TreeEntry LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>2__current'
      IL_0006:  ret
    } // end of method '<GetEnumerator>d__0'::'System.Collections.Generic.IEnumerator<LibGit2Sharp.TreeEntry>.get_Current'

    .method private hidebysig newslot virtual final 
            instance void  System.Collections.IEnumerator.Reset() cil managed
    {
      .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
      .override [mscorlib]System.Collections.IEnumerator::Reset
      // Code size       6 (0x6)
      .maxstack  8
      IL_0000:  newobj     instance void [mscorlib]System.NotSupportedException::.ctor()
      IL_0005:  throw
    } // end of method '<GetEnumerator>d__0'::System.Collections.IEnumerator.Reset

    .method private hidebysig newslot virtual final 
            instance void  System.IDisposable.Dispose() cil managed
    {
      .override [mscorlib]System.IDisposable::Dispose
      // Code size       34 (0x22)
      .maxstack  2
      .locals init (int32 V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      int32 LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>1__state'
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  ldc.i4.1
      IL_0009:  sub
      IL_000a:  switch     ( 
                            IL_0018,
                            IL_0018)
      IL_0017:  ret

      .try
      {
        IL_0018:  leave.s    IL_0021

      }  // end .try
      finally
      {
        IL_001a:  ldarg.0
        IL_001b:  call       instance void LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>m__Finally4'()
        IL_0020:  endfinally
      }  // end handler
      IL_0021:  ret
    } // end of method '<GetEnumerator>d__0'::System.IDisposable.Dispose

    .method private hidebysig newslot specialname virtual final 
            instance object  System.Collections.IEnumerator.get_Current() cil managed
    {
      .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
      .override [mscorlib]System.Collections.IEnumerator::get_Current
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.TreeEntry LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>2__current'
      IL_0006:  ret
    } // end of method '<GetEnumerator>d__0'::System.Collections.IEnumerator.get_Current

    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(int32 '<>1__state') cil managed
    {
      .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  stfld      int32 LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>1__state'
      IL_000d:  ret
    } // end of method '<GetEnumerator>d__0'::.ctor

    .method private hidebysig instance void 
            '<>m__Finally4'() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.m1
      IL_0002:  stfld      int32 LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>1__state'
      IL_0007:  ldarg.0
      IL_0008:  ldfld      class LibGit2Sharp.Core.ObjectSafeWrapper LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<obj>5__1'
      IL_000d:  brfalse.s  IL_001a

      IL_000f:  ldarg.0
      IL_0010:  ldfld      class LibGit2Sharp.Core.ObjectSafeWrapper LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<obj>5__1'
      IL_0015:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_001a:  ret
    } // end of method '<GetEnumerator>d__0'::'<>m__Finally4'

    .property instance class LibGit2Sharp.TreeEntry
            'System.Collections.Generic.IEnumerator<LibGit2Sharp.TreeEntry>.Current'()
    {
      .get instance class LibGit2Sharp.TreeEntry LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'System.Collections.Generic.IEnumerator<LibGit2Sharp.TreeEntry>.get_Current'()
    } // end of property '<GetEnumerator>d__0'::'System.Collections.Generic.IEnumerator<LibGit2Sharp.TreeEntry>.Current'
    .property instance object System.Collections.IEnumerator.Current()
    {
      .get instance object LibGit2Sharp.Tree/'<GetEnumerator>d__0'::System.Collections.IEnumerator.get_Current()
    } // end of property '<GetEnumerator>d__0'::System.Collections.IEnumerator.Current
  } // end of class '<GetEnumerator>d__0'

  .field private initonly class LibGit2Sharp.Core.FilePath path
  .field private initonly class LibGit2Sharp.Core.ILazy`1<int32> lazyCount
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.GitObject::.ctor()
    IL_0006:  ret
  } // end of method Tree::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.ObjectId id,
                               class LibGit2Sharp.Core.FilePath path) cil managed
  {
    // Code size       55 (0x37)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.GitObject::.ctor(class LibGit2Sharp.Repository,
                                                                     class LibGit2Sharp.ObjectId)
    IL_0008:  ldarg.0
    IL_0009:  ldarg.3
    IL_000a:  dup
    IL_000b:  brtrue.s   IL_0018

    IL_000d:  pop
    IL_000e:  ldstr      ""
    IL_0013:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0018:  stfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.Tree::path
    IL_001d:  ldarg.0
    IL_001e:  ldarg.1
    IL_001f:  ldarg.2
    IL_0020:  ldnull
    IL_0021:  ldftn      int32 LibGit2Sharp.Core.Proxy::git_tree_entrycount(class LibGit2Sharp.Core.Handles.GitObjectSafeHandle)
    IL_0027:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,int32>::.ctor(object,
                                                                                                                                          native int)
    IL_002c:  call       class LibGit2Sharp.Core.ILazy`1<!!0> LibGit2Sharp.Core.GitObjectLazyGroup::Singleton<int32>(class LibGit2Sharp.Repository,
                                                                                                                     class LibGit2Sharp.ObjectId,
                                                                                                                     class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,!!0>)
    IL_0031:  stfld      class LibGit2Sharp.Core.ILazy`1<int32> LibGit2Sharp.Tree::lazyCount
    IL_0036:  ret
  } // end of method Tree::.ctor

  .method public hidebysig newslot specialname virtual 
          instance int32  get_Count() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.ILazy`1<int32> LibGit2Sharp.Tree::lazyCount
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.ILazy`1<int32>::get_Value()
    IL_000b:  ret
  } // end of method Tree::get_Count

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.TreeEntry 
          get_Item(string relativePath) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0007:  call       instance class LibGit2Sharp.TreeEntry LibGit2Sharp.Tree::RetrieveFromPath(class LibGit2Sharp.Core.FilePath)
    IL_000c:  ret
  } // end of method Tree::get_Item

  .method private hidebysig instance class LibGit2Sharp.TreeEntry 
          RetrieveFromPath(class LibGit2Sharp.Core.FilePath relativePath) cil managed
  {
    // Code size       145 (0x91)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle_Owned V_0,
             string V_1,
             string V_2,
             string V_3,
             class LibGit2Sharp.TreeEntry V_4,
             char[] V_5)
    IL_0000:  ldarg.1
    IL_0001:  call       bool LibGit2Sharp.Core.FilePathExtensions::IsNullOrEmpty(class LibGit2Sharp.Core.FilePath)
    IL_0006:  brfalse.s  IL_000a

    IL_0008:  ldnull
    IL_0009:  ret

    IL_000a:  ldarg.0
    IL_000b:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.GitObject::repo
    IL_0010:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
    IL_0015:  ldarg.0
    IL_0016:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_001b:  ldarg.1
    IL_001c:  call       class LibGit2Sharp.Core.Handles.TreeEntrySafeHandle_Owned LibGit2Sharp.Core.Proxy::git_tree_entry_bypath(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                                                  class LibGit2Sharp.ObjectId,
                                                                                                                                  class LibGit2Sharp.Core.FilePath)
    IL_0021:  stloc.0
    .try
    {
      IL_0022:  ldloc.0
      IL_0023:  brtrue.s   IL_002a

      IL_0025:  ldnull
      IL_0026:  stloc.s    V_4
      IL_0028:  leave.s    IL_008e

      IL_002a:  ldarg.1
      IL_002b:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Posix()
      IL_0030:  stloc.1
      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.1
      IL_0033:  newarr     [mscorlib]System.Char
      IL_0038:  stloc.s    V_5
      IL_003a:  ldloc.s    V_5
      IL_003c:  ldc.i4.0
      IL_003d:  ldc.i4.s   47
      IL_003f:  stelem.i2
      IL_0040:  ldloc.s    V_5
      IL_0042:  callvirt   instance string[] [mscorlib]System.String::Split(char[])
      IL_0047:  call       !!0 [System.Core]System.Linq.Enumerable::Last<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
      IL_004c:  stloc.2
      IL_004d:  ldloc.1
      IL_004e:  ldc.i4.0
      IL_004f:  ldloc.1
      IL_0050:  callvirt   instance int32 [mscorlib]System.String::get_Length()
      IL_0055:  ldloc.2
      IL_0056:  callvirt   instance int32 [mscorlib]System.String::get_Length()
      IL_005b:  sub
      IL_005c:  callvirt   instance string [mscorlib]System.String::Substring(int32,
                                                                              int32)
      IL_0061:  stloc.3
      IL_0062:  ldloc.0
      IL_0063:  ldarg.0
      IL_0064:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
      IL_0069:  ldarg.0
      IL_006a:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.GitObject::repo
      IL_006f:  ldarg.0
      IL_0070:  ldfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.Tree::path
      IL_0075:  ldloc.3
      IL_0076:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePathExtensions::Combine(class LibGit2Sharp.Core.FilePath,
                                                                                                          string)
      IL_007b:  newobj     instance void LibGit2Sharp.TreeEntry::.ctor(class [mscorlib]System.Runtime.InteropServices.SafeHandle,
                                                                       class LibGit2Sharp.ObjectId,
                                                                       class LibGit2Sharp.Repository,
                                                                       class LibGit2Sharp.Core.FilePath)
      IL_0080:  stloc.s    V_4
      IL_0082:  leave.s    IL_008e

    }  // end .try
    finally
    {
      IL_0084:  ldloc.0
      IL_0085:  brfalse.s  IL_008d

      IL_0087:  ldloc.0
      IL_0088:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_008d:  endfinally
    }  // end handler
    IL_008e:  ldloc.s    V_4
    IL_0090:  ret
  } // end of method Tree::RetrieveFromPath

  .method assembly hidebysig specialname 
          instance string  get_Path() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.Tree::path
    IL_0006:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
    IL_000b:  ret
  } // end of method Tree::get_Path

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntry> 
          GetEnumerator() cil managed
  {
    // Code size       16 (0x10)
    .maxstack  2
    .locals init (class LibGit2Sharp.Tree/'<GetEnumerator>d__0' V_0)
    IL_0000:  ldc.i4.0
    IL_0001:  newobj     instance void LibGit2Sharp.Tree/'<GetEnumerator>d__0'::.ctor(int32)
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldarg.0
    IL_0009:  stfld      class LibGit2Sharp.Tree LibGit2Sharp.Tree/'<GetEnumerator>d__0'::'<>4__this'
    IL_000e:  ldloc.0
    IL_000f:  ret
  } // end of method Tree::GetEnumerator

  .method private hidebysig newslot virtual final 
          instance class [mscorlib]System.Collections.IEnumerator 
          System.Collections.IEnumerable.GetEnumerator() cil managed
  {
    .override [mscorlib]System.Collections.IEnumerable::GetEnumerator
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntry> LibGit2Sharp.Tree::GetEnumerator()
    IL_0006:  ret
  } // end of method Tree::System.Collections.IEnumerable.GetEnumerator

  .method private hidebysig specialname instance string 
          get_DebuggerDisplay() cil managed
  {
    // Code size       53 (0x35)
    .maxstack  6
    .locals init (object[] V_0)
    IL_0000:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0005:  ldstr      "{0}, Count = {1}"
    IL_000a:  ldc.i4.2
    IL_000b:  newarr     [mscorlib]System.Object
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0019:  ldc.i4.7
    IL_001a:  callvirt   instance string LibGit2Sharp.ObjectId::ToString(int32)
    IL_001f:  stelem.ref
    IL_0020:  ldloc.0
    IL_0021:  ldc.i4.1
    IL_0022:  ldarg.0
    IL_0023:  callvirt   instance int32 LibGit2Sharp.Tree::get_Count()
    IL_0028:  box        [mscorlib]System.Int32
    IL_002d:  stelem.ref
    IL_002e:  ldloc.0
    IL_002f:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0034:  ret
  } // end of method Tree::get_DebuggerDisplay

  .property instance int32 Count()
  {
    .get instance int32 LibGit2Sharp.Tree::get_Count()
  } // end of property Tree::Count
  .property instance class LibGit2Sharp.TreeEntry
          Item(string)
  {
    .get instance class LibGit2Sharp.TreeEntry LibGit2Sharp.Tree::get_Item(string)
  } // end of property Tree::Item
  .property instance string Path()
  {
    .get instance string LibGit2Sharp.Tree::get_Path()
  } // end of property Tree::Path
  .property instance string DebuggerDisplay()
  {
    .get instance string LibGit2Sharp.Tree::get_DebuggerDisplay()
  } // end of property Tree::DebuggerDisplay
} // end of class LibGit2Sharp.Tree

.class public auto ansi beforefieldinit LibGit2Sharp.TreeDefinition
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .class auto ansi nested private beforefieldinit TreeBuilder
         extends [mscorlib]System.Object
         implements [mscorlib]System.IDisposable
  {
    .field private initonly class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle handle
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ldarg.0
      IL_0007:  call       class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle LibGit2Sharp.Core.Proxy::git_treebuilder_create()
      IL_000c:  stfld      class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle LibGit2Sharp.TreeDefinition/TreeBuilder::handle
      IL_0011:  ret
    } // end of method TreeBuilder::.ctor

    .method public hidebysig instance void 
            Insert(string name,
                   class LibGit2Sharp.TreeEntryDefinition treeEntryDefinition) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle LibGit2Sharp.TreeDefinition/TreeBuilder::handle
      IL_0006:  ldarg.1
      IL_0007:  ldarg.2
      IL_0008:  call       void LibGit2Sharp.Core.Proxy::git_treebuilder_insert(class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle,
                                                                                string,
                                                                                class LibGit2Sharp.TreeEntryDefinition)
      IL_000d:  ret
    } // end of method TreeBuilder::Insert

    .method public hidebysig instance class LibGit2Sharp.ObjectId 
            Write(class LibGit2Sharp.Repository repo) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  callvirt   instance class LibGit2Sharp.Core.Handles.RepositorySafeHandle LibGit2Sharp.Repository::get_Handle()
      IL_0006:  ldarg.0
      IL_0007:  ldfld      class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle LibGit2Sharp.TreeDefinition/TreeBuilder::handle
      IL_000c:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_treebuilder_write(class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                                      class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle)
      IL_0011:  ret
    } // end of method TreeBuilder::Write

    .method public hidebysig newslot virtual final 
            instance void  Dispose() cil managed
    {
      // Code size       12 (0xc)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Core.Handles.TreeBuilderSafeHandle LibGit2Sharp.TreeDefinition/TreeBuilder::handle
      IL_0006:  call       void LibGit2Sharp.Core.Handles.SafeHandleExtensions::SafeDispose(class LibGit2Sharp.Core.Handles.SafeHandleBase)
      IL_000b:  ret
    } // end of method TreeBuilder::Dispose

  } // end of class TreeBuilder

  .field private initonly class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition> entries
  .field private initonly class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition> unwrappedTrees
  .field private static class [System.Core]System.Func`2<valuetype LibGit2Sharp.Mode,bool> 'CS$<>9__CachedAnonymousMethodDelegate1'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig static class LibGit2Sharp.TreeDefinition 
          From(class LibGit2Sharp.Tree tree) cil managed
  {
    // Code size       73 (0x49)
    .maxstack  3
    .locals init (class LibGit2Sharp.TreeDefinition V_0,
             class LibGit2Sharp.TreeEntry V_1,
             class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntry> V_2)
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "tree"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  newobj     instance void LibGit2Sharp.TreeDefinition::.ctor()
    IL_0010:  stloc.0
    IL_0011:  ldarg.0
    IL_0012:  callvirt   instance class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntry> LibGit2Sharp.Tree::GetEnumerator()
    IL_0017:  stloc.2
    .try
    {
      IL_0018:  br.s       IL_0033

      IL_001a:  ldloc.2
      IL_001b:  callvirt   instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<class LibGit2Sharp.TreeEntry>::get_Current()
      IL_0020:  stloc.1
      IL_0021:  ldloc.0
      IL_0022:  ldloc.1
      IL_0023:  callvirt   instance string LibGit2Sharp.TreeEntry::get_Name()
      IL_0028:  ldloc.1
      IL_0029:  call       class LibGit2Sharp.TreeEntryDefinition LibGit2Sharp.TreeEntryDefinition::From(class LibGit2Sharp.TreeEntry)
      IL_002e:  callvirt   instance void LibGit2Sharp.TreeDefinition::AddEntry(string,
                                                                               class LibGit2Sharp.TreeEntryDefinition)
      IL_0033:  ldloc.2
      IL_0034:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_0039:  brtrue.s   IL_001a

      IL_003b:  leave.s    IL_0047

    }  // end .try
    finally
    {
      IL_003d:  ldloc.2
      IL_003e:  brfalse.s  IL_0046

      IL_0040:  ldloc.2
      IL_0041:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0046:  endfinally
    }  // end handler
    IL_0047:  ldloc.0
    IL_0048:  ret
  } // end of method TreeDefinition::From

  .method public hidebysig static class LibGit2Sharp.TreeDefinition 
          From(class LibGit2Sharp.Commit commit) cil managed
  {
    // Code size       23 (0x17)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "commit"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  callvirt   instance class LibGit2Sharp.Tree LibGit2Sharp.Commit::get_Tree()
    IL_0011:  call       class LibGit2Sharp.TreeDefinition LibGit2Sharp.TreeDefinition::From(class LibGit2Sharp.Tree)
    IL_0016:  ret
  } // end of method TreeDefinition::From

  .method private hidebysig instance void 
          AddEntry(string targetTreeEntryName,
                   class LibGit2Sharp.TreeEntryDefinition treeEntryDefinition) cil managed
  {
    // Code size       37 (0x25)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeDefinition::entries
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance bool class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition>::ContainsKey(!0)
    IL_000c:  brfalse.s  IL_0017

    IL_000e:  ldarg.0
    IL_000f:  ldarg.1
    IL_0010:  ldarg.2
    IL_0011:  call       instance void LibGit2Sharp.TreeDefinition::WrapTree(string,
                                                                             class LibGit2Sharp.TreeEntryDefinition)
    IL_0016:  ret

    IL_0017:  ldarg.0
    IL_0018:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeDefinition::entries
    IL_001d:  ldarg.1
    IL_001e:  ldarg.2
    IL_001f:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition>::Add(!0,
                                                                                                                                                   !1)
    IL_0024:  ret
  } // end of method TreeDefinition::AddEntry

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.TreeDefinition 
          Remove(string treeEntryPath) cil managed
  {
    // Code size       191 (0xbf)
    .maxstack  2
    .locals init (class LibGit2Sharp.Core.Compat.Tuple`2<string,string> V_0)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "treeEntryPath"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.0
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance class LibGit2Sharp.TreeEntryDefinition LibGit2Sharp.TreeDefinition::get_Item(string)
    IL_0012:  ldnull
    IL_0013:  call       bool LibGit2Sharp.TreeEntryDefinition::op_Equality(class LibGit2Sharp.TreeEntryDefinition,
                                                                            class LibGit2Sharp.TreeEntryDefinition)
    IL_0018:  brfalse.s  IL_001c

    IL_001a:  ldarg.0
    IL_001b:  ret

    IL_001c:  ldarg.1
    IL_001d:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0022:  call       class LibGit2Sharp.Core.Compat.Tuple`2<string,string> LibGit2Sharp.TreeDefinition::ExtractPosixLeadingSegment(class LibGit2Sharp.Core.FilePath)
    IL_0027:  stloc.0
    IL_0028:  ldloc.0
    IL_0029:  callvirt   instance !1 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item2()
    IL_002e:  brtrue.s   IL_0042

    IL_0030:  ldarg.0
    IL_0031:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeDefinition::entries
    IL_0036:  ldloc.0
    IL_0037:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item1()
    IL_003c:  callvirt   instance bool class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition>::Remove(!0)
    IL_0041:  pop
    IL_0042:  ldarg.0
    IL_0043:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition> LibGit2Sharp.TreeDefinition::unwrappedTrees
    IL_0048:  ldloc.0
    IL_0049:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item1()
    IL_004e:  callvirt   instance bool class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition>::ContainsKey(!0)
    IL_0053:  brtrue.s   IL_0057

    IL_0055:  ldarg.0
    IL_0056:  ret

    IL_0057:  ldloc.0
    IL_0058:  callvirt   instance !1 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item2()
    IL_005d:  brfalse.s  IL_007c

    IL_005f:  ldarg.0
    IL_0060:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition> LibGit2Sharp.TreeDefinition::unwrappedTrees
    IL_0065:  ldloc.0
    IL_0066:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item1()
    IL_006b:  callvirt   instance !1 class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition>::get_Item(!0)
    IL_0070:  ldloc.0
    IL_0071:  callvirt   instance !1 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item2()
    IL_0076:  callvirt   instance class LibGit2Sharp.TreeDefinition LibGit2Sharp.TreeDefinition::Remove(string)
    IL_007b:  pop
    IL_007c:  ldarg.0
    IL_007d:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition> LibGit2Sharp.TreeDefinition::unwrappedTrees
    IL_0082:  ldloc.0
    IL_0083:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item1()
    IL_0088:  callvirt   instance !1 class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition>::get_Item(!0)
    IL_008d:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeDefinition::entries
    IL_0092:  callvirt   instance int32 class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition>::get_Count()
    IL_0097:  brtrue.s   IL_00bd

    IL_0099:  ldarg.0
    IL_009a:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition> LibGit2Sharp.TreeDefinition::unwrappedTrees
    IL_009f:  ldloc.0
    IL_00a0:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item1()
    IL_00a5:  callvirt   instance bool class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition>::Remove(!0)
    IL_00aa:  pop
    IL_00ab:  ldarg.0
    IL_00ac:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeDefinition::entries
    IL_00b1:  ldloc.0
    IL_00b2:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item1()
    IL_00b7:  callvirt   instance bool class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition>::Remove(!0)
    IL_00bc:  pop
    IL_00bd:  ldarg.0
    IL_00be:  ret
  } // end of method TreeDefinition::Remove

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.TreeDefinition 
          Add(string targetTreeEntryPath,
              class LibGit2Sharp.TreeEntryDefinition treeEntryDefinition) cil managed
  {
    // Code size       197 (0xc5)
    .maxstack  5
    .locals init (class LibGit2Sharp.Core.Compat.Tuple`2<string,string> V_0,
             class LibGit2Sharp.TreeDefinition V_1,
             object[] V_2)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "targetTreeEntryPath"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.2
    IL_000c:  ldstr      "treeEntryDefinition"
    IL_0011:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_0016:  ldarg.1
    IL_0017:  call       bool [mscorlib]System.IO.Path::IsPathRooted(string)
    IL_001c:  brfalse.s  IL_0029

    IL_001e:  ldstr      "The provided path is an absolute path."
    IL_0023:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0028:  throw

    IL_0029:  ldarg.2
    IL_002a:  isinst     LibGit2Sharp.TransientTreeTreeEntryDefinition
    IL_002f:  brfalse.s  IL_0084

    IL_0031:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0036:  ldstr      "The {0} references a target which hasn't been crea"
    + "ted in the {1} yet. This situation can occur when the target is a whole"
    + " new {2} being created, or when an existing {2} is being updated becaus"
    + "e some of its children were added/removed."
    IL_003b:  ldc.i4.3
    IL_003c:  newarr     [mscorlib]System.Object
    IL_0041:  stloc.2
    IL_0042:  ldloc.2
    IL_0043:  ldc.i4.0
    IL_0044:  ldtoken    LibGit2Sharp.TreeEntryDefinition
    IL_0049:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_004e:  callvirt   instance string [mscorlib]System.Reflection.MemberInfo::get_Name()
    IL_0053:  stelem.ref
    IL_0054:  ldloc.2
    IL_0055:  ldc.i4.1
    IL_0056:  ldtoken    LibGit2Sharp.ObjectDatabase
    IL_005b:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0060:  callvirt   instance string [mscorlib]System.Reflection.MemberInfo::get_Name()
    IL_0065:  stelem.ref
    IL_0066:  ldloc.2
    IL_0067:  ldc.i4.2
    IL_0068:  ldtoken    LibGit2Sharp.Tree
    IL_006d:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_0072:  callvirt   instance string [mscorlib]System.Reflection.MemberInfo::get_Name()
    IL_0077:  stelem.ref
    IL_0078:  ldloc.2
    IL_0079:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_007e:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor(string)
    IL_0083:  throw

    IL_0084:  ldarg.1
    IL_0085:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_008a:  call       class LibGit2Sharp.Core.Compat.Tuple`2<string,string> LibGit2Sharp.TreeDefinition::ExtractPosixLeadingSegment(class LibGit2Sharp.Core.FilePath)
    IL_008f:  stloc.0
    IL_0090:  ldloc.0
    IL_0091:  callvirt   instance !1 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item2()
    IL_0096:  brfalse.s  IL_00b6

    IL_0098:  ldarg.0
    IL_0099:  ldloc.0
    IL_009a:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item1()
    IL_009f:  ldc.i4.1
    IL_00a0:  call       instance class LibGit2Sharp.TreeDefinition LibGit2Sharp.TreeDefinition::RetrieveOrBuildTreeDefinition(string,
                                                                                                                               bool)
    IL_00a5:  stloc.1
    IL_00a6:  ldloc.1
    IL_00a7:  ldloc.0
    IL_00a8:  callvirt   instance !1 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item2()
    IL_00ad:  ldarg.2
    IL_00ae:  callvirt   instance class LibGit2Sharp.TreeDefinition LibGit2Sharp.TreeDefinition::Add(string,
                                                                                                     class LibGit2Sharp.TreeEntryDefinition)
    IL_00b3:  pop
    IL_00b4:  br.s       IL_00c3

    IL_00b6:  ldarg.0
    IL_00b7:  ldloc.0
    IL_00b8:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item1()
    IL_00bd:  ldarg.2
    IL_00be:  call       instance void LibGit2Sharp.TreeDefinition::AddEntry(string,
                                                                             class LibGit2Sharp.TreeEntryDefinition)
    IL_00c3:  ldarg.0
    IL_00c4:  ret
  } // end of method TreeDefinition::Add

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.TreeDefinition 
          Add(string targetTreeEntryPath,
              class LibGit2Sharp.Blob 'blob',
              valuetype LibGit2Sharp.Mode mode) cil managed
  {
    // Code size       68 (0x44)
    .maxstack  4
    .locals init (class LibGit2Sharp.TreeEntryDefinition V_0)
    IL_0000:  ldarg.2
    IL_0001:  ldstr      "blob"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.3
    IL_000c:  ldsfld     class [System.Core]System.Func`2<valuetype LibGit2Sharp.Mode,bool> LibGit2Sharp.TreeDefinition::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0011:  brtrue.s   IL_0024

    IL_0013:  ldnull
    IL_0014:  ldftn      bool LibGit2Sharp.TreeDefinition::'<Add>b__0'(valuetype LibGit2Sharp.Mode)
    IL_001a:  newobj     instance void class [System.Core]System.Func`2<valuetype LibGit2Sharp.Mode,bool>::.ctor(object,
                                                                                                                 native int)
    IL_001f:  stsfld     class [System.Core]System.Func`2<valuetype LibGit2Sharp.Mode,bool> LibGit2Sharp.TreeDefinition::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0024:  ldsfld     class [System.Core]System.Func`2<valuetype LibGit2Sharp.Mode,bool> LibGit2Sharp.TreeDefinition::'CS$<>9__CachedAnonymousMethodDelegate1'
    IL_0029:  ldstr      "mode"
    IL_002e:  call       void LibGit2Sharp.Core.Ensure::ArgumentConformsTo<valuetype LibGit2Sharp.Mode>(!!0,
                                                                                                        class [System.Core]System.Func`2<!!0,bool>,
                                                                                                        string)
    IL_0033:  ldarg.2
    IL_0034:  ldarg.3
    IL_0035:  call       class LibGit2Sharp.TreeEntryDefinition LibGit2Sharp.TreeEntryDefinition::From(class LibGit2Sharp.Blob,
                                                                                                       valuetype LibGit2Sharp.Mode)
    IL_003a:  stloc.0
    IL_003b:  ldarg.0
    IL_003c:  ldarg.1
    IL_003d:  ldloc.0
    IL_003e:  callvirt   instance class LibGit2Sharp.TreeDefinition LibGit2Sharp.TreeDefinition::Add(string,
                                                                                                     class LibGit2Sharp.TreeEntryDefinition)
    IL_0043:  ret
  } // end of method TreeDefinition::Add

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.TreeDefinition 
          Add(string targetTreeEntryPath,
              string filePath,
              valuetype LibGit2Sharp.Mode mode) cil managed
  {
    // Code size       28 (0x1c)
    .maxstack  3
    .locals init (class LibGit2Sharp.TreeEntryDefinition V_0)
    IL_0000:  ldarg.2
    IL_0001:  ldstr      "filePath"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.2
    IL_000c:  ldarg.3
    IL_000d:  call       class LibGit2Sharp.TreeEntryDefinition LibGit2Sharp.TreeEntryDefinition::TransientBlobFrom(string,
                                                                                                                    valuetype LibGit2Sharp.Mode)
    IL_0012:  stloc.0
    IL_0013:  ldarg.0
    IL_0014:  ldarg.1
    IL_0015:  ldloc.0
    IL_0016:  callvirt   instance class LibGit2Sharp.TreeDefinition LibGit2Sharp.TreeDefinition::Add(string,
                                                                                                     class LibGit2Sharp.TreeEntryDefinition)
    IL_001b:  ret
  } // end of method TreeDefinition::Add

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.TreeDefinition 
          Add(string targetTreeEntryPath,
              class LibGit2Sharp.Tree tree) cil managed
  {
    // Code size       27 (0x1b)
    .maxstack  3
    .locals init (class LibGit2Sharp.TreeEntryDefinition V_0)
    IL_0000:  ldarg.2
    IL_0001:  ldstr      "tree"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  call       class LibGit2Sharp.TreeEntryDefinition LibGit2Sharp.TreeEntryDefinition::From(class LibGit2Sharp.Tree)
    IL_0011:  stloc.0
    IL_0012:  ldarg.0
    IL_0013:  ldarg.1
    IL_0014:  ldloc.0
    IL_0015:  callvirt   instance class LibGit2Sharp.TreeDefinition LibGit2Sharp.TreeDefinition::Add(string,
                                                                                                     class LibGit2Sharp.TreeEntryDefinition)
    IL_001a:  ret
  } // end of method TreeDefinition::Add

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.TreeDefinition 
          Add(class LibGit2Sharp.Submodule submodule) cil managed
  {
    // Code size       30 (0x1e)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "submodule"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.0
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance string LibGit2Sharp.Submodule::get_Path()
    IL_0012:  ldarg.1
    IL_0013:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.Submodule::get_HeadCommitId()
    IL_0018:  callvirt   instance class LibGit2Sharp.TreeDefinition LibGit2Sharp.TreeDefinition::AddGitLink(string,
                                                                                                            class LibGit2Sharp.ObjectId)
    IL_001d:  ret
  } // end of method TreeDefinition::Add

  .method public hidebysig newslot virtual 
          instance class LibGit2Sharp.TreeDefinition 
          AddGitLink(string targetTreeEntryPath,
                     class LibGit2Sharp.ObjectId objectId) cil managed
  {
    // Code size       27 (0x1b)
    .maxstack  3
    .locals init (class LibGit2Sharp.TreeEntryDefinition V_0)
    IL_0000:  ldarg.2
    IL_0001:  ldstr      "objectId"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNull(object,
                                                                        string)
    IL_000b:  ldarg.2
    IL_000c:  call       class LibGit2Sharp.TreeEntryDefinition LibGit2Sharp.TreeEntryDefinition::From(class LibGit2Sharp.ObjectId)
    IL_0011:  stloc.0
    IL_0012:  ldarg.0
    IL_0013:  ldarg.1
    IL_0014:  ldloc.0
    IL_0015:  callvirt   instance class LibGit2Sharp.TreeDefinition LibGit2Sharp.TreeDefinition::Add(string,
                                                                                                     class LibGit2Sharp.TreeEntryDefinition)
    IL_001a:  ret
  } // end of method TreeDefinition::AddGitLink

  .method private hidebysig instance class LibGit2Sharp.TreeDefinition 
          RetrieveOrBuildTreeDefinition(string treeName,
                                        bool shouldOverWrite) cil managed
  {
    // Code size       144 (0x90)
    .maxstack  3
    .locals init (class LibGit2Sharp.TreeDefinition V_0,
             class LibGit2Sharp.TreeEntryDefinition V_1,
             bool V_2,
             valuetype LibGit2Sharp.TreeEntryTargetType V_3)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition> LibGit2Sharp.TreeDefinition::unwrappedTrees
    IL_0006:  ldarg.1
    IL_0007:  ldloca.s   V_0
    IL_0009:  callvirt   instance bool class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition>::TryGetValue(!0,
                                                                                                                                                      !1&)
    IL_000e:  brfalse.s  IL_0012

    IL_0010:  ldloc.0
    IL_0011:  ret

    IL_0012:  ldarg.0
    IL_0013:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeDefinition::entries
    IL_0018:  ldarg.1
    IL_0019:  ldloca.s   V_1
    IL_001b:  callvirt   instance bool class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition>::TryGetValue(!0,
                                                                                                                                                           !1&)
    IL_0020:  stloc.2
    IL_0021:  ldloc.2
    IL_0022:  brfalse.s  IL_0065

    IL_0024:  ldloc.1
    IL_0025:  callvirt   instance valuetype LibGit2Sharp.TreeEntryTargetType LibGit2Sharp.TreeEntryDefinition::get_TargetType()
    IL_002a:  stloc.3
    IL_002b:  ldloc.3
    IL_002c:  switch     ( 
                          IL_0052,
                          IL_003f,
                          IL_0052)
    IL_003d:  br.s       IL_005f

    IL_003f:  ldloc.1
    IL_0040:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.TreeEntryDefinition::get_Target()
    IL_0045:  isinst     LibGit2Sharp.Tree
    IL_004a:  call       class LibGit2Sharp.TreeDefinition LibGit2Sharp.TreeDefinition::From(class LibGit2Sharp.Tree)
    IL_004f:  stloc.0
    IL_0050:  br.s       IL_0070

    IL_0052:  ldarg.2
    IL_0053:  brfalse.s  IL_005d

    IL_0055:  newobj     instance void LibGit2Sharp.TreeDefinition::.ctor()
    IL_005a:  stloc.0
    IL_005b:  br.s       IL_0070

    IL_005d:  ldnull
    IL_005e:  ret

    IL_005f:  newobj     instance void [mscorlib]System.NotImplementedException::.ctor()
    IL_0064:  throw

    IL_0065:  ldarg.2
    IL_0066:  brtrue.s   IL_006a

    IL_0068:  ldnull
    IL_0069:  ret

    IL_006a:  newobj     instance void LibGit2Sharp.TreeDefinition::.ctor()
    IL_006f:  stloc.0
    IL_0070:  ldarg.0
    IL_0071:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeDefinition::entries
    IL_0076:  ldarg.1
    IL_0077:  newobj     instance void LibGit2Sharp.TransientTreeTreeEntryDefinition::.ctor()
    IL_007c:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition>::set_Item(!0,
                                                                                                                                                        !1)
    IL_0081:  ldarg.0
    IL_0082:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition> LibGit2Sharp.TreeDefinition::unwrappedTrees
    IL_0087:  ldarg.1
    IL_0088:  ldloc.0
    IL_0089:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition>::Add(!0,
                                                                                                                                              !1)
    IL_008e:  ldloc.0
    IL_008f:  ret
  } // end of method TreeDefinition::RetrieveOrBuildTreeDefinition

  .method assembly hidebysig instance class LibGit2Sharp.Tree 
          Build(class LibGit2Sharp.Repository repository) cil managed
  {
    // Code size       247 (0xf7)
    .maxstack  4
    .locals init (class LibGit2Sharp.TreeDefinition/TreeBuilder V_0,
             class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.Compat.Tuple`2<string,class LibGit2Sharp.TreeEntryDefinition>> V_1,
             valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<string,class LibGit2Sharp.TreeEntryDefinition> V_2,
             string V_3,
             class LibGit2Sharp.TreeEntryDefinition V_4,
             class LibGit2Sharp.TransientBlobTreeEntryDefinition V_5,
             class LibGit2Sharp.Blob V_6,
             class LibGit2Sharp.TreeEntryDefinition V_7,
             class LibGit2Sharp.ObjectId V_8,
             class [mscorlib]System.Action`1<class LibGit2Sharp.Core.Compat.Tuple`2<string,class LibGit2Sharp.TreeEntryDefinition>> V_9,
             class LibGit2Sharp.Tree V_10,
             valuetype [mscorlib]System.Collections.Generic.Dictionary`2/Enumerator<string,class LibGit2Sharp.TreeEntryDefinition> V_11)
    IL_0000:  ldnull
    IL_0001:  stloc.s    V_9
    IL_0003:  ldarg.0
    IL_0004:  ldarg.1
    IL_0005:  call       instance void LibGit2Sharp.TreeDefinition::WrapAllTreeDefinitions(class LibGit2Sharp.Repository)
    IL_000a:  newobj     instance void LibGit2Sharp.TreeDefinition/TreeBuilder::.ctor()
    IL_000f:  stloc.0
    .try
    {
      IL_0010:  ldarg.0
      IL_0011:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeDefinition::entries
      IL_0016:  callvirt   instance int32 class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition>::get_Count()
      IL_001b:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.Compat.Tuple`2<string,class LibGit2Sharp.TreeEntryDefinition>>::.ctor(int32)
      IL_0020:  stloc.1
      IL_0021:  ldarg.0
      IL_0022:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeDefinition::entries
      IL_0027:  callvirt   instance valuetype [mscorlib]System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition>::GetEnumerator()
      IL_002c:  stloc.s    V_11
      .try
      {
        IL_002e:  br.s       IL_00a2

        IL_0030:  ldloca.s   V_11
        IL_0032:  call       instance valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!0,!1> valuetype [mscorlib]System.Collections.Generic.Dictionary`2/Enumerator<string,class LibGit2Sharp.TreeEntryDefinition>::get_Current()
        IL_0037:  stloc.2
        IL_0038:  ldloca.s   V_2
        IL_003a:  call       instance !0 valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<string,class LibGit2Sharp.TreeEntryDefinition>::get_Key()
        IL_003f:  stloc.3
        IL_0040:  ldloca.s   V_2
        IL_0042:  call       instance !1 valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<string,class LibGit2Sharp.TreeEntryDefinition>::get_Value()
        IL_0047:  stloc.s    V_4
        IL_0049:  ldloc.s    V_4
        IL_004b:  isinst     LibGit2Sharp.TransientBlobTreeEntryDefinition
        IL_0050:  stloc.s    V_5
        IL_0052:  ldloc.s    V_5
        IL_0054:  ldnull
        IL_0055:  call       bool LibGit2Sharp.TreeEntryDefinition::op_Equality(class LibGit2Sharp.TreeEntryDefinition,
                                                                                class LibGit2Sharp.TreeEntryDefinition)
        IL_005a:  brfalse.s  IL_0067

        IL_005c:  ldloc.0
        IL_005d:  ldloc.3
        IL_005e:  ldloc.s    V_4
        IL_0060:  callvirt   instance void LibGit2Sharp.TreeDefinition/TreeBuilder::Insert(string,
                                                                                           class LibGit2Sharp.TreeEntryDefinition)
        IL_0065:  br.s       IL_00a2

        IL_0067:  ldloc.s    V_5
        IL_0069:  callvirt   instance class [System.Core]System.Func`2<class LibGit2Sharp.ObjectDatabase,class LibGit2Sharp.Blob> LibGit2Sharp.TransientBlobTreeEntryDefinition::get_Builder()
        IL_006e:  ldarg.1
        IL_006f:  callvirt   instance class LibGit2Sharp.ObjectDatabase LibGit2Sharp.Repository::get_ObjectDatabase()
        IL_0074:  callvirt   instance !1 class [System.Core]System.Func`2<class LibGit2Sharp.ObjectDatabase,class LibGit2Sharp.Blob>::Invoke(!0)
        IL_0079:  stloc.s    V_6
        IL_007b:  ldloc.s    V_6
        IL_007d:  ldloc.s    V_4
        IL_007f:  callvirt   instance valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntryDefinition::get_Mode()
        IL_0084:  call       class LibGit2Sharp.TreeEntryDefinition LibGit2Sharp.TreeEntryDefinition::From(class LibGit2Sharp.Blob,
                                                                                                           valuetype LibGit2Sharp.Mode)
        IL_0089:  stloc.s    V_7
        IL_008b:  ldloc.1
        IL_008c:  ldloc.3
        IL_008d:  ldloc.s    V_7
        IL_008f:  newobj     instance void class LibGit2Sharp.Core.Compat.Tuple`2<string,class LibGit2Sharp.TreeEntryDefinition>::.ctor(!0,
                                                                                                                                        !1)
        IL_0094:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.Compat.Tuple`2<string,class LibGit2Sharp.TreeEntryDefinition>>::Add(!0)
        IL_0099:  ldloc.0
        IL_009a:  ldloc.3
        IL_009b:  ldloc.s    V_7
        IL_009d:  callvirt   instance void LibGit2Sharp.TreeDefinition/TreeBuilder::Insert(string,
                                                                                           class LibGit2Sharp.TreeEntryDefinition)
        IL_00a2:  ldloca.s   V_11
        IL_00a4:  call       instance bool valuetype [mscorlib]System.Collections.Generic.Dictionary`2/Enumerator<string,class LibGit2Sharp.TreeEntryDefinition>::MoveNext()
        IL_00a9:  brtrue.s   IL_0030

        IL_00ab:  leave.s    IL_00bb

      }  // end .try
      finally
      {
        IL_00ad:  ldloca.s   V_11
        IL_00af:  constrained. valuetype [mscorlib]System.Collections.Generic.Dictionary`2/Enumerator<string,class LibGit2Sharp.TreeEntryDefinition>
        IL_00b5:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_00ba:  endfinally
      }  // end handler
      IL_00bb:  ldloc.1
      IL_00bc:  ldloc.s    V_9
      IL_00be:  brtrue.s   IL_00ce

      IL_00c0:  ldarg.0
      IL_00c1:  ldftn      instance void LibGit2Sharp.TreeDefinition::'<Build>b__2'(class LibGit2Sharp.Core.Compat.Tuple`2<string,class LibGit2Sharp.TreeEntryDefinition>)
      IL_00c7:  newobj     instance void class [mscorlib]System.Action`1<class LibGit2Sharp.Core.Compat.Tuple`2<string,class LibGit2Sharp.TreeEntryDefinition>>::.ctor(object,
                                                                                                                                                                       native int)
      IL_00cc:  stloc.s    V_9
      IL_00ce:  ldloc.s    V_9
      IL_00d0:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class LibGit2Sharp.Core.Compat.Tuple`2<string,class LibGit2Sharp.TreeEntryDefinition>>::ForEach(class [mscorlib]System.Action`1<!0>)
      IL_00d5:  ldloc.0
      IL_00d6:  ldarg.1
      IL_00d7:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.TreeDefinition/TreeBuilder::Write(class LibGit2Sharp.Repository)
      IL_00dc:  stloc.s    V_8
      IL_00de:  ldarg.1
      IL_00df:  ldloc.s    V_8
      IL_00e1:  call       !!0 LibGit2Sharp.RepositoryExtensions::Lookup<class LibGit2Sharp.Tree>(class LibGit2Sharp.IRepository,
                                                                                                  class LibGit2Sharp.ObjectId)
      IL_00e6:  stloc.s    V_10
      IL_00e8:  leave.s    IL_00f4

    }  // end .try
    finally
    {
      IL_00ea:  ldloc.0
      IL_00eb:  brfalse.s  IL_00f3

      IL_00ed:  ldloc.0
      IL_00ee:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_00f3:  endfinally
    }  // end handler
    IL_00f4:  ldloc.s    V_10
    IL_00f6:  ret
  } // end of method TreeDefinition::Build

  .method private hidebysig instance void 
          WrapAllTreeDefinitions(class LibGit2Sharp.Repository repository) cil managed
  {
    // Code size       97 (0x61)
    .maxstack  3
    .locals init (valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<string,class LibGit2Sharp.TreeDefinition> V_0,
             class LibGit2Sharp.Tree V_1,
             valuetype [mscorlib]System.Collections.Generic.Dictionary`2/Enumerator<string,class LibGit2Sharp.TreeDefinition> V_2)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition> LibGit2Sharp.TreeDefinition::unwrappedTrees
    IL_0006:  callvirt   instance valuetype [mscorlib]System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition>::GetEnumerator()
    IL_000b:  stloc.2
    .try
    {
      IL_000c:  br.s       IL_003c

      IL_000e:  ldloca.s   V_2
      IL_0010:  call       instance valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<!0,!1> valuetype [mscorlib]System.Collections.Generic.Dictionary`2/Enumerator<string,class LibGit2Sharp.TreeDefinition>::get_Current()
      IL_0015:  stloc.0
      IL_0016:  ldloca.s   V_0
      IL_0018:  call       instance !1 valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<string,class LibGit2Sharp.TreeDefinition>::get_Value()
      IL_001d:  ldarg.1
      IL_001e:  callvirt   instance class LibGit2Sharp.Tree LibGit2Sharp.TreeDefinition::Build(class LibGit2Sharp.Repository)
      IL_0023:  stloc.1
      IL_0024:  ldarg.0
      IL_0025:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeDefinition::entries
      IL_002a:  ldloca.s   V_0
      IL_002c:  call       instance !0 valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<string,class LibGit2Sharp.TreeDefinition>::get_Key()
      IL_0031:  ldloc.1
      IL_0032:  call       class LibGit2Sharp.TreeEntryDefinition LibGit2Sharp.TreeEntryDefinition::From(class LibGit2Sharp.Tree)
      IL_0037:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition>::set_Item(!0,
                                                                                                                                                          !1)
      IL_003c:  ldloca.s   V_2
      IL_003e:  call       instance bool valuetype [mscorlib]System.Collections.Generic.Dictionary`2/Enumerator<string,class LibGit2Sharp.TreeDefinition>::MoveNext()
      IL_0043:  brtrue.s   IL_000e

      IL_0045:  leave.s    IL_0055

    }  // end .try
    finally
    {
      IL_0047:  ldloca.s   V_2
      IL_0049:  constrained. valuetype [mscorlib]System.Collections.Generic.Dictionary`2/Enumerator<string,class LibGit2Sharp.TreeDefinition>
      IL_004f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0054:  endfinally
    }  // end handler
    IL_0055:  ldarg.0
    IL_0056:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition> LibGit2Sharp.TreeDefinition::unwrappedTrees
    IL_005b:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition>::Clear()
    IL_0060:  ret
  } // end of method TreeDefinition::WrapAllTreeDefinitions

  .method private hidebysig instance void 
          WrapTree(string entryName,
                   class LibGit2Sharp.TreeEntryDefinition treeEntryDefinition) cil managed
  {
    // Code size       27 (0x1b)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeDefinition::entries
    IL_0006:  ldarg.1
    IL_0007:  ldarg.2
    IL_0008:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition>::set_Item(!0,
                                                                                                                                                        !1)
    IL_000d:  ldarg.0
    IL_000e:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition> LibGit2Sharp.TreeDefinition::unwrappedTrees
    IL_0013:  ldarg.1
    IL_0014:  callvirt   instance bool class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition>::Remove(!0)
    IL_0019:  pop
    IL_001a:  ret
  } // end of method TreeDefinition::WrapTree

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.TreeEntryDefinition 
          get_Item(string treeEntryPath) cil managed
  {
    // Code size       88 (0x58)
    .maxstack  3
    .locals init (class LibGit2Sharp.Core.Compat.Tuple`2<string,string> V_0,
             class LibGit2Sharp.TreeDefinition V_1,
             class LibGit2Sharp.TreeEntryDefinition V_2)
    IL_0000:  ldarg.1
    IL_0001:  ldstr      "treeEntryPath"
    IL_0006:  call       void LibGit2Sharp.Core.Ensure::ArgumentNotNullOrEmptyString(string,
                                                                                     string)
    IL_000b:  ldarg.1
    IL_000c:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_0011:  call       class LibGit2Sharp.Core.Compat.Tuple`2<string,string> LibGit2Sharp.TreeDefinition::ExtractPosixLeadingSegment(class LibGit2Sharp.Core.FilePath)
    IL_0016:  stloc.0
    IL_0017:  ldloc.0
    IL_0018:  callvirt   instance !1 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item2()
    IL_001d:  brfalse.s  IL_003f

    IL_001f:  ldarg.0
    IL_0020:  ldloc.0
    IL_0021:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item1()
    IL_0026:  ldc.i4.0
    IL_0027:  call       instance class LibGit2Sharp.TreeDefinition LibGit2Sharp.TreeDefinition::RetrieveOrBuildTreeDefinition(string,
                                                                                                                               bool)
    IL_002c:  stloc.1
    IL_002d:  ldloc.1
    IL_002e:  brfalse.s  IL_003d

    IL_0030:  ldloc.1
    IL_0031:  ldloc.0
    IL_0032:  callvirt   instance !1 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item2()
    IL_0037:  callvirt   instance class LibGit2Sharp.TreeEntryDefinition LibGit2Sharp.TreeDefinition::get_Item(string)
    IL_003c:  ret

    IL_003d:  ldnull
    IL_003e:  ret

    IL_003f:  ldarg.0
    IL_0040:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeDefinition::entries
    IL_0045:  ldloc.0
    IL_0046:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::get_Item1()
    IL_004b:  ldloca.s   V_2
    IL_004d:  callvirt   instance bool class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition>::TryGetValue(!0,
                                                                                                                                                           !1&)
    IL_0052:  brfalse.s  IL_0056

    IL_0054:  ldloc.2
    IL_0055:  ret

    IL_0056:  ldnull
    IL_0057:  ret
  } // end of method TreeDefinition::get_Item

  .method private hidebysig static class LibGit2Sharp.Core.Compat.Tuple`2<string,string> 
          ExtractPosixLeadingSegment(class LibGit2Sharp.Core.FilePath targetPath) cil managed
  {
    // Code size       132 (0x84)
    .maxstack  5
    .locals init (string[] V_0,
             char[] V_1,
             object[] V_2)
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Posix()
    IL_0006:  ldc.i4.1
    IL_0007:  newarr     [mscorlib]System.Char
    IL_000c:  stloc.1
    IL_000d:  ldloc.1
    IL_000e:  ldc.i4.0
    IL_000f:  ldc.i4.s   47
    IL_0011:  stelem.i2
    IL_0012:  ldloc.1
    IL_0013:  ldc.i4.2
    IL_0014:  callvirt   instance string[] [mscorlib]System.String::Split(char[],
                                                                          int32)
    IL_0019:  stloc.0
    IL_001a:  ldloc.0
    IL_001b:  ldc.i4.0
    IL_001c:  ldelem.ref
    IL_001d:  ldsfld     string [mscorlib]System.String::Empty
    IL_0022:  call       bool [mscorlib]System.String::op_Equality(string,
                                                                   string)
    IL_0027:  brtrue.s   IL_004e

    IL_0029:  ldloc.0
    IL_002a:  ldlen
    IL_002b:  conv.i4
    IL_002c:  ldc.i4.2
    IL_002d:  bne.un.s   IL_006f

    IL_002f:  ldloc.0
    IL_0030:  ldc.i4.1
    IL_0031:  ldelem.ref
    IL_0032:  ldsfld     string [mscorlib]System.String::Empty
    IL_0037:  call       bool [mscorlib]System.String::op_Equality(string,
                                                                   string)
    IL_003c:  brtrue.s   IL_004e

    IL_003e:  ldloc.0
    IL_003f:  ldc.i4.1
    IL_0040:  ldelem.ref
    IL_0041:  ldstr      "/"
    IL_0046:  ldc.i4.4
    IL_0047:  callvirt   instance bool [mscorlib]System.String::StartsWith(string,
                                                                           valuetype [mscorlib]System.StringComparison)
    IL_004c:  brfalse.s  IL_006f

    IL_004e:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_0053:  ldstr      "'{0}' is not a valid path."
    IL_0058:  ldc.i4.1
    IL_0059:  newarr     [mscorlib]System.Object
    IL_005e:  stloc.2
    IL_005f:  ldloc.2
    IL_0060:  ldc.i4.0
    IL_0061:  ldarg.0
    IL_0062:  stelem.ref
    IL_0063:  ldloc.2
    IL_0064:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_0069:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_006e:  throw

    IL_006f:  ldloc.0
    IL_0070:  ldc.i4.0
    IL_0071:  ldelem.ref
    IL_0072:  ldloc.0
    IL_0073:  ldlen
    IL_0074:  conv.i4
    IL_0075:  ldc.i4.2
    IL_0076:  beq.s      IL_007b

    IL_0078:  ldnull
    IL_0079:  br.s       IL_007e

    IL_007b:  ldloc.0
    IL_007c:  ldc.i4.1
    IL_007d:  ldelem.ref
    IL_007e:  newobj     instance void class LibGit2Sharp.Core.Compat.Tuple`2<string,string>::.ctor(!0,
                                                                                                    !1)
    IL_0083:  ret
  } // end of method TreeDefinition::ExtractPosixLeadingSegment

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       29 (0x1d)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition>::.ctor()
    IL_0006:  stfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeDefinition::entries
    IL_000b:  ldarg.0
    IL_000c:  newobj     instance void class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition>::.ctor()
    IL_0011:  stfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeDefinition> LibGit2Sharp.TreeDefinition::unwrappedTrees
    IL_0016:  ldarg.0
    IL_0017:  call       instance void [mscorlib]System.Object::.ctor()
    IL_001c:  ret
  } // end of method TreeDefinition::.ctor

  .method private hidebysig static bool  '<Add>b__0'(valuetype LibGit2Sharp.Mode m) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  box        LibGit2Sharp.Mode
    IL_0006:  ldsfld     class [mscorlib]System.Enum[] LibGit2Sharp.TreeEntryDefinition::BlobModes
    IL_000b:  call       bool LibGit2Sharp.Core.EnumExtensions::HasAny(class [mscorlib]System.Enum,
                                                                       class [mscorlib]System.Collections.Generic.IEnumerable`1<class [mscorlib]System.Enum>)
    IL_0010:  ret
  } // end of method TreeDefinition::'<Add>b__0'

  .method private hidebysig instance void 
          '<Build>b__2'(class LibGit2Sharp.Core.Compat.Tuple`2<string,class LibGit2Sharp.TreeEntryDefinition> t) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       24 (0x18)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeDefinition::entries
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Tuple`2<string,class LibGit2Sharp.TreeEntryDefinition>::get_Item1()
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance !1 class LibGit2Sharp.Core.Compat.Tuple`2<string,class LibGit2Sharp.TreeEntryDefinition>::get_Item2()
    IL_0012:  callvirt   instance void class [mscorlib]System.Collections.Generic.Dictionary`2<string,class LibGit2Sharp.TreeEntryDefinition>::set_Item(!0,
                                                                                                                                                        !1)
    IL_0017:  ret
  } // end of method TreeDefinition::'<Build>b__2'

  .property instance class LibGit2Sharp.TreeEntryDefinition
          Item(string)
  {
    .get instance class LibGit2Sharp.TreeEntryDefinition LibGit2Sharp.TreeDefinition::get_Item(string)
  } // end of property TreeDefinition::Item
} // end of class LibGit2Sharp.TreeDefinition

.class public auto ansi beforefieldinit LibGit2Sharp.TreeEntry
       extends [mscorlib]System.Object
       implements class [mscorlib]System.IEquatable`1<class LibGit2Sharp.TreeEntry>
{
  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass2'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.TreeEntry '<>4__this'
    .field public class LibGit2Sharp.Core.FilePath parentPath
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass2'::.ctor

    .method public hidebysig instance string 
            '<.ctor>b__0'() cil managed
    {
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.TreeEntry/'<>c__DisplayClass2'::parentPath
      IL_0006:  callvirt   instance string LibGit2Sharp.Core.FilePath::get_Native()
      IL_000b:  ldarg.0
      IL_000c:  ldfld      class LibGit2Sharp.TreeEntry LibGit2Sharp.TreeEntry/'<>c__DisplayClass2'::'<>4__this'
      IL_0011:  callvirt   instance string LibGit2Sharp.TreeEntry::get_Name()
      IL_0016:  call       string [mscorlib]System.IO.Path::Combine(string,
                                                                    string)
      IL_001b:  ret
    } // end of method '<>c__DisplayClass2'::'<.ctor>b__0'

  } // end of class '<>c__DisplayClass2'

  .field private initonly class LibGit2Sharp.ObjectId parentTreeId
  .field private initonly class LibGit2Sharp.Repository repo
  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject> target
  .field private initonly class LibGit2Sharp.ObjectId targetOid
  .field private initonly class LibGit2Sharp.Core.Compat.Lazy`1<string> path
  .field private static initonly class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.TreeEntry> equalityHelper
  .field private valuetype LibGit2Sharp.Mode '<Mode>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private string '<Name>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private valuetype LibGit2Sharp.TreeEntryTargetType '<TargetType>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntry,object> 'CS$<>9__CachedAnonymousMethodDelegate6'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntry,object> 'CS$<>9__CachedAnonymousMethodDelegate7'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method TreeEntry::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.InteropServices.SafeHandle obj,
                               class LibGit2Sharp.ObjectId parentTreeId,
                               class LibGit2Sharp.Repository repo,
                               class LibGit2Sharp.Core.FilePath parentPath) cil managed
  {
    // Code size       150 (0x96)
    .maxstack  4
    .locals init (valuetype LibGit2Sharp.Core.GitObjectType V_0,
             class [System.Core]System.Func`1<string> V_1,
             class LibGit2Sharp.TreeEntry/'<>c__DisplayClass2' V_2)
    IL_0000:  ldnull
    IL_0001:  stloc.1
    IL_0002:  newobj     instance void LibGit2Sharp.TreeEntry/'<>c__DisplayClass2'::.ctor()
    IL_0007:  stloc.2
    IL_0008:  ldloc.2
    IL_0009:  ldarg.s    parentPath
    IL_000b:  stfld      class LibGit2Sharp.Core.FilePath LibGit2Sharp.TreeEntry/'<>c__DisplayClass2'::parentPath
    IL_0010:  ldarg.0
    IL_0011:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0016:  ldloc.2
    IL_0017:  ldarg.0
    IL_0018:  stfld      class LibGit2Sharp.TreeEntry LibGit2Sharp.TreeEntry/'<>c__DisplayClass2'::'<>4__this'
    IL_001d:  ldarg.0
    IL_001e:  ldarg.2
    IL_001f:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntry::parentTreeId
    IL_0024:  ldarg.0
    IL_0025:  ldarg.3
    IL_0026:  stfld      class LibGit2Sharp.Repository LibGit2Sharp.TreeEntry::repo
    IL_002b:  ldarg.0
    IL_002c:  ldarg.1
    IL_002d:  call       class LibGit2Sharp.ObjectId LibGit2Sharp.Core.Proxy::git_tree_entry_id(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_0032:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntry::targetOid
    IL_0037:  ldarg.1
    IL_0038:  call       valuetype LibGit2Sharp.Core.GitObjectType LibGit2Sharp.Core.Proxy::git_tree_entry_type(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_003d:  stloc.0
    IL_003e:  ldarg.0
    IL_003f:  ldloc.0
    IL_0040:  call       valuetype LibGit2Sharp.TreeEntryTargetType LibGit2Sharp.Core.GitObjectTypeExtensions::ToTreeEntryTargetType(valuetype LibGit2Sharp.Core.GitObjectType)
    IL_0045:  call       instance void LibGit2Sharp.TreeEntry::set_TargetType(valuetype LibGit2Sharp.TreeEntryTargetType)
    IL_004a:  ldarg.0
    IL_004b:  ldarg.0
    IL_004c:  ldftn      instance class LibGit2Sharp.GitObject LibGit2Sharp.TreeEntry::RetrieveTreeEntryTarget()
    IL_0052:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.GitObject>::.ctor(object,
                                                                                                             native int)
    IL_0057:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_005c:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject> LibGit2Sharp.TreeEntry::target
    IL_0061:  ldarg.0
    IL_0062:  ldarg.1
    IL_0063:  call       valuetype LibGit2Sharp.Mode LibGit2Sharp.Core.Proxy::git_tree_entry_attributes(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_0068:  call       instance void LibGit2Sharp.TreeEntry::set_Mode(valuetype LibGit2Sharp.Mode)
    IL_006d:  ldarg.0
    IL_006e:  ldarg.1
    IL_006f:  call       string LibGit2Sharp.Core.Proxy::git_tree_entry_name(class [mscorlib]System.Runtime.InteropServices.SafeHandle)
    IL_0074:  call       instance void LibGit2Sharp.TreeEntry::set_Name(string)
    IL_0079:  ldarg.0
    IL_007a:  ldloc.1
    IL_007b:  brtrue.s   IL_008a

    IL_007d:  ldloc.2
    IL_007e:  ldftn      instance string LibGit2Sharp.TreeEntry/'<>c__DisplayClass2'::'<.ctor>b__0'()
    IL_0084:  newobj     instance void class [System.Core]System.Func`1<string>::.ctor(object,
                                                                                       native int)
    IL_0089:  stloc.1
    IL_008a:  ldloc.1
    IL_008b:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<string>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_0090:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<string> LibGit2Sharp.TreeEntry::path
    IL_0095:  ret
  } // end of method TreeEntry::.ctor

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.Mode 
          get_Mode() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntry::'<Mode>k__BackingField'
    IL_0006:  ret
  } // end of method TreeEntry::get_Mode

  .method private hidebysig specialname instance void 
          set_Mode(valuetype LibGit2Sharp.Mode 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntry::'<Mode>k__BackingField'
    IL_0007:  ret
  } // end of method TreeEntry::set_Mode

  .method public hidebysig newslot specialname virtual 
          instance string  get_Name() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      string LibGit2Sharp.TreeEntry::'<Name>k__BackingField'
    IL_0006:  ret
  } // end of method TreeEntry::get_Name

  .method private hidebysig specialname instance void 
          set_Name(string 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      string LibGit2Sharp.TreeEntry::'<Name>k__BackingField'
    IL_0007:  ret
  } // end of method TreeEntry::set_Name

  .method public hidebysig newslot specialname virtual 
          instance string  get_Path() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<string> LibGit2Sharp.TreeEntry::path
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<string>::get_Value()
    IL_000b:  ret
  } // end of method TreeEntry::get_Path

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.GitObject 
          get_Target() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject> LibGit2Sharp.TreeEntry::target
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject>::get_Value()
    IL_000b:  ret
  } // end of method TreeEntry::get_Target

  .method assembly hidebysig specialname 
          instance class LibGit2Sharp.ObjectId 
          get_TargetId() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntry::targetOid
    IL_0006:  ret
  } // end of method TreeEntry::get_TargetId

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.TreeEntryTargetType 
          get_TargetType() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.TreeEntryTargetType LibGit2Sharp.TreeEntry::'<TargetType>k__BackingField'
    IL_0006:  ret
  } // end of method TreeEntry::get_TargetType

  .method private hidebysig specialname instance void 
          set_TargetType(valuetype LibGit2Sharp.TreeEntryTargetType 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      valuetype LibGit2Sharp.TreeEntryTargetType LibGit2Sharp.TreeEntry::'<TargetType>k__BackingField'
    IL_0007:  ret
  } // end of method TreeEntry::set_TargetType

  .method private hidebysig instance class LibGit2Sharp.GitObject 
          RetrieveTreeEntryTarget() cil managed
  {
    // Code size       128 (0x80)
    .maxstack  5
    .locals init (valuetype LibGit2Sharp.TreeEntryTargetType V_0,
             object[] V_1)
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance valuetype LibGit2Sharp.TreeEntryTargetType LibGit2Sharp.TreeEntry::get_TargetType()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  switch     ( 
                          IL_002d,
                          IL_002d,
                          IL_001b)
    IL_0019:  br.s       IL_0055

    IL_001b:  ldarg.0
    IL_001c:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.TreeEntry::repo
    IL_0021:  ldarg.0
    IL_0022:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntry::targetOid
    IL_0027:  newobj     instance void LibGit2Sharp.GitLink::.ctor(class LibGit2Sharp.Repository,
                                                                   class LibGit2Sharp.ObjectId)
    IL_002c:  ret

    IL_002d:  ldarg.0
    IL_002e:  ldfld      class LibGit2Sharp.Repository LibGit2Sharp.TreeEntry::repo
    IL_0033:  ldarg.0
    IL_0034:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntry::targetOid
    IL_0039:  ldarg.0
    IL_003a:  callvirt   instance valuetype LibGit2Sharp.TreeEntryTargetType LibGit2Sharp.TreeEntry::get_TargetType()
    IL_003f:  call       valuetype LibGit2Sharp.Core.GitObjectType LibGit2Sharp.TreeEntryTargetTypeExtensions::ToGitObjectType(valuetype LibGit2Sharp.TreeEntryTargetType)
    IL_0044:  ldarg.0
    IL_0045:  callvirt   instance string LibGit2Sharp.TreeEntry::get_Path()
    IL_004a:  call       class LibGit2Sharp.Core.FilePath LibGit2Sharp.Core.FilePath::op_Implicit(string)
    IL_004f:  call       class LibGit2Sharp.GitObject LibGit2Sharp.GitObject::BuildFrom(class LibGit2Sharp.Repository,
                                                                                        class LibGit2Sharp.ObjectId,
                                                                                        valuetype LibGit2Sharp.Core.GitObjectType,
                                                                                        class LibGit2Sharp.Core.FilePath)
    IL_0054:  ret

    IL_0055:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_005a:  ldstr      "TreeEntry target of type '{0}' is not supported."
    IL_005f:  ldc.i4.1
    IL_0060:  newarr     [mscorlib]System.Object
    IL_0065:  stloc.1
    IL_0066:  ldloc.1
    IL_0067:  ldc.i4.0
    IL_0068:  ldarg.0
    IL_0069:  callvirt   instance valuetype LibGit2Sharp.TreeEntryTargetType LibGit2Sharp.TreeEntry::get_TargetType()
    IL_006e:  box        LibGit2Sharp.TreeEntryTargetType
    IL_0073:  stelem.ref
    IL_0074:  ldloc.1
    IL_0075:  call       string [mscorlib]System.String::Format(class [mscorlib]System.IFormatProvider,
                                                                string,
                                                                object[])
    IL_007a:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor(string)
    IL_007f:  throw
  } // end of method TreeEntry::RetrieveTreeEntryTarget

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  isinst     LibGit2Sharp.TreeEntry
    IL_0007:  call       instance bool LibGit2Sharp.TreeEntry::Equals(class LibGit2Sharp.TreeEntry)
    IL_000c:  ret
  } // end of method TreeEntry::Equals

  .method public hidebysig newslot virtual final 
          instance bool  Equals(class LibGit2Sharp.TreeEntry other) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.TreeEntry> LibGit2Sharp.TreeEntry::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance bool class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.TreeEntry>::Equals(!0,
                                                                                                                            !0)
    IL_000c:  ret
  } // end of method TreeEntry::Equals

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.TreeEntry> LibGit2Sharp.TreeEntry::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  callvirt   instance int32 class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.TreeEntry>::GetHashCode(!0)
    IL_000b:  ret
  } // end of method TreeEntry::GetHashCode

  .method public hidebysig specialname static 
          bool  op_Equality(class LibGit2Sharp.TreeEntry left,
                            class LibGit2Sharp.TreeEntry right) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ret
  } // end of method TreeEntry::op_Equality

  .method public hidebysig specialname static 
          bool  op_Inequality(class LibGit2Sharp.TreeEntry left,
                              class LibGit2Sharp.TreeEntry right) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  ret
  } // end of method TreeEntry::op_Inequality

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       83 (0x53)
    .maxstack  5
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntry,object>[] V_0)
    IL_0000:  ldc.i4.2
    IL_0001:  newarr     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntry,object>
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldc.i4.0
    IL_0009:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntry,object> LibGit2Sharp.TreeEntry::'CS$<>9__CachedAnonymousMethodDelegate6'
    IL_000e:  brtrue.s   IL_0021

    IL_0010:  ldnull
    IL_0011:  ldftn      object LibGit2Sharp.TreeEntry::'<.cctor>b__4'(class LibGit2Sharp.TreeEntry)
    IL_0017:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntry,object>::.ctor(object,
                                                                                                                    native int)
    IL_001c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntry,object> LibGit2Sharp.TreeEntry::'CS$<>9__CachedAnonymousMethodDelegate6'
    IL_0021:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntry,object> LibGit2Sharp.TreeEntry::'CS$<>9__CachedAnonymousMethodDelegate6'
    IL_0026:  stelem.ref
    IL_0027:  ldloc.0
    IL_0028:  ldc.i4.1
    IL_0029:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntry,object> LibGit2Sharp.TreeEntry::'CS$<>9__CachedAnonymousMethodDelegate7'
    IL_002e:  brtrue.s   IL_0041

    IL_0030:  ldnull
    IL_0031:  ldftn      object LibGit2Sharp.TreeEntry::'<.cctor>b__5'(class LibGit2Sharp.TreeEntry)
    IL_0037:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntry,object>::.ctor(object,
                                                                                                                    native int)
    IL_003c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntry,object> LibGit2Sharp.TreeEntry::'CS$<>9__CachedAnonymousMethodDelegate7'
    IL_0041:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntry,object> LibGit2Sharp.TreeEntry::'CS$<>9__CachedAnonymousMethodDelegate7'
    IL_0046:  stelem.ref
    IL_0047:  ldloc.0
    IL_0048:  newobj     instance void class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.TreeEntry>::.ctor(class [System.Core]System.Func`2<!0,object>[])
    IL_004d:  stsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.TreeEntry> LibGit2Sharp.TreeEntry::equalityHelper
    IL_0052:  ret
  } // end of method TreeEntry::.cctor

  .method private hidebysig static object 
          '<.cctor>b__4'(class LibGit2Sharp.TreeEntry x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance string LibGit2Sharp.TreeEntry::get_Name()
    IL_0006:  ret
  } // end of method TreeEntry::'<.cctor>b__4'

  .method private hidebysig static object 
          '<.cctor>b__5'(class LibGit2Sharp.TreeEntry x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntry::parentTreeId
    IL_0006:  ret
  } // end of method TreeEntry::'<.cctor>b__5'

  .property instance valuetype LibGit2Sharp.Mode
          Mode()
  {
    .set instance void LibGit2Sharp.TreeEntry::set_Mode(valuetype LibGit2Sharp.Mode)
    .get instance valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntry::get_Mode()
  } // end of property TreeEntry::Mode
  .property instance string Name()
  {
    .get instance string LibGit2Sharp.TreeEntry::get_Name()
    .set instance void LibGit2Sharp.TreeEntry::set_Name(string)
  } // end of property TreeEntry::Name
  .property instance string Path()
  {
    .get instance string LibGit2Sharp.TreeEntry::get_Path()
  } // end of property TreeEntry::Path
  .property instance class LibGit2Sharp.GitObject
          Target()
  {
    .get instance class LibGit2Sharp.GitObject LibGit2Sharp.TreeEntry::get_Target()
  } // end of property TreeEntry::Target
  .property instance class LibGit2Sharp.ObjectId
          TargetId()
  {
    .get instance class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntry::get_TargetId()
  } // end of property TreeEntry::TargetId
  .property instance valuetype LibGit2Sharp.TreeEntryTargetType
          TargetType()
  {
    .get instance valuetype LibGit2Sharp.TreeEntryTargetType LibGit2Sharp.TreeEntry::get_TargetType()
    .set instance void LibGit2Sharp.TreeEntry::set_TargetType(valuetype LibGit2Sharp.TreeEntryTargetType)
  } // end of property TreeEntry::TargetType
} // end of class LibGit2Sharp.TreeEntry

.class public auto ansi beforefieldinit LibGit2Sharp.TreeEntryDefinition
       extends [mscorlib]System.Object
       implements class [mscorlib]System.IEquatable`1<class LibGit2Sharp.TreeEntryDefinition>
{
  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass2'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.TreeEntry treeEntry
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass2'::.ctor

    .method public hidebysig instance class LibGit2Sharp.GitObject 
            '<From>b__1'() cil managed
    {
      // Code size       12 (0xc)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.TreeEntry LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass2'::treeEntry
      IL_0006:  callvirt   instance class LibGit2Sharp.GitObject LibGit2Sharp.TreeEntry::get_Target()
      IL_000b:  ret
    } // end of method '<>c__DisplayClass2'::'<From>b__1'

  } // end of class '<>c__DisplayClass2'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass6'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Blob 'blob'
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass6'::.ctor

    .method public hidebysig instance class LibGit2Sharp.GitObject 
            '<From>b__5'() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Blob LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass6'::'blob'
      IL_0006:  ret
    } // end of method '<>c__DisplayClass6'::'<From>b__5'

  } // end of class '<>c__DisplayClass6'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClassc'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public string filePath
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClassc'::.ctor

    .method public hidebysig instance class LibGit2Sharp.Blob 
            '<TransientBlobFrom>b__a'(class LibGit2Sharp.ObjectDatabase odb) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      string LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClassc'::filePath
      IL_0007:  callvirt   instance class LibGit2Sharp.Blob LibGit2Sharp.ObjectDatabase::CreateBlob(string)
      IL_000c:  ret
    } // end of method '<>c__DisplayClassc'::'<TransientBlobFrom>b__a'

  } // end of class '<>c__DisplayClassc'

  .class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass13'
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public class LibGit2Sharp.Tree tree
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method '<>c__DisplayClass13'::.ctor

    .method public hidebysig instance class LibGit2Sharp.GitObject 
            '<From>b__12'() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldfld      class LibGit2Sharp.Tree LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass13'::tree
      IL_0006:  ret
    } // end of method '<>c__DisplayClass13'::'<From>b__12'

  } // end of class '<>c__DisplayClass13'

  .field private class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject> target
  .field private static initonly class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.TreeEntryDefinition> equalityHelper
  .field static assembly initonly class [mscorlib]System.Enum[] BlobModes
  .field private valuetype LibGit2Sharp.Mode '<Mode>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private valuetype LibGit2Sharp.TreeEntryTargetType '<TargetType>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private class LibGit2Sharp.ObjectId '<TargetId>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<valuetype LibGit2Sharp.Mode,bool> 'CS$<>9__CachedAnonymousMethodDelegateb'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`1<class LibGit2Sharp.GitObject> 'CS$<>9__CachedAnonymousMethodDelegate10'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object> 'CS$<>9__CachedAnonymousMethodDelegate18'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object> 'CS$<>9__CachedAnonymousMethodDelegate19'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .field private static class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object> 'CS$<>9__CachedAnonymousMethodDelegate1a'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method TreeEntryDefinition::.ctor

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.Mode 
          get_Mode() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntryDefinition::'<Mode>k__BackingField'
    IL_0006:  ret
  } // end of method TreeEntryDefinition::get_Mode

  .method private hidebysig specialname instance void 
          set_Mode(valuetype LibGit2Sharp.Mode 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntryDefinition::'<Mode>k__BackingField'
    IL_0007:  ret
  } // end of method TreeEntryDefinition::set_Mode

  .method public hidebysig newslot specialname virtual 
          instance valuetype LibGit2Sharp.TreeEntryTargetType 
          get_TargetType() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      valuetype LibGit2Sharp.TreeEntryTargetType LibGit2Sharp.TreeEntryDefinition::'<TargetType>k__BackingField'
    IL_0006:  ret
  } // end of method TreeEntryDefinition::get_TargetType

  .method private hidebysig specialname instance void 
          set_TargetType(valuetype LibGit2Sharp.TreeEntryTargetType 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      valuetype LibGit2Sharp.TreeEntryTargetType LibGit2Sharp.TreeEntryDefinition::'<TargetType>k__BackingField'
    IL_0007:  ret
  } // end of method TreeEntryDefinition::set_TargetType

  .method public hidebysig newslot specialname virtual 
          instance class LibGit2Sharp.ObjectId 
          get_TargetId() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntryDefinition::'<TargetId>k__BackingField'
    IL_0006:  ret
  } // end of method TreeEntryDefinition::get_TargetId

  .method private hidebysig specialname instance void 
          set_TargetId(class LibGit2Sharp.ObjectId 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntryDefinition::'<TargetId>k__BackingField'
    IL_0007:  ret
  } // end of method TreeEntryDefinition::set_TargetId

  .method assembly hidebysig newslot specialname strict virtual 
          instance class LibGit2Sharp.GitObject 
          get_Target() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject> LibGit2Sharp.TreeEntryDefinition::target
    IL_0006:  callvirt   instance !0 class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject>::get_Value()
    IL_000b:  ret
  } // end of method TreeEntryDefinition::get_Target

  .method assembly hidebysig static class LibGit2Sharp.TreeEntryDefinition 
          From(class LibGit2Sharp.TreeEntry treeEntry) cil managed
  {
    // Code size       95 (0x5f)
    .maxstack  4
    .locals init (class LibGit2Sharp.TreeEntryDefinition V_0,
             class LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass2' V_1)
    IL_0000:  newobj     instance void LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass2'::.ctor()
    IL_0005:  stloc.1
    IL_0006:  ldloc.1
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.TreeEntry LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass2'::treeEntry
    IL_000d:  newobj     instance void LibGit2Sharp.TreeEntryDefinition::.ctor()
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldloc.1
    IL_0015:  ldfld      class LibGit2Sharp.TreeEntry LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass2'::treeEntry
    IL_001a:  callvirt   instance valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntry::get_Mode()
    IL_001f:  callvirt   instance void LibGit2Sharp.TreeEntryDefinition::set_Mode(valuetype LibGit2Sharp.Mode)
    IL_0024:  ldloc.0
    IL_0025:  ldloc.1
    IL_0026:  ldfld      class LibGit2Sharp.TreeEntry LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass2'::treeEntry
    IL_002b:  callvirt   instance valuetype LibGit2Sharp.TreeEntryTargetType LibGit2Sharp.TreeEntry::get_TargetType()
    IL_0030:  callvirt   instance void LibGit2Sharp.TreeEntryDefinition::set_TargetType(valuetype LibGit2Sharp.TreeEntryTargetType)
    IL_0035:  ldloc.0
    IL_0036:  ldloc.1
    IL_0037:  ldfld      class LibGit2Sharp.TreeEntry LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass2'::treeEntry
    IL_003c:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntry::get_TargetId()
    IL_0041:  callvirt   instance void LibGit2Sharp.TreeEntryDefinition::set_TargetId(class LibGit2Sharp.ObjectId)
    IL_0046:  ldloc.0
    IL_0047:  ldloc.1
    IL_0048:  ldftn      instance class LibGit2Sharp.GitObject LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass2'::'<From>b__1'()
    IL_004e:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.GitObject>::.ctor(object,
                                                                                                             native int)
    IL_0053:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_0058:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject> LibGit2Sharp.TreeEntryDefinition::target
    IL_005d:  ldloc.0
    IL_005e:  ret
  } // end of method TreeEntryDefinition::From

  .method assembly hidebysig static class LibGit2Sharp.TreeEntryDefinition 
          From(class LibGit2Sharp.Blob 'blob',
               valuetype LibGit2Sharp.Mode mode) cil managed
  {
    // Code size       75 (0x4b)
    .maxstack  4
    .locals init (class LibGit2Sharp.TreeEntryDefinition V_0,
             class LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass6' V_1)
    IL_0000:  newobj     instance void LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass6'::.ctor()
    IL_0005:  stloc.1
    IL_0006:  ldloc.1
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Blob LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass6'::'blob'
    IL_000d:  newobj     instance void LibGit2Sharp.TreeEntryDefinition::.ctor()
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldarg.1
    IL_0015:  callvirt   instance void LibGit2Sharp.TreeEntryDefinition::set_Mode(valuetype LibGit2Sharp.Mode)
    IL_001a:  ldloc.0
    IL_001b:  ldc.i4.0
    IL_001c:  callvirt   instance void LibGit2Sharp.TreeEntryDefinition::set_TargetType(valuetype LibGit2Sharp.TreeEntryTargetType)
    IL_0021:  ldloc.0
    IL_0022:  ldloc.1
    IL_0023:  ldfld      class LibGit2Sharp.Blob LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass6'::'blob'
    IL_0028:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_002d:  callvirt   instance void LibGit2Sharp.TreeEntryDefinition::set_TargetId(class LibGit2Sharp.ObjectId)
    IL_0032:  ldloc.0
    IL_0033:  ldloc.1
    IL_0034:  ldftn      instance class LibGit2Sharp.GitObject LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass6'::'<From>b__5'()
    IL_003a:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.GitObject>::.ctor(object,
                                                                                                             native int)
    IL_003f:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_0044:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject> LibGit2Sharp.TreeEntryDefinition::target
    IL_0049:  ldloc.0
    IL_004a:  ret
  } // end of method TreeEntryDefinition::From

  .method assembly hidebysig static class LibGit2Sharp.TreeEntryDefinition 
          TransientBlobFrom(string filePath,
                            valuetype LibGit2Sharp.Mode mode) cil managed
  {
    // Code size       86 (0x56)
    .maxstack  4
    .locals init (class LibGit2Sharp.TransientBlobTreeEntryDefinition V_0,
             class LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClassc' V_1)
    IL_0000:  newobj     instance void LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClassc'::.ctor()
    IL_0005:  stloc.1
    IL_0006:  ldloc.1
    IL_0007:  ldarg.0
    IL_0008:  stfld      string LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClassc'::filePath
    IL_000d:  ldarg.1
    IL_000e:  ldsfld     class [System.Core]System.Func`2<valuetype LibGit2Sharp.Mode,bool> LibGit2Sharp.TreeEntryDefinition::'CS$<>9__CachedAnonymousMethodDelegateb'
    IL_0013:  brtrue.s   IL_0026

    IL_0015:  ldnull
    IL_0016:  ldftn      bool LibGit2Sharp.TreeEntryDefinition::'<TransientBlobFrom>b__9'(valuetype LibGit2Sharp.Mode)
    IL_001c:  newobj     instance void class [System.Core]System.Func`2<valuetype LibGit2Sharp.Mode,bool>::.ctor(object,
                                                                                                                 native int)
    IL_0021:  stsfld     class [System.Core]System.Func`2<valuetype LibGit2Sharp.Mode,bool> LibGit2Sharp.TreeEntryDefinition::'CS$<>9__CachedAnonymousMethodDelegateb'
    IL_0026:  ldsfld     class [System.Core]System.Func`2<valuetype LibGit2Sharp.Mode,bool> LibGit2Sharp.TreeEntryDefinition::'CS$<>9__CachedAnonymousMethodDelegateb'
    IL_002b:  ldstr      "mode"
    IL_0030:  call       void LibGit2Sharp.Core.Ensure::ArgumentConformsTo<valuetype LibGit2Sharp.Mode>(!!0,
                                                                                                        class [System.Core]System.Func`2<!!0,bool>,
                                                                                                        string)
    IL_0035:  newobj     instance void LibGit2Sharp.TransientBlobTreeEntryDefinition::.ctor()
    IL_003a:  stloc.0
    IL_003b:  ldloc.0
    IL_003c:  ldloc.1
    IL_003d:  ldftn      instance class LibGit2Sharp.Blob LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClassc'::'<TransientBlobFrom>b__a'(class LibGit2Sharp.ObjectDatabase)
    IL_0043:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.ObjectDatabase,class LibGit2Sharp.Blob>::.ctor(object,
                                                                                                                                          native int)
    IL_0048:  callvirt   instance void LibGit2Sharp.TransientBlobTreeEntryDefinition::set_Builder(class [System.Core]System.Func`2<class LibGit2Sharp.ObjectDatabase,class LibGit2Sharp.Blob>)
    IL_004d:  ldloc.0
    IL_004e:  ldarg.1
    IL_004f:  callvirt   instance void LibGit2Sharp.TreeEntryDefinition::set_Mode(valuetype LibGit2Sharp.Mode)
    IL_0054:  ldloc.0
    IL_0055:  ret
  } // end of method TreeEntryDefinition::TransientBlobFrom

  .method assembly hidebysig static class LibGit2Sharp.TreeEntryDefinition 
          From(class LibGit2Sharp.ObjectId objectId) cil managed
  {
    // Code size       73 (0x49)
    .maxstack  4
    .locals init (class LibGit2Sharp.TreeEntryDefinition V_0)
    IL_0000:  newobj     instance void LibGit2Sharp.TreeEntryDefinition::.ctor()
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  ldc.i4     0xe000
    IL_000c:  callvirt   instance void LibGit2Sharp.TreeEntryDefinition::set_Mode(valuetype LibGit2Sharp.Mode)
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.2
    IL_0013:  callvirt   instance void LibGit2Sharp.TreeEntryDefinition::set_TargetType(valuetype LibGit2Sharp.TreeEntryTargetType)
    IL_0018:  ldloc.0
    IL_0019:  ldarg.0
    IL_001a:  callvirt   instance void LibGit2Sharp.TreeEntryDefinition::set_TargetId(class LibGit2Sharp.ObjectId)
    IL_001f:  ldloc.0
    IL_0020:  ldsfld     class [System.Core]System.Func`1<class LibGit2Sharp.GitObject> LibGit2Sharp.TreeEntryDefinition::'CS$<>9__CachedAnonymousMethodDelegate10'
    IL_0025:  brtrue.s   IL_0038

    IL_0027:  ldnull
    IL_0028:  ldftn      class LibGit2Sharp.GitObject LibGit2Sharp.TreeEntryDefinition::'<From>b__f'()
    IL_002e:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.GitObject>::.ctor(object,
                                                                                                             native int)
    IL_0033:  stsfld     class [System.Core]System.Func`1<class LibGit2Sharp.GitObject> LibGit2Sharp.TreeEntryDefinition::'CS$<>9__CachedAnonymousMethodDelegate10'
    IL_0038:  ldsfld     class [System.Core]System.Func`1<class LibGit2Sharp.GitObject> LibGit2Sharp.TreeEntryDefinition::'CS$<>9__CachedAnonymousMethodDelegate10'
    IL_003d:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_0042:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject> LibGit2Sharp.TreeEntryDefinition::target
    IL_0047:  ldloc.0
    IL_0048:  ret
  } // end of method TreeEntryDefinition::From

  .method assembly hidebysig static class LibGit2Sharp.TreeEntryDefinition 
          From(class LibGit2Sharp.Tree tree) cil managed
  {
    // Code size       79 (0x4f)
    .maxstack  4
    .locals init (class LibGit2Sharp.TreeEntryDefinition V_0,
             class LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass13' V_1)
    IL_0000:  newobj     instance void LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass13'::.ctor()
    IL_0005:  stloc.1
    IL_0006:  ldloc.1
    IL_0007:  ldarg.0
    IL_0008:  stfld      class LibGit2Sharp.Tree LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass13'::tree
    IL_000d:  newobj     instance void LibGit2Sharp.TreeEntryDefinition::.ctor()
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldc.i4     0x4000
    IL_0019:  callvirt   instance void LibGit2Sharp.TreeEntryDefinition::set_Mode(valuetype LibGit2Sharp.Mode)
    IL_001e:  ldloc.0
    IL_001f:  ldc.i4.1
    IL_0020:  callvirt   instance void LibGit2Sharp.TreeEntryDefinition::set_TargetType(valuetype LibGit2Sharp.TreeEntryTargetType)
    IL_0025:  ldloc.0
    IL_0026:  ldloc.1
    IL_0027:  ldfld      class LibGit2Sharp.Tree LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass13'::tree
    IL_002c:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.GitObject::get_Id()
    IL_0031:  callvirt   instance void LibGit2Sharp.TreeEntryDefinition::set_TargetId(class LibGit2Sharp.ObjectId)
    IL_0036:  ldloc.0
    IL_0037:  ldloc.1
    IL_0038:  ldftn      instance class LibGit2Sharp.GitObject LibGit2Sharp.TreeEntryDefinition/'<>c__DisplayClass13'::'<From>b__12'()
    IL_003e:  newobj     instance void class [System.Core]System.Func`1<class LibGit2Sharp.GitObject>::.ctor(object,
                                                                                                             native int)
    IL_0043:  newobj     instance void class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject>::.ctor(class [System.Core]System.Func`1<!0>)
    IL_0048:  stfld      class LibGit2Sharp.Core.Compat.Lazy`1<class LibGit2Sharp.GitObject> LibGit2Sharp.TreeEntryDefinition::target
    IL_004d:  ldloc.0
    IL_004e:  ret
  } // end of method TreeEntryDefinition::From

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  isinst     LibGit2Sharp.TreeEntryDefinition
    IL_0007:  call       instance bool LibGit2Sharp.TreeEntryDefinition::Equals(class LibGit2Sharp.TreeEntryDefinition)
    IL_000c:  ret
  } // end of method TreeEntryDefinition::Equals

  .method public hidebysig newslot virtual final 
          instance bool  Equals(class LibGit2Sharp.TreeEntryDefinition other) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeEntryDefinition::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance bool class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.TreeEntryDefinition>::Equals(!0,
                                                                                                                                      !0)
    IL_000c:  ret
  } // end of method TreeEntryDefinition::Equals

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeEntryDefinition::equalityHelper
    IL_0005:  ldarg.0
    IL_0006:  callvirt   instance int32 class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.TreeEntryDefinition>::GetHashCode(!0)
    IL_000b:  ret
  } // end of method TreeEntryDefinition::GetHashCode

  .method public hidebysig specialname static 
          bool  op_Equality(class LibGit2Sharp.TreeEntryDefinition left,
                            class LibGit2Sharp.TreeEntryDefinition right) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ret
  } // end of method TreeEntryDefinition::op_Equality

  .method public hidebysig specialname static 
          bool  op_Inequality(class LibGit2Sharp.TreeEntryDefinition left,
                              class LibGit2Sharp.TreeEntryDefinition right) cil managed
  {
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  ret
  } // end of method TreeEntryDefinition::op_Inequality

  .method private hidebysig static bool  '<TransientBlobFrom>b__9'(valuetype LibGit2Sharp.Mode m) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  box        LibGit2Sharp.Mode
    IL_0006:  ldsfld     class [mscorlib]System.Enum[] LibGit2Sharp.TreeEntryDefinition::BlobModes
    IL_000b:  call       bool LibGit2Sharp.Core.EnumExtensions::HasAny(class [mscorlib]System.Enum,
                                                                       class [mscorlib]System.Collections.Generic.IEnumerable`1<class [mscorlib]System.Enum>)
    IL_0010:  ret
  } // end of method TreeEntryDefinition::'<TransientBlobFrom>b__9'

  .method private hidebysig static class LibGit2Sharp.GitObject 
          '<From>b__f'() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  ldstr      "Shouldn't be necessary."
    IL_0005:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor(string)
    IL_000a:  throw
  } // end of method TreeEntryDefinition::'<From>b__f'

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // Code size       180 (0xb4)
    .maxstack  5
    .locals init (class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object>[] V_0,
             class [mscorlib]System.Enum[] V_1)
    IL_0000:  ldc.i4.3
    IL_0001:  newarr     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object>
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldc.i4.0
    IL_0009:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object> LibGit2Sharp.TreeEntryDefinition::'CS$<>9__CachedAnonymousMethodDelegate18'
    IL_000e:  brtrue.s   IL_0021

    IL_0010:  ldnull
    IL_0011:  ldftn      object LibGit2Sharp.TreeEntryDefinition::'<.cctor>b__15'(class LibGit2Sharp.TreeEntryDefinition)
    IL_0017:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object>::.ctor(object,
                                                                                                                              native int)
    IL_001c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object> LibGit2Sharp.TreeEntryDefinition::'CS$<>9__CachedAnonymousMethodDelegate18'
    IL_0021:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object> LibGit2Sharp.TreeEntryDefinition::'CS$<>9__CachedAnonymousMethodDelegate18'
    IL_0026:  stelem.ref
    IL_0027:  ldloc.0
    IL_0028:  ldc.i4.1
    IL_0029:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object> LibGit2Sharp.TreeEntryDefinition::'CS$<>9__CachedAnonymousMethodDelegate19'
    IL_002e:  brtrue.s   IL_0041

    IL_0030:  ldnull
    IL_0031:  ldftn      object LibGit2Sharp.TreeEntryDefinition::'<.cctor>b__16'(class LibGit2Sharp.TreeEntryDefinition)
    IL_0037:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object>::.ctor(object,
                                                                                                                              native int)
    IL_003c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object> LibGit2Sharp.TreeEntryDefinition::'CS$<>9__CachedAnonymousMethodDelegate19'
    IL_0041:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object> LibGit2Sharp.TreeEntryDefinition::'CS$<>9__CachedAnonymousMethodDelegate19'
    IL_0046:  stelem.ref
    IL_0047:  ldloc.0
    IL_0048:  ldc.i4.2
    IL_0049:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object> LibGit2Sharp.TreeEntryDefinition::'CS$<>9__CachedAnonymousMethodDelegate1a'
    IL_004e:  brtrue.s   IL_0061

    IL_0050:  ldnull
    IL_0051:  ldftn      object LibGit2Sharp.TreeEntryDefinition::'<.cctor>b__17'(class LibGit2Sharp.TreeEntryDefinition)
    IL_0057:  newobj     instance void class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object>::.ctor(object,
                                                                                                                              native int)
    IL_005c:  stsfld     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object> LibGit2Sharp.TreeEntryDefinition::'CS$<>9__CachedAnonymousMethodDelegate1a'
    IL_0061:  ldsfld     class [System.Core]System.Func`2<class LibGit2Sharp.TreeEntryDefinition,object> LibGit2Sharp.TreeEntryDefinition::'CS$<>9__CachedAnonymousMethodDelegate1a'
    IL_0066:  stelem.ref
    IL_0067:  ldloc.0
    IL_0068:  newobj     instance void class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.TreeEntryDefinition>::.ctor(class [System.Core]System.Func`2<!0,object>[])
    IL_006d:  stsfld     class LibGit2Sharp.Core.LambdaEqualityHelper`1<class LibGit2Sharp.TreeEntryDefinition> LibGit2Sharp.TreeEntryDefinition::equalityHelper
    IL_0072:  ldc.i4.4
    IL_0073:  newarr     [mscorlib]System.Enum
    IL_0078:  stloc.1
    IL_0079:  ldloc.1
    IL_007a:  ldc.i4.0
    IL_007b:  ldc.i4     0x81a4
    IL_0080:  box        LibGit2Sharp.Mode
    IL_0085:  stelem.ref
    IL_0086:  ldloc.1
    IL_0087:  ldc.i4.1
    IL_0088:  ldc.i4     0x81ed
    IL_008d:  box        LibGit2Sharp.Mode
    IL_0092:  stelem.ref
    IL_0093:  ldloc.1
    IL_0094:  ldc.i4.2
    IL_0095:  ldc.i4     0x81b4
    IL_009a:  box        LibGit2Sharp.Mode
    IL_009f:  stelem.ref
    IL_00a0:  ldloc.1
    IL_00a1:  ldc.i4.3
    IL_00a2:  ldc.i4     0xa000
    IL_00a7:  box        LibGit2Sharp.Mode
    IL_00ac:  stelem.ref
    IL_00ad:  ldloc.1
    IL_00ae:  stsfld     class [mscorlib]System.Enum[] LibGit2Sharp.TreeEntryDefinition::BlobModes
    IL_00b3:  ret
  } // end of method TreeEntryDefinition::.cctor

  .method private hidebysig static object 
          '<.cctor>b__15'(class LibGit2Sharp.TreeEntryDefinition x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntryDefinition::get_Mode()
    IL_0006:  box        LibGit2Sharp.Mode
    IL_000b:  ret
  } // end of method TreeEntryDefinition::'<.cctor>b__15'

  .method private hidebysig static object 
          '<.cctor>b__16'(class LibGit2Sharp.TreeEntryDefinition x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance valuetype LibGit2Sharp.TreeEntryTargetType LibGit2Sharp.TreeEntryDefinition::get_TargetType()
    IL_0006:  box        LibGit2Sharp.TreeEntryTargetType
    IL_000b:  ret
  } // end of method TreeEntryDefinition::'<.cctor>b__16'

  .method private hidebysig static object 
          '<.cctor>b__17'(class LibGit2Sharp.TreeEntryDefinition x) cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  callvirt   instance class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntryDefinition::get_TargetId()
    IL_0006:  ret
  } // end of method TreeEntryDefinition::'<.cctor>b__17'

  .property instance valuetype LibGit2Sharp.Mode
          Mode()
  {
    .get instance valuetype LibGit2Sharp.Mode LibGit2Sharp.TreeEntryDefinition::get_Mode()
    .set instance void LibGit2Sharp.TreeEntryDefinition::set_Mode(valuetype LibGit2Sharp.Mode)
  } // end of property TreeEntryDefinition::Mode
  .property instance valuetype LibGit2Sharp.TreeEntryTargetType
          TargetType()
  {
    .set instance void LibGit2Sharp.TreeEntryDefinition::set_TargetType(valuetype LibGit2Sharp.TreeEntryTargetType)
    .get instance valuetype LibGit2Sharp.TreeEntryTargetType LibGit2Sharp.TreeEntryDefinition::get_TargetType()
  } // end of property TreeEntryDefinition::TargetType
  .property instance class LibGit2Sharp.ObjectId
          TargetId()
  {
    .get instance class LibGit2Sharp.ObjectId LibGit2Sharp.TreeEntryDefinition::get_TargetId()
    .set instance void LibGit2Sharp.TreeEntryDefinition::set_TargetId(class LibGit2Sharp.ObjectId)
  } // end of property TreeEntryDefinition::TargetId
  .property instance class LibGit2Sharp.GitObject
          Target()
  {
    .get instance class LibGit2Sharp.GitObject LibGit2Sharp.TreeEntryDefinition::get_Target()
  } // end of property TreeEntryDefinition::Target
} // end of class LibGit2Sharp.TreeEntryDefinition

.class private abstract auto ansi beforefieldinit LibGit2Sharp.TransientTreeEntryDefinition
       extends LibGit2Sharp.TreeEntryDefinition
{
  .method public hidebysig specialname virtual 
          instance class LibGit2Sharp.ObjectId 
          get_TargetId() cil managed
  {
    // Code size       6 (0x6)
    .maxstack  8
    IL_0000:  ldsfld     class LibGit2Sharp.ObjectId LibGit2Sharp.ObjectId::Zero
    IL_0005:  ret
  } // end of method TransientTreeEntryDefinition::get_TargetId

  .method assembly hidebysig specialname strict virtual 
          instance class LibGit2Sharp.GitObject 
          get_Target() cil managed
  {
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  ldnull
    IL_0001:  ret
  } // end of method TransientTreeEntryDefinition::get_Target

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.TreeEntryDefinition::.ctor()
    IL_0006:  ret
  } // end of method TransientTreeEntryDefinition::.ctor

  .property instance class LibGit2Sharp.ObjectId
          TargetId()
  {
    .get instance class LibGit2Sharp.ObjectId LibGit2Sharp.TransientTreeEntryDefinition::get_TargetId()
  } // end of property TransientTreeEntryDefinition::TargetId
  .property instance class LibGit2Sharp.GitObject
          Target()
  {
    .get instance class LibGit2Sharp.GitObject LibGit2Sharp.TransientTreeEntryDefinition::get_Target()
  } // end of property TransientTreeEntryDefinition::Target
} // end of class LibGit2Sharp.TransientTreeEntryDefinition

.class private auto ansi beforefieldinit LibGit2Sharp.TransientTreeTreeEntryDefinition
       extends LibGit2Sharp.TransientTreeEntryDefinition
{
  .method public hidebysig specialname virtual 
          instance valuetype LibGit2Sharp.Mode 
          get_Mode() cil managed
  {
    // Code size       6 (0x6)
    .maxstack  8
    IL_0000:  ldc.i4     0x4000
    IL_0005:  ret
  } // end of method TransientTreeTreeEntryDefinition::get_Mode

  .method public hidebysig specialname virtual 
          instance valuetype LibGit2Sharp.TreeEntryTargetType 
          get_TargetType() cil managed
  {
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  ldc.i4.1
    IL_0001:  ret
  } // end of method TransientTreeTreeEntryDefinition::get_TargetType

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.TransientTreeEntryDefinition::.ctor()
    IL_0006:  ret
  } // end of method TransientTreeTreeEntryDefinition::.ctor

  .property instance valuetype LibGit2Sharp.Mode
          Mode()
  {
    .get instance valuetype LibGit2Sharp.Mode LibGit2Sharp.TransientTreeTreeEntryDefinition::get_Mode()
  } // end of property TransientTreeTreeEntryDefinition::Mode
  .property instance valuetype LibGit2Sharp.TreeEntryTargetType
          TargetType()
  {
    .get instance valuetype LibGit2Sharp.TreeEntryTargetType LibGit2Sharp.TransientTreeTreeEntryDefinition::get_TargetType()
  } // end of property TransientTreeTreeEntryDefinition::TargetType
} // end of class LibGit2Sharp.TransientTreeTreeEntryDefinition

.class private auto ansi beforefieldinit LibGit2Sharp.TransientBlobTreeEntryDefinition
       extends LibGit2Sharp.TransientTreeEntryDefinition
{
  .field private class [System.Core]System.Func`2<class LibGit2Sharp.ObjectDatabase,class LibGit2Sharp.Blob> '<Builder>k__BackingField'
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig specialname virtual 
          instance valuetype LibGit2Sharp.TreeEntryTargetType 
          get_TargetType() cil managed
  {
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  ldc.i4.0
    IL_0001:  ret
  } // end of method TransientBlobTreeEntryDefinition::get_TargetType

  .method public hidebysig specialname instance class [System.Core]System.Func`2<class LibGit2Sharp.ObjectDatabase,class LibGit2Sharp.Blob> 
          get_Builder() cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [System.Core]System.Func`2<class LibGit2Sharp.ObjectDatabase,class LibGit2Sharp.Blob> LibGit2Sharp.TransientBlobTreeEntryDefinition::'<Builder>k__BackingField'
    IL_0006:  ret
  } // end of method TransientBlobTreeEntryDefinition::get_Builder

  .method public hidebysig specialname instance void 
          set_Builder(class [System.Core]System.Func`2<class LibGit2Sharp.ObjectDatabase,class LibGit2Sharp.Blob> 'value') cil managed
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      class [System.Core]System.Func`2<class LibGit2Sharp.ObjectDatabase,class LibGit2Sharp.Blob> LibGit2Sharp.TransientBlobTreeEntryDefinition::'<Builder>k__BackingField'
    IL_0007:  ret
  } // end of method TransientBlobTreeEntryDefinition::set_Builder

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.TransientTreeEntryDefinition::.ctor()
    IL_0006:  ret
  } // end of method TransientBlobTreeEntryDefinition::.ctor

  .property instance valuetype LibGit2Sharp.TreeEntryTargetType
          TargetType()
  {
    .get instance valuetype LibGit2Sharp.TreeEntryTargetType LibGit2Sharp.TransientBlobTreeEntryDefinition::get_TargetType()
  } // end of property TransientBlobTreeEntryDefinition::TargetType
  .property instance class [System.Core]System.Func`2<class LibGit2Sharp.ObjectDatabase,class LibGit2Sharp.Blob>
          Builder()
  {
    .get instance class [System.Core]System.Func`2<class LibGit2Sharp.ObjectDatabase,class LibGit2Sharp.Blob> LibGit2Sharp.TransientBlobTreeEntryDefinition::get_Builder()
    .set instance void LibGit2Sharp.TransientBlobTreeEntryDefinition::set_Builder(class [System.Core]System.Func`2<class LibGit2Sharp.ObjectDatabase,class LibGit2Sharp.Blob>)
  } // end of property TransientBlobTreeEntryDefinition::Builder
} // end of class LibGit2Sharp.TransientBlobTreeEntryDefinition

.class public auto ansi serializable beforefieldinit LibGit2Sharp.UserCancelledException
       extends LibGit2Sharp.LibGit2SharpException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor()
    IL_0006:  ret
  } // end of method UserCancelledException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string)
    IL_0007:  ret
  } // end of method UserCancelledException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               class [mscorlib]System.Exception innerException) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 class [mscorlib]System.Exception)
    IL_0008:  ret
  } // end of method UserCancelledException::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                               valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo,
                                                                                 valuetype [mscorlib]System.Runtime.Serialization.StreamingContext)
    IL_0008:  ret
  } // end of method UserCancelledException::.ctor

  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               valuetype LibGit2Sharp.Core.GitErrorCode code,
                               valuetype LibGit2Sharp.Core.GitErrorCategory category) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  call       instance void LibGit2Sharp.LibGit2SharpException::.ctor(string,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCode,
                                                                                 valuetype LibGit2Sharp.Core.GitErrorCategory)
    IL_0009:  ret
  } // end of method UserCancelledException::.ctor

} // end of class LibGit2Sharp.UserCancelledException

.class private auto ansi beforefieldinit LibGit2Sharp.VoidReference
       extends LibGit2Sharp.Reference
{
  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string canonicalName) cil managed
  {
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldnull
    IL_0003:  call       instance void LibGit2Sharp.Reference::.ctor(string,
                                                                     string)
    IL_0008:  ret
  } // end of method VoidReference::.ctor

  .method public hidebysig virtual instance class LibGit2Sharp.DirectReference 
          ResolveToDirectReference() cil managed
  {
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  ldnull
    IL_0001:  ret
  } // end of method VoidReference::ResolveToDirectReference

} // end of class LibGit2Sharp.VoidReference

.class private auto ansi beforefieldinit LibGit2Sharp.Core.RawContentStream
       extends [mscorlib]System.IO.UnmanagedMemoryStream
{
  .field private initonly class LibGit2Sharp.Core.ObjectSafeWrapper wrapper
  .method assembly hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.ObjectId id,
                               class LibGit2Sharp.Core.Handles.RepositorySafeHandle repo,
                               class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,native int> bytePtrProvider,
                               int64 length) cil managed
  {
    // Code size       18 (0x12)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldc.i4.0
    IL_0004:  newobj     instance void LibGit2Sharp.Core.ObjectSafeWrapper::.ctor(class LibGit2Sharp.ObjectId,
                                                                                  class LibGit2Sharp.Core.Handles.RepositorySafeHandle,
                                                                                  bool)
    IL_0009:  ldarg.3
    IL_000a:  ldarg.s    length
    IL_000c:  call       instance void LibGit2Sharp.Core.RawContentStream::.ctor(class LibGit2Sharp.Core.ObjectSafeWrapper,
                                                                                 class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,native int>,
                                                                                 int64)
    IL_0011:  ret
  } // end of method RawContentStream::.ctor

  .method private hidebysig specialname rtspecialname 
          instance void  .ctor(class LibGit2Sharp.Core.ObjectSafeWrapper wrapper,
                               class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,native int> bytePtrProvider,
                               int64 length) cil managed
  {
    // Code size       35 (0x23)
    .maxstack  3
    .locals init (native int V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldarg.2
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance class LibGit2Sharp.Core.Handles.GitObjectSafeHandle LibGit2Sharp.Core.ObjectSafeWrapper::get_ObjectPtr()
    IL_0008:  callvirt   instance !1 class [System.Core]System.Func`2<class LibGit2Sharp.Core.Handles.GitObjectSafeHandle,native int>::Invoke(!0)
    IL_000d:  stloc.0
    IL_000e:  ldloca.s   V_0
    IL_0010:  call       instance void* [mscorlib]System.IntPtr::ToPointer()
    IL_0015:  ldarg.3
    IL_0016:  call       instance void [mscorlib]System.IO.UnmanagedMemoryStream::.ctor(uint8*,
                                                                                        int64)
    IL_001b:  ldarg.0
    IL_001c:  ldarg.1
    IL_001d:  stfld      class LibGit2Sharp.Core.ObjectSafeWrapper LibGit2Sharp.Core.RawContentStream::wrapper
    IL_0022:  ret
  } // end of method RawContentStream::.ctor

  .method family hidebysig virtual instance void 
          Dispose(bool disposing) cil managed
  {
    // Code size       19 (0x13)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void [mscorlib]System.IO.UnmanagedMemoryStream::Dispose(bool)
    IL_0007:  ldarg.0
    IL_0008:  ldfld      class LibGit2Sharp.Core.ObjectSafeWrapper LibGit2Sharp.Core.RawContentStream::wrapper
    IL_000d:  call       void LibGit2Sharp.Core.Handles.SafeHandleExtensions::SafeDispose(class [mscorlib]System.IDisposable)
    IL_0012:  ret
  } // end of method RawContentStream::Dispose

} // end of class LibGit2Sharp.Core.RawContentStream


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
// WARNING: Created Win32 resource file LibGit2Sharp.res
